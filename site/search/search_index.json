{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\u200b\\-]"},"docs":[{"location":"","text":"matt blog 11","title":"Getting Started"},{"location":"#matt-blog","text":"11","title":"matt blog"},{"location":"%E6%9C%AA%E5%91%BD%E5%90%8D/","text":"\u5e76\u53d1\u7f16\u7a0b \u4f2f\u514b\u5229 \u672c\u79d1\uff1acs194 \u7814\u7a76\u751f\uff1acs267","title":"\u672a\u547d\u540d"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/","text":"\u5feb\u6392 \u6a21\u677f algorithm x j, j+1 l j,j+1 r i-1,i void quick_sort(int q[], int l, int r) { if (l >= r) return; int i = l - 1, j = r + 1, x = q[l + r >> 1]; while (i < j) { // \u6709\u4e2d\u95f4\u7684\u503c\u505a\u62c5\u4fdd \u6240\u4ee5while \u4e0d\u7528\u52a0 i <= r do i ++ ; while (q[i] < x); do j -- ; while (q[j] > x); if (i < j) swap(q[i], q[j]); } quick_sort(q, l, j), quick_sort(q, j + 1, r); } \u5feb\u901f\u6392\u5e8f \u7ed9\u5b9a\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6574\u6570\u6570\u5217\u3002 \u8bf7\u4f60\u4f7f\u7528\u5feb\u901f\u6392\u5e8f\u5bf9\u8fd9\u4e2a\u6570\u5217\u6309\u7167\u4ece\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\u3002 \u5e76\u5c06\u6392\u597d\u5e8f\u7684\u6570\u5217\u6309\u987a\u5e8f\u8f93\u51fa\u3002 \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u5171\u4e24\u884c\uff0c\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 n\u3002 \u7b2c\u4e8c\u884c\u5305\u542b n \u4e2a\u6574\u6570\uff08\u6240\u6709\u6574\u6570\u5747\u5728 1\u223c1091\u223c109 \u8303\u56f4\u5185\uff09\uff0c\u8868\u793a\u6574\u4e2a\u6570\u5217\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u5171\u4e00\u884c\uff0c\u5305\u542b nn \u4e2a\u6574\u6570\uff0c\u8868\u793a\u6392\u597d\u5e8f\u7684\u6570\u5217\u3002 \u6570\u636e\u8303\u56f4 1\u2264n\u2264100000 \u8f93\u5165\u6837\u4f8b\uff1a 5 3 1 2 4 5 \u8f93\u51fa\u6837\u4f8b\uff1a 1 2 3 4 5 code #include <iostream> #include <cstdio> using namespace std; const int N = 1e5+10; void quick_sort(int q[], int l, int r) { if (l >= r) return; int i = l - 1, j = r + 1, x = q[l + r >> 1]; while (i < j) { do i++; while (q[i] < x); do j--; while (q[j] > x); if (i < j) swap(q[i], q[j]); } quick_sort(q, l, j); quick_sort(q, j + 1, r); } int main() { int n, q[N]; scanf(\"%d\", &n); for (int i = 0; i < n; i++) scanf(\"%d\", &q[i]); quick_sort(q, 0, n - 1); for (int i = 0; i < n; i++) printf(\"%d \", q[i]); return 0; } \u7b2ck\u4e2a\u6570 \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a nn \u7684\u6574\u6570\u6570\u5217\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6574\u6570 kk\uff0c\u8bf7\u7528\u5feb\u901f\u9009\u62e9\u7b97\u6cd5\u6c42\u51fa\u6570\u5217\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u7684\u7b2c kk \u4e2a\u6570\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 nn \u548c kk\u3002 \u7b2c\u4e8c\u884c\u5305\u542b n\u4e2a\u6574\u6570\uff08\u6240\u6709\u6574\u6570\u5747\u5728 1\u223c1e9 \u8303\u56f4\u5185\uff09\uff0c\u8868\u793a\u6574\u6570\u6570\u5217\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6570\u5217\u7684\u7b2c k \u5c0f\u6570\u3002 \u6570\u636e\u8303\u56f4 1\u2264n\u2264100000, 1\u2264k\u2264n \u8f93\u5165\u6837\u4f8b\uff1a 5 3 2 4 1 5 3 \u8f93\u51fa\u6837\u4f8b\uff1a 3 code #include <iostream> #include <cstdio> using namespace std; const int N = 1e5+10; int q[N]; int quick_sort(int l, int r, int k) { if (l == r) return q[l]; int i = l - 1, j = r + 1, x = q[l + r >> 1]; while (i < j) { do i++; while (q[i] < x); do j--; while (q[j] > x); if (i < j) swap(q[i], q[j]); } int sl = j - l + 1; if (k <= sl) return quick_sort(l, j, k); return quick_sort(j + 1, r, k - sl); } int main() { int n, k; scanf(\"%d %d\", &n, &k); for (int i = 0; i < n; i++) scanf(\"%d\", &q[i]); quick_sort(0, n - 1, k); printf(\"%d\", quick_sort(0, n - 1, k)); return 0; } \u5f52\u5e76\u6392\u5e8f \u7ed9\u5b9a\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a nn \u7684\u6574\u6570\u6570\u5217\u3002 \u8bf7\u4f60\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u5bf9\u8fd9\u4e2a\u6570\u5217\u6309\u7167\u4ece\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\u3002 \u5e76\u5c06\u6392\u597d\u5e8f\u7684\u6570\u5217\u6309\u987a\u5e8f\u8f93\u51fa\u3002 \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u5171\u4e24\u884c\uff0c\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 nn\u3002 \u7b2c\u4e8c\u884c\u5305\u542b nn \u4e2a\u6574\u6570\uff08\u6240\u6709\u6574\u6570\u5747\u5728 1\u223c1091\u223c109 \u8303\u56f4\u5185\uff09\uff0c\u8868\u793a\u6574\u4e2a\u6570\u5217\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u5171\u4e00\u884c\uff0c\u5305\u542b nn \u4e2a\u6574\u6570\uff0c\u8868\u793a\u6392\u597d\u5e8f\u7684\u6570\u5217\u3002 \u6570\u636e\u8303\u56f4 1\u2264n\u22641000001\u2264n\u2264100000 \u8f93\u5165\u6837\u4f8b\uff1a 5 3 1 2 4 5 \u8f93\u51fa\u6837\u4f8b\uff1a 1 2 3 4 5 #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 10; int q[N]; void merge_sort(int l, int r) { if (l >= r) return; int mid = (l + r) >> 1; merge_sort(l, mid), merge_sort(mid + 1, r); int i = l, j = mid + 1, k = 0, tmp[N]; while (i <= mid && j <= r) { if (q[i] <= q[j]) tmp[k++] = q[i++]; else tmp[k++] = q[j++]; } while (i <= mid) tmp[k++] = q[i++]; while (j <= r) tmp[k++] = q[j++]; for (int i = l, j = 0; i <= r; i++, j++) q[i] = tmp[j]; } int main() { int n; cin >> n; for (int i = 0; i < n; i++) cin >> q[i]; merge_sort(0, n - 1); for (int i = 0; i < n; i++) cout << q[i] << ' '; return 0; } \u9006\u5e8f\u5bf9\u6570\u91cf \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a nn \u7684\u6574\u6570\u6570\u5217\uff0c\u8bf7\u4f60\u8ba1\u7b97\u6570\u5217\u4e2d\u7684\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u3002 \u9006\u5e8f\u5bf9\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a\u5bf9\u4e8e\u6570\u5217\u7684\u7b2c ii \u4e2a\u548c\u7b2c jj \u4e2a\u5143\u7d20\uff0c\u5982\u679c\u6ee1\u8db3 i a[j]a[i]>a[j]\uff0c\u5219\u5176\u4e3a\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff1b\u5426\u5219\u4e0d\u662f\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 nn\uff0c\u8868\u793a\u6570\u5217\u7684\u957f\u5ea6\u3002 \u7b2c\u4e8c\u884c\u5305\u542b nn \u4e2a\u6574\u6570\uff0c\u8868\u793a\u6574\u4e2a\u6570\u5217\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002 \u6570\u636e\u8303\u56f4 1\u2264n\u22641000001\u2264n\u2264100000\uff0c \u6570\u5217\u4e2d\u7684\u5143\u7d20\u7684\u53d6\u503c\u8303\u56f4 [1,109][1,109]\u3002 \u8f93\u5165\u6837\u4f8b\uff1a 6 2 3 4 5 6 1 \u8f93\u51fa\u6837\u4f8b\uff1a 5 #include <iostream> #include <cstdio> using namespace std; typedef long long LL; const int N = 1e5 + 10; int q[N]; LL merge_sort(int l, int r) { if (l >= r) return 0; int mid = l + r >> 1; LL res = merge_sort(l, mid) + merge_sort(mid + 1, r); int i = l, j = mid + 1, k = 0, tmp[N]; while (i <= mid && j <= r) { if (q[i] <= q[j]) tmp[k++] = q[i++]; else { res += (mid - i + 1); tmp[k++] = q[j++]; } } while (i <= mid) tmp[k++] = q[i++]; while (j <= r) tmp[k++] = q[j++]; for (int i = l, j = 0; i <= r; i++, j++) q[i] = tmp[j]; return res; } int main() { int n; cin >> n; for (int i = 0; i < n; i++) scanf(\"%d\", &q[i]); cout << merge_sort(0, n - 1); return 0; }","title":"\u57fa\u7840\u7b97\u6cd5"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_1","text":"","title":"\u5feb\u6392"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_2","text":"algorithm x j, j+1 l j,j+1 r i-1,i void quick_sort(int q[], int l, int r) { if (l >= r) return; int i = l - 1, j = r + 1, x = q[l + r >> 1]; while (i < j) { // \u6709\u4e2d\u95f4\u7684\u503c\u505a\u62c5\u4fdd \u6240\u4ee5while \u4e0d\u7528\u52a0 i <= r do i ++ ; while (q[i] < x); do j -- ; while (q[j] > x); if (i < j) swap(q[i], q[j]); } quick_sort(q, l, j), quick_sort(q, j + 1, r); }","title":"\u6a21\u677f"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_3","text":"\u7ed9\u5b9a\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6574\u6570\u6570\u5217\u3002 \u8bf7\u4f60\u4f7f\u7528\u5feb\u901f\u6392\u5e8f\u5bf9\u8fd9\u4e2a\u6570\u5217\u6309\u7167\u4ece\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\u3002 \u5e76\u5c06\u6392\u597d\u5e8f\u7684\u6570\u5217\u6309\u987a\u5e8f\u8f93\u51fa\u3002","title":"\u5feb\u901f\u6392\u5e8f"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_4","text":"\u8f93\u5165\u5171\u4e24\u884c\uff0c\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 n\u3002 \u7b2c\u4e8c\u884c\u5305\u542b n \u4e2a\u6574\u6570\uff08\u6240\u6709\u6574\u6570\u5747\u5728 1\u223c1091\u223c109 \u8303\u56f4\u5185\uff09\uff0c\u8868\u793a\u6574\u4e2a\u6570\u5217\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_5","text":"\u8f93\u51fa\u5171\u4e00\u884c\uff0c\u5305\u542b nn \u4e2a\u6574\u6570\uff0c\u8868\u793a\u6392\u597d\u5e8f\u7684\u6570\u5217\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_6","text":"1\u2264n\u2264100000","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_7","text":"5 3 1 2 4 5","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_8","text":"1 2 3 4 5","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#code","text":"#include <iostream> #include <cstdio> using namespace std; const int N = 1e5+10; void quick_sort(int q[], int l, int r) { if (l >= r) return; int i = l - 1, j = r + 1, x = q[l + r >> 1]; while (i < j) { do i++; while (q[i] < x); do j--; while (q[j] > x); if (i < j) swap(q[i], q[j]); } quick_sort(q, l, j); quick_sort(q, j + 1, r); } int main() { int n, q[N]; scanf(\"%d\", &n); for (int i = 0; i < n; i++) scanf(\"%d\", &q[i]); quick_sort(q, 0, n - 1); for (int i = 0; i < n; i++) printf(\"%d \", q[i]); return 0; }","title":"code"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#k","text":"\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a nn \u7684\u6574\u6570\u6570\u5217\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6574\u6570 kk\uff0c\u8bf7\u7528\u5feb\u901f\u9009\u62e9\u7b97\u6cd5\u6c42\u51fa\u6570\u5217\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u7684\u7b2c kk \u4e2a\u6570\u3002","title":"\u7b2ck\u4e2a\u6570"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_9","text":"\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 nn \u548c kk\u3002 \u7b2c\u4e8c\u884c\u5305\u542b n\u4e2a\u6574\u6570\uff08\u6240\u6709\u6574\u6570\u5747\u5728 1\u223c1e9 \u8303\u56f4\u5185\uff09\uff0c\u8868\u793a\u6574\u6570\u6570\u5217\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_10","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6570\u5217\u7684\u7b2c k \u5c0f\u6570\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_11","text":"1\u2264n\u2264100000, 1\u2264k\u2264n","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_12","text":"5 3 2 4 1 5 3","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_13","text":"3","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#code_1","text":"#include <iostream> #include <cstdio> using namespace std; const int N = 1e5+10; int q[N]; int quick_sort(int l, int r, int k) { if (l == r) return q[l]; int i = l - 1, j = r + 1, x = q[l + r >> 1]; while (i < j) { do i++; while (q[i] < x); do j--; while (q[j] > x); if (i < j) swap(q[i], q[j]); } int sl = j - l + 1; if (k <= sl) return quick_sort(l, j, k); return quick_sort(j + 1, r, k - sl); } int main() { int n, k; scanf(\"%d %d\", &n, &k); for (int i = 0; i < n; i++) scanf(\"%d\", &q[i]); quick_sort(0, n - 1, k); printf(\"%d\", quick_sort(0, n - 1, k)); return 0; }","title":"code"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_14","text":"\u7ed9\u5b9a\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a nn \u7684\u6574\u6570\u6570\u5217\u3002 \u8bf7\u4f60\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u5bf9\u8fd9\u4e2a\u6570\u5217\u6309\u7167\u4ece\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\u3002 \u5e76\u5c06\u6392\u597d\u5e8f\u7684\u6570\u5217\u6309\u987a\u5e8f\u8f93\u51fa\u3002","title":"\u5f52\u5e76\u6392\u5e8f"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_15","text":"\u8f93\u5165\u5171\u4e24\u884c\uff0c\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 nn\u3002 \u7b2c\u4e8c\u884c\u5305\u542b nn \u4e2a\u6574\u6570\uff08\u6240\u6709\u6574\u6570\u5747\u5728 1\u223c1091\u223c109 \u8303\u56f4\u5185\uff09\uff0c\u8868\u793a\u6574\u4e2a\u6570\u5217\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_16","text":"\u8f93\u51fa\u5171\u4e00\u884c\uff0c\u5305\u542b nn \u4e2a\u6574\u6570\uff0c\u8868\u793a\u6392\u597d\u5e8f\u7684\u6570\u5217\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_17","text":"1\u2264n\u22641000001\u2264n\u2264100000","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_18","text":"5 3 1 2 4 5","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_19","text":"1 2 3 4 5 #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 10; int q[N]; void merge_sort(int l, int r) { if (l >= r) return; int mid = (l + r) >> 1; merge_sort(l, mid), merge_sort(mid + 1, r); int i = l, j = mid + 1, k = 0, tmp[N]; while (i <= mid && j <= r) { if (q[i] <= q[j]) tmp[k++] = q[i++]; else tmp[k++] = q[j++]; } while (i <= mid) tmp[k++] = q[i++]; while (j <= r) tmp[k++] = q[j++]; for (int i = l, j = 0; i <= r; i++, j++) q[i] = tmp[j]; } int main() { int n; cin >> n; for (int i = 0; i < n; i++) cin >> q[i]; merge_sort(0, n - 1); for (int i = 0; i < n; i++) cout << q[i] << ' '; return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_20","text":"\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a nn \u7684\u6574\u6570\u6570\u5217\uff0c\u8bf7\u4f60\u8ba1\u7b97\u6570\u5217\u4e2d\u7684\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u3002 \u9006\u5e8f\u5bf9\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a\u5bf9\u4e8e\u6570\u5217\u7684\u7b2c ii \u4e2a\u548c\u7b2c jj \u4e2a\u5143\u7d20\uff0c\u5982\u679c\u6ee1\u8db3 i a[j]a[i]>a[j]\uff0c\u5219\u5176\u4e3a\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff1b\u5426\u5219\u4e0d\u662f\u3002","title":"\u9006\u5e8f\u5bf9\u6570\u91cf"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_21","text":"\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 nn\uff0c\u8868\u793a\u6570\u5217\u7684\u957f\u5ea6\u3002 \u7b2c\u4e8c\u884c\u5305\u542b nn \u4e2a\u6574\u6570\uff0c\u8868\u793a\u6574\u4e2a\u6570\u5217\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_22","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_23","text":"1\u2264n\u22641000001\u2264n\u2264100000\uff0c \u6570\u5217\u4e2d\u7684\u5143\u7d20\u7684\u53d6\u503c\u8303\u56f4 [1,109][1,109]\u3002","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_24","text":"6 2 3 4 5 6 1","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/0%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#_25","text":"5 #include <iostream> #include <cstdio> using namespace std; typedef long long LL; const int N = 1e5 + 10; int q[N]; LL merge_sort(int l, int r) { if (l >= r) return 0; int mid = l + r >> 1; LL res = merge_sort(l, mid) + merge_sort(mid + 1, r); int i = l, j = mid + 1, k = 0, tmp[N]; while (i <= mid && j <= r) { if (q[i] <= q[j]) tmp[k++] = q[i++]; else { res += (mid - i + 1); tmp[k++] = q[j++]; } } while (i <= mid) tmp[k++] = q[i++]; while (j <= r) tmp[k++] = q[j++]; for (int i = l, j = 0; i <= r; i++, j++) q[i] = tmp[j]; return res; } int main() { int n; cin >> n; for (int i = 0; i < n; i++) scanf(\"%d\", &q[i]); cout << merge_sort(0, n - 1); return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","text":"\u94fe\u8868 \u5355\u94fe\u8868 \u5b9e\u73b0\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u94fe\u8868\u521d\u59cb\u4e3a\u7a7a\uff0c\u652f\u6301\u4e09\u79cd\u64cd\u4f5c\uff1a \u5411\u94fe\u8868\u5934\u63d2\u5165\u4e00\u4e2a\u6570\uff1b \u5220\u9664\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u540e\u9762\u7684\u6570\uff1b \u5728\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u540e\u63d2\u5165\u4e00\u4e2a\u6570\u3002 \u73b0\u5728\u8981\u5bf9\u8be5\u94fe\u8868\u8fdb\u884c MM \u6b21\u64cd\u4f5c\uff0c\u8fdb\u884c\u5b8c\u6240\u6709\u64cd\u4f5c\u540e\uff0c\u4ece\u5934\u5230\u5c3e\u8f93\u51fa\u6574\u4e2a\u94fe\u8868\u3002 \u6ce8\u610f :\u9898\u76ee\u4e2d\u7b2c k \u4e2a\u63d2\u5165\u7684\u6570\u5e76\u4e0d\u662f\u6307\u5f53\u524d\u94fe\u8868\u7684\u7b2c k \u4e2a\u6570\u3002\u4f8b\u5982\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u4e00\u5171\u63d2\u5165\u4e86 n \u4e2a\u6570\uff0c\u5219\u6309\u7167\u63d2\u5165\u7684\u65f6\u95f4\u987a\u5e8f\uff0c\u8fd9 n \u4e2a\u6570\u4f9d\u6b21\u4e3a\uff1a\u7b2c 11 \u4e2a\u63d2\u5165\u7684\u6570\uff0c\u7b2c 22 \u4e2a\u63d2\u5165\u7684\u6570\uff0c\u2026\u7b2c nn \u4e2a\u63d2\u5165\u7684\u6570\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 M\uff0c\u8868\u793a\u64cd\u4f5c\u6b21\u6570\u3002 \u63a5\u4e0b\u6765 M \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u64cd\u4f5c\u547d\u4ee4\uff0c\u64cd\u4f5c\u547d\u4ee4\u53ef\u80fd\u4e3a\u4ee5\u4e0b\u51e0\u79cd\uff1a H x \uff0c\u8868\u793a\u5411\u94fe\u8868\u5934\u63d2\u5165\u4e00\u4e2a\u6570 xx\u3002 D k \uff0c\u8868\u793a\u5220\u9664\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u540e\u9762\u7684\u6570\uff08\u5f53 kk \u4e3a 00 \u65f6\uff0c\u8868\u793a\u5220\u9664\u5934\u7ed3\u70b9\uff09\u3002 I k x \uff0c\u8868\u793a\u5728\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u540e\u9762\u63d2\u5165\u4e00\u4e2a\u6570 xx\uff08\u6b64\u64cd\u4f5c\u4e2d kk \u5747\u5927\u4e8e 00\uff09\u3002 \u8f93\u51fa\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5c06\u6574\u4e2a\u94fe\u8868\u4ece\u5934\u5230\u5c3e\u8f93\u51fa\u3002 \u6570\u636e\u8303\u56f4 1\u2264M\u2264100000 \u6240\u6709\u64cd\u4f5c\u4fdd\u8bc1\u5408\u6cd5\u3002 \u8f93\u5165\u6837\u4f8b\uff1a 10 H 9 I 1 1 D 1 D 0 H 6 I 3 6 I 4 5 I 4 5 I 3 4 D 6 \u8f93\u51fa\u6837\u4f8b\uff1a 6 4 6 5 code #include <iostream> using namespace std; const int N = 1e5 + 10; int head, e[N], ne[N], idx; void init() { head = -1; } void add_to_head(int x) { e[idx] = x; ne[idx] = head; head = idx++; } void add(int k, int x) { e[idx] = x; ne[idx] = ne[k]; ne[k] = idx++; } void remove(int k) { ne[k] = ne[ne[k]]; } int main() { init(); int m; cin >> m; while (m--) { char ch; int k, x; cin >> ch; if (ch == 'H') { cin >> x; add_to_head(x); } else if (ch == 'I') { cin >> k >> x; add(k - 1, x); } else if(ch == 'D') { cin >> k; if (k == 0) head = ne[head]; else remove(k - 1); } } int t = head; while (t != -1) { cout << e[t] << ' '; t = ne[t]; } return 0; } \u53cc\u94fe\u8868 \u5b9e\u73b0\u4e00\u4e2a\u53cc\u94fe\u8868\uff0c\u53cc\u94fe\u8868\u521d\u59cb\u4e3a\u7a7a\uff0c\u652f\u6301 55 \u79cd\u64cd\u4f5c\uff1a \u5728\u6700\u5de6\u4fa7\u63d2\u5165\u4e00\u4e2a\u6570\uff1b \u5728\u6700\u53f3\u4fa7\u63d2\u5165\u4e00\u4e2a\u6570\uff1b \u5c06\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u5220\u9664\uff1b \u5728\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u5de6\u4fa7\u63d2\u5165\u4e00\u4e2a\u6570\uff1b \u5728\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u53f3\u4fa7\u63d2\u5165\u4e00\u4e2a\u6570 \u73b0\u5728\u8981\u5bf9\u8be5\u94fe\u8868\u8fdb\u884c MM \u6b21\u64cd\u4f5c\uff0c\u8fdb\u884c\u5b8c\u6240\u6709\u64cd\u4f5c\u540e\uff0c\u4ece\u5de6\u5230\u53f3\u8f93\u51fa\u6574\u4e2a\u94fe\u8868\u3002 \u6ce8\u610f :\u9898\u76ee\u4e2d\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u5e76\u4e0d\u662f\u6307\u5f53\u524d\u94fe\u8868\u7684\u7b2c kk \u4e2a\u6570\u3002\u4f8b\u5982\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u4e00\u5171\u63d2\u5165\u4e86 nn \u4e2a\u6570\uff0c\u5219\u6309\u7167\u63d2\u5165\u7684\u65f6\u95f4\u987a\u5e8f\uff0c\u8fd9 nn \u4e2a\u6570\u4f9d\u6b21\u4e3a\uff1a\u7b2c 11 \u4e2a\u63d2\u5165\u7684\u6570\uff0c\u7b2c 22 \u4e2a\u63d2\u5165\u7684\u6570\uff0c\u2026\u7b2c nn \u4e2a\u63d2\u5165\u7684\u6570\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 MM\uff0c\u8868\u793a\u64cd\u4f5c\u6b21\u6570\u3002 \u63a5\u4e0b\u6765 MM \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u64cd\u4f5c\u547d\u4ee4\uff0c\u64cd\u4f5c\u547d\u4ee4\u53ef\u80fd\u4e3a\u4ee5\u4e0b\u51e0\u79cd\uff1a L x \uff0c\u8868\u793a\u5728\u94fe\u8868\u7684\u6700\u5de6\u7aef\u63d2\u5165\u6570 xx\u3002 R x \uff0c\u8868\u793a\u5728\u94fe\u8868\u7684\u6700\u53f3\u7aef\u63d2\u5165\u6570 xx\u3002 D k \uff0c\u8868\u793a\u5c06\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u5220\u9664\u3002 IL k x \uff0c\u8868\u793a\u5728\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u5de6\u4fa7\u63d2\u5165\u4e00\u4e2a\u6570\u3002 IR k x \uff0c\u8868\u793a\u5728\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u53f3\u4fa7\u63d2\u5165\u4e00\u4e2a\u6570\u3002 \u8f93\u51fa\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5c06\u6574\u4e2a\u94fe\u8868\u4ece\u5de6\u5230\u53f3\u8f93\u51fa\u3002 \u6570\u636e\u8303\u56f4 1\u2264M\u22641000001\u2264M\u2264100000 \u6240\u6709\u64cd\u4f5c\u4fdd\u8bc1\u5408\u6cd5\u3002 \u8f93\u5165\u6837\u4f8b\uff1a 10 R 7 D 1 L 3 IL 2 10 D 3 IL 2 7 L 8 R 9 IL 4 7 IR 2 2 \u8f93\u51fa\u6837\u4f8b\uff1a 8 7 7 3 2 9 \u5de6 -> \u53f3 code #include <iostream> using namespace std; const int N = 1e5 + 10; int e[N], l[N], r[N], idx; void init() { r[0] = 1; l[1] = 0; idx = 2; } void add(int k, int x) { e[idx] = x; l[idx] = k; r[idx] = r[k]; l[r[k]] = idx; r[k] = idx++; } void remove(int k) { r[l[k]] = r[k]; l[r[k]] = l[k]; } int main() { init(); int m; cin >> m; while (m--) { string s; int k, x; cin >> s; if (s == \"L\") { cin >> x; add(0, x); } else if (s == \"R\") { cin >> x; add(l[1], x); } else if (s == \"D\") { cin >> k; remove(k + 1); } else if (s == \"IL\") { cin >> k >> x; add(l[k + 1], x); } else { cin >> k >> x; add(k + 1, x); } } int t = r[0]; while (t != 1) { cout << e[t] << ' '; t = r[t]; } return 0; } \u6808 \u6808 \u5b9e\u73b0\u4e00\u4e2a\u6808\uff0c\u6808\u521d\u59cb\u4e3a\u7a7a\uff0c\u652f\u6301\u56db\u79cd\u64cd\u4f5c\uff1a push x \u2013 \u5411\u6808\u9876\u63d2\u5165\u4e00\u4e2a\u6570 xx\uff1b pop \u2013 \u4ece\u6808\u9876\u5f39\u51fa\u4e00\u4e2a\u6570\uff1b empty \u2013 \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a\uff1b query \u2013 \u67e5\u8be2\u6808\u9876\u5143\u7d20\u3002 \u73b0\u5728\u8981\u5bf9\u6808\u8fdb\u884c MM \u4e2a\u64cd\u4f5c\uff0c\u5176\u4e2d\u7684\u6bcf\u4e2a\u64cd\u4f5c 33 \u548c\u64cd\u4f5c 44 \u90fd\u8981\u8f93\u51fa\u76f8\u5e94\u7684\u7ed3\u679c\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 MM\uff0c\u8868\u793a\u64cd\u4f5c\u6b21\u6570\u3002 \u63a5\u4e0b\u6765 MM \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u64cd\u4f5c\u547d\u4ee4\uff0c\u64cd\u4f5c\u547d\u4ee4\u4e3a push x \uff0c pop \uff0c empty \uff0c query \u4e2d\u7684\u4e00\u79cd\u3002 \u8f93\u51fa\u683c\u5f0f \u5bf9\u4e8e\u6bcf\u4e2a empty \u548c query \u64cd\u4f5c\u90fd\u8981\u8f93\u51fa\u4e00\u4e2a\u67e5\u8be2\u7ed3\u679c\uff0c\u6bcf\u4e2a\u7ed3\u679c\u5360\u4e00\u884c\u3002 \u5176\u4e2d\uff0c empty \u64cd\u4f5c\u7684\u67e5\u8be2\u7ed3\u679c\u4e3a YES \u6216 NO \uff0c query \u64cd\u4f5c\u7684\u67e5\u8be2\u7ed3\u679c\u4e3a\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6808\u9876\u5143\u7d20\u7684\u503c\u3002 \u6570\u636e\u8303\u56f4 1\u2264M\u22641000001\u2264M\u2264100000, 1\u2264x\u22641091\u2264x\u2264109 \u6240\u6709\u64cd\u4f5c\u4fdd\u8bc1\u5408\u6cd5\u3002 \u8f93\u5165\u6837\u4f8b\uff1a 10 push 5 query push 6 pop query pop empty push 4 query empty \u8f93\u51fa\u6837\u4f8b\uff1a 5 5 YES 4 NO code #include <iostream> #include <cstdio> using namespace std; const int N = 1e5 + 10; int stk[N], tt; int main() { int m; cin >> m; string op; int x; while (m--) { cin >> op; if (op == \"push\") { scanf(\"%d\", &x); stk[++tt] = x; } else if (op == \"pop\") tt--; else if (op == \"query\") printf(\"%d\\n\", stk[tt]); else if (op == \"empty\") { if (tt) cout << \"NO\\n\"; else cout << \"YES\\n\"; } } return 0; } \u8868\u8fbe\u5f0f\u6c42\u503c \u7ed9\u5b9a\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5176\u4e2d\u8fd0\u7b97\u7b26\u4ec5\u5305\u542b +,-,*,/ \uff08\u52a0 \u51cf \u4e58 \u6574\u9664\uff09\uff0c\u53ef\u80fd\u5305\u542b\u62ec\u53f7\uff0c\u8bf7\u4f60\u6c42\u51fa\u8868\u8fbe\u5f0f\u7684\u6700\u7ec8\u503c\u3002 \u6ce8\u610f\uff1a \u6570\u636e\u4fdd\u8bc1\u7ed9\u5b9a\u7684\u8868\u8fbe\u5f0f\u5408\u6cd5\u3002 \u9898\u76ee\u4fdd\u8bc1\u7b26\u53f7 - \u53ea\u4f5c\u4e3a\u51cf\u53f7\u51fa\u73b0\uff0c\u4e0d\u4f1a\u4f5c\u4e3a\u8d1f\u53f7\u51fa\u73b0\uff0c\u4f8b\u5982\uff0c -1+2 , (2+2)*(-(1+1)+2) \u4e4b\u7c7b\u8868\u8fbe\u5f0f\u5747\u4e0d\u4f1a\u51fa\u73b0\u3002 \u9898\u76ee\u4fdd\u8bc1\u8868\u8fbe\u5f0f\u4e2d\u6240\u6709\u6570\u5b57\u5747\u4e3a\u6b63\u6574\u6570\u3002 \u9898\u76ee\u4fdd\u8bc1\u8868\u8fbe\u5f0f\u5728\u4e2d\u95f4\u8ba1\u7b97\u8fc7\u7a0b\u4ee5\u53ca\u7ed3\u679c\u4e2d\uff0c\u5747\u4e0d\u8d85\u8fc7 231\u22121231\u22121\u3002 \u9898\u76ee\u4e2d\u7684\u6574\u9664\u662f\u6307\u5411 00 \u53d6\u6574\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u5927\u4e8e 00 \u7684\u7ed3\u679c\u5411\u4e0b\u53d6\u6574\uff0c\u4f8b\u5982 5/3=15/3=1\uff0c\u5bf9\u4e8e\u5c0f\u4e8e 00 \u7684\u7ed3\u679c\u5411\u4e0a\u53d6\u6574\uff0c\u4f8b\u5982 5/(1\u22124)=\u221215/(1\u22124)=\u22121\u3002 C++\u548cJava\u4e2d\u7684\u6574\u9664\u9ed8\u8ba4\u662f\u5411\u96f6\u53d6\u6574\uff1bPython\u4e2d\u7684\u6574\u9664 // \u9ed8\u8ba4\u5411\u4e0b\u53d6\u6574\uff0c\u56e0\u6b64Python\u7684 eval() \u51fd\u6570\u4e2d\u7684\u6574\u9664\u4e5f\u662f\u5411\u4e0b\u53d6\u6574\uff0c\u5728\u672c\u9898\u4e2d\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u3002 \u8f93\u5165\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u4e3a\u7ed9\u5b9a\u8868\u8fbe\u5f0f\u3002 \u8f93\u51fa\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u4e3a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u3002 \u6570\u636e\u8303\u56f4 \u8868\u8fbe\u5f0f\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 105105\u3002 \u8f93\u5165\u6837\u4f8b\uff1a (2+2)*(1+1) \u8f93\u51fa\u6837\u4f8b\uff1a 8 code #include <iostream> #include <stack> #include <unordered_map> using namespace std; stack<char> op; stack<int> num; unordered_map<char, int> pr{ {'+', 1}, {'-', 1}, {'*', 2}, {'/', 2} }; void eval() { int b = num.top(); num.pop(); int a = num.top(); num.pop(); int x = 0; char c = op.top(); op.pop(); if (c == '+') x = a + b; else if (c == '-') x = a - b; else if (c == '*') x = a * b; else x = a / b; num.push(x); } int main() { string str; cin >> str; for (int i = 0; i < str.size(); i++) { if (isdigit(str[i])) { int x = 0, j = i; while (j < str.size() && isdigit(str[j])) { x = x * 10 + str[j++] - '0'; } num.push(x); i = j-1; } else if (str[i] == '(') op.push(str[i]); else if (str[i] == ')') { while (op.top() != '(') eval(); op.pop(); } else { while (op.size() && pr[op.top()] >= pr[str[i]]) eval(); op.push(str[i]); } } while (op.size()) eval(); cout << num.top(); return 0; } \u961f\u5217 \u6a21\u62df\u961f\u5217 \u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\uff0c\u961f\u5217\u521d\u59cb\u4e3a\u7a7a\uff0c\u652f\u6301\u56db\u79cd\u64cd\u4f5c\uff1a push x \u2013 \u5411\u961f\u5c3e\u63d2\u5165\u4e00\u4e2a\u6570 xx\uff1b pop \u2013 \u4ece\u961f\u5934\u5f39\u51fa\u4e00\u4e2a\u6570\uff1b empty \u2013 \u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff1b query \u2013 \u67e5\u8be2\u961f\u5934\u5143\u7d20\u3002 \u73b0\u5728\u8981\u5bf9\u961f\u5217\u8fdb\u884c MM \u4e2a\u64cd\u4f5c\uff0c\u5176\u4e2d\u7684\u6bcf\u4e2a\u64cd\u4f5c 33 \u548c\u64cd\u4f5c 44 \u90fd\u8981\u8f93\u51fa\u76f8\u5e94\u7684\u7ed3\u679c\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 MM\uff0c\u8868\u793a\u64cd\u4f5c\u6b21\u6570\u3002 \u63a5\u4e0b\u6765 MM \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u64cd\u4f5c\u547d\u4ee4\uff0c\u64cd\u4f5c\u547d\u4ee4\u4e3a push x \uff0c pop \uff0c empty \uff0c query \u4e2d\u7684\u4e00\u79cd\u3002 \u8f93\u51fa\u683c\u5f0f \u5bf9\u4e8e\u6bcf\u4e2a empty \u548c query \u64cd\u4f5c\u90fd\u8981\u8f93\u51fa\u4e00\u4e2a\u67e5\u8be2\u7ed3\u679c\uff0c\u6bcf\u4e2a\u7ed3\u679c\u5360\u4e00\u884c\u3002 \u5176\u4e2d\uff0c empty \u64cd\u4f5c\u7684\u67e5\u8be2\u7ed3\u679c\u4e3a YES \u6216 NO \uff0c query \u64cd\u4f5c\u7684\u67e5\u8be2\u7ed3\u679c\u4e3a\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u961f\u5934\u5143\u7d20\u7684\u503c\u3002 \u6570\u636e\u8303\u56f4 1\u2264M\u22641000001\u2264M\u2264100000, 1\u2264x\u22641091\u2264x\u2264109, \u6240\u6709\u64cd\u4f5c\u4fdd\u8bc1\u5408\u6cd5\u3002 \u8f93\u5165\u6837\u4f8b\uff1a 10 push 6 empty query pop empty push 3 push 4 pop query push 6 \u8f93\u51fa\u6837\u4f8b\uff1a NO 6 YES 4 code #include <iostream> #include <cstdio> using namespace std; const int N = 1e5 + 10; int q[N], hh, tt = -1; int main() { int n; cin >> n; string op; int x; while (n--) { cin >> op; if (op == \"push\") { cin >> x; q[++tt] = x; } else if (op == \"pop\") hh++; else if (op == \"query\") printf(\"%d\\n\", q[hh]); else { if (hh <= tt) printf(\"%s\\n\", \"NO\"); else printf(\"%s\\n\", \"YES\"); } } return 0; } \u5faa\u73af\u961f\u5217 // hh \u8868\u793a\u961f\u5934\uff0ctt\u8868\u793a\u961f\u5c3e\u7684\u540e\u4e00\u4e2a\u4f4d\u7f6e int q[N], hh = 0, tt = 0; // \u5411\u961f\u5c3e\u63d2\u5165\u4e00\u4e2a\u6570 q[tt ++ ] = x; if (tt == N) tt = 0; // \u4ece\u961f\u5934\u5f39\u51fa\u4e00\u4e2a\u6570 hh ++ ; if (hh == N) hh = 0; // \u961f\u5934\u7684\u503c q[hh]; // \u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a if (hh != tt) { } \u5355\u8c03\u6808 \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a N \u7684\u6574\u6570\u6570\u5217\uff0c\u8f93\u51fa\u6bcf\u4e2a\u6570\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u6570\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8f93\u51fa \u22121\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 N\uff0c\u8868\u793a\u6570\u5217\u957f\u5ea6\u3002 \u7b2c\u4e8c\u884c\u5305\u542b N \u4e2a\u6574\u6570\uff0c\u8868\u793a\u6574\u6570\u6570\u5217\u3002 \u8f93\u51fa\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5305\u542b N \u4e2a\u6574\u6570\uff0c\u5176\u4e2d\u7b2c i \u4e2a\u6570\u8868\u793a\u7b2c i \u4e2a\u6570\u7684\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u6570\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8f93\u51fa \u22121\u3002 \u6570\u636e\u8303\u56f4 1\u2264N\u2264105 1\u2264\u6570\u5217\u4e2d\u5143\u7d20\u2264109 \u8f93\u5165\u6837\u4f8b\uff1a 5 3 4 2 7 5 \u8f93\u51fa\u6837\u4f8b\uff1a -1 3 -1 2 2 #include <iostream> using namespace std; const int N = 1e5 + 10; int a[N], stk[N], tt; int main() { int n; scanf(\"%d\", &n); for (int i = 0; i < n; i++) { scanf(\"%d\", &a[i]); while (tt && stk[tt] >= a[i]) tt--; if (tt) printf(\"%d \", stk[tt]); else printf(\"-1 \"); stk[++tt] = a[i]; } } \u5355\u8c03\u961f\u5217 \u6ed1\u52a8\u7a97\u53e3 \u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3a n\u226410^6 \u7684\u6570\u7ec4\u3002 \u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a k \u7684\u6ed1\u52a8\u7a97\u53e3\uff0c\u5b83\u4ece\u6570\u7ec4\u7684\u6700\u5de6\u8fb9\u79fb\u52a8\u5230\u6700\u53f3\u8fb9\u3002 \u4f60\u53ea\u80fd\u5728\u7a97\u53e3\u4e2d\u770b\u5230 k \u4e2a\u6570\u5b57\u3002 \u6bcf\u6b21\u6ed1\u52a8\u7a97\u53e3\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a \u8be5\u6570\u7ec4\u4e3a [1 3 -1 -3 5 3 6 7] \uff0ck \u4e3a 3\u3002 \u7a97\u53e3\u4f4d\u7f6e \u6700\u5c0f\u503c \u6700\u5927\u503c [1 3 -1] -3 5 3 6 7 -1 3 1 [3 -1 -3] 5 3 6 7 -3 3 1 3 [-1 -3 5] 3 6 7 -3 5 1 3 -1 [-3 5 3] 6 7 -3 5 1 3 -1 -3 [5 3 6] 7 3 6 1 3 -1 -3 5 [3 6 7] 3 7 \u4f60\u7684\u4efb\u52a1\u662f\u786e\u5b9a\u6ed1\u52a8\u7a97\u53e3\u4f4d\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u65f6\uff0c\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002 \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u5305\u542b\u4e24\u884c\u3002 \u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 n \u548c k\uff0c\u5206\u522b\u4ee3\u8868\u6570\u7ec4\u957f\u5ea6\u548c\u6ed1\u52a8\u7a97\u53e3\u7684\u957f\u5ea6\u3002 \u7b2c\u4e8c\u884c\u6709 n \u4e2a\u6574\u6570\uff0c\u4ee3\u8868\u6570\u7ec4\u7684\u5177\u4f53\u6570\u503c\u3002 \u540c\u884c\u6570\u636e\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u5305\u542b\u4e24\u4e2a\u3002 \u7b2c\u4e00\u884c\u8f93\u51fa\uff0c\u4ece\u5de6\u81f3\u53f3\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684\u6700\u5c0f\u503c\u3002 \u7b2c\u4e8c\u884c\u8f93\u51fa\uff0c\u4ece\u5de6\u81f3\u53f3\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u503c\u3002 \u8f93\u5165\u6837\u4f8b\uff1a 8 3 1 3 -1 -3 5 3 6 7 \u8f93\u51fa\u6837\u4f8b\uff1a -1 -3 -3 -3 3 3 3 3 5 5 6 7 code #include <cstdio> using namespace std; const int N = 1e6 + 10; int a[N], q[N], hh = 0, tt = -1; int main() { int n, k; scanf(\"%d %d\", &n, &k); for (int i = 0; i < n; i++) scanf(\"%d\", &a[i]); for (int i = 0; i < n; i++) { if (hh <= tt && i - k + 1 > q[hh]) hh++; while (hh <= tt && a[q[tt]] >= a[i]) tt--; q[++tt] = i; if (i - k + 1 >= 0) printf(\"%d \", a[q[hh]]); } puts(\"\"); hh = 0, tt = -1; for (int i = 0; i < n; i++) { if (hh <= tt && i - k + 1 > q[hh]) hh++; while (hh <= tt && a[q[tt]] <= a[i]) tt--; q[++tt] = i; if (i - k + 1 >= 0) printf(\"%d \", a[q[hh]]); } puts(\"\"); return 0; }","title":"\u6570\u636e\u7ed3\u6784"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_1","text":"","title":"\u94fe\u8868"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_2","text":"\u5b9e\u73b0\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u94fe\u8868\u521d\u59cb\u4e3a\u7a7a\uff0c\u652f\u6301\u4e09\u79cd\u64cd\u4f5c\uff1a \u5411\u94fe\u8868\u5934\u63d2\u5165\u4e00\u4e2a\u6570\uff1b \u5220\u9664\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u540e\u9762\u7684\u6570\uff1b \u5728\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u540e\u63d2\u5165\u4e00\u4e2a\u6570\u3002 \u73b0\u5728\u8981\u5bf9\u8be5\u94fe\u8868\u8fdb\u884c MM \u6b21\u64cd\u4f5c\uff0c\u8fdb\u884c\u5b8c\u6240\u6709\u64cd\u4f5c\u540e\uff0c\u4ece\u5934\u5230\u5c3e\u8f93\u51fa\u6574\u4e2a\u94fe\u8868\u3002 \u6ce8\u610f :\u9898\u76ee\u4e2d\u7b2c k \u4e2a\u63d2\u5165\u7684\u6570\u5e76\u4e0d\u662f\u6307\u5f53\u524d\u94fe\u8868\u7684\u7b2c k \u4e2a\u6570\u3002\u4f8b\u5982\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u4e00\u5171\u63d2\u5165\u4e86 n \u4e2a\u6570\uff0c\u5219\u6309\u7167\u63d2\u5165\u7684\u65f6\u95f4\u987a\u5e8f\uff0c\u8fd9 n \u4e2a\u6570\u4f9d\u6b21\u4e3a\uff1a\u7b2c 11 \u4e2a\u63d2\u5165\u7684\u6570\uff0c\u7b2c 22 \u4e2a\u63d2\u5165\u7684\u6570\uff0c\u2026\u7b2c nn \u4e2a\u63d2\u5165\u7684\u6570\u3002","title":"\u5355\u94fe\u8868"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_3","text":"\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 M\uff0c\u8868\u793a\u64cd\u4f5c\u6b21\u6570\u3002 \u63a5\u4e0b\u6765 M \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u64cd\u4f5c\u547d\u4ee4\uff0c\u64cd\u4f5c\u547d\u4ee4\u53ef\u80fd\u4e3a\u4ee5\u4e0b\u51e0\u79cd\uff1a H x \uff0c\u8868\u793a\u5411\u94fe\u8868\u5934\u63d2\u5165\u4e00\u4e2a\u6570 xx\u3002 D k \uff0c\u8868\u793a\u5220\u9664\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u540e\u9762\u7684\u6570\uff08\u5f53 kk \u4e3a 00 \u65f6\uff0c\u8868\u793a\u5220\u9664\u5934\u7ed3\u70b9\uff09\u3002 I k x \uff0c\u8868\u793a\u5728\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u540e\u9762\u63d2\u5165\u4e00\u4e2a\u6570 xx\uff08\u6b64\u64cd\u4f5c\u4e2d kk \u5747\u5927\u4e8e 00\uff09\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_4","text":"\u5171\u4e00\u884c\uff0c\u5c06\u6574\u4e2a\u94fe\u8868\u4ece\u5934\u5230\u5c3e\u8f93\u51fa\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_5","text":"1\u2264M\u2264100000 \u6240\u6709\u64cd\u4f5c\u4fdd\u8bc1\u5408\u6cd5\u3002","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_6","text":"10 H 9 I 1 1 D 1 D 0 H 6 I 3 6 I 4 5 I 4 5 I 3 4 D 6","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_7","text":"6 4 6 5","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#code","text":"#include <iostream> using namespace std; const int N = 1e5 + 10; int head, e[N], ne[N], idx; void init() { head = -1; } void add_to_head(int x) { e[idx] = x; ne[idx] = head; head = idx++; } void add(int k, int x) { e[idx] = x; ne[idx] = ne[k]; ne[k] = idx++; } void remove(int k) { ne[k] = ne[ne[k]]; } int main() { init(); int m; cin >> m; while (m--) { char ch; int k, x; cin >> ch; if (ch == 'H') { cin >> x; add_to_head(x); } else if (ch == 'I') { cin >> k >> x; add(k - 1, x); } else if(ch == 'D') { cin >> k; if (k == 0) head = ne[head]; else remove(k - 1); } } int t = head; while (t != -1) { cout << e[t] << ' '; t = ne[t]; } return 0; }","title":"code"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_8","text":"\u5b9e\u73b0\u4e00\u4e2a\u53cc\u94fe\u8868\uff0c\u53cc\u94fe\u8868\u521d\u59cb\u4e3a\u7a7a\uff0c\u652f\u6301 55 \u79cd\u64cd\u4f5c\uff1a \u5728\u6700\u5de6\u4fa7\u63d2\u5165\u4e00\u4e2a\u6570\uff1b \u5728\u6700\u53f3\u4fa7\u63d2\u5165\u4e00\u4e2a\u6570\uff1b \u5c06\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u5220\u9664\uff1b \u5728\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u5de6\u4fa7\u63d2\u5165\u4e00\u4e2a\u6570\uff1b \u5728\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u53f3\u4fa7\u63d2\u5165\u4e00\u4e2a\u6570 \u73b0\u5728\u8981\u5bf9\u8be5\u94fe\u8868\u8fdb\u884c MM \u6b21\u64cd\u4f5c\uff0c\u8fdb\u884c\u5b8c\u6240\u6709\u64cd\u4f5c\u540e\uff0c\u4ece\u5de6\u5230\u53f3\u8f93\u51fa\u6574\u4e2a\u94fe\u8868\u3002 \u6ce8\u610f :\u9898\u76ee\u4e2d\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u5e76\u4e0d\u662f\u6307\u5f53\u524d\u94fe\u8868\u7684\u7b2c kk \u4e2a\u6570\u3002\u4f8b\u5982\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u4e00\u5171\u63d2\u5165\u4e86 nn \u4e2a\u6570\uff0c\u5219\u6309\u7167\u63d2\u5165\u7684\u65f6\u95f4\u987a\u5e8f\uff0c\u8fd9 nn \u4e2a\u6570\u4f9d\u6b21\u4e3a\uff1a\u7b2c 11 \u4e2a\u63d2\u5165\u7684\u6570\uff0c\u7b2c 22 \u4e2a\u63d2\u5165\u7684\u6570\uff0c\u2026\u7b2c nn \u4e2a\u63d2\u5165\u7684\u6570\u3002","title":"\u53cc\u94fe\u8868"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_9","text":"\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 MM\uff0c\u8868\u793a\u64cd\u4f5c\u6b21\u6570\u3002 \u63a5\u4e0b\u6765 MM \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u64cd\u4f5c\u547d\u4ee4\uff0c\u64cd\u4f5c\u547d\u4ee4\u53ef\u80fd\u4e3a\u4ee5\u4e0b\u51e0\u79cd\uff1a L x \uff0c\u8868\u793a\u5728\u94fe\u8868\u7684\u6700\u5de6\u7aef\u63d2\u5165\u6570 xx\u3002 R x \uff0c\u8868\u793a\u5728\u94fe\u8868\u7684\u6700\u53f3\u7aef\u63d2\u5165\u6570 xx\u3002 D k \uff0c\u8868\u793a\u5c06\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u5220\u9664\u3002 IL k x \uff0c\u8868\u793a\u5728\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u5de6\u4fa7\u63d2\u5165\u4e00\u4e2a\u6570\u3002 IR k x \uff0c\u8868\u793a\u5728\u7b2c kk \u4e2a\u63d2\u5165\u7684\u6570\u53f3\u4fa7\u63d2\u5165\u4e00\u4e2a\u6570\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_10","text":"\u5171\u4e00\u884c\uff0c\u5c06\u6574\u4e2a\u94fe\u8868\u4ece\u5de6\u5230\u53f3\u8f93\u51fa\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_11","text":"1\u2264M\u22641000001\u2264M\u2264100000 \u6240\u6709\u64cd\u4f5c\u4fdd\u8bc1\u5408\u6cd5\u3002","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_12","text":"10 R 7 D 1 L 3 IL 2 10 D 3 IL 2 7 L 8 R 9 IL 4 7 IR 2 2","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_13","text":"8 7 7 3 2 9 \u5de6 -> \u53f3","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#code_1","text":"#include <iostream> using namespace std; const int N = 1e5 + 10; int e[N], l[N], r[N], idx; void init() { r[0] = 1; l[1] = 0; idx = 2; } void add(int k, int x) { e[idx] = x; l[idx] = k; r[idx] = r[k]; l[r[k]] = idx; r[k] = idx++; } void remove(int k) { r[l[k]] = r[k]; l[r[k]] = l[k]; } int main() { init(); int m; cin >> m; while (m--) { string s; int k, x; cin >> s; if (s == \"L\") { cin >> x; add(0, x); } else if (s == \"R\") { cin >> x; add(l[1], x); } else if (s == \"D\") { cin >> k; remove(k + 1); } else if (s == \"IL\") { cin >> k >> x; add(l[k + 1], x); } else { cin >> k >> x; add(k + 1, x); } } int t = r[0]; while (t != 1) { cout << e[t] << ' '; t = r[t]; } return 0; }","title":"code"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_14","text":"","title":"\u6808"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_15","text":"\u5b9e\u73b0\u4e00\u4e2a\u6808\uff0c\u6808\u521d\u59cb\u4e3a\u7a7a\uff0c\u652f\u6301\u56db\u79cd\u64cd\u4f5c\uff1a push x \u2013 \u5411\u6808\u9876\u63d2\u5165\u4e00\u4e2a\u6570 xx\uff1b pop \u2013 \u4ece\u6808\u9876\u5f39\u51fa\u4e00\u4e2a\u6570\uff1b empty \u2013 \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a\uff1b query \u2013 \u67e5\u8be2\u6808\u9876\u5143\u7d20\u3002 \u73b0\u5728\u8981\u5bf9\u6808\u8fdb\u884c MM \u4e2a\u64cd\u4f5c\uff0c\u5176\u4e2d\u7684\u6bcf\u4e2a\u64cd\u4f5c 33 \u548c\u64cd\u4f5c 44 \u90fd\u8981\u8f93\u51fa\u76f8\u5e94\u7684\u7ed3\u679c\u3002","title":"\u6808"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_16","text":"\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 MM\uff0c\u8868\u793a\u64cd\u4f5c\u6b21\u6570\u3002 \u63a5\u4e0b\u6765 MM \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u64cd\u4f5c\u547d\u4ee4\uff0c\u64cd\u4f5c\u547d\u4ee4\u4e3a push x \uff0c pop \uff0c empty \uff0c query \u4e2d\u7684\u4e00\u79cd\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_17","text":"\u5bf9\u4e8e\u6bcf\u4e2a empty \u548c query \u64cd\u4f5c\u90fd\u8981\u8f93\u51fa\u4e00\u4e2a\u67e5\u8be2\u7ed3\u679c\uff0c\u6bcf\u4e2a\u7ed3\u679c\u5360\u4e00\u884c\u3002 \u5176\u4e2d\uff0c empty \u64cd\u4f5c\u7684\u67e5\u8be2\u7ed3\u679c\u4e3a YES \u6216 NO \uff0c query \u64cd\u4f5c\u7684\u67e5\u8be2\u7ed3\u679c\u4e3a\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6808\u9876\u5143\u7d20\u7684\u503c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_18","text":"1\u2264M\u22641000001\u2264M\u2264100000, 1\u2264x\u22641091\u2264x\u2264109 \u6240\u6709\u64cd\u4f5c\u4fdd\u8bc1\u5408\u6cd5\u3002","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_19","text":"10 push 5 query push 6 pop query pop empty push 4 query empty","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_20","text":"5 5 YES 4 NO","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#code_2","text":"#include <iostream> #include <cstdio> using namespace std; const int N = 1e5 + 10; int stk[N], tt; int main() { int m; cin >> m; string op; int x; while (m--) { cin >> op; if (op == \"push\") { scanf(\"%d\", &x); stk[++tt] = x; } else if (op == \"pop\") tt--; else if (op == \"query\") printf(\"%d\\n\", stk[tt]); else if (op == \"empty\") { if (tt) cout << \"NO\\n\"; else cout << \"YES\\n\"; } } return 0; }","title":"code"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_21","text":"\u7ed9\u5b9a\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5176\u4e2d\u8fd0\u7b97\u7b26\u4ec5\u5305\u542b +,-,*,/ \uff08\u52a0 \u51cf \u4e58 \u6574\u9664\uff09\uff0c\u53ef\u80fd\u5305\u542b\u62ec\u53f7\uff0c\u8bf7\u4f60\u6c42\u51fa\u8868\u8fbe\u5f0f\u7684\u6700\u7ec8\u503c\u3002 \u6ce8\u610f\uff1a \u6570\u636e\u4fdd\u8bc1\u7ed9\u5b9a\u7684\u8868\u8fbe\u5f0f\u5408\u6cd5\u3002 \u9898\u76ee\u4fdd\u8bc1\u7b26\u53f7 - \u53ea\u4f5c\u4e3a\u51cf\u53f7\u51fa\u73b0\uff0c\u4e0d\u4f1a\u4f5c\u4e3a\u8d1f\u53f7\u51fa\u73b0\uff0c\u4f8b\u5982\uff0c -1+2 , (2+2)*(-(1+1)+2) \u4e4b\u7c7b\u8868\u8fbe\u5f0f\u5747\u4e0d\u4f1a\u51fa\u73b0\u3002 \u9898\u76ee\u4fdd\u8bc1\u8868\u8fbe\u5f0f\u4e2d\u6240\u6709\u6570\u5b57\u5747\u4e3a\u6b63\u6574\u6570\u3002 \u9898\u76ee\u4fdd\u8bc1\u8868\u8fbe\u5f0f\u5728\u4e2d\u95f4\u8ba1\u7b97\u8fc7\u7a0b\u4ee5\u53ca\u7ed3\u679c\u4e2d\uff0c\u5747\u4e0d\u8d85\u8fc7 231\u22121231\u22121\u3002 \u9898\u76ee\u4e2d\u7684\u6574\u9664\u662f\u6307\u5411 00 \u53d6\u6574\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u5927\u4e8e 00 \u7684\u7ed3\u679c\u5411\u4e0b\u53d6\u6574\uff0c\u4f8b\u5982 5/3=15/3=1\uff0c\u5bf9\u4e8e\u5c0f\u4e8e 00 \u7684\u7ed3\u679c\u5411\u4e0a\u53d6\u6574\uff0c\u4f8b\u5982 5/(1\u22124)=\u221215/(1\u22124)=\u22121\u3002 C++\u548cJava\u4e2d\u7684\u6574\u9664\u9ed8\u8ba4\u662f\u5411\u96f6\u53d6\u6574\uff1bPython\u4e2d\u7684\u6574\u9664 // \u9ed8\u8ba4\u5411\u4e0b\u53d6\u6574\uff0c\u56e0\u6b64Python\u7684 eval() \u51fd\u6570\u4e2d\u7684\u6574\u9664\u4e5f\u662f\u5411\u4e0b\u53d6\u6574\uff0c\u5728\u672c\u9898\u4e2d\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u3002","title":"\u8868\u8fbe\u5f0f\u6c42\u503c"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_22","text":"\u5171\u4e00\u884c\uff0c\u4e3a\u7ed9\u5b9a\u8868\u8fbe\u5f0f\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_23","text":"\u5171\u4e00\u884c\uff0c\u4e3a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_24","text":"\u8868\u8fbe\u5f0f\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 105105\u3002","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_25","text":"(2+2)*(1+1)","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_26","text":"8","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#code_3","text":"#include <iostream> #include <stack> #include <unordered_map> using namespace std; stack<char> op; stack<int> num; unordered_map<char, int> pr{ {'+', 1}, {'-', 1}, {'*', 2}, {'/', 2} }; void eval() { int b = num.top(); num.pop(); int a = num.top(); num.pop(); int x = 0; char c = op.top(); op.pop(); if (c == '+') x = a + b; else if (c == '-') x = a - b; else if (c == '*') x = a * b; else x = a / b; num.push(x); } int main() { string str; cin >> str; for (int i = 0; i < str.size(); i++) { if (isdigit(str[i])) { int x = 0, j = i; while (j < str.size() && isdigit(str[j])) { x = x * 10 + str[j++] - '0'; } num.push(x); i = j-1; } else if (str[i] == '(') op.push(str[i]); else if (str[i] == ')') { while (op.top() != '(') eval(); op.pop(); } else { while (op.size() && pr[op.top()] >= pr[str[i]]) eval(); op.push(str[i]); } } while (op.size()) eval(); cout << num.top(); return 0; }","title":"code"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_27","text":"","title":"\u961f\u5217"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_28","text":"\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\uff0c\u961f\u5217\u521d\u59cb\u4e3a\u7a7a\uff0c\u652f\u6301\u56db\u79cd\u64cd\u4f5c\uff1a push x \u2013 \u5411\u961f\u5c3e\u63d2\u5165\u4e00\u4e2a\u6570 xx\uff1b pop \u2013 \u4ece\u961f\u5934\u5f39\u51fa\u4e00\u4e2a\u6570\uff1b empty \u2013 \u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff1b query \u2013 \u67e5\u8be2\u961f\u5934\u5143\u7d20\u3002 \u73b0\u5728\u8981\u5bf9\u961f\u5217\u8fdb\u884c MM \u4e2a\u64cd\u4f5c\uff0c\u5176\u4e2d\u7684\u6bcf\u4e2a\u64cd\u4f5c 33 \u548c\u64cd\u4f5c 44 \u90fd\u8981\u8f93\u51fa\u76f8\u5e94\u7684\u7ed3\u679c\u3002","title":"\u6a21\u62df\u961f\u5217"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_29","text":"\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 MM\uff0c\u8868\u793a\u64cd\u4f5c\u6b21\u6570\u3002 \u63a5\u4e0b\u6765 MM \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u64cd\u4f5c\u547d\u4ee4\uff0c\u64cd\u4f5c\u547d\u4ee4\u4e3a push x \uff0c pop \uff0c empty \uff0c query \u4e2d\u7684\u4e00\u79cd\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_30","text":"\u5bf9\u4e8e\u6bcf\u4e2a empty \u548c query \u64cd\u4f5c\u90fd\u8981\u8f93\u51fa\u4e00\u4e2a\u67e5\u8be2\u7ed3\u679c\uff0c\u6bcf\u4e2a\u7ed3\u679c\u5360\u4e00\u884c\u3002 \u5176\u4e2d\uff0c empty \u64cd\u4f5c\u7684\u67e5\u8be2\u7ed3\u679c\u4e3a YES \u6216 NO \uff0c query \u64cd\u4f5c\u7684\u67e5\u8be2\u7ed3\u679c\u4e3a\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u961f\u5934\u5143\u7d20\u7684\u503c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_31","text":"1\u2264M\u22641000001\u2264M\u2264100000, 1\u2264x\u22641091\u2264x\u2264109, \u6240\u6709\u64cd\u4f5c\u4fdd\u8bc1\u5408\u6cd5\u3002","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_32","text":"10 push 6 empty query pop empty push 3 push 4 pop query push 6","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_33","text":"NO 6 YES 4","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#code_4","text":"#include <iostream> #include <cstdio> using namespace std; const int N = 1e5 + 10; int q[N], hh, tt = -1; int main() { int n; cin >> n; string op; int x; while (n--) { cin >> op; if (op == \"push\") { cin >> x; q[++tt] = x; } else if (op == \"pop\") hh++; else if (op == \"query\") printf(\"%d\\n\", q[hh]); else { if (hh <= tt) printf(\"%s\\n\", \"NO\"); else printf(\"%s\\n\", \"YES\"); } } return 0; }","title":"code"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_34","text":"// hh \u8868\u793a\u961f\u5934\uff0ctt\u8868\u793a\u961f\u5c3e\u7684\u540e\u4e00\u4e2a\u4f4d\u7f6e int q[N], hh = 0, tt = 0; // \u5411\u961f\u5c3e\u63d2\u5165\u4e00\u4e2a\u6570 q[tt ++ ] = x; if (tt == N) tt = 0; // \u4ece\u961f\u5934\u5f39\u51fa\u4e00\u4e2a\u6570 hh ++ ; if (hh == N) hh = 0; // \u961f\u5934\u7684\u503c q[hh]; // \u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a if (hh != tt) { }","title":"\u5faa\u73af\u961f\u5217"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_35","text":"\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a N \u7684\u6574\u6570\u6570\u5217\uff0c\u8f93\u51fa\u6bcf\u4e2a\u6570\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u6570\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8f93\u51fa \u22121\u3002","title":"\u5355\u8c03\u6808"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_36","text":"\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 N\uff0c\u8868\u793a\u6570\u5217\u957f\u5ea6\u3002 \u7b2c\u4e8c\u884c\u5305\u542b N \u4e2a\u6574\u6570\uff0c\u8868\u793a\u6574\u6570\u6570\u5217\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_37","text":"\u5171\u4e00\u884c\uff0c\u5305\u542b N \u4e2a\u6574\u6570\uff0c\u5176\u4e2d\u7b2c i \u4e2a\u6570\u8868\u793a\u7b2c i \u4e2a\u6570\u7684\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u6570\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8f93\u51fa \u22121\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_38","text":"1\u2264N\u2264105 1\u2264\u6570\u5217\u4e2d\u5143\u7d20\u2264109","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_39","text":"5 3 4 2 7 5","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_40","text":"-1 3 -1 2 2 #include <iostream> using namespace std; const int N = 1e5 + 10; int a[N], stk[N], tt; int main() { int n; scanf(\"%d\", &n); for (int i = 0; i < n; i++) { scanf(\"%d\", &a[i]); while (tt && stk[tt] >= a[i]) tt--; if (tt) printf(\"%d \", stk[tt]); else printf(\"-1 \"); stk[++tt] = a[i]; } }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_41","text":"","title":"\u5355\u8c03\u961f\u5217"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_42","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3a n\u226410^6 \u7684\u6570\u7ec4\u3002 \u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a k \u7684\u6ed1\u52a8\u7a97\u53e3\uff0c\u5b83\u4ece\u6570\u7ec4\u7684\u6700\u5de6\u8fb9\u79fb\u52a8\u5230\u6700\u53f3\u8fb9\u3002 \u4f60\u53ea\u80fd\u5728\u7a97\u53e3\u4e2d\u770b\u5230 k \u4e2a\u6570\u5b57\u3002 \u6bcf\u6b21\u6ed1\u52a8\u7a97\u53e3\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a \u8be5\u6570\u7ec4\u4e3a [1 3 -1 -3 5 3 6 7] \uff0ck \u4e3a 3\u3002 \u7a97\u53e3\u4f4d\u7f6e \u6700\u5c0f\u503c \u6700\u5927\u503c [1 3 -1] -3 5 3 6 7 -1 3 1 [3 -1 -3] 5 3 6 7 -3 3 1 3 [-1 -3 5] 3 6 7 -3 5 1 3 -1 [-3 5 3] 6 7 -3 5 1 3 -1 -3 [5 3 6] 7 3 6 1 3 -1 -3 5 [3 6 7] 3 7 \u4f60\u7684\u4efb\u52a1\u662f\u786e\u5b9a\u6ed1\u52a8\u7a97\u53e3\u4f4d\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u65f6\uff0c\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002","title":"\u6ed1\u52a8\u7a97\u53e3"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_43","text":"\u8f93\u5165\u5305\u542b\u4e24\u884c\u3002 \u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 n \u548c k\uff0c\u5206\u522b\u4ee3\u8868\u6570\u7ec4\u957f\u5ea6\u548c\u6ed1\u52a8\u7a97\u53e3\u7684\u957f\u5ea6\u3002 \u7b2c\u4e8c\u884c\u6709 n \u4e2a\u6574\u6570\uff0c\u4ee3\u8868\u6570\u7ec4\u7684\u5177\u4f53\u6570\u503c\u3002 \u540c\u884c\u6570\u636e\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_44","text":"\u8f93\u51fa\u5305\u542b\u4e24\u4e2a\u3002 \u7b2c\u4e00\u884c\u8f93\u51fa\uff0c\u4ece\u5de6\u81f3\u53f3\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684\u6700\u5c0f\u503c\u3002 \u7b2c\u4e8c\u884c\u8f93\u51fa\uff0c\u4ece\u5de6\u81f3\u53f3\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u503c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_45","text":"8 3 1 3 -1 -3 5 3 6 7","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_46","text":"-1 -3 -3 -3 3 3 3 3 5 5 6 7","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#code_5","text":"#include <cstdio> using namespace std; const int N = 1e6 + 10; int a[N], q[N], hh = 0, tt = -1; int main() { int n, k; scanf(\"%d %d\", &n, &k); for (int i = 0; i < n; i++) scanf(\"%d\", &a[i]); for (int i = 0; i < n; i++) { if (hh <= tt && i - k + 1 > q[hh]) hh++; while (hh <= tt && a[q[tt]] >= a[i]) tt--; q[++tt] = i; if (i - k + 1 >= 0) printf(\"%d \", a[q[hh]]); } puts(\"\"); hh = 0, tt = -1; for (int i = 0; i < n; i++) { if (hh <= tt && i - k + 1 > q[hh]) hh++; while (hh <= tt && a[q[tt]] <= a[i]) tt--; q[++tt] = i; if (i - k + 1 >= 0) printf(\"%d \", a[q[hh]]); } puts(\"\"); return 0; }","title":"code"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/","text":"dfs \u6392\u5217\u6570\u5b57 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 n\uff0c\u5c06\u6570\u5b57 1\u223cn\u6392\u6210\u4e00\u6392\uff0c\u5c06\u4f1a\u6709\u5f88\u591a\u79cd\u6392\u5217\u65b9\u6cd5\u3002 \u73b0\u5728\uff0c\u8bf7\u4f60\u6309\u7167\u5b57\u5178\u5e8f\u5c06\u6240\u6709\u7684\u6392\u5217\u65b9\u6cd5\u8f93\u51fa\u3002 \u8f93\u5165\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570 n\u3002 \u8f93\u51fa\u683c\u5f0f \u6309\u5b57\u5178\u5e8f\u8f93\u51fa\u6240\u6709\u6392\u5217\u65b9\u6848\uff0c\u6bcf\u4e2a\u65b9\u6848\u5360\u4e00\u884c\u3002 \u6570\u636e\u8303\u56f4 1\u2264n\u22647 \u8f93\u5165\u6837\u4f8b\uff1a 3 \u8f93\u51fa\u6837\u4f8b\uff1a 1 2 3 1 3 2 2 1 3 2 3 1 3 1 2 3 2 1 code #include <iostream> using namespace std; const int N = 10; int path[N]; bool st[N]; int n; void dfs(int u) { if (u == n) { for (int i = 0; i < n; i++) cout << path[i] << ' '; puts(\"\"); } for (int i = 1; i <= n; i++) { if (!st[i]) { st[i] = true; path[u] = i; dfs(u + 1); st[i] = false; } } } int main() { cin >> n; dfs(0); return 0; } n-\u7687\u540e\u95ee\u9898 n\u2212n\u2212\u7687\u540e\u95ee\u9898\u662f\u6307\u5c06 n \u4e2a\u7687\u540e\u653e\u5728 n\u00d7n \u7684\u56fd\u9645\u8c61\u68cb\u68cb\u76d8\u4e0a\uff0c\u4f7f\u5f97\u7687\u540e\u4e0d\u80fd\u76f8\u4e92\u653b\u51fb\u5230\uff0c\u5373\u4efb\u610f\u4e24\u4e2a\u7687\u540e\u90fd\u4e0d\u80fd\u5904\u4e8e\u540c\u4e00\u884c\u3001\u540c\u4e00\u5217\u6216\u540c\u4e00\u659c\u7ebf\u4e0a\u3002 \u73b0\u5728\u7ed9\u5b9a\u6574\u6570 nn\uff0c\u8bf7\u4f60\u8f93\u51fa\u6240\u6709\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u68cb\u5b50\u6446\u6cd5\u3002 \u8f93\u5165\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5305\u542b\u6574\u6570 n\u3002 \u8f93\u51fa\u683c\u5f0f \u6bcf\u4e2a\u89e3\u51b3\u65b9\u6848\u5360 n \u884c\uff0c\u6bcf\u884c\u8f93\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u5b57\u7b26\u4e32\uff0c\u7528\u6765\u8868\u793a\u5b8c\u6574\u7684\u68cb\u76d8\u72b6\u6001\u3002 \u5176\u4e2d . \u8868\u793a\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u65b9\u683c\u72b6\u6001\u4e3a\u7a7a\uff0c Q \u8868\u793a\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u65b9\u683c\u4e0a\u6446\u7740\u7687\u540e\u3002 \u6bcf\u4e2a\u65b9\u6848\u8f93\u51fa\u5b8c\u6210\u540e\uff0c\u8f93\u51fa\u4e00\u4e2a\u7a7a\u884c\u3002 \u6ce8\u610f\uff1a\u884c\u672b\u4e0d\u80fd\u6709\u591a\u4f59\u7a7a\u683c\u3002 \u8f93\u51fa\u65b9\u6848\u7684\u987a\u5e8f\u4efb\u610f\uff0c\u53ea\u8981\u4e0d\u91cd\u590d\u4e14\u6ca1\u6709\u9057\u6f0f\u5373\u53ef\u3002 \u6570\u636e\u8303\u56f4 1\u2264n\u22649 \u8f93\u5165\u6837\u4f8b\uff1a 4 \u8f93\u51fa\u6837\u4f8b\uff1a .Q.. ...Q Q... ..Q. ..Q. Q... ...Q .Q.. code 2^(n^2) \u6bcf\u4e2a\u70b9\u90fd\u9700\u8981\u8bbf\u95ee\u4fe9\u6b21 #include <iostream> using namespace std; const int N = 13; char g[N][N]; int n; bool row[N], col[N], dg[2 * N], udg[2 * N]; void dfs(int x, int y, int s) { if (y == n) { x++, y = 0; } if (x == n) { if (s == n) { for (int i = 0; i < n; i++) cout << g[i] << endl; puts(\"\"); } return; } if (!row[x] && !col[y] && !dg[y - x + n] && !udg[y + x]) { row[x] = col[y] = dg[y - x + n] = udg[y + x] = true; g[x][y] = 'Q'; dfs(x, y + 1, s + 1); row[x] = col[y] = dg[y - x + n] = udg[y + x] = false; g[x][y] = '.'; } dfs(x, y + 1, s); } int main() { cin >> n; for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) g[i][j] = '.'; } dfs(0, 0, 0); return 0; } o(n^2) #include <iostream> using namespace std; const int N = 13; char g[N][N]; bool col[N], dg[2 * N], udg[2 * N]; int n; void dfs(int u) { if (u == n) { for (int i = 0; i < n; i++) { cout << g[i]; puts(\"\"); } puts(\"\"); return; } for (int i = 0; i < n; i++) { if (!col[i] && !dg[i - u + n] && !udg[u + i]) { col[i] = dg[i - u + n] = udg[u + i] = true; g[u][i] = 'Q'; dfs(u + 1); col[i] = dg[i - u + n] = udg[u + i] = false; g[u][i] = '.'; } } } int main() { cin >> n; for (int i = 0; i < n; i++) for (int j = 0; j < n; j++) g[i][j] = '.'; dfs(0); return 0; } bfs \u8d70\u8ff7\u5bab \u7ed9\u5b9a\u4e00\u4e2a n\u00d7m \u7684\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4\uff0c\u7528\u6765\u8868\u793a\u4e00\u4e2a\u8ff7\u5bab\uff0c\u6570\u7ec4\u4e2d\u53ea\u5305\u542b 0 \u6216 1\uff0c\u5176\u4e2d 0 \u8868\u793a\u53ef\u4ee5\u8d70\u7684\u8def\uff0c1 \u8868\u793a\u4e0d\u53ef\u901a\u8fc7\u7684\u5899\u58c1\u3002 \u6700\u521d\uff0c\u6709\u4e00\u4e2a\u4eba\u4f4d\u4e8e\u5de6\u4e0a\u89d2 (1,1) \u5904\uff0c\u5df2\u77e5\u8be5\u4eba\u6bcf\u6b21\u53ef\u4ee5\u5411\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u4efb\u610f\u4e00\u4e2a\u65b9\u5411\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\u3002 \u8bf7\u95ee\uff0c\u8be5\u4eba\u4ece\u5de6\u4e0a\u89d2\u79fb\u52a8\u81f3\u53f3\u4e0b\u89d2 (n,m) \u5904\uff0c\u81f3\u5c11\u9700\u8981\u79fb\u52a8\u591a\u5c11\u6b21\u3002 \u6570\u636e\u4fdd\u8bc1 (1,1) \u5904\u548c (n,m) \u5904\u7684\u6570\u5b57\u4e3a 0\uff0c\u4e14\u4e00\u5b9a\u81f3\u5c11\u5b58\u5728\u4e00\u6761\u901a\u8def\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 n \u884c\uff0c\u6bcf\u884c\u5305\u542b m \u4e2a\u6574\u6570\uff080 \u6216 1\uff09\uff0c\u8868\u793a\u5b8c\u6574\u7684\u4e8c\u7ef4\u6570\u7ec4\u8ff7\u5bab\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u4ece\u5de6\u4e0a\u89d2\u79fb\u52a8\u81f3\u53f3\u4e0b\u89d2\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570\u3002 \u6570\u636e\u8303\u56f4 1\u2264n,m\u2264100 \u8f93\u5165\u6837\u4f8b\uff1a 5 5 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 \u8f93\u51fa\u6837\u4f8b\uff1a 8 code #include <iostream> #include <cstring> #include <queue> using namespace std; typedef pair<int, int> PII; const int N = 110; int g[N][N], d[N][N]; int n, m; void bfs() { queue<PII> q; memset(d, -1, sizeof d); d[0][0] = 0; q.push({0, 0}); int dx[4] = {-1, 0, 1, 0}, dy[4] = {0, 1, 0, -1}; while (!q.empty()) { auto t = q.front(); q.pop(); for (int i = 0; i < 4; i++) { int x = t.first + dx[i], y = t.second + dy[i]; if (x >= 0 && x < n && y >= 0 && y < m && g[x][y] == 0 && d[x][y] == -1) { d[x][y] = d[t.first][t.second] + 1; q.push({x, y}); } } } cout << d[n - 1][m - 1]; } int main() { cin >> n >> m; for (int i = 0; i < n; i++) { for (int j = 0; j < m; j++) cin >> g[i][j]; } bfs(); return 0; } \u516b\u6570\u7801 \u5728\u4e00\u4e2a 3\u00d733\u00d73 \u7684\u7f51\u683c\u4e2d\uff0c1\u223c81\u223c8 \u8fd9 88 \u4e2a\u6570\u5b57\u548c\u4e00\u4e2a x \u6070\u597d\u4e0d\u91cd\u4e0d\u6f0f\u5730\u5206\u5e03\u5728\u8fd9 3\u00d733\u00d73 \u7684\u7f51\u683c\u4e2d\u3002 \u4f8b\u5982\uff1a 1 2 3 x 4 6 7 5 8 \u5728\u6e38\u620f\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u628a x \u4e0e\u5176\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u4e2a\u65b9\u5411\u4e4b\u4e00\u7684\u6570\u5b57\u4ea4\u6362\uff08\u5982\u679c\u5b58\u5728\uff09\u3002 \u6211\u4eec\u7684\u76ee\u7684\u662f\u901a\u8fc7\u4ea4\u6362\uff0c\u4f7f\u5f97\u7f51\u683c\u53d8\u4e3a\u5982\u4e0b\u6392\u5217\uff08\u79f0\u4e3a\u6b63\u786e\u6392\u5217\uff09\uff1a 1 2 3 4 5 6 7 8 x \u4f8b\u5982\uff0c\u793a\u4f8b\u4e2d\u56fe\u5f62\u5c31\u53ef\u4ee5\u901a\u8fc7\u8ba9 x \u5148\u540e\u4e0e\u53f3\u3001\u4e0b\u3001\u53f3\u4e09\u4e2a\u65b9\u5411\u7684\u6570\u5b57\u4ea4\u6362\u6210\u529f\u5f97\u5230\u6b63\u786e\u6392\u5217\u3002 \u4ea4\u6362\u8fc7\u7a0b\u5982\u4e0b\uff1a 1 2 3 1 2 3 1 2 3 1 2 3 x 4 6 4 x 6 4 5 6 4 5 6 7 5 8 7 5 8 7 x 8 7 8 x \u73b0\u5728\uff0c\u7ed9\u4f60\u4e00\u4e2a\u521d\u59cb\u7f51\u683c\uff0c\u8bf7\u4f60\u6c42\u51fa\u5f97\u5230\u6b63\u786e\u6392\u5217\u81f3\u5c11\u9700\u8981\u8fdb\u884c\u591a\u5c11\u6b21\u4ea4\u6362\u3002 \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u5360\u4e00\u884c\uff0c\u5c06 3\u00d733\u00d73 \u7684\u521d\u59cb\u7f51\u683c\u63cf\u7ed8\u51fa\u6765\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u521d\u59cb\u7f51\u683c\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 x 4 6 7 5 8 \u5219\u8f93\u5165\u4e3a\uff1a 1 2 3 x 4 6 7 5 8 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u5360\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u89e3\u51b3\u65b9\u6848\uff0c\u5219\u8f93\u51fa \u22121\u22121\u3002 \u8f93\u5165\u6837\u4f8b\uff1a 2 3 4 1 5 x 7 6 8 \u8f93\u51fa\u6837\u4f8b 19 code #include <iostream> #include <algorithm> #include <queue> #include <unordered_map> using namespace std; int bfs(string start) { int dx[4] = {-1, 0, 1, 0}, dy[4] = {0, 1, 0 , -1}; string end = \"12345678x\"; queue<string> q; q.push(start); unordered_map<string, int> dist; dist[start] = 0; while (!q.empty()) { auto t = q.front(); q.pop(); int distance = dist[t]; if (t == end) return distance; int k = t.find('x'); int x = k / 3, y = k % 3; for (int i = 0; i < 4; i++) { int a = x + dx[i], b = y + dy[i]; if (a >= 0 && a < 3 && b >= 0 && b < 3) { swap(t[k], t[a * 3 + b]); if (!dist[t]) { dist[t] = distance + 1; q.push(t); } swap(t[k], t[a * 3 + b]); } } } return -1; } int main() { string start = \"\"; for (int i = 0; i < 9; i++) { char c; cin >> c; start += c; } cout << bfs(start); return 0; } \u56fe\u7684\u6df1\u5ea6\u4f18\u5148\u904d\u5386 \u6811\u7684\u91cd\u5fc3 \u7ed9\u5b9a\u4e00\u9897\u6811\uff0c\u6811\u4e2d\u5305\u542b n \u4e2a\u7ed3\u70b9\uff08\u7f16\u53f7 1\u223cn\uff09\u548c n\u22121 \u6761\u65e0\u5411\u8fb9\u3002 \u8bf7\u4f60\u627e\u5230\u6811\u7684\u91cd\u5fc3\uff0c\u5e76\u8f93\u51fa\u5c06\u91cd\u5fc3\u5220\u9664\u540e\uff0c\u5269\u4f59\u5404\u4e2a\u8fde\u901a\u5757\u4e2d\u70b9\u6570\u7684\u6700\u5927\u503c\u3002 \u91cd\u5fc3\u5b9a\u4e49\uff1a\u91cd\u5fc3\u662f\u6307\u6811\u4e2d\u7684\u4e00\u4e2a\u7ed3\u70b9\uff0c\u5982\u679c\u5c06\u8fd9\u4e2a\u70b9\u5220\u9664\u540e\uff0c\u5269\u4f59\u5404\u4e2a\u8fde\u901a\u5757\u4e2d\u70b9\u6570\u7684\u6700\u5927\u503c\u6700\u5c0f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u88ab\u79f0\u4e3a\u6811\u7684\u91cd\u5fc3\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 n\uff0c\u8868\u793a\u6811\u7684\u7ed3\u70b9\u6570\u3002 \u63a5\u4e0b\u6765 n\u22121 \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 a \u548c b\uff0c\u8868\u793a\u70b9 a \u548c\u70b9 b \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u8fb9\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570 m\uff0c\u8868\u793a\u5c06\u91cd\u5fc3\u5220\u9664\u540e\uff0c\u5269\u4f59\u5404\u4e2a\u8fde\u901a\u5757\u4e2d\u70b9\u6570\u7684\u6700\u5927\u503c\u3002 \u6570\u636e\u8303\u56f4 1\u2264n\u226410^5 \u8f93\u5165\u6837\u4f8b 9 1 2 1 7 1 4 2 8 2 5 4 3 3 9 4 6 \u8f93\u51fa\u6837\u4f8b\uff1a 4 #include <iostream> #include <cstring> #include <cstdio> using namespace std; const int N = 1e5 + 10, M = 2 * N; int h[N], e[M], ne[M], idx; bool st[N]; int ans = N, n; void add(int a, int b) { e[idx] = b, ne[idx] = h[a], h[a] = idx++; } int dfs(int u) { int sum = 1, res = 0; st[u] = true; for (int i = h[u]; i != -1; i = ne[i]) { int j = e[i]; if (!st[j]) { int s = dfs(j); res = max(res, s); sum += s; } } res = max(res, n - sum); ans = min(ans, res); return sum; } int main() { cin >> n; memset(h, -1, sizeof h); for (int i = 0; i < n - 1; i++) { int a, b; scanf(\"%d %d\", &a, &b); add(a, b), add(b, a); } dfs(1); cout << ans; return 0; } \u56fe\u7684\u5e7f\u5ea6\u4f18\u5148\u904d\u5386 \u56fe\u4e2d\u70b9\u7684\u5c42\u6b21 \u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\u3002 \u6240\u6709\u8fb9\u7684\u957f\u5ea6\u90fd\u662f 1\uff0c\u70b9\u7684\u7f16\u53f7\u4e3a 1\u223cn\u3002 \u8bf7\u4f60\u6c42\u51fa 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5982\u679c\u4ece 1 \u53f7\u70b9\u65e0\u6cd5\u8d70\u5230 n\u53f7\u70b9\uff0c\u8f93\u51fa \u22121\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 mm \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 a \u548c b\uff0c\u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece a \u8d70\u5230 b \u7684\u957f\u5ea6\u4e3a 1 \u7684\u8fb9\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002 \u6570\u636e\u8303\u56f4 1\u2264n,m\u226410^5 \u8f93\u5165\u6837\u4f8b\uff1a 4 5 1 2 2 3 3 4 1 3 1 4 \u8f93\u51fa\u6837\u4f8b\uff1a 1 #include <iostream> #include <cstdio> #include <cstring> using namespace std; const int N = 1e5 + 10; int h[N], e[N], ne[N], idx; int d[N], hh, tt, q[N], n, m; void add(int a, int b) { e[idx] = b, ne[idx] = h[a], h[a] = idx++; } int bfs() { memset(d, -1, sizeof d); q[0] = 1; d[1] = 0; while (hh <= tt) { auto t = q[hh++]; for (int i = h[t]; i != -1; i = ne[i]) { int j = e[i]; if (d[j] == -1) { d[j] = d[t] + 1; q[++tt] = j; } } } return d[n]; } int main() { cin >> n >> m; memset(h, -1, sizeof h); while (m--) { int a, b; scanf(\"%d %d\", &a, &b); add(a, b); } cout << bfs(); return 0; } n\u7687\u540e \u622a\u8ddd 1111 \u56fe\uff1a 1.\u90bb\u95f4\u77e9\u9635 \u4e8c\u7ef4\u6570\u7ec4 # a -> b g[a][b] 2.\u90bb\u95f4\u8868 \u5f88\u591a\u4e2a\u5355\u94fe\u8868 1 -> 3 -> 4 2 -> 3 -> 4 5 -> 4 -> 3 e :\u503c h \u5934 ne next idx \u8fb9 ans = answer res = result vis = visited dx, dy \u65b9\u5411\u5411\u91cf stk = stack q = queue dummy \u94fe\u8868\u865a\u62df\u5934\u8282\u70b9 st state \u6709\u5411\u56fe\u624d\u6709\u62d3\u6251\u5e8f\u5217 \u6709\u5411\u65e0\u73af\u56fe\uff1a\u62d3\u6251\u56fe 1->2 1->3 2->3 1 2 3 \u8d77\u70b9\u5728\u7ec8\u70b9\u524d\u9762 1 \u5165\u5ea6 \u6709\u51e0\u70b9\u8fb9\u6307\u5411\u4ed6 0 \u51fa\u5ea6 \u6709\u51e0\u70b9\u8fb9\u6307\u51fa\u53bb 2 \u6709\u5411\u56fe\u7684\u62d3\u6251\u5e8f\u5217 \u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u70b9\u7684\u7f16\u53f7\u662f 1 \u5230 n\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\u3002 \u8bf7\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u8be5\u6709\u5411\u56fe\u7684\u62d3\u6251\u5e8f\u5217\uff0c\u5982\u679c\u62d3\u6251\u5e8f\u5217\u4e0d\u5b58\u5728\uff0c\u5219\u8f93\u51fa \u22121\u3002 \u82e5\u4e00\u4e2a\u7531\u56fe\u4e2d\u6240\u6709\u70b9\u6784\u6210\u7684\u5e8f\u5217 A \u6ee1\u8db3\uff1a\u5bf9\u4e8e\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9 (x,y)\uff0cx \u5728 A \u4e2d\u90fd\u51fa\u73b0\u5728 y \u4e4b\u524d\uff0c\u5219\u79f0 A \u662f\u8be5\u56fe\u7684\u4e00\u4e2a\u62d3\u6251\u5e8f\u5217\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 m \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 x \u548c y\uff0c\u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece\u70b9 x \u5230\u70b9 y \u7684\u6709\u5411\u8fb9 (x,y)\u3002 \u8f93\u51fa\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5982\u679c\u5b58\u5728\u62d3\u6251\u5e8f\u5217\uff0c\u5219\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u5408\u6cd5\u7684\u62d3\u6251\u5e8f\u5217\u5373\u53ef\u3002 \u5426\u5219\u8f93\u51fa \u22121\u3002 \u6570\u636e\u8303\u56f4 1\u2264n,m\u226410^5 \u8f93\u5165\u6837\u4f8b\uff1a 3 3 1 2 2 3 1 3 \u8f93\u51fa\u6837\u4f8b\uff1a 1 2 3 #include <iostream> #include <cstdio> #include <cstring> using namespace std; const int N = 1e5 + 10; int h[N], e[N], ne[N], idx; int q[N], hh, tt = -1, d[N], n, m; void add(int a, int b) { e[idx] = b, ne[idx] = h[a], h[a] = idx++; } bool tup_sort() { for (int i = 1; i <= n; i++) { if (!d[i]) q[++tt] = i; } while (hh <= tt) { auto t = q[hh++]; for (int i = h[t]; i != -1; i = ne[i]) { int j = e[i]; d[j]--; if (!d[j]) q[++tt] = j; } } return tt == n - 1; } int main() { cin >> n >> m; memset(h, -1, sizeof h); while (m--) { int a, b; scanf(\"%d %d\", &a, &b); add(a, b), d[b]++; } if (tup_sort()) { for (int i = 0; i < n; i++) printf(\"%d \", q[i]); } else cout << -1; return 0; } \u6700\u77ed\u8def \u6700\u77ed\u8def 1\u5355\u6e90\u6700\u77ed\u8def \u4e00\u4e2a\u70b9\u5230\u5176\u4ed6\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def 1.1 n:\u70b9\u7684\u6570\u91cf m \u8fb9\u7684\u6570\u91cf \u6240\u6709\u8fb9\u6743\u90fd\u662f\u6b63\u6570\uff08\u6734\u7d20Dijkstra\u7b97\u6cd5 n*n \u7a20\u5bc6\u56fe\u3001\u5806\u4f18\u5316\u7248\u7684Dijkstra\u7b97\u6cd5 mlogn \uff09 1.2 \u5b58\u5728\u8d1f\u6743\u8fb9 \uff08Bellman-Ford nm, SPFA m \u6700\u574f nm\uff09 2\u591a\u6e90\u6c47\u6700\u77ed\u8def\uff1a \u8d77\u70b9 \u7ec8\u70b9 \u4e0d\u786e\u5b9a Floyd n^3 \u7a20\u5bc6\u56fe \u9886\u63a5\u77e9\u9635 \u6734\u7d20dijkstra-Dijkstra\u6c42\u6700\u77ed\u8def I \u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\uff0c\u6240\u6709\u8fb9\u6743\u5747\u4e3a\u6b63\u503c\u3002 \u8bf7\u4f60\u6c42\u51fa 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5982\u679c\u65e0\u6cd5\u4ece 1 \u53f7\u70b9\u8d70\u5230 n \u53f7\u70b9\uff0c\u5219\u8f93\u51fa \u22121\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 m \u884c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 x,y,z \u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece\u70b9 x \u5230\u70b9 y \u7684\u6709\u5411\u8fb9\uff0c\u8fb9\u957f\u4e3a z\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002 \u5982\u679c\u8def\u5f84\u4e0d\u5b58\u5728\uff0c\u5219\u8f93\u51fa \u22121\u3002 \u6570\u636e\u8303\u56f4 1\u2264n\u2264500, 1\u2264m\u226410^5, \u56fe\u4e2d\u6d89\u53ca\u8fb9\u957f\u5747\u4e0d\u8d85\u8fc710000\u3002 \u8f93\u5165\u6837\u4f8b\uff1a 3 3 1 2 2 2 3 1 1 3 4 \u8f93\u51fa\u6837\u4f8b\uff1a 3 o(n^2 + m) #include <iostream> #include <cstring> #include <cstdio> using namespace std; const int N = 510, INF = 0x3f3f3f3f; int g[N][N], d[N], n, m; bool st[N]; int dijkstra() { memset(d, 0x3f, sizeof d); d[1] = 0; for (int i = 0; i < n; i++) { int t = -1; for (int j = 1; j <= n; j++) { if (!st[j] && (t == -1 || d[j] < d[t])) t = j; } st[t] = true; for (int j = 1; j <= n; j++) d[j] = min(d[j], d[t] + g[t][j]); } if (d[n] == INF) return -1; return d[n]; } int main() { cin >> n >> m; int a, b, w; memset(g, 0x3f, sizeof g); while (m--) { scanf(\"%d%d%d\", &a, &b, &w); g[a][b] = min(g[a][b], w); } cout << dijkstra(); return 0; } \u5806\u4f18\u5316-Dijkstra\u6c42\u6700\u77ed\u8def II \u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\uff0c\u6240\u6709\u8fb9\u6743\u5747\u4e3a\u975e\u8d1f\u503c\u3002 \u8bf7\u4f60\u6c42\u51fa 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5982\u679c\u65e0\u6cd5\u4ece 1 \u53f7\u70b9\u8d70\u5230 n \u53f7\u70b9\uff0c\u5219\u8f93\u51fa \u22121\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 m \u884c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 x,y,z\uff0c\u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece\u70b9 x \u5230\u70b9 y \u7684\u6709\u5411\u8fb9\uff0c\u8fb9\u957f\u4e3a z\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002 \u5982\u679c\u8def\u5f84\u4e0d\u5b58\u5728\uff0c\u5219\u8f93\u51fa \u22121\u3002 \u6570\u636e\u8303\u56f4 1\u2264n,m\u22641.5\u00d71e5, \u56fe\u4e2d\u6d89\u53ca\u8fb9\u957f\u5747\u4e0d\u5c0f\u4e8e 0\uff0c\u4e14\u4e0d\u8d85\u8fc7 10000\u3002 \u6570\u636e\u4fdd\u8bc1\uff1a\u5982\u679c\u6700\u77ed\u8def\u5b58\u5728\uff0c\u5219\u6700\u77ed\u8def\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 1e9\u3002 \u8f93\u5165\u6837\u4f8b\uff1a 3 3 1 2 2 2 3 1 1 3 4 \u8f93\u51fa\u6837\u4f8b\uff1a 3 mlogn #include <bits/stdc++.h> using namespace std; const int N = 150010, INF = 0x3f3f3f3f; typedef pair<int, int> PII; int h[N], e[N], ne[N], w[N], idx, d[N], n, m; bool st[N]; void add(int a, int b, int c) { w[idx] = c, e[idx] = b, ne[idx] = h[a], h[a] = idx++; } int dijkstra() { memset(d, 0x3f, sizeof d); priority_queue<PII, vector<PII>, greater<PII>> q; q.push({0, 1}); d[1] = 0; while (!q.empty()) { auto t = q.top(); q.pop(); int distance = t.first, ver = t.second; if (st[ver]) continue; st[ver] = true; for (int i = h[ver]; i != -1; i = ne[i]) { int j = e[i]; if (distance + w[i] < d[j]) { d[j] = distance + w[i]; q.push({d[j], j}); } } } if (d[n] == INF) return -1; return d[n]; } int main() { cin >> n >> m; int a, b, c; memset(h, -1, sizeof h); while (m--) { scanf(\"%d%d%d\", &a, &b, &c); add(a, b, c); } cout << dijkstra(); return 0; } Bellman-ford \u7b97\u6cd5-\u6709\u8fb9\u6570\u9650\u5236\u7684\u6700\u77ed\u8def \u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\uff0c \u8fb9\u6743\u53ef\u80fd\u4e3a\u8d1f\u6570 \u3002 \u8bf7\u4f60\u6c42\u51fa\u4ece 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u591a\u7ecf\u8fc7 k \u6761\u8fb9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5982\u679c\u65e0\u6cd5\u4ece 1 \u53f7\u70b9\u8d70\u5230 n \u53f7\u70b9\uff0c\u8f93\u51fa impossible \u3002 \u6ce8\u610f\uff1a\u56fe\u4e2d\u53ef\u80fd \u5b58\u5728\u8d1f\u6743\u56de\u8def \u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 n,m,k\u3002 \u63a5\u4e0b\u6765 m \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 x,y,z\uff0c\u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece\u70b9 x \u5230\u70b9 y \u7684\u6709\u5411\u8fb9\uff0c\u8fb9\u957f\u4e3a z\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u4ece 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u591a\u7ecf\u8fc7 k \u6761\u8fb9\u7684\u6700\u77ed\u8ddd\u79bb\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u8def\u5f84\uff0c\u5219\u8f93\u51fa impossible \u3002 \u6570\u636e\u8303\u56f4 1\u2264n,k\u2264500, 1\u2264m\u226410000, \u4efb\u610f\u8fb9\u957f\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 10000\u3002 \u8f93\u5165\u6837\u4f8b\uff1a 3 3 1 1 2 1 2 3 1 1 3 3 \u8f93\u51fa\u6837\u4f8b\uff1a 3 bellman_ford o(nm) \u5141\u8bb8\u6709\u8d1f\u6743\u8fb9 \u7ecf\u8fc71\u6761\u8fb9\u6700\u77ed \u7ecf\u8fc72\u6761\u8fb9\u6700\u77ed .... #include <iostream> #include <cstring> #include <cstdio> using namespace std; const int N = 510, M = 1e5 + 10; struct Edge { int a, b, w; } e[M]; int dist[N], back[N]; int n, m, k; void bellman_ford() { memset(dist, 0x3f, sizeof dist); dist[1] = 0; for (int i = 0; i < k; i++) { memcpy(back, dist, sizeof dist); for (int j = 0; j < m; j++) { int a = e[j].a, b = e[j].b, w = e[j].w; dist[b] = min(dist[b], back[a] + w); } } if (dist[n] > 0x3f3f3f / 2) puts(\"impossible\"); else printf(\"%d\", dist[n]); } int main() { scanf(\"%d%d%d\", &n, &m, &k); for (int i = 0; i < m; i++) { int a, b, w; scanf(\"%d%d%d\", &a, &b, &w); e[i] = {a, b, w}; } bellman_ford(); return 0; } dijkstra \u4e0d\u80fd\u8d1f\u8fb9 \u4e3a\u4e86\u907f\u514d\u5982\u4e0b\u7684\u4e32\u8054\u60c5\u51b5\uff0c \u5728\u8fb9\u6570\u9650\u5236\u4e3a\u4e00\u6761\u7684\u60c5\u51b5\u4e0b\uff0c\u8282\u70b93\u7684\u8ddd\u79bb\u5e94\u8be5\u662f3\uff0c\u4f46\u662f\u7531\u4e8e\u4e32\u8054\u60c5\u51b5\uff0c\u5229\u7528\u672c\u8f6e\u66f4\u65b0\u7684\u8282\u70b92\u66f4\u65b0\u4e86\u8282\u70b93\u7684\u8ddd\u79bb\uff0c\u6240\u4ee5\u73b0\u5728\u8282\u70b93\u7684\u8ddd\u79bb\u662f2\u3002 1 2 1 2 3 1 1 3 3 Bellman-Ford\uff1a\u4e0d\u80fd\u6709\u8d1f\u73af spfa \u6700\u77ed\u8def -> bellman_ford\u7684\u961f\u5217\u4f18\u5316 \u7ed9\u5b9a\u4e00\u4e2a nn \u4e2a\u70b9 mm \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\uff0c \u8fb9\u6743\u53ef\u80fd\u4e3a\u8d1f\u6570 \u3002 \u8bf7\u4f60\u6c42\u51fa 11 \u53f7\u70b9\u5230 nn \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5982\u679c\u65e0\u6cd5\u4ece 11 \u53f7\u70b9\u8d70\u5230 nn \u53f7\u70b9\uff0c\u5219\u8f93\u51fa impossible \u3002 \u6570\u636e\u4fdd\u8bc1\u4e0d\u5b58\u5728\u8d1f\u6743\u56de\u8def\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 nn \u548c mm\u3002 \u63a5\u4e0b\u6765 mm \u884c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 x,y,zx,y,z\uff0c\u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece\u70b9 xx \u5230\u70b9 yy \u7684\u6709\u5411\u8fb9\uff0c\u8fb9\u957f\u4e3a zz\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a 11 \u53f7\u70b9\u5230 nn \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002 \u5982\u679c\u8def\u5f84\u4e0d\u5b58\u5728\uff0c\u5219\u8f93\u51fa impossible \u3002 \u6570\u636e\u8303\u56f4 1\u2264n,m\u22641051\u2264n,m\u2264105, \u56fe\u4e2d\u6d89\u53ca\u8fb9\u957f\u7edd\u5bf9\u503c\u5747\u4e0d\u8d85\u8fc7 10000 \u8f93\u5165\u6837\u4f8b\uff1a 3 3 1 2 5 2 3 -3 1 3 4 \u8f93\u51fa\u6837\u4f8b\uff1a 2 st:\u662f\u5426\u5728\u961f\u5217\u4e2d #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 10; int h[N], e[N], ne[N], w[N], idx, n, m, d[N]; bool st[N]; void add(int a, int b, int c) { w[idx] = c, e[idx] = b, ne[idx] = h[a], h[a] = idx++; } void spfa() { memset(d, 0x3f, sizeof d); queue<int> q; q.push(1); d[1] = 0; st[1] = true; while (q.size()) { auto t = q.front(); q.pop(); st[t] = false; for (int i = h[t]; i != -1; i = ne[i]) { int j = e[i]; if (d[t] + w[i] < d[j]) { d[j] = d[t] + w[i]; if (!st[j]) { st[j] = true; q.push(j); } } } } if (d[n] == 0x3f3f3f3f) puts(\"impossible\"); else cout << d[n]; } int main() { cin >> n >> m; memset(h, -1, sizeof h); int a, b, c; while (m--) { scanf(\"%d%d%d\", &a, &b, &c); add(a, b, c); } spfa(); return 0; } 3f3f3f3f \u6700\u5c0f\u751f\u6210\u6811 1\u666e\u5229\u59c6\u7b97\u6cd5prim \u7a20\u5bc6 \u6734\u7d20 n^2 \u7a00\u758f \u5806\u4f18\u5316 mlogn 2\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5 Kruskal \u7a00\u758f mlogm \u4e8c\u5206\u56fe \u67d3\u8272\u6cd5 n + m \u5308\u7259\u5229\u7b97\u6cd5 \u6700\u574f mn \u4e00\u822c\u8fdc\u5c0f\u4e8eo(mn) \u6700\u5c0f\u751f\u6210\u6811\uff1an\u4e2a\u57ce\u5e02\u5efa\u516c\u8def \u6700\u77ed \u4e8c\u5206\u56fe\uff1a\u5f53\u4e14\u4ec5\u5f53\u56fe\u4e2d\u4e0d\u5947\u6570\u73af\uff08\u73af\u6709\u5947\u6570\u6761\u8fb9\uff09 \u4e8c\u5206\u56fe\uff1a\u96c6\u5408\u96c6\u5408\u4e4b\u95f4\u6709\u8fb9 \u96c6\u5408\u5185\u90e8\u6ca1\u6709\u8fb9 \u7b97\u6cd5\u5bfc\u8bba\uff1a\u7b97\u6cd5\u8bc1\u660e prim\u7b97\u6cd5\uff1a\u66f4\u65b0\u6bcf\u4e2a\u503c \u5148\u66f4\u65b0\u540e\u9762\u5c31\u4e0d\u4f1a\u66f4\u65b0\u4e86 \u6700\u5c0f\u751f\u6210\u6811 \u4e00\u4e2a\u8fde\u901a\u56fe\u53ef\u80fd\u6709\u591a\u4e2a\u751f\u6210\u6811\u3002\u5f53\u56fe\u4e2d\u7684\u8fb9\u5177\u6709\u6743\u503c\u65f6\uff0c\u603b\u4f1a\u6709\u4e00\u4e2a\u751f\u6210\u6811\u7684\u8fb9\u7684\u6743\u503c\u4e4b\u548c\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8e\u5176\u5b83\u751f\u6210\u6811\u7684\u8fb9\u7684\u6743\u503c\u4e4b\u548c Prim\u7b97\u6cd5\u6c42\u6700\u5c0f\u751f\u6210\u6811 \u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\uff0c\u8fb9\u6743\u53ef\u80fd\u4e3a\u8d1f\u6570\u3002 \u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u6811\u8fb9\u6743\u91cd\u4e4b\u548c\uff0c\u5982\u679c\u6700\u5c0f\u751f\u6210\u6811\u4e0d\u5b58\u5728\u5219\u8f93\u51fa impossible \u3002 \u7ed9\u5b9a\u4e00\u5f20\u8fb9\u5e26\u6743\u7684\u65e0\u5411\u56fe G=(V,E)\uff0c\u5176\u4e2d V \u8868\u793a\u56fe\u4e2d\u70b9\u7684\u96c6\u5408\uff0cE \u8868\u793a\u56fe\u4e2d\u8fb9\u7684\u96c6\u5408\uff0cn=|V|\uff0cm=|E|\u3002 \u7531 V \u4e2d\u7684\u5168\u90e8 n \u4e2a\u9876\u70b9\u548c E \u4e2d n\u22121 \u6761\u8fb9\u6784\u6210\u7684\u65e0\u5411\u8fde\u901a\u5b50\u56fe\u88ab\u79f0\u4e3a G \u7684\u4e00\u68f5\u751f\u6210\u6811\uff0c\u5176\u4e2d\u8fb9\u7684\u6743\u503c\u4e4b\u548c\u6700\u5c0f\u7684\u751f\u6210\u6811\u88ab\u79f0\u4e3a\u65e0\u5411\u56fe G \u7684\u6700\u5c0f\u751f\u6210\u6811\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 m \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 u,v,w\u8868\u793a\u70b9 u\u548c\u70b9 v \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u6743\u503c\u4e3a w \u7684\u8fb9\u3002 \u8f93\u51fa\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u82e5\u5b58\u5728\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5219\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c0f\u751f\u6210\u6811\u7684\u6811\u8fb9\u6743\u91cd\u4e4b\u548c\uff0c\u5982\u679c\u6700\u5c0f\u751f\u6210\u6811\u4e0d\u5b58\u5728\u5219\u8f93\u51fa impossible \u3002 \u6570\u636e\u8303\u56f4 1\u2264n\u2264500, 1\u2264m\u226410^5, \u56fe\u4e2d\u6d89\u53ca\u8fb9\u7684\u8fb9\u6743\u7684\u7edd\u5bf9\u503c\u5747\u4e0d\u8d85\u8fc7 10000\u3002 \u8f93\u5165\u6837\u4f8b\uff1a 4 5 1 2 1 1 3 2 1 4 3 2 3 2 3 4 4 \u8f93\u51fa\u6837\u4f8b\uff1a 6 code o(n*n + m) \u7a20\u5bc6\u56fe #include <iostream> #include <cstring> using namespace std; const int N = 510, INF = 0x3f3f3f3f; int g[N][N], dist[N], n, m, a, b, w; bool st[N]; int prim() { int res = 0; memset(dist, 0x3f, sizeof dist); for (int i = 0; i < n; i++) { int t = -1; // \u627e\u5230\u8ddd\u79bb\u96c6\u5408\u6700\u8fd1\u7684\u4e00\u4e2a\u4e14\u6ca1\u6709\u8bbf\u95ee\u8fc7\u7684\u70b9 for (int j = 1; j <= n; j++) { if (!st[j] && (t == -1 || dist[j] < dist[t])) t = j; } if (i && dist[t] == INF) return INF; if (i) res += dist[t]; st[t] = true; // a -> b -> c c\u662fb\u7684\u57fa\u7840\u6765\u7684\uff0c \u6240\u4ee5\u9700\u8981\u66f4\u65b0\u503c // \u4e3a\u4e0b\u6b21\u627e\u6700\u8fd1\u7684\u70b9\u505a\u51c6\u5907\uff1a\u66f4\u65b0\u6240\u6709\u70b9\u5230\u96c6\u5408\u7684\u8ddd\u79bb for (int j = 1; j <= n; j++) dist[j] = min(dist[j], g[t][j]); } return res; } int main() { cin >> n >> m; for (int i = 1; i <= n; i++) { for (int j = 1; j <= n; j++) if (i != j) g[i][j] = INF; } while (m--) { cin >> a >> b >> w; g[a][b] = g[b][a] = min(g[a][b], w); } int res = prim(); if (res == INF) puts(\"impossible\"); else cout << res; return 0; } st[t] = true; Kruskal\u7b97\u6cd5\u6c42\u6700\u5c0f\u751f\u6210\u6811 \u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\uff0c\u8fb9\u6743\u53ef\u80fd\u4e3a\u8d1f\u6570\u3002 \u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u6811\u8fb9\u6743\u91cd\u4e4b\u548c\uff0c\u5982\u679c\u6700\u5c0f\u751f\u6210\u6811\u4e0d\u5b58\u5728\u5219\u8f93\u51fa impossible \u3002 \u7ed9\u5b9a\u4e00\u5f20\u8fb9\u5e26\u6743\u7684\u65e0\u5411\u56fe G=(V,E)\uff0c\u5176\u4e2d V \u8868\u793a\u56fe\u4e2d\u70b9\u7684\u96c6\u5408\uff0cE \u8868\u793a\u56fe\u4e2d\u8fb9\u7684\u96c6\u5408\uff0cn=|V|\uff0cm=|E|\u3002 \u7531 V \u4e2d\u7684\u5168\u90e8 n \u4e2a\u9876\u70b9\u548c EE \u4e2d n\u22121 \u6761\u8fb9\u6784\u6210\u7684\u65e0\u5411\u8fde\u901a\u5b50\u56fe\u88ab\u79f0\u4e3a G \u7684\u4e00\u68f5\u751f\u6210\u6811\uff0c\u5176\u4e2d\u8fb9\u7684\u6743\u503c\u4e4b\u548c\u6700\u5c0f\u7684\u751f\u6210\u6811\u88ab\u79f0\u4e3a\u65e0\u5411\u56fe G \u7684\u6700\u5c0f\u751f\u6210\u6811\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 m \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 u,v,w\uff0c\u8868\u793a\u70b9 u \u548c\u70b9 v \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u6743\u503c\u4e3a w \u7684\u8fb9\u3002 \u8f93\u51fa\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u82e5\u5b58\u5728\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5219\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c0f\u751f\u6210\u6811\u7684\u6811\u8fb9\u6743\u91cd\u4e4b\u548c\uff0c\u5982\u679c\u6700\u5c0f\u751f\u6210\u6811\u4e0d\u5b58\u5728\u5219\u8f93\u51fa impossible \u3002 \u6570\u636e\u8303\u56f4 1\u2264n\u22641e5, 1\u2264m\u22642\u22171e5, \u56fe\u4e2d\u6d89\u53ca\u8fb9\u7684\u8fb9\u6743\u7684\u7edd\u5bf9\u503c\u5747\u4e0d\u8d85\u8fc7 1000\u3002 \u8f93\u5165\u6837\u4f8b\uff1a 4 5 1 2 1 1 3 2 1 4 3 2 3 2 3 4 4 \u8f93\u51fa\u6837\u4f8b\uff1a 6 code mlogm \u7a00\u758f\u56fe #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 10, M = 2 * N, INF = 0x3f3f3f3f; struct Edge { int a, b, w; bool operator<(const Edge &E) const { return w < E.w; } }e[M]; int n, m, p[N]; int find(int x) { if (p[x] != x) p[x] = find(p[x]); return p[x]; } int kurskal() { int cnt = 0, res = 0; for (int i = 0; i < m; i++) { int a = e[i].a, b = e[i].b, w = e[i].w; if (find(a) != find(b)) { p[find(a)] = p[find(b)]; cnt++; res += w; } } if (cnt < n - 1) return INF; return res; } int main() { cin >> n >> m; for (int i = 1; i <= n; i++) p[i] = i; int a, b, c; for (int i = 0; i < m; i++) { cin >> a >> b >> c; e[i] = {a, b, c}; } sort(e, e + m); int res = kurskal(); if (res == INF) puts(\"impossible\"); else cout << res; return 0; } m for (int i = 0; i < m; i++) { cin >> a >> b >> c; e[i] = {a, b, c}; } if (find(a) != find(b)) { \u4e8c\u5206\u56fe \u67d3\u8272\u6cd5\u5224\u5b9a\u4e8c\u5206\u56fe \u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\u3002 \u8bf7\u4f60\u5224\u65ad\u8fd9\u4e2a\u56fe\u662f\u5426\u662f\u4e8c\u5206\u56fe\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 m \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 u \u548c v\uff0c\u8868\u793a\u70b9 u \u548c\u70b9 v \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u8fb9\u3002 \u8f93\u51fa\u683c\u5f0f \u5982\u679c\u7ed9\u5b9a\u56fe\u662f\u4e8c\u5206\u56fe\uff0c\u5219\u8f93\u51fa Yes \uff0c\u5426\u5219\u8f93\u51fa No \u3002 \u6570\u636e\u8303\u56f4 1\u2264n,m\u226410^5 \u8f93\u5165\u6837\u4f8b\uff1a 4 4 1 3 1 4 2 3 2 4 \u8f93\u51fa\u6837\u4f8b\uff1a Yes code i - j i j\u5c5e\u4e8e\u4e0d\u540c\u7684\u96c6\u5408 o(n+m) #include <iostream> #include <cstring> using namespace std; const int N = 1e5 + 10, M = 2 * N; int h[N], e[M], ne[M], idx; int color[N], n, m; void add(int a, int b) { e[idx] = b, ne[idx] = h[a], h[a] = idx++; } bool dfs(int u, int c) { color[u] = c; for (int i = h[u]; i != -1; i = ne[i]) { int j = e[i]; if (!color[j] && !dfs(j, 3 - c)) return false; else if (color[j] == c) return false; } return true; } int main() { cin >> n >> m; memset(h, -1, sizeof h); while (m--) { int a, b; cin >> a >> b; add(a, b), add(b, a); } bool flag = true; for (int i = 1; i <= n; i++) { if (!color[i] && !dfs(i, 1)) { flag = false; break; } } if (!flag) puts(\"No\"); else puts(\"Yes\"); return 0; } \u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u5176\u4e2d\u5de6\u534a\u90e8\u5305\u542b n1 \u4e2a\u70b9\uff08\u7f16\u53f7 1\u223cn1\uff09\uff0c\u53f3\u534a\u90e8\u5305\u542b n2 \u4e2a\u70b9\uff08\u7f16\u53f7 1\u223cn2\uff09\uff0c\u4e8c\u5206\u56fe\u5171\u5305\u542b m \u6761\u8fb9\u3002 \u6570\u636e\u4fdd\u8bc1\u4efb\u610f\u4e00\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u90fd\u4e0d\u53ef\u80fd\u5728\u540c\u4e00\u90e8\u5206\u4e2d\u3002 \u8bf7\u4f60\u6c42\u51fa\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u6570\u3002 \u4e8c\u5206\u56fe\u7684\u5339\u914d\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u5206\u56fe G\uff0c\u5728 G \u7684\u4e00\u4e2a\u5b50\u56fe M \u4e2d\uff0cM \u7684\u8fb9\u96c6 {E}\u4e2d\u7684\u4efb\u610f\u4e24\u6761\u8fb9\u90fd\u4e0d\u4f9d\u9644\u4e8e\u540c\u4e00\u4e2a\u9876\u70b9\uff0c\u5219\u79f0 M \u662f\u4e00\u4e2a\u5339\u914d\u3002 \u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\uff1a\u6240\u6709\u5339\u914d\u4e2d\u5305\u542b\u8fb9\u6570\u6700\u591a\u7684\u4e00\u7ec4\u5339\u914d\u88ab\u79f0\u4e3a\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\uff0c\u5176\u8fb9\u6570\u5373\u4e3a\u6700\u5927\u5339\u914d\u6570\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 n1\u3001 n2 \u548c m\u3002 \u63a5\u4e0b\u6765 m \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 u \u548c v\uff0c\u8868\u793a\u5de6\u534a\u90e8\u70b9\u96c6\u4e2d\u7684\u70b9 u \u548c\u53f3\u534a\u90e8\u70b9\u96c6\u4e2d\u7684\u70b9 v \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u8fb9\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u6570\u3002 \u6570\u636e\u8303\u56f4 1\u2264n1,n2\u2264500, 1\u2264u\u2264n1, 1\u2264v\u2264n2, 1\u2264m\u226410^5 \u8f93\u5165\u6837\u4f8b\uff1a 2 2 4 1 1 1 2 2 1 2 2 \u8f93\u51fa\u6837\u4f8b\uff1a 2 code o(nm) #include <iostream> #include <cstring> #include <cstdio> using namespace std; const int N = 510, M = 1e5 + 10; int h[N], e[M], ne[M], idx; int match[N]; bool st[N]; int n1, n2, m; void add(int a, int b) { e[idx] = b, ne[idx] = h[a], h[a] = idx++; } bool find(int u) { for (int i = h[u]; i != -1; i = ne[i]) { int j = e[i]; if (!st[j]) { st[j] = true; if (match[j] == 0 || find(match[j])) { match[j] = u; return true; } } } return false; } int main() { cin >> n1 >> n2 >> m; memset(h, -1, sizeof h); while (m--) { int a, b; scanf(\"%d%d\", &a, &b); add(a, b); } int res = 0; for (int i = 1; i <= n1; i++) { memset(st, false, sizeof st); if (find(i)) res++; } cout << res; return 0; } if (!match[j] || find(match[j])) match[j]\u653e\u5f03 test 1 bfs1: n m bfs2 unordered_map 2 bellman_ford: \u5fd8\u8bb0\u521d\u59cb\u5316d 3 prim: st[t] = true kruskal: for (int i = 0; i <m ;i ++) 3.4 if (match[j] || find(match[j])) {}","title":"\u641c\u7d22\u4e0e\u56fe\u8bba"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#dfs","text":"","title":"dfs"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 n\uff0c\u5c06\u6570\u5b57 1\u223cn\u6392\u6210\u4e00\u6392\uff0c\u5c06\u4f1a\u6709\u5f88\u591a\u79cd\u6392\u5217\u65b9\u6cd5\u3002 \u73b0\u5728\uff0c\u8bf7\u4f60\u6309\u7167\u5b57\u5178\u5e8f\u5c06\u6240\u6709\u7684\u6392\u5217\u65b9\u6cd5\u8f93\u51fa\u3002","title":"\u6392\u5217\u6570\u5b57"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_2","text":"\u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570 n\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_3","text":"\u6309\u5b57\u5178\u5e8f\u8f93\u51fa\u6240\u6709\u6392\u5217\u65b9\u6848\uff0c\u6bcf\u4e2a\u65b9\u6848\u5360\u4e00\u884c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_4","text":"1\u2264n\u22647","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_5","text":"3","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_6","text":"1 2 3 1 3 2 2 1 3 2 3 1 3 1 2 3 2 1","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#code","text":"#include <iostream> using namespace std; const int N = 10; int path[N]; bool st[N]; int n; void dfs(int u) { if (u == n) { for (int i = 0; i < n; i++) cout << path[i] << ' '; puts(\"\"); } for (int i = 1; i <= n; i++) { if (!st[i]) { st[i] = true; path[u] = i; dfs(u + 1); st[i] = false; } } } int main() { cin >> n; dfs(0); return 0; }","title":"code"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#n-","text":"n\u2212n\u2212\u7687\u540e\u95ee\u9898\u662f\u6307\u5c06 n \u4e2a\u7687\u540e\u653e\u5728 n\u00d7n \u7684\u56fd\u9645\u8c61\u68cb\u68cb\u76d8\u4e0a\uff0c\u4f7f\u5f97\u7687\u540e\u4e0d\u80fd\u76f8\u4e92\u653b\u51fb\u5230\uff0c\u5373\u4efb\u610f\u4e24\u4e2a\u7687\u540e\u90fd\u4e0d\u80fd\u5904\u4e8e\u540c\u4e00\u884c\u3001\u540c\u4e00\u5217\u6216\u540c\u4e00\u659c\u7ebf\u4e0a\u3002 \u73b0\u5728\u7ed9\u5b9a\u6574\u6570 nn\uff0c\u8bf7\u4f60\u8f93\u51fa\u6240\u6709\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u68cb\u5b50\u6446\u6cd5\u3002","title":"n-\u7687\u540e\u95ee\u9898"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_7","text":"\u5171\u4e00\u884c\uff0c\u5305\u542b\u6574\u6570 n\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_8","text":"\u6bcf\u4e2a\u89e3\u51b3\u65b9\u6848\u5360 n \u884c\uff0c\u6bcf\u884c\u8f93\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u5b57\u7b26\u4e32\uff0c\u7528\u6765\u8868\u793a\u5b8c\u6574\u7684\u68cb\u76d8\u72b6\u6001\u3002 \u5176\u4e2d . \u8868\u793a\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u65b9\u683c\u72b6\u6001\u4e3a\u7a7a\uff0c Q \u8868\u793a\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u65b9\u683c\u4e0a\u6446\u7740\u7687\u540e\u3002 \u6bcf\u4e2a\u65b9\u6848\u8f93\u51fa\u5b8c\u6210\u540e\uff0c\u8f93\u51fa\u4e00\u4e2a\u7a7a\u884c\u3002 \u6ce8\u610f\uff1a\u884c\u672b\u4e0d\u80fd\u6709\u591a\u4f59\u7a7a\u683c\u3002 \u8f93\u51fa\u65b9\u6848\u7684\u987a\u5e8f\u4efb\u610f\uff0c\u53ea\u8981\u4e0d\u91cd\u590d\u4e14\u6ca1\u6709\u9057\u6f0f\u5373\u53ef\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_9","text":"1\u2264n\u22649","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_10","text":"4","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_11","text":".Q.. ...Q Q... ..Q. ..Q. Q... ...Q .Q..","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#code_1","text":"2^(n^2) \u6bcf\u4e2a\u70b9\u90fd\u9700\u8981\u8bbf\u95ee\u4fe9\u6b21 #include <iostream> using namespace std; const int N = 13; char g[N][N]; int n; bool row[N], col[N], dg[2 * N], udg[2 * N]; void dfs(int x, int y, int s) { if (y == n) { x++, y = 0; } if (x == n) { if (s == n) { for (int i = 0; i < n; i++) cout << g[i] << endl; puts(\"\"); } return; } if (!row[x] && !col[y] && !dg[y - x + n] && !udg[y + x]) { row[x] = col[y] = dg[y - x + n] = udg[y + x] = true; g[x][y] = 'Q'; dfs(x, y + 1, s + 1); row[x] = col[y] = dg[y - x + n] = udg[y + x] = false; g[x][y] = '.'; } dfs(x, y + 1, s); } int main() { cin >> n; for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) g[i][j] = '.'; } dfs(0, 0, 0); return 0; } o(n^2) #include <iostream> using namespace std; const int N = 13; char g[N][N]; bool col[N], dg[2 * N], udg[2 * N]; int n; void dfs(int u) { if (u == n) { for (int i = 0; i < n; i++) { cout << g[i]; puts(\"\"); } puts(\"\"); return; } for (int i = 0; i < n; i++) { if (!col[i] && !dg[i - u + n] && !udg[u + i]) { col[i] = dg[i - u + n] = udg[u + i] = true; g[u][i] = 'Q'; dfs(u + 1); col[i] = dg[i - u + n] = udg[u + i] = false; g[u][i] = '.'; } } } int main() { cin >> n; for (int i = 0; i < n; i++) for (int j = 0; j < n; j++) g[i][j] = '.'; dfs(0); return 0; }","title":"code"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#bfs","text":"","title":"bfs"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_12","text":"\u7ed9\u5b9a\u4e00\u4e2a n\u00d7m \u7684\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4\uff0c\u7528\u6765\u8868\u793a\u4e00\u4e2a\u8ff7\u5bab\uff0c\u6570\u7ec4\u4e2d\u53ea\u5305\u542b 0 \u6216 1\uff0c\u5176\u4e2d 0 \u8868\u793a\u53ef\u4ee5\u8d70\u7684\u8def\uff0c1 \u8868\u793a\u4e0d\u53ef\u901a\u8fc7\u7684\u5899\u58c1\u3002 \u6700\u521d\uff0c\u6709\u4e00\u4e2a\u4eba\u4f4d\u4e8e\u5de6\u4e0a\u89d2 (1,1) \u5904\uff0c\u5df2\u77e5\u8be5\u4eba\u6bcf\u6b21\u53ef\u4ee5\u5411\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u4efb\u610f\u4e00\u4e2a\u65b9\u5411\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\u3002 \u8bf7\u95ee\uff0c\u8be5\u4eba\u4ece\u5de6\u4e0a\u89d2\u79fb\u52a8\u81f3\u53f3\u4e0b\u89d2 (n,m) \u5904\uff0c\u81f3\u5c11\u9700\u8981\u79fb\u52a8\u591a\u5c11\u6b21\u3002 \u6570\u636e\u4fdd\u8bc1 (1,1) \u5904\u548c (n,m) \u5904\u7684\u6570\u5b57\u4e3a 0\uff0c\u4e14\u4e00\u5b9a\u81f3\u5c11\u5b58\u5728\u4e00\u6761\u901a\u8def\u3002","title":"\u8d70\u8ff7\u5bab"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_13","text":"\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 n \u884c\uff0c\u6bcf\u884c\u5305\u542b m \u4e2a\u6574\u6570\uff080 \u6216 1\uff09\uff0c\u8868\u793a\u5b8c\u6574\u7684\u4e8c\u7ef4\u6570\u7ec4\u8ff7\u5bab\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_14","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u4ece\u5de6\u4e0a\u89d2\u79fb\u52a8\u81f3\u53f3\u4e0b\u89d2\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_15","text":"1\u2264n,m\u2264100","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_16","text":"5 5 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_17","text":"8","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#code_2","text":"#include <iostream> #include <cstring> #include <queue> using namespace std; typedef pair<int, int> PII; const int N = 110; int g[N][N], d[N][N]; int n, m; void bfs() { queue<PII> q; memset(d, -1, sizeof d); d[0][0] = 0; q.push({0, 0}); int dx[4] = {-1, 0, 1, 0}, dy[4] = {0, 1, 0, -1}; while (!q.empty()) { auto t = q.front(); q.pop(); for (int i = 0; i < 4; i++) { int x = t.first + dx[i], y = t.second + dy[i]; if (x >= 0 && x < n && y >= 0 && y < m && g[x][y] == 0 && d[x][y] == -1) { d[x][y] = d[t.first][t.second] + 1; q.push({x, y}); } } } cout << d[n - 1][m - 1]; } int main() { cin >> n >> m; for (int i = 0; i < n; i++) { for (int j = 0; j < m; j++) cin >> g[i][j]; } bfs(); return 0; }","title":"code"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_18","text":"\u5728\u4e00\u4e2a 3\u00d733\u00d73 \u7684\u7f51\u683c\u4e2d\uff0c1\u223c81\u223c8 \u8fd9 88 \u4e2a\u6570\u5b57\u548c\u4e00\u4e2a x \u6070\u597d\u4e0d\u91cd\u4e0d\u6f0f\u5730\u5206\u5e03\u5728\u8fd9 3\u00d733\u00d73 \u7684\u7f51\u683c\u4e2d\u3002 \u4f8b\u5982\uff1a 1 2 3 x 4 6 7 5 8 \u5728\u6e38\u620f\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u628a x \u4e0e\u5176\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u4e2a\u65b9\u5411\u4e4b\u4e00\u7684\u6570\u5b57\u4ea4\u6362\uff08\u5982\u679c\u5b58\u5728\uff09\u3002 \u6211\u4eec\u7684\u76ee\u7684\u662f\u901a\u8fc7\u4ea4\u6362\uff0c\u4f7f\u5f97\u7f51\u683c\u53d8\u4e3a\u5982\u4e0b\u6392\u5217\uff08\u79f0\u4e3a\u6b63\u786e\u6392\u5217\uff09\uff1a 1 2 3 4 5 6 7 8 x \u4f8b\u5982\uff0c\u793a\u4f8b\u4e2d\u56fe\u5f62\u5c31\u53ef\u4ee5\u901a\u8fc7\u8ba9 x \u5148\u540e\u4e0e\u53f3\u3001\u4e0b\u3001\u53f3\u4e09\u4e2a\u65b9\u5411\u7684\u6570\u5b57\u4ea4\u6362\u6210\u529f\u5f97\u5230\u6b63\u786e\u6392\u5217\u3002 \u4ea4\u6362\u8fc7\u7a0b\u5982\u4e0b\uff1a 1 2 3 1 2 3 1 2 3 1 2 3 x 4 6 4 x 6 4 5 6 4 5 6 7 5 8 7 5 8 7 x 8 7 8 x \u73b0\u5728\uff0c\u7ed9\u4f60\u4e00\u4e2a\u521d\u59cb\u7f51\u683c\uff0c\u8bf7\u4f60\u6c42\u51fa\u5f97\u5230\u6b63\u786e\u6392\u5217\u81f3\u5c11\u9700\u8981\u8fdb\u884c\u591a\u5c11\u6b21\u4ea4\u6362\u3002","title":"\u516b\u6570\u7801"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_19","text":"\u8f93\u5165\u5360\u4e00\u884c\uff0c\u5c06 3\u00d733\u00d73 \u7684\u521d\u59cb\u7f51\u683c\u63cf\u7ed8\u51fa\u6765\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u521d\u59cb\u7f51\u683c\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 x 4 6 7 5 8 \u5219\u8f93\u5165\u4e3a\uff1a 1 2 3 x 4 6 7 5 8","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_20","text":"\u8f93\u51fa\u5360\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u89e3\u51b3\u65b9\u6848\uff0c\u5219\u8f93\u51fa \u22121\u22121\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_21","text":"2 3 4 1 5 x 7 6 8","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_22","text":"19","title":"\u8f93\u51fa\u6837\u4f8b"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#code_3","text":"#include <iostream> #include <algorithm> #include <queue> #include <unordered_map> using namespace std; int bfs(string start) { int dx[4] = {-1, 0, 1, 0}, dy[4] = {0, 1, 0 , -1}; string end = \"12345678x\"; queue<string> q; q.push(start); unordered_map<string, int> dist; dist[start] = 0; while (!q.empty()) { auto t = q.front(); q.pop(); int distance = dist[t]; if (t == end) return distance; int k = t.find('x'); int x = k / 3, y = k % 3; for (int i = 0; i < 4; i++) { int a = x + dx[i], b = y + dy[i]; if (a >= 0 && a < 3 && b >= 0 && b < 3) { swap(t[k], t[a * 3 + b]); if (!dist[t]) { dist[t] = distance + 1; q.push(t); } swap(t[k], t[a * 3 + b]); } } } return -1; } int main() { string start = \"\"; for (int i = 0; i < 9; i++) { char c; cin >> c; start += c; } cout << bfs(start); return 0; }","title":"code"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_23","text":"","title":"\u56fe\u7684\u6df1\u5ea6\u4f18\u5148\u904d\u5386"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_24","text":"\u7ed9\u5b9a\u4e00\u9897\u6811\uff0c\u6811\u4e2d\u5305\u542b n \u4e2a\u7ed3\u70b9\uff08\u7f16\u53f7 1\u223cn\uff09\u548c n\u22121 \u6761\u65e0\u5411\u8fb9\u3002 \u8bf7\u4f60\u627e\u5230\u6811\u7684\u91cd\u5fc3\uff0c\u5e76\u8f93\u51fa\u5c06\u91cd\u5fc3\u5220\u9664\u540e\uff0c\u5269\u4f59\u5404\u4e2a\u8fde\u901a\u5757\u4e2d\u70b9\u6570\u7684\u6700\u5927\u503c\u3002 \u91cd\u5fc3\u5b9a\u4e49\uff1a\u91cd\u5fc3\u662f\u6307\u6811\u4e2d\u7684\u4e00\u4e2a\u7ed3\u70b9\uff0c\u5982\u679c\u5c06\u8fd9\u4e2a\u70b9\u5220\u9664\u540e\uff0c\u5269\u4f59\u5404\u4e2a\u8fde\u901a\u5757\u4e2d\u70b9\u6570\u7684\u6700\u5927\u503c\u6700\u5c0f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u88ab\u79f0\u4e3a\u6811\u7684\u91cd\u5fc3\u3002","title":"\u6811\u7684\u91cd\u5fc3"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_25","text":"\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 n\uff0c\u8868\u793a\u6811\u7684\u7ed3\u70b9\u6570\u3002 \u63a5\u4e0b\u6765 n\u22121 \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 a \u548c b\uff0c\u8868\u793a\u70b9 a \u548c\u70b9 b \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u8fb9\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_26","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570 m\uff0c\u8868\u793a\u5c06\u91cd\u5fc3\u5220\u9664\u540e\uff0c\u5269\u4f59\u5404\u4e2a\u8fde\u901a\u5757\u4e2d\u70b9\u6570\u7684\u6700\u5927\u503c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_27","text":"1\u2264n\u226410^5","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_28","text":"9 1 2 1 7 1 4 2 8 2 5 4 3 3 9 4 6","title":"\u8f93\u5165\u6837\u4f8b"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_29","text":"4 #include <iostream> #include <cstring> #include <cstdio> using namespace std; const int N = 1e5 + 10, M = 2 * N; int h[N], e[M], ne[M], idx; bool st[N]; int ans = N, n; void add(int a, int b) { e[idx] = b, ne[idx] = h[a], h[a] = idx++; } int dfs(int u) { int sum = 1, res = 0; st[u] = true; for (int i = h[u]; i != -1; i = ne[i]) { int j = e[i]; if (!st[j]) { int s = dfs(j); res = max(res, s); sum += s; } } res = max(res, n - sum); ans = min(ans, res); return sum; } int main() { cin >> n; memset(h, -1, sizeof h); for (int i = 0; i < n - 1; i++) { int a, b; scanf(\"%d %d\", &a, &b); add(a, b), add(b, a); } dfs(1); cout << ans; return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_30","text":"","title":"\u56fe\u7684\u5e7f\u5ea6\u4f18\u5148\u904d\u5386"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_31","text":"\u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\u3002 \u6240\u6709\u8fb9\u7684\u957f\u5ea6\u90fd\u662f 1\uff0c\u70b9\u7684\u7f16\u53f7\u4e3a 1\u223cn\u3002 \u8bf7\u4f60\u6c42\u51fa 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5982\u679c\u4ece 1 \u53f7\u70b9\u65e0\u6cd5\u8d70\u5230 n\u53f7\u70b9\uff0c\u8f93\u51fa \u22121\u3002","title":"\u56fe\u4e2d\u70b9\u7684\u5c42\u6b21"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_32","text":"\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 mm \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 a \u548c b\uff0c\u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece a \u8d70\u5230 b \u7684\u957f\u5ea6\u4e3a 1 \u7684\u8fb9\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_33","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_34","text":"1\u2264n,m\u226410^5","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_35","text":"4 5 1 2 2 3 3 4 1 3 1 4","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_36","text":"1 #include <iostream> #include <cstdio> #include <cstring> using namespace std; const int N = 1e5 + 10; int h[N], e[N], ne[N], idx; int d[N], hh, tt, q[N], n, m; void add(int a, int b) { e[idx] = b, ne[idx] = h[a], h[a] = idx++; } int bfs() { memset(d, -1, sizeof d); q[0] = 1; d[1] = 0; while (hh <= tt) { auto t = q[hh++]; for (int i = h[t]; i != -1; i = ne[i]) { int j = e[i]; if (d[j] == -1) { d[j] = d[t] + 1; q[++tt] = j; } } } return d[n]; } int main() { cin >> n >> m; memset(h, -1, sizeof h); while (m--) { int a, b; scanf(\"%d %d\", &a, &b); add(a, b); } cout << bfs(); return 0; } n\u7687\u540e \u622a\u8ddd 1111 \u56fe\uff1a 1.\u90bb\u95f4\u77e9\u9635 \u4e8c\u7ef4\u6570\u7ec4 # a -> b g[a][b] 2.\u90bb\u95f4\u8868 \u5f88\u591a\u4e2a\u5355\u94fe\u8868 1 -> 3 -> 4 2 -> 3 -> 4 5 -> 4 -> 3 e :\u503c h \u5934 ne next idx \u8fb9 ans = answer res = result vis = visited dx, dy \u65b9\u5411\u5411\u91cf stk = stack q = queue dummy \u94fe\u8868\u865a\u62df\u5934\u8282\u70b9 st state \u6709\u5411\u56fe\u624d\u6709\u62d3\u6251\u5e8f\u5217 \u6709\u5411\u65e0\u73af\u56fe\uff1a\u62d3\u6251\u56fe 1->2 1->3 2->3 1 2 3 \u8d77\u70b9\u5728\u7ec8\u70b9\u524d\u9762 1 \u5165\u5ea6 \u6709\u51e0\u70b9\u8fb9\u6307\u5411\u4ed6 0 \u51fa\u5ea6 \u6709\u51e0\u70b9\u8fb9\u6307\u51fa\u53bb 2","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_37","text":"\u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u70b9\u7684\u7f16\u53f7\u662f 1 \u5230 n\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\u3002 \u8bf7\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u8be5\u6709\u5411\u56fe\u7684\u62d3\u6251\u5e8f\u5217\uff0c\u5982\u679c\u62d3\u6251\u5e8f\u5217\u4e0d\u5b58\u5728\uff0c\u5219\u8f93\u51fa \u22121\u3002 \u82e5\u4e00\u4e2a\u7531\u56fe\u4e2d\u6240\u6709\u70b9\u6784\u6210\u7684\u5e8f\u5217 A \u6ee1\u8db3\uff1a\u5bf9\u4e8e\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9 (x,y)\uff0cx \u5728 A \u4e2d\u90fd\u51fa\u73b0\u5728 y \u4e4b\u524d\uff0c\u5219\u79f0 A \u662f\u8be5\u56fe\u7684\u4e00\u4e2a\u62d3\u6251\u5e8f\u5217\u3002","title":"\u6709\u5411\u56fe\u7684\u62d3\u6251\u5e8f\u5217"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_38","text":"\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 m \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 x \u548c y\uff0c\u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece\u70b9 x \u5230\u70b9 y \u7684\u6709\u5411\u8fb9 (x,y)\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_39","text":"\u5171\u4e00\u884c\uff0c\u5982\u679c\u5b58\u5728\u62d3\u6251\u5e8f\u5217\uff0c\u5219\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u5408\u6cd5\u7684\u62d3\u6251\u5e8f\u5217\u5373\u53ef\u3002 \u5426\u5219\u8f93\u51fa \u22121\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_40","text":"1\u2264n,m\u226410^5","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_41","text":"3 3 1 2 2 3 1 3","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_42","text":"1 2 3 #include <iostream> #include <cstdio> #include <cstring> using namespace std; const int N = 1e5 + 10; int h[N], e[N], ne[N], idx; int q[N], hh, tt = -1, d[N], n, m; void add(int a, int b) { e[idx] = b, ne[idx] = h[a], h[a] = idx++; } bool tup_sort() { for (int i = 1; i <= n; i++) { if (!d[i]) q[++tt] = i; } while (hh <= tt) { auto t = q[hh++]; for (int i = h[t]; i != -1; i = ne[i]) { int j = e[i]; d[j]--; if (!d[j]) q[++tt] = j; } } return tt == n - 1; } int main() { cin >> n >> m; memset(h, -1, sizeof h); while (m--) { int a, b; scanf(\"%d %d\", &a, &b); add(a, b), d[b]++; } if (tup_sort()) { for (int i = 0; i < n; i++) printf(\"%d \", q[i]); } else cout << -1; return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_43","text":"\u6700\u77ed\u8def 1\u5355\u6e90\u6700\u77ed\u8def \u4e00\u4e2a\u70b9\u5230\u5176\u4ed6\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def 1.1 n:\u70b9\u7684\u6570\u91cf m \u8fb9\u7684\u6570\u91cf \u6240\u6709\u8fb9\u6743\u90fd\u662f\u6b63\u6570\uff08\u6734\u7d20Dijkstra\u7b97\u6cd5 n*n \u7a20\u5bc6\u56fe\u3001\u5806\u4f18\u5316\u7248\u7684Dijkstra\u7b97\u6cd5 mlogn \uff09 1.2 \u5b58\u5728\u8d1f\u6743\u8fb9 \uff08Bellman-Ford nm, SPFA m \u6700\u574f nm\uff09 2\u591a\u6e90\u6c47\u6700\u77ed\u8def\uff1a \u8d77\u70b9 \u7ec8\u70b9 \u4e0d\u786e\u5b9a Floyd n^3 \u7a20\u5bc6\u56fe \u9886\u63a5\u77e9\u9635","title":"\u6700\u77ed\u8def"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#dijkstra-dijkstra-i","text":"\u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\uff0c\u6240\u6709\u8fb9\u6743\u5747\u4e3a\u6b63\u503c\u3002 \u8bf7\u4f60\u6c42\u51fa 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5982\u679c\u65e0\u6cd5\u4ece 1 \u53f7\u70b9\u8d70\u5230 n \u53f7\u70b9\uff0c\u5219\u8f93\u51fa \u22121\u3002","title":"\u6734\u7d20dijkstra-Dijkstra\u6c42\u6700\u77ed\u8def I"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_44","text":"\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 m \u884c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 x,y,z \u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece\u70b9 x \u5230\u70b9 y \u7684\u6709\u5411\u8fb9\uff0c\u8fb9\u957f\u4e3a z\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_45","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002 \u5982\u679c\u8def\u5f84\u4e0d\u5b58\u5728\uff0c\u5219\u8f93\u51fa \u22121\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_46","text":"1\u2264n\u2264500, 1\u2264m\u226410^5, \u56fe\u4e2d\u6d89\u53ca\u8fb9\u957f\u5747\u4e0d\u8d85\u8fc710000\u3002","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_47","text":"3 3 1 2 2 2 3 1 1 3 4","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_48","text":"3 o(n^2 + m) #include <iostream> #include <cstring> #include <cstdio> using namespace std; const int N = 510, INF = 0x3f3f3f3f; int g[N][N], d[N], n, m; bool st[N]; int dijkstra() { memset(d, 0x3f, sizeof d); d[1] = 0; for (int i = 0; i < n; i++) { int t = -1; for (int j = 1; j <= n; j++) { if (!st[j] && (t == -1 || d[j] < d[t])) t = j; } st[t] = true; for (int j = 1; j <= n; j++) d[j] = min(d[j], d[t] + g[t][j]); } if (d[n] == INF) return -1; return d[n]; } int main() { cin >> n >> m; int a, b, w; memset(g, 0x3f, sizeof g); while (m--) { scanf(\"%d%d%d\", &a, &b, &w); g[a][b] = min(g[a][b], w); } cout << dijkstra(); return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#-dijkstra-ii","text":"\u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\uff0c\u6240\u6709\u8fb9\u6743\u5747\u4e3a\u975e\u8d1f\u503c\u3002 \u8bf7\u4f60\u6c42\u51fa 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5982\u679c\u65e0\u6cd5\u4ece 1 \u53f7\u70b9\u8d70\u5230 n \u53f7\u70b9\uff0c\u5219\u8f93\u51fa \u22121\u3002","title":"\u5806\u4f18\u5316-Dijkstra\u6c42\u6700\u77ed\u8def II"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_49","text":"\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 m \u884c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 x,y,z\uff0c\u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece\u70b9 x \u5230\u70b9 y \u7684\u6709\u5411\u8fb9\uff0c\u8fb9\u957f\u4e3a z\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_50","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002 \u5982\u679c\u8def\u5f84\u4e0d\u5b58\u5728\uff0c\u5219\u8f93\u51fa \u22121\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_51","text":"1\u2264n,m\u22641.5\u00d71e5, \u56fe\u4e2d\u6d89\u53ca\u8fb9\u957f\u5747\u4e0d\u5c0f\u4e8e 0\uff0c\u4e14\u4e0d\u8d85\u8fc7 10000\u3002 \u6570\u636e\u4fdd\u8bc1\uff1a\u5982\u679c\u6700\u77ed\u8def\u5b58\u5728\uff0c\u5219\u6700\u77ed\u8def\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 1e9\u3002","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_52","text":"3 3 1 2 2 2 3 1 1 3 4","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_53","text":"3 mlogn #include <bits/stdc++.h> using namespace std; const int N = 150010, INF = 0x3f3f3f3f; typedef pair<int, int> PII; int h[N], e[N], ne[N], w[N], idx, d[N], n, m; bool st[N]; void add(int a, int b, int c) { w[idx] = c, e[idx] = b, ne[idx] = h[a], h[a] = idx++; } int dijkstra() { memset(d, 0x3f, sizeof d); priority_queue<PII, vector<PII>, greater<PII>> q; q.push({0, 1}); d[1] = 0; while (!q.empty()) { auto t = q.top(); q.pop(); int distance = t.first, ver = t.second; if (st[ver]) continue; st[ver] = true; for (int i = h[ver]; i != -1; i = ne[i]) { int j = e[i]; if (distance + w[i] < d[j]) { d[j] = distance + w[i]; q.push({d[j], j}); } } } if (d[n] == INF) return -1; return d[n]; } int main() { cin >> n >> m; int a, b, c; memset(h, -1, sizeof h); while (m--) { scanf(\"%d%d%d\", &a, &b, &c); add(a, b, c); } cout << dijkstra(); return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#bellman-ford-","text":"\u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\uff0c \u8fb9\u6743\u53ef\u80fd\u4e3a\u8d1f\u6570 \u3002 \u8bf7\u4f60\u6c42\u51fa\u4ece 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u591a\u7ecf\u8fc7 k \u6761\u8fb9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5982\u679c\u65e0\u6cd5\u4ece 1 \u53f7\u70b9\u8d70\u5230 n \u53f7\u70b9\uff0c\u8f93\u51fa impossible \u3002 \u6ce8\u610f\uff1a\u56fe\u4e2d\u53ef\u80fd \u5b58\u5728\u8d1f\u6743\u56de\u8def \u3002","title":"Bellman-ford \u7b97\u6cd5-\u6709\u8fb9\u6570\u9650\u5236\u7684\u6700\u77ed\u8def"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_54","text":"\u7b2c\u4e00\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 n,m,k\u3002 \u63a5\u4e0b\u6765 m \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 x,y,z\uff0c\u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece\u70b9 x \u5230\u70b9 y \u7684\u6709\u5411\u8fb9\uff0c\u8fb9\u957f\u4e3a z\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_55","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u4ece 1 \u53f7\u70b9\u5230 n \u53f7\u70b9\u7684\u6700\u591a\u7ecf\u8fc7 k \u6761\u8fb9\u7684\u6700\u77ed\u8ddd\u79bb\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u8def\u5f84\uff0c\u5219\u8f93\u51fa impossible \u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_56","text":"1\u2264n,k\u2264500, 1\u2264m\u226410000, \u4efb\u610f\u8fb9\u957f\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 10000\u3002","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_57","text":"3 3 1 1 2 1 2 3 1 1 3 3","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_58","text":"3 bellman_ford o(nm) \u5141\u8bb8\u6709\u8d1f\u6743\u8fb9 \u7ecf\u8fc71\u6761\u8fb9\u6700\u77ed \u7ecf\u8fc72\u6761\u8fb9\u6700\u77ed .... #include <iostream> #include <cstring> #include <cstdio> using namespace std; const int N = 510, M = 1e5 + 10; struct Edge { int a, b, w; } e[M]; int dist[N], back[N]; int n, m, k; void bellman_ford() { memset(dist, 0x3f, sizeof dist); dist[1] = 0; for (int i = 0; i < k; i++) { memcpy(back, dist, sizeof dist); for (int j = 0; j < m; j++) { int a = e[j].a, b = e[j].b, w = e[j].w; dist[b] = min(dist[b], back[a] + w); } } if (dist[n] > 0x3f3f3f / 2) puts(\"impossible\"); else printf(\"%d\", dist[n]); } int main() { scanf(\"%d%d%d\", &n, &m, &k); for (int i = 0; i < m; i++) { int a, b, w; scanf(\"%d%d%d\", &a, &b, &w); e[i] = {a, b, w}; } bellman_ford(); return 0; } dijkstra \u4e0d\u80fd\u8d1f\u8fb9 \u4e3a\u4e86\u907f\u514d\u5982\u4e0b\u7684\u4e32\u8054\u60c5\u51b5\uff0c \u5728\u8fb9\u6570\u9650\u5236\u4e3a\u4e00\u6761\u7684\u60c5\u51b5\u4e0b\uff0c\u8282\u70b93\u7684\u8ddd\u79bb\u5e94\u8be5\u662f3\uff0c\u4f46\u662f\u7531\u4e8e\u4e32\u8054\u60c5\u51b5\uff0c\u5229\u7528\u672c\u8f6e\u66f4\u65b0\u7684\u8282\u70b92\u66f4\u65b0\u4e86\u8282\u70b93\u7684\u8ddd\u79bb\uff0c\u6240\u4ee5\u73b0\u5728\u8282\u70b93\u7684\u8ddd\u79bb\u662f2\u3002 1 2 1 2 3 1 1 3 3 Bellman-Ford\uff1a\u4e0d\u80fd\u6709\u8d1f\u73af","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#spfa-bellman_ford","text":"\u7ed9\u5b9a\u4e00\u4e2a nn \u4e2a\u70b9 mm \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\uff0c \u8fb9\u6743\u53ef\u80fd\u4e3a\u8d1f\u6570 \u3002 \u8bf7\u4f60\u6c42\u51fa 11 \u53f7\u70b9\u5230 nn \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5982\u679c\u65e0\u6cd5\u4ece 11 \u53f7\u70b9\u8d70\u5230 nn \u53f7\u70b9\uff0c\u5219\u8f93\u51fa impossible \u3002 \u6570\u636e\u4fdd\u8bc1\u4e0d\u5b58\u5728\u8d1f\u6743\u56de\u8def\u3002","title":"spfa \u6700\u77ed\u8def -&gt; bellman_ford\u7684\u961f\u5217\u4f18\u5316"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_59","text":"\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 nn \u548c mm\u3002 \u63a5\u4e0b\u6765 mm \u884c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 x,y,zx,y,z\uff0c\u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece\u70b9 xx \u5230\u70b9 yy \u7684\u6709\u5411\u8fb9\uff0c\u8fb9\u957f\u4e3a zz\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_60","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a 11 \u53f7\u70b9\u5230 nn \u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002 \u5982\u679c\u8def\u5f84\u4e0d\u5b58\u5728\uff0c\u5219\u8f93\u51fa impossible \u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_61","text":"1\u2264n,m\u22641051\u2264n,m\u2264105, \u56fe\u4e2d\u6d89\u53ca\u8fb9\u957f\u7edd\u5bf9\u503c\u5747\u4e0d\u8d85\u8fc7 10000","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_62","text":"3 3 1 2 5 2 3 -3 1 3 4","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_63","text":"2 st:\u662f\u5426\u5728\u961f\u5217\u4e2d #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 10; int h[N], e[N], ne[N], w[N], idx, n, m, d[N]; bool st[N]; void add(int a, int b, int c) { w[idx] = c, e[idx] = b, ne[idx] = h[a], h[a] = idx++; } void spfa() { memset(d, 0x3f, sizeof d); queue<int> q; q.push(1); d[1] = 0; st[1] = true; while (q.size()) { auto t = q.front(); q.pop(); st[t] = false; for (int i = h[t]; i != -1; i = ne[i]) { int j = e[i]; if (d[t] + w[i] < d[j]) { d[j] = d[t] + w[i]; if (!st[j]) { st[j] = true; q.push(j); } } } } if (d[n] == 0x3f3f3f3f) puts(\"impossible\"); else cout << d[n]; } int main() { cin >> n >> m; memset(h, -1, sizeof h); int a, b, c; while (m--) { scanf(\"%d%d%d\", &a, &b, &c); add(a, b, c); } spfa(); return 0; } 3f3f3f3f \u6700\u5c0f\u751f\u6210\u6811 1\u666e\u5229\u59c6\u7b97\u6cd5prim \u7a20\u5bc6 \u6734\u7d20 n^2 \u7a00\u758f \u5806\u4f18\u5316 mlogn 2\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5 Kruskal \u7a00\u758f mlogm \u4e8c\u5206\u56fe \u67d3\u8272\u6cd5 n + m \u5308\u7259\u5229\u7b97\u6cd5 \u6700\u574f mn \u4e00\u822c\u8fdc\u5c0f\u4e8eo(mn) \u6700\u5c0f\u751f\u6210\u6811\uff1an\u4e2a\u57ce\u5e02\u5efa\u516c\u8def \u6700\u77ed \u4e8c\u5206\u56fe\uff1a\u5f53\u4e14\u4ec5\u5f53\u56fe\u4e2d\u4e0d\u5947\u6570\u73af\uff08\u73af\u6709\u5947\u6570\u6761\u8fb9\uff09 \u4e8c\u5206\u56fe\uff1a\u96c6\u5408\u96c6\u5408\u4e4b\u95f4\u6709\u8fb9 \u96c6\u5408\u5185\u90e8\u6ca1\u6709\u8fb9 \u7b97\u6cd5\u5bfc\u8bba\uff1a\u7b97\u6cd5\u8bc1\u660e prim\u7b97\u6cd5\uff1a\u66f4\u65b0\u6bcf\u4e2a\u503c \u5148\u66f4\u65b0\u540e\u9762\u5c31\u4e0d\u4f1a\u66f4\u65b0\u4e86","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_64","text":"\u4e00\u4e2a\u8fde\u901a\u56fe\u53ef\u80fd\u6709\u591a\u4e2a\u751f\u6210\u6811\u3002\u5f53\u56fe\u4e2d\u7684\u8fb9\u5177\u6709\u6743\u503c\u65f6\uff0c\u603b\u4f1a\u6709\u4e00\u4e2a\u751f\u6210\u6811\u7684\u8fb9\u7684\u6743\u503c\u4e4b\u548c\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8e\u5176\u5b83\u751f\u6210\u6811\u7684\u8fb9\u7684\u6743\u503c\u4e4b\u548c","title":"\u6700\u5c0f\u751f\u6210\u6811"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#prim","text":"\u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\uff0c\u8fb9\u6743\u53ef\u80fd\u4e3a\u8d1f\u6570\u3002 \u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u6811\u8fb9\u6743\u91cd\u4e4b\u548c\uff0c\u5982\u679c\u6700\u5c0f\u751f\u6210\u6811\u4e0d\u5b58\u5728\u5219\u8f93\u51fa impossible \u3002 \u7ed9\u5b9a\u4e00\u5f20\u8fb9\u5e26\u6743\u7684\u65e0\u5411\u56fe G=(V,E)\uff0c\u5176\u4e2d V \u8868\u793a\u56fe\u4e2d\u70b9\u7684\u96c6\u5408\uff0cE \u8868\u793a\u56fe\u4e2d\u8fb9\u7684\u96c6\u5408\uff0cn=|V|\uff0cm=|E|\u3002 \u7531 V \u4e2d\u7684\u5168\u90e8 n \u4e2a\u9876\u70b9\u548c E \u4e2d n\u22121 \u6761\u8fb9\u6784\u6210\u7684\u65e0\u5411\u8fde\u901a\u5b50\u56fe\u88ab\u79f0\u4e3a G \u7684\u4e00\u68f5\u751f\u6210\u6811\uff0c\u5176\u4e2d\u8fb9\u7684\u6743\u503c\u4e4b\u548c\u6700\u5c0f\u7684\u751f\u6210\u6811\u88ab\u79f0\u4e3a\u65e0\u5411\u56fe G \u7684\u6700\u5c0f\u751f\u6210\u6811\u3002","title":"Prim\u7b97\u6cd5\u6c42\u6700\u5c0f\u751f\u6210\u6811"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_65","text":"\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 m \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 u,v,w\u8868\u793a\u70b9 u\u548c\u70b9 v \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u6743\u503c\u4e3a w \u7684\u8fb9\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_66","text":"\u5171\u4e00\u884c\uff0c\u82e5\u5b58\u5728\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5219\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c0f\u751f\u6210\u6811\u7684\u6811\u8fb9\u6743\u91cd\u4e4b\u548c\uff0c\u5982\u679c\u6700\u5c0f\u751f\u6210\u6811\u4e0d\u5b58\u5728\u5219\u8f93\u51fa impossible \u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_67","text":"1\u2264n\u2264500, 1\u2264m\u226410^5, \u56fe\u4e2d\u6d89\u53ca\u8fb9\u7684\u8fb9\u6743\u7684\u7edd\u5bf9\u503c\u5747\u4e0d\u8d85\u8fc7 10000\u3002","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_68","text":"4 5 1 2 1 1 3 2 1 4 3 2 3 2 3 4 4","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_69","text":"6","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#code_4","text":"o(n*n + m) \u7a20\u5bc6\u56fe #include <iostream> #include <cstring> using namespace std; const int N = 510, INF = 0x3f3f3f3f; int g[N][N], dist[N], n, m, a, b, w; bool st[N]; int prim() { int res = 0; memset(dist, 0x3f, sizeof dist); for (int i = 0; i < n; i++) { int t = -1; // \u627e\u5230\u8ddd\u79bb\u96c6\u5408\u6700\u8fd1\u7684\u4e00\u4e2a\u4e14\u6ca1\u6709\u8bbf\u95ee\u8fc7\u7684\u70b9 for (int j = 1; j <= n; j++) { if (!st[j] && (t == -1 || dist[j] < dist[t])) t = j; } if (i && dist[t] == INF) return INF; if (i) res += dist[t]; st[t] = true; // a -> b -> c c\u662fb\u7684\u57fa\u7840\u6765\u7684\uff0c \u6240\u4ee5\u9700\u8981\u66f4\u65b0\u503c // \u4e3a\u4e0b\u6b21\u627e\u6700\u8fd1\u7684\u70b9\u505a\u51c6\u5907\uff1a\u66f4\u65b0\u6240\u6709\u70b9\u5230\u96c6\u5408\u7684\u8ddd\u79bb for (int j = 1; j <= n; j++) dist[j] = min(dist[j], g[t][j]); } return res; } int main() { cin >> n >> m; for (int i = 1; i <= n; i++) { for (int j = 1; j <= n; j++) if (i != j) g[i][j] = INF; } while (m--) { cin >> a >> b >> w; g[a][b] = g[b][a] = min(g[a][b], w); } int res = prim(); if (res == INF) puts(\"impossible\"); else cout << res; return 0; } st[t] = true;","title":"code"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#kruskal","text":"\u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\uff0c\u8fb9\u6743\u53ef\u80fd\u4e3a\u8d1f\u6570\u3002 \u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u6811\u8fb9\u6743\u91cd\u4e4b\u548c\uff0c\u5982\u679c\u6700\u5c0f\u751f\u6210\u6811\u4e0d\u5b58\u5728\u5219\u8f93\u51fa impossible \u3002 \u7ed9\u5b9a\u4e00\u5f20\u8fb9\u5e26\u6743\u7684\u65e0\u5411\u56fe G=(V,E)\uff0c\u5176\u4e2d V \u8868\u793a\u56fe\u4e2d\u70b9\u7684\u96c6\u5408\uff0cE \u8868\u793a\u56fe\u4e2d\u8fb9\u7684\u96c6\u5408\uff0cn=|V|\uff0cm=|E|\u3002 \u7531 V \u4e2d\u7684\u5168\u90e8 n \u4e2a\u9876\u70b9\u548c EE \u4e2d n\u22121 \u6761\u8fb9\u6784\u6210\u7684\u65e0\u5411\u8fde\u901a\u5b50\u56fe\u88ab\u79f0\u4e3a G \u7684\u4e00\u68f5\u751f\u6210\u6811\uff0c\u5176\u4e2d\u8fb9\u7684\u6743\u503c\u4e4b\u548c\u6700\u5c0f\u7684\u751f\u6210\u6811\u88ab\u79f0\u4e3a\u65e0\u5411\u56fe G \u7684\u6700\u5c0f\u751f\u6210\u6811\u3002","title":"Kruskal\u7b97\u6cd5\u6c42\u6700\u5c0f\u751f\u6210\u6811"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_70","text":"\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 m \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 u,v,w\uff0c\u8868\u793a\u70b9 u \u548c\u70b9 v \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u6743\u503c\u4e3a w \u7684\u8fb9\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_71","text":"\u5171\u4e00\u884c\uff0c\u82e5\u5b58\u5728\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5219\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c0f\u751f\u6210\u6811\u7684\u6811\u8fb9\u6743\u91cd\u4e4b\u548c\uff0c\u5982\u679c\u6700\u5c0f\u751f\u6210\u6811\u4e0d\u5b58\u5728\u5219\u8f93\u51fa impossible \u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_72","text":"1\u2264n\u22641e5, 1\u2264m\u22642\u22171e5, \u56fe\u4e2d\u6d89\u53ca\u8fb9\u7684\u8fb9\u6743\u7684\u7edd\u5bf9\u503c\u5747\u4e0d\u8d85\u8fc7 1000\u3002","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_73","text":"4 5 1 2 1 1 3 2 1 4 3 2 3 2 3 4 4","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_74","text":"6","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#code_5","text":"mlogm \u7a00\u758f\u56fe #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 10, M = 2 * N, INF = 0x3f3f3f3f; struct Edge { int a, b, w; bool operator<(const Edge &E) const { return w < E.w; } }e[M]; int n, m, p[N]; int find(int x) { if (p[x] != x) p[x] = find(p[x]); return p[x]; } int kurskal() { int cnt = 0, res = 0; for (int i = 0; i < m; i++) { int a = e[i].a, b = e[i].b, w = e[i].w; if (find(a) != find(b)) { p[find(a)] = p[find(b)]; cnt++; res += w; } } if (cnt < n - 1) return INF; return res; } int main() { cin >> n >> m; for (int i = 1; i <= n; i++) p[i] = i; int a, b, c; for (int i = 0; i < m; i++) { cin >> a >> b >> c; e[i] = {a, b, c}; } sort(e, e + m); int res = kurskal(); if (res == INF) puts(\"impossible\"); else cout << res; return 0; } m for (int i = 0; i < m; i++) { cin >> a >> b >> c; e[i] = {a, b, c}; } if (find(a) != find(b)) {","title":"code"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_75","text":"","title":"\u4e8c\u5206\u56fe"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_76","text":"\u7ed9\u5b9a\u4e00\u4e2a n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\u3002 \u8bf7\u4f60\u5224\u65ad\u8fd9\u4e2a\u56fe\u662f\u5426\u662f\u4e8c\u5206\u56fe\u3002","title":"\u67d3\u8272\u6cd5\u5224\u5b9a\u4e8c\u5206\u56fe"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_77","text":"\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 n \u548c m\u3002 \u63a5\u4e0b\u6765 m \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 u \u548c v\uff0c\u8868\u793a\u70b9 u \u548c\u70b9 v \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u8fb9\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_78","text":"\u5982\u679c\u7ed9\u5b9a\u56fe\u662f\u4e8c\u5206\u56fe\uff0c\u5219\u8f93\u51fa Yes \uff0c\u5426\u5219\u8f93\u51fa No \u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_79","text":"1\u2264n,m\u226410^5","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_80","text":"4 4 1 3 1 4 2 3 2 4","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_81","text":"Yes","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#code_6","text":"i - j i j\u5c5e\u4e8e\u4e0d\u540c\u7684\u96c6\u5408 o(n+m) #include <iostream> #include <cstring> using namespace std; const int N = 1e5 + 10, M = 2 * N; int h[N], e[M], ne[M], idx; int color[N], n, m; void add(int a, int b) { e[idx] = b, ne[idx] = h[a], h[a] = idx++; } bool dfs(int u, int c) { color[u] = c; for (int i = h[u]; i != -1; i = ne[i]) { int j = e[i]; if (!color[j] && !dfs(j, 3 - c)) return false; else if (color[j] == c) return false; } return true; } int main() { cin >> n >> m; memset(h, -1, sizeof h); while (m--) { int a, b; cin >> a >> b; add(a, b), add(b, a); } bool flag = true; for (int i = 1; i <= n; i++) { if (!color[i] && !dfs(i, 1)) { flag = false; break; } } if (!flag) puts(\"No\"); else puts(\"Yes\"); return 0; }","title":"code"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_82","text":"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u5176\u4e2d\u5de6\u534a\u90e8\u5305\u542b n1 \u4e2a\u70b9\uff08\u7f16\u53f7 1\u223cn1\uff09\uff0c\u53f3\u534a\u90e8\u5305\u542b n2 \u4e2a\u70b9\uff08\u7f16\u53f7 1\u223cn2\uff09\uff0c\u4e8c\u5206\u56fe\u5171\u5305\u542b m \u6761\u8fb9\u3002 \u6570\u636e\u4fdd\u8bc1\u4efb\u610f\u4e00\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u90fd\u4e0d\u53ef\u80fd\u5728\u540c\u4e00\u90e8\u5206\u4e2d\u3002 \u8bf7\u4f60\u6c42\u51fa\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u6570\u3002 \u4e8c\u5206\u56fe\u7684\u5339\u914d\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u5206\u56fe G\uff0c\u5728 G \u7684\u4e00\u4e2a\u5b50\u56fe M \u4e2d\uff0cM \u7684\u8fb9\u96c6 {E}\u4e2d\u7684\u4efb\u610f\u4e24\u6761\u8fb9\u90fd\u4e0d\u4f9d\u9644\u4e8e\u540c\u4e00\u4e2a\u9876\u70b9\uff0c\u5219\u79f0 M \u662f\u4e00\u4e2a\u5339\u914d\u3002 \u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\uff1a\u6240\u6709\u5339\u914d\u4e2d\u5305\u542b\u8fb9\u6570\u6700\u591a\u7684\u4e00\u7ec4\u5339\u914d\u88ab\u79f0\u4e3a\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\uff0c\u5176\u8fb9\u6570\u5373\u4e3a\u6700\u5927\u5339\u914d\u6570\u3002","title":"\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_83","text":"\u7b2c\u4e00\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 n1\u3001 n2 \u548c m\u3002 \u63a5\u4e0b\u6765 m \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 u \u548c v\uff0c\u8868\u793a\u5de6\u534a\u90e8\u70b9\u96c6\u4e2d\u7684\u70b9 u \u548c\u53f3\u534a\u90e8\u70b9\u96c6\u4e2d\u7684\u70b9 v \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u8fb9\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_84","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u6570\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_85","text":"1\u2264n1,n2\u2264500, 1\u2264u\u2264n1, 1\u2264v\u2264n2, 1\u2264m\u226410^5","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_86","text":"2 2 4 1 1 1 2 2 1 2 2","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#_87","text":"2","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/2%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA/#code_7","text":"o(nm) #include <iostream> #include <cstring> #include <cstdio> using namespace std; const int N = 510, M = 1e5 + 10; int h[N], e[M], ne[M], idx; int match[N]; bool st[N]; int n1, n2, m; void add(int a, int b) { e[idx] = b, ne[idx] = h[a], h[a] = idx++; } bool find(int u) { for (int i = h[u]; i != -1; i = ne[i]) { int j = e[i]; if (!st[j]) { st[j] = true; if (match[j] == 0 || find(match[j])) { match[j] = u; return true; } } } return false; } int main() { cin >> n1 >> n2 >> m; memset(h, -1, sizeof h); while (m--) { int a, b; scanf(\"%d%d\", &a, &b); add(a, b); } int res = 0; for (int i = 1; i <= n1; i++) { memset(st, false, sizeof st); if (find(i)) res++; } cout << res; return 0; } if (!match[j] || find(match[j])) match[j]\u653e\u5f03 test 1 bfs1: n m bfs2 unordered_map 2 bellman_ford: \u5fd8\u8bb0\u521d\u59cb\u5316d 3 prim: st[t] = true kruskal: for (int i = 0; i <m ;i ++) 3.4 if (match[j] || find(match[j])) {}","title":"code"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/","text":"\u8d28\u6570 \u8bd5\u9664\u6cd5\u5224\u5b9a\u8d28\u6570 \u7ed9\u5b9a n \u4e2a\u6b63\u6574\u6570 ai\uff0c\u5224\u5b9a\u6bcf\u4e2a\u6570\u662f\u5426\u662f\u8d28\u6570\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 n\u3002 \u63a5\u4e0b\u6765 n \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570 ai\u3002 \u8f93\u51fa\u683c\u5f0f \u5171 n \u884c\uff0c\u5176\u4e2d\u7b2c i \u884c\u8f93\u51fa\u7b2c i \u4e2a\u6b63\u6574\u6570 ai \u662f\u5426\u4e3a\u8d28\u6570\uff0c\u662f\u5219\u8f93\u51fa Yes \uff0c\u5426\u5219\u8f93\u51fa No \u3002 \u6570\u636e\u8303\u56f4 1\u2264n\u2264100, 1\u2264ai\u2264231\u22121 \u8f93\u5165\u6837\u4f8b\uff1a 2 2 6 \u8f93\u51fa\u6837\u4f8b\uff1a Yes No #include <bits/stdc++.h> using namespace std; bool is_prime(int a) { if (a < 2) return false; for (int i = 2; i <= a / i; i++) { if (a % i == 0) return false; } return true; } int main() { int n, a; cin >> n; while (n--) { cin >> a; if (is_prime(a)) puts(\"Yes\"); else puts(\"No\"); } return 0; } \u5206\u89e3\u8d28\u56e0\u6570 \u7ed9\u5b9a n \u4e2a\u6b63\u6574\u6570 ai\uff0c\u5c06\u6bcf\u4e2a\u6570\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u5e76\u6309\u7167\u8d28\u56e0\u6570\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8f93\u51fa\u6bcf\u4e2a\u8d28\u56e0\u6570\u7684\u5e95\u6570\u548c\u6307\u6570\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 n\u3002 \u63a5\u4e0b\u6765 n \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570 ai\u3002 \u8f93\u51fa\u683c\u5f0f \u5bf9\u4e8e\u6bcf\u4e2a\u6b63\u6574\u6570 ai\uff0c\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8f93\u51fa\u5176\u5206\u89e3\u8d28\u56e0\u6570\u540e\uff0c\u6bcf\u4e2a\u8d28\u56e0\u6570\u7684\u5e95\u6570\u548c\u6307\u6570\uff0c\u6bcf\u4e2a\u5e95\u6570\u548c\u6307\u6570\u5360\u4e00\u884c\u3002 \u6bcf\u4e2a\u6b63\u6574\u6570\u7684\u8d28\u56e0\u6570\u5168\u90e8\u8f93\u51fa\u5b8c\u6bd5\u540e\uff0c\u8f93\u51fa\u4e00\u4e2a\u7a7a\u884c\u3002 \u6570\u636e\u8303\u56f4 1\u2264n\u2264100, 2\u2264ai\u22642\u00d7109 \u8f93\u5165\u6837\u4f8b\uff1a 2 6 8 \u8f93\u51fa\u6837\u4f8b\uff1a 2 1 3 1 2 3 #include <bits/stdc++.h> using namespace std; void divide(int x) { for (int i = 2; i <= x / i; i++) { if (x % i == 0) { int s = 0; while (x % i == 0) { x /= i; s++; } cout << i << ' ' << s << endl; } } if (x > 1) cout << x << ' ' << 1 << endl; cout << endl; } int main() { int n, x; cin >> n; while (n--) { cin >> x; // cout << x << endl; divide(x); } return 0; } \u7b5b\u8d28\u6570 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n\uff0c\u8bf7\u4f60\u6c42\u51fa 1\u223cn \u4e2d\u8d28\u6570\u7684\u4e2a\u6570\u3002 \u8f93\u5165\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5305\u542b\u6574\u6570 n\u3002 \u8f93\u51fa\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a 1\u223cn \u4e2d\u8d28\u6570\u7684\u4e2a\u6570\u3002 \u6570\u636e\u8303\u56f4 1\u2264n\u2264106 \u8f93\u5165\u6837\u4f8b\uff1a 8 \u8f93\u51fa\u6837\u4f8b\uff1a 4 code nloglogn #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 10; int primes[N], cnt; bool st[N]; void get_primes(int n) { for (int i = 2; i <= n; i++) { if (st[i]) continue; primes[cnt++] = i; for (int j = i + i; j <= n; j += i) { st[j] = true; } } cout << cnt; } int main() { int n; cin >> n; get_primes(n); return 0; } o(n) pj \u662fx\u7684\u6700\u5c0f\u8d28\u56e0\u5b50 \uff0c\u6240\u4ee5\u5224\u65ad\u5230\u6839\u53f7n\u5373\u53ef pj <= i\u7684\u6700\u5c0f\u8d28\u56e0\u5b50 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 10; int primes[N], cnt; bool st[N]; void get_primes(int n) { for (int i = 2; i <= n; i++) { if (!st[i]) primes[cnt++] = i; for (int j = 0; primes[j] <= n / i; j++) { st[primes[j] * i] = true; if (i % primes[j] == 0) break; } } } int main() { int n; cin >> n; get_primes(n); cout << cnt; return 0; } \u8d28\u6570\uff1a \u5927\u4e8e 1 \u7684\u6574\u6570\u4e2d \uff0c\u5982\u679c\u53ea\u5305\u542b1\u548c\u672c\u8eab\u8fd9\u4fe9\u4e2a\u7ea6\u6570 \u8d28\u6570\u7684\u5224\u5b9a1.\u8bd5\u9664\u6cd5 \u5206\u89e3\u8d28\u56e0\u6570 \u8bd5\u9664\u6cd5 \u4efb\u4f55\u6570\u90fd\u53ef\u4ee5\u8868\u793a\u6210\u8d28\u6570\u7684\u4e58\u79ef\u3002 N\u53ea\u4f1a\u88ab \u6700\u5c0f\u8d28\u56e0\u5b50 i%pj == 0 pj \u662f I\u7684\u6700\u5c0f\u8d28\u56e0\u5b50 \u4e5f\u662fpj * i\u7684\u6700\u5c0f\u8d28\u56e0\u5b50 i%pj != 0 pj \u662f pj * i\u7684\u6700\u5c0f\u8d28\u56e0\u5b50 \u5bf9\u4e8e\u4e00\u4e2a\u5408\u6570x,\u4e00\u5b9a\u5b58\u5728\u6700\u5c0f\u8d28\u56e0\u5b50 \u5047\u8bbepj \u662fx\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\uff0c \u5f53i \u7f8e\u5267\u5bfc x/pj \u6bcf\u4e2a\u6570\u90fd\u6709\u4e00\u4e2a\u6700\u5c0f\u8d28\u56e0\u5b50 i\u662f \u5408\u6570 \u6700\u5c0f\u8d28\u56e0\u5b50\u5c31\u4f1a\u505c\u4e0b\u6765 i\u662f\u8d28\u6570 pj == i \u4e5f\u4f1a\u505c\u4e0b\u6765 n + n/2 + n/3 + ... 1 1\u7684\u500d\u6570 2\u7684\u500d\u6570 3\u7684\u500d\u6570 1\u7684\u7ea6\u6570 2\u7684\u7ea6\u675f nlogn 1\u662f\u6240\u6709\u500d\u6570\u7684\u7ea6\u6570 int \u8303\u56f4\u5185\u67d0\u4e2a\u65701500\u4e2a\u7ea6\u6570\u5b57 222 \u6b27\u62c9\u51fd\u6570 1-n \u4e2d\u548cn\u4e92\u8d28\u7684\u4e2a\u6570 \u5bb9\u8d28\u539f\u7406\uff1a \u7b49\u4ef7 n\u66f4\u597di 400w - 500w 34","title":"\u6570\u5b66"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_1","text":"","title":"\u8d28\u6570"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_2","text":"\u7ed9\u5b9a n \u4e2a\u6b63\u6574\u6570 ai\uff0c\u5224\u5b9a\u6bcf\u4e2a\u6570\u662f\u5426\u662f\u8d28\u6570\u3002","title":"\u8bd5\u9664\u6cd5\u5224\u5b9a\u8d28\u6570"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_3","text":"\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 n\u3002 \u63a5\u4e0b\u6765 n \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570 ai\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_4","text":"\u5171 n \u884c\uff0c\u5176\u4e2d\u7b2c i \u884c\u8f93\u51fa\u7b2c i \u4e2a\u6b63\u6574\u6570 ai \u662f\u5426\u4e3a\u8d28\u6570\uff0c\u662f\u5219\u8f93\u51fa Yes \uff0c\u5426\u5219\u8f93\u51fa No \u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_5","text":"1\u2264n\u2264100, 1\u2264ai\u2264231\u22121","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_6","text":"2 2 6","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_7","text":"Yes No #include <bits/stdc++.h> using namespace std; bool is_prime(int a) { if (a < 2) return false; for (int i = 2; i <= a / i; i++) { if (a % i == 0) return false; } return true; } int main() { int n, a; cin >> n; while (n--) { cin >> a; if (is_prime(a)) puts(\"Yes\"); else puts(\"No\"); } return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_8","text":"\u7ed9\u5b9a n \u4e2a\u6b63\u6574\u6570 ai\uff0c\u5c06\u6bcf\u4e2a\u6570\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u5e76\u6309\u7167\u8d28\u56e0\u6570\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8f93\u51fa\u6bcf\u4e2a\u8d28\u56e0\u6570\u7684\u5e95\u6570\u548c\u6307\u6570\u3002","title":"\u5206\u89e3\u8d28\u56e0\u6570"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_9","text":"\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 n\u3002 \u63a5\u4e0b\u6765 n \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570 ai\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_10","text":"\u5bf9\u4e8e\u6bcf\u4e2a\u6b63\u6574\u6570 ai\uff0c\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8f93\u51fa\u5176\u5206\u89e3\u8d28\u56e0\u6570\u540e\uff0c\u6bcf\u4e2a\u8d28\u56e0\u6570\u7684\u5e95\u6570\u548c\u6307\u6570\uff0c\u6bcf\u4e2a\u5e95\u6570\u548c\u6307\u6570\u5360\u4e00\u884c\u3002 \u6bcf\u4e2a\u6b63\u6574\u6570\u7684\u8d28\u56e0\u6570\u5168\u90e8\u8f93\u51fa\u5b8c\u6bd5\u540e\uff0c\u8f93\u51fa\u4e00\u4e2a\u7a7a\u884c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_11","text":"1\u2264n\u2264100, 2\u2264ai\u22642\u00d7109","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_12","text":"2 6 8","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_13","text":"2 1 3 1 2 3 #include <bits/stdc++.h> using namespace std; void divide(int x) { for (int i = 2; i <= x / i; i++) { if (x % i == 0) { int s = 0; while (x % i == 0) { x /= i; s++; } cout << i << ' ' << s << endl; } } if (x > 1) cout << x << ' ' << 1 << endl; cout << endl; } int main() { int n, x; cin >> n; while (n--) { cin >> x; // cout << x << endl; divide(x); } return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_14","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n\uff0c\u8bf7\u4f60\u6c42\u51fa 1\u223cn \u4e2d\u8d28\u6570\u7684\u4e2a\u6570\u3002","title":"\u7b5b\u8d28\u6570"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_15","text":"\u5171\u4e00\u884c\uff0c\u5305\u542b\u6574\u6570 n\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_16","text":"\u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a 1\u223cn \u4e2d\u8d28\u6570\u7684\u4e2a\u6570\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_17","text":"1\u2264n\u2264106","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_18","text":"8","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#_19","text":"4","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#code","text":"nloglogn #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 10; int primes[N], cnt; bool st[N]; void get_primes(int n) { for (int i = 2; i <= n; i++) { if (st[i]) continue; primes[cnt++] = i; for (int j = i + i; j <= n; j += i) { st[j] = true; } } cout << cnt; } int main() { int n; cin >> n; get_primes(n); return 0; } o(n) pj \u662fx\u7684\u6700\u5c0f\u8d28\u56e0\u5b50 \uff0c\u6240\u4ee5\u5224\u65ad\u5230\u6839\u53f7n\u5373\u53ef pj <= i\u7684\u6700\u5c0f\u8d28\u56e0\u5b50 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 10; int primes[N], cnt; bool st[N]; void get_primes(int n) { for (int i = 2; i <= n; i++) { if (!st[i]) primes[cnt++] = i; for (int j = 0; primes[j] <= n / i; j++) { st[primes[j] * i] = true; if (i % primes[j] == 0) break; } } } int main() { int n; cin >> n; get_primes(n); cout << cnt; return 0; } \u8d28\u6570\uff1a \u5927\u4e8e 1 \u7684\u6574\u6570\u4e2d \uff0c\u5982\u679c\u53ea\u5305\u542b1\u548c\u672c\u8eab\u8fd9\u4fe9\u4e2a\u7ea6\u6570 \u8d28\u6570\u7684\u5224\u5b9a1.\u8bd5\u9664\u6cd5 \u5206\u89e3\u8d28\u56e0\u6570 \u8bd5\u9664\u6cd5 \u4efb\u4f55\u6570\u90fd\u53ef\u4ee5\u8868\u793a\u6210\u8d28\u6570\u7684\u4e58\u79ef\u3002 N\u53ea\u4f1a\u88ab \u6700\u5c0f\u8d28\u56e0\u5b50 i%pj == 0 pj \u662f I\u7684\u6700\u5c0f\u8d28\u56e0\u5b50 \u4e5f\u662fpj * i\u7684\u6700\u5c0f\u8d28\u56e0\u5b50 i%pj != 0 pj \u662f pj * i\u7684\u6700\u5c0f\u8d28\u56e0\u5b50 \u5bf9\u4e8e\u4e00\u4e2a\u5408\u6570x,\u4e00\u5b9a\u5b58\u5728\u6700\u5c0f\u8d28\u56e0\u5b50 \u5047\u8bbepj \u662fx\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\uff0c \u5f53i \u7f8e\u5267\u5bfc x/pj \u6bcf\u4e2a\u6570\u90fd\u6709\u4e00\u4e2a\u6700\u5c0f\u8d28\u56e0\u5b50 i\u662f \u5408\u6570 \u6700\u5c0f\u8d28\u56e0\u5b50\u5c31\u4f1a\u505c\u4e0b\u6765 i\u662f\u8d28\u6570 pj == i \u4e5f\u4f1a\u505c\u4e0b\u6765 n + n/2 + n/3 + ... 1 1\u7684\u500d\u6570 2\u7684\u500d\u6570 3\u7684\u500d\u6570 1\u7684\u7ea6\u6570 2\u7684\u7ea6\u675f nlogn 1\u662f\u6240\u6709\u500d\u6570\u7684\u7ea6\u6570 int \u8303\u56f4\u5185\u67d0\u4e2a\u65701500\u4e2a\u7ea6\u6570\u5b57","title":"code"},{"location":"algo/base/3%E6%95%B0%E5%AD%A6/#222","text":"\u6b27\u62c9\u51fd\u6570 1-n \u4e2d\u548cn\u4e92\u8d28\u7684\u4e2a\u6570 \u5bb9\u8d28\u539f\u7406\uff1a \u7b49\u4ef7 n\u66f4\u597di 400w - 500w 34","title":"222"},{"location":"algo/base/4dp/","text":"1\u80cc\u5305\u95ee\u9898 01\u80cc\u5305\u95ee\u9898 \u6709 N \u4ef6\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u662f V \u7684\u80cc\u5305\u3002\u6bcf\u4ef6\u7269\u54c1\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\u3002 \u7b2c i \u4ef6\u7269\u54c1\u7684\u4f53\u79ef\u662f vi\uff0c\u4ef7\u503c\u662f wi\u3002 \u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u8fd9\u4e9b\u7269\u54c1\u7684\u603b\u4f53\u79ef\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u603b\u4ef7\u503c\u6700\u5927\u3002 \u8f93\u51fa\u6700\u5927\u4ef7\u503c\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570\uff0cN\uff0cV\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7269\u54c1\u6570\u91cf\u548c\u80cc\u5305\u5bb9\u79ef\u3002 \u63a5\u4e0b\u6765\u6709 N \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570 vi,wi\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7b2c i \u4ef6\u7269\u54c1\u7684\u4f53\u79ef\u548c\u4ef7\u503c\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u4ef7\u503c\u3002 \u6570\u636e\u8303\u56f4 0<N,V\u22641000 0<vi,wi\u22641000 \u8f93\u5165\u6837\u4f8b 4 5 1 2 2 4 3 4 4 5 \u8f93\u51fa\u6837\u4f8b\uff1a 8 code \u672a\u4f18\u5316 #include <iostream> using namespace std; const int N = 1010; int v[N], w[N], n, m, f[N][N]; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) cin >> v[i] >> w[i]; for (int i = 1; i <= n; i++) { for (int j = 0; j <= m; j++) { f[i][j] = max(f[i][j], f[i - 1][j]); if (j >= v[i]) { f[i][j] = max(f[i][j], f[i - 1][j - v[i]] + w[i]); } } } cout << f[n][m]; return 0; } \u4f18\u5316 #include <iostream> using namespace std; const int N = 1010; int v[N], w[N], n, m, f[N]; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) cin >> v[i] >> w[i]; for (int i = 1; i <= n; i++) { for (int j = m; j >= v[i]; j--) { f[j] = max(f[j], f[j - v[i]] + w[i]); } } cout << f[m]; return 0; } \u5b8c\u5168\u80cc\u5305 \u6709 N \u79cd\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u662f V \u7684\u80cc\u5305\uff0c\u6bcf\u79cd\u7269\u54c1\u90fd\u6709\u65e0\u9650\u4ef6\u53ef\u7528\u3002 \u7b2c ii \u79cd\u7269\u54c1\u7684\u4f53\u79ef\u662f vi\uff0c\u4ef7\u503c\u662f wi\u3002 \u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u8fd9\u4e9b\u7269\u54c1\u7684\u603b\u4f53\u79ef\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u603b\u4ef7\u503c\u6700\u5927\u3002 \u8f93\u51fa\u6700\u5927\u4ef7\u503c\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570\uff0cN\uff0cV\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7269\u54c1\u79cd\u6570\u548c\u80cc\u5305\u5bb9\u79ef\u3002 \u63a5\u4e0b\u6765\u6709 N \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570 vi,wi\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7b2c i \u79cd\u7269\u54c1\u7684\u4f53\u79ef\u548c\u4ef7\u503c\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u4ef7\u503c\u3002 \u6570\u636e\u8303\u56f4 0<N,V\u22641000 0<vi,wi\u22641000 \u8f93\u5165\u6837\u4f8b 4 5 1 2 2 4 3 4 4 5 \u8f93\u51fa\u6837\u4f8b\uff1a 10 code \u672a\u4f18\u5316 #include <iostream> using namespace std; const int N = 1010; int v[N], w[N], n, m, f[N][N]; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) cin >> v[i] >> w[i]; for (int i = 1; i <= n; i++) { for (int j = 0; j <= m; j++) { for (int k = 0; k * v[i] <= j; k++) { f[i][j] = max(f[i][j], f[i - 1][j - k * v[i]] + k * w[i]); } } } cout << f[n][m]; return 0; } \u4f18\u5316 #include <iostream> using namespace std; const int N = 1010; int v[N], w[N], n, m, f[N]; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) cin >> v[i] >> w[i]; for (int i = 1; i <= n; i++) { for (int j = v[i]; j <= m; j++) { f[j] = max(f[j], f[j - v[i]] + w[i]); } } cout << f[m]; return 0; } f[i][j] = i-1j, i-1j-v + w, i-1j-2v + 2w, ... fij-v = i-1j-v, i-1j-2v+w, ... ij = max(i-1j, ij-v + w) \u591a\u91cd\u80cc\u53051 \u6709 N \u79cd\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u662f V \u7684\u80cc\u5305\u3002 \u7b2c i \u79cd\u7269\u54c1\u6700\u591a\u6709 si \u4ef6\uff0c\u6bcf\u4ef6\u4f53\u79ef\u662f vi\uff0c\u4ef7\u503c\u662f wi\u3002 \u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u7269\u54c1\u4f53\u79ef\u603b\u548c\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u4ef7\u503c\u603b\u548c\u6700\u5927\u3002 \u8f93\u51fa\u6700\u5927\u4ef7\u503c\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570\uff0cN\uff0cV\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7269\u54c1\u79cd\u6570\u548c\u80cc\u5305\u5bb9\u79ef\u3002 \u63a5\u4e0b\u6765\u6709 N \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570 vi,wi,si\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7b2c i \u79cd\u7269\u54c1\u7684\u4f53\u79ef\u3001\u4ef7\u503c\u548c\u6570\u91cf\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u4ef7\u503c\u3002 \u6570\u636e\u8303\u56f4 0<N,V\u2264100 0<vi,wi,si\u2264100 \u8f93\u5165\u6837\u4f8b 4 5 1 2 3 2 4 1 3 4 3 4 5 2 \u8f93\u51fa\u6837\u4f8b\uff1a 10 #include <iostream> using namespace std; const int N = 110; int n, m, v[N], w[N], s[N]; int f[N][N]; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) cin >> v[i] >> w[i] >> s[i]; for (int i = 1; i <= n; i++) { for (int j = 0; j <= m; j++) { for (int k = 0; k * v[i] <= j && k <= s[i]; k++) { f[i][j] = max(f[i][j], f[i - 1][j - k * v[i]] + k * w[i]); } } } cout << f[n][m]; return 0; } \u591a\u91cd\u80cc\u5305II \u6709 NN \u79cd\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u662f VV \u7684\u80cc\u5305\u3002 \u7b2c ii \u79cd\u7269\u54c1\u6700\u591a\u6709 sisi \u4ef6\uff0c\u6bcf\u4ef6\u4f53\u79ef\u662f vivi\uff0c\u4ef7\u503c\u662f wiwi\u3002 \u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u7269\u54c1\u4f53\u79ef\u603b\u548c\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u4ef7\u503c\u603b\u548c\u6700\u5927\u3002 \u8f93\u51fa\u6700\u5927\u4ef7\u503c\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570\uff0cN\uff0cV\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7269\u54c1\u79cd\u6570\u548c\u80cc\u5305\u5bb9\u79ef\u3002 \u63a5\u4e0b\u6765\u6709 NN \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570 vi,wi,sivi,wi,si\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7b2c ii \u79cd\u7269\u54c1\u7684\u4f53\u79ef\u3001\u4ef7\u503c\u548c\u6570\u91cf\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u4ef7\u503c\u3002 \u6570\u636e\u8303\u56f4 0<N\u226410000<N\u22641000 0<V\u226420000<V\u22642000 0<vi,wi,si\u226420000<vi,wi,si\u22642000 \u63d0\u793a\uff1a \u672c\u9898\u8003\u67e5\u591a\u91cd\u80cc\u5305\u7684\u4e8c\u8fdb\u5236\u4f18\u5316\u65b9\u6cd5\u3002 \u8f93\u5165\u6837\u4f8b 4 5 1 2 3 2 4 1 3 4 3 4 5 2 \u8f93\u51fa\u6837\u4f8b\uff1a 10 0 1023 1 2 4 8 ... 512 0 - 512 \u53ef\u4ee5\u51d1\u51fa 0 1023\u4efb\u610f\u6570 #include <iostream> using namespace std; const int N = 11 * 2000 + 10, M = 2010; int n, m, v[N], w[N], f[N]; int main() { cin >> n >> m; int cnt = 0; for (int i = 1; i <= n; i++) { int a, b, c, k = 1; cin >> a >> b >> c; while (k <= c) { cnt++; v[cnt] = k * a; w[cnt] = k * b; c -= k; k *= 2; } if (c > 0) { cnt++, v[cnt] = c * a, w[cnt] = c * b; } } for (int i = 1; i <= cnt; i++) { for (int j = m; j >= v[i]; j--) { f[j] = max(f[j], f[j - v[i]] + w[i]); } } cout << f[m]; return 0; } 4.2 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u72b6\u6001\u6570\u91cf * \u8f6c\u79fb\u8ba1\u7b97\u91cf f[i][j] = max(f[i - 1][j], f[i - 1][j]) + a[i][j]; \u6ce8\u610f\u521d\u59cb\u5316\u6bcf\u884c\u591a\u4e00\u4e2a\u70b9 #include <iostream> using namespace std; const int N = 510, INF = 0x3f3f3f3f; int n, f[N][N], a[N][N]; int main() { cin >> n; for (int i = 1; i <= n; i++) { for (int j = 1; j <= i; j++) { cin >> a[i][j]; } } for (int i = 1; i <= n; i++) { for (int j = 0; j <= i + 1; j++) { f[i][j] = -INF; } } f[1][1] = a[1][1]; for (int i = 2; i <= n; i++) { for (int j = 1; j <= i; j++) { f[i][j] = max(f[i -1][j - 1], f[i - 1][j]) + a[i][j]; } } int res = -INF; for (int i = 1; i <= n; i++) { res = max(res, f[n][i]); } cout << res; return 0; } \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217 \u7ed9\u5b9a\u4e24\u4e2a\u957f\u5ea6\u5206\u522b\u4e3a N \u548c M \u7684\u5b57\u7b26\u4e32 A \u548c B\uff0c\u6c42\u65e2\u662f A \u7684\u5b50\u5e8f\u5217\u53c8\u662f B \u7684\u5b50\u5e8f\u5217\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u6700\u957f\u662f\u591a\u5c11\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 N \u548c M\u3002 \u7b2c\u4e8c\u884c\u5305\u542b\u4e00\u4e2a\u957f\u5ea6\u4e3a N \u7684\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u5b57\u7b26\u4e32 A\u3002 \u7b2c\u4e09\u884c\u5305\u542b\u4e00\u4e2a\u957f\u5ea6\u4e3a M \u7684\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u5b57\u7b26\u4e32 B\u3002 \u5b57\u7b26\u4e32\u5747\u7531\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u957f\u5ea6\u3002 \u6570\u636e\u8303\u56f4 1\u2264N,M\u22641000 \u8f93\u5165\u6837\u4f8b\uff1a 4 5 acbd abedc \u8f93\u51fa\u6837\u4f8b\uff1a 3 #include <iostream> using namespace std; const int N = 1010; int f[N][N], n, m; string a, b; int main() { scanf(\"%d %d\", &n, &m); cin >> a >> b; for (int i = 1; i <= n; i++) { for (int j = 1; j <= m; j++) { f[i][j] = max(f[i -1][j], f[i][j - 1]); if (a[i - 1] == b[j - 1]){ f[i][j] = max(f[i][j], f[i - 1][j - 1] + 1); } } } cout << f[n][m]; return 0; } \u77f3\u5b50\u5408\u5e76 \u8bbe\u6709 NN \u5806\u77f3\u5b50\u6392\u6210\u4e00\u6392\uff0c\u5176\u7f16\u53f7\u4e3a 1\uff0c2\uff0c3\uff0c\u2026\uff0cN\u3002 \u6bcf\u5806\u77f3\u5b50\u6709\u4e00\u5b9a\u7684\u8d28\u91cf\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u6574\u6570\u6765\u63cf\u8ff0\uff0c\u73b0\u5728\u8981\u5c06\u8fd9 N \u5806\u77f3\u5b50\u5408\u5e76\u6210\u4e3a\u4e00\u5806\u3002 \u6bcf\u6b21\u53ea\u80fd\u5408\u5e76\u76f8\u90bb\u7684\u4e24\u5806\uff0c\u5408\u5e76\u7684\u4ee3\u4ef7\u4e3a\u8fd9\u4e24\u5806\u77f3\u5b50\u7684\u8d28\u91cf\u4e4b\u548c\uff0c\u5408\u5e76\u540e\u4e0e\u8fd9\u4e24\u5806\u77f3\u5b50\u76f8\u90bb\u7684\u77f3\u5b50\u5c06\u548c\u65b0\u5806\u76f8\u90bb\uff0c\u5408\u5e76\u65f6\u7531\u4e8e\u9009\u62e9\u7684\u987a\u5e8f\u4e0d\u540c\uff0c\u5408\u5e76\u7684\u603b\u4ee3\u4ef7\u4e5f\u4e0d\u76f8\u540c\u3002 \u4f8b\u5982\u6709 4 \u5806\u77f3\u5b50\u5206\u522b\u4e3a 1 3 5 2 \uff0c \u6211\u4eec\u53ef\u4ee5\u5148\u5408\u5e76 1\u30012 \u5806\uff0c\u4ee3\u4ef7\u4e3a 4\uff0c\u5f97\u5230 4 5 2 \uff0c \u53c8\u5408\u5e76 1\uff0c2\u5806\uff0c\u4ee3\u4ef7\u4e3a 9\uff0c\u5f97\u5230 9 2 \uff0c\u518d\u5408\u5e76\u5f97\u5230 11\uff0c\u603b\u4ee3\u4ef7\u4e3a 4+9+11=24\uff1b \u5982\u679c\u7b2c\u4e8c\u6b65\u662f\u5148\u5408\u5e76 2\uff0c3\u5806\uff0c\u5219\u4ee3\u4ef7\u4e3a 7\uff0c\u5f97\u5230 4 7 \uff0c\u6700\u540e\u4e00\u6b21\u5408\u5e76\u4ee3\u4ef7\u4e3a 11\uff0c\u603b\u4ee3\u4ef7\u4e3a 4+7+11=22\u3002 \u95ee\u9898\u662f\uff1a\u627e\u51fa\u4e00\u79cd\u5408\u7406\u7684\u65b9\u6cd5\uff0c\u4f7f\u603b\u7684\u4ee3\u4ef7\u6700\u5c0f\uff0c\u8f93\u51fa\u6700\u5c0f\u4ee3\u4ef7\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u4e00\u4e2a\u6570 N \u8868\u793a\u77f3\u5b50\u7684\u5806\u6570 N\u3002 \u7b2c\u4e8c\u884c N \u4e2a\u6570\uff0c\u8868\u793a\u6bcf\u5806\u77f3\u5b50\u7684\u8d28\u91cf(\u5747\u4e0d\u8d85\u8fc7 1000)\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c0f\u4ee3\u4ef7\u3002 \u6570\u636e\u8303\u56f4 1\u2264N\u2264300 \u8f93\u5165\u6837\u4f8b\uff1a 4 1 3 5 2 \u8f93\u51fa\u6837\u4f8b\uff1a 22 min{f[i][k] + f[k+1][j] + s[j] - s[i - 1]} k= i -> j-1 #include <iostream> using namespace std; const int N = 310; int s[N], f[N][N]; int main() { int n; scanf(\"%d\", &n); for (int i = 1; i <= n; i++) { scanf(\"%d\", &s[i]); s[i] += s[i - 1]; } for (int len = 2; len <= n; len++) { for (int i = 1; i + len - 1 <= n; i++) { int j = i + len - 1; f[i][j] = 1e8; for (int k = i; k < j; k++) { f[i][j] = min(f[i][j], f[i][k] + f[k + 1][j] + s[j] - s[i - 1]); } } } cout << f[1][n]; return 0; } 1 <= xxx1yyy <= abcdefg 1.xxx=000 ~ abc-1, yyy=000~999 abc * 1000 2.xxx = abc 2.1 d < 1 abc1yyy > abc0efg 0 2.2 d = 1 yyy = 000 ~ efg efg+1 2.3 d > 1 yyy = 000 ~ 999 1000 f[i,j] i\u5217 j:\u884c\u6570\u4e8c\u8fdb\u5236 10010 1 <= xxx1yyy <= abcdefg 1. xxx=000~abc yyy=(000~999) -> abc*1000 2. xxx=abc d<1 abc1yyy yyy=0 d=1 yyy=(000~efg) -> efg+1 d>1 yyy=(000~999) -> 1000 f[ij] i\u5217 j \u884c\u6570\u4e8c\u8fdb\u5236 1.j&k == 0 2.j|k \u4e0d\u5b58\u5728\u8fde\u7eed\u5947\u6570\u4e2a0 f[ij] \u4ece0\u8d70\u5230j,\u8d70\u8fc7\u6240\u6709\u7684\u70b9\u662fi\u7684\u6240\u6709\u8def\u5f84 i:\u4e8c\u8fdb\u5236 1\u8d70\u8fc7 0\u6ca1\u6709\u8d70\u8fc7","title":"dp"},{"location":"algo/base/4dp/#1","text":"","title":"1\u80cc\u5305\u95ee\u9898"},{"location":"algo/base/4dp/#01","text":"\u6709 N \u4ef6\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u662f V \u7684\u80cc\u5305\u3002\u6bcf\u4ef6\u7269\u54c1\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\u3002 \u7b2c i \u4ef6\u7269\u54c1\u7684\u4f53\u79ef\u662f vi\uff0c\u4ef7\u503c\u662f wi\u3002 \u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u8fd9\u4e9b\u7269\u54c1\u7684\u603b\u4f53\u79ef\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u603b\u4ef7\u503c\u6700\u5927\u3002 \u8f93\u51fa\u6700\u5927\u4ef7\u503c\u3002","title":"01\u80cc\u5305\u95ee\u9898"},{"location":"algo/base/4dp/#_1","text":"\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570\uff0cN\uff0cV\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7269\u54c1\u6570\u91cf\u548c\u80cc\u5305\u5bb9\u79ef\u3002 \u63a5\u4e0b\u6765\u6709 N \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570 vi,wi\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7b2c i \u4ef6\u7269\u54c1\u7684\u4f53\u79ef\u548c\u4ef7\u503c\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/4dp/#_2","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u4ef7\u503c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/4dp/#_3","text":"0<N,V\u22641000 0<vi,wi\u22641000","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/4dp/#_4","text":"4 5 1 2 2 4 3 4 4 5","title":"\u8f93\u5165\u6837\u4f8b"},{"location":"algo/base/4dp/#_5","text":"8","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/4dp/#code","text":"","title":"code"},{"location":"algo/base/4dp/#_6","text":"#include <iostream> using namespace std; const int N = 1010; int v[N], w[N], n, m, f[N][N]; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) cin >> v[i] >> w[i]; for (int i = 1; i <= n; i++) { for (int j = 0; j <= m; j++) { f[i][j] = max(f[i][j], f[i - 1][j]); if (j >= v[i]) { f[i][j] = max(f[i][j], f[i - 1][j - v[i]] + w[i]); } } } cout << f[n][m]; return 0; }","title":"\u672a\u4f18\u5316"},{"location":"algo/base/4dp/#_7","text":"#include <iostream> using namespace std; const int N = 1010; int v[N], w[N], n, m, f[N]; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) cin >> v[i] >> w[i]; for (int i = 1; i <= n; i++) { for (int j = m; j >= v[i]; j--) { f[j] = max(f[j], f[j - v[i]] + w[i]); } } cout << f[m]; return 0; }","title":"\u4f18\u5316"},{"location":"algo/base/4dp/#_8","text":"\u6709 N \u79cd\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u662f V \u7684\u80cc\u5305\uff0c\u6bcf\u79cd\u7269\u54c1\u90fd\u6709\u65e0\u9650\u4ef6\u53ef\u7528\u3002 \u7b2c ii \u79cd\u7269\u54c1\u7684\u4f53\u79ef\u662f vi\uff0c\u4ef7\u503c\u662f wi\u3002 \u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u8fd9\u4e9b\u7269\u54c1\u7684\u603b\u4f53\u79ef\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u603b\u4ef7\u503c\u6700\u5927\u3002 \u8f93\u51fa\u6700\u5927\u4ef7\u503c\u3002","title":"\u5b8c\u5168\u80cc\u5305"},{"location":"algo/base/4dp/#_9","text":"\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570\uff0cN\uff0cV\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7269\u54c1\u79cd\u6570\u548c\u80cc\u5305\u5bb9\u79ef\u3002 \u63a5\u4e0b\u6765\u6709 N \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570 vi,wi\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7b2c i \u79cd\u7269\u54c1\u7684\u4f53\u79ef\u548c\u4ef7\u503c\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/4dp/#_10","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u4ef7\u503c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/4dp/#_11","text":"0<N,V\u22641000 0<vi,wi\u22641000","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/4dp/#_12","text":"4 5 1 2 2 4 3 4 4 5","title":"\u8f93\u5165\u6837\u4f8b"},{"location":"algo/base/4dp/#_13","text":"10","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/4dp/#code_1","text":"","title":"code"},{"location":"algo/base/4dp/#_14","text":"#include <iostream> using namespace std; const int N = 1010; int v[N], w[N], n, m, f[N][N]; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) cin >> v[i] >> w[i]; for (int i = 1; i <= n; i++) { for (int j = 0; j <= m; j++) { for (int k = 0; k * v[i] <= j; k++) { f[i][j] = max(f[i][j], f[i - 1][j - k * v[i]] + k * w[i]); } } } cout << f[n][m]; return 0; }","title":"\u672a\u4f18\u5316"},{"location":"algo/base/4dp/#_15","text":"#include <iostream> using namespace std; const int N = 1010; int v[N], w[N], n, m, f[N]; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) cin >> v[i] >> w[i]; for (int i = 1; i <= n; i++) { for (int j = v[i]; j <= m; j++) { f[j] = max(f[j], f[j - v[i]] + w[i]); } } cout << f[m]; return 0; } f[i][j] = i-1j, i-1j-v + w, i-1j-2v + 2w, ... fij-v = i-1j-v, i-1j-2v+w, ... ij = max(i-1j, ij-v + w)","title":"\u4f18\u5316"},{"location":"algo/base/4dp/#1_1","text":"\u6709 N \u79cd\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u662f V \u7684\u80cc\u5305\u3002 \u7b2c i \u79cd\u7269\u54c1\u6700\u591a\u6709 si \u4ef6\uff0c\u6bcf\u4ef6\u4f53\u79ef\u662f vi\uff0c\u4ef7\u503c\u662f wi\u3002 \u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u7269\u54c1\u4f53\u79ef\u603b\u548c\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u4ef7\u503c\u603b\u548c\u6700\u5927\u3002 \u8f93\u51fa\u6700\u5927\u4ef7\u503c\u3002","title":"\u591a\u91cd\u80cc\u53051"},{"location":"algo/base/4dp/#_16","text":"\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570\uff0cN\uff0cV\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7269\u54c1\u79cd\u6570\u548c\u80cc\u5305\u5bb9\u79ef\u3002 \u63a5\u4e0b\u6765\u6709 N \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570 vi,wi,si\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7b2c i \u79cd\u7269\u54c1\u7684\u4f53\u79ef\u3001\u4ef7\u503c\u548c\u6570\u91cf\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/4dp/#_17","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u4ef7\u503c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/4dp/#_18","text":"0<N,V\u2264100 0<vi,wi,si\u2264100","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/4dp/#_19","text":"4 5 1 2 3 2 4 1 3 4 3 4 5 2","title":"\u8f93\u5165\u6837\u4f8b"},{"location":"algo/base/4dp/#_20","text":"10 #include <iostream> using namespace std; const int N = 110; int n, m, v[N], w[N], s[N]; int f[N][N]; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) cin >> v[i] >> w[i] >> s[i]; for (int i = 1; i <= n; i++) { for (int j = 0; j <= m; j++) { for (int k = 0; k * v[i] <= j && k <= s[i]; k++) { f[i][j] = max(f[i][j], f[i - 1][j - k * v[i]] + k * w[i]); } } } cout << f[n][m]; return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/4dp/#ii","text":"\u6709 NN \u79cd\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u662f VV \u7684\u80cc\u5305\u3002 \u7b2c ii \u79cd\u7269\u54c1\u6700\u591a\u6709 sisi \u4ef6\uff0c\u6bcf\u4ef6\u4f53\u79ef\u662f vivi\uff0c\u4ef7\u503c\u662f wiwi\u3002 \u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u7269\u54c1\u4f53\u79ef\u603b\u548c\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u4ef7\u503c\u603b\u548c\u6700\u5927\u3002 \u8f93\u51fa\u6700\u5927\u4ef7\u503c\u3002","title":"\u591a\u91cd\u80cc\u5305II"},{"location":"algo/base/4dp/#_21","text":"\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570\uff0cN\uff0cV\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7269\u54c1\u79cd\u6570\u548c\u80cc\u5305\u5bb9\u79ef\u3002 \u63a5\u4e0b\u6765\u6709 NN \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570 vi,wi,sivi,wi,si\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u7b2c ii \u79cd\u7269\u54c1\u7684\u4f53\u79ef\u3001\u4ef7\u503c\u548c\u6570\u91cf\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/4dp/#_22","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u4ef7\u503c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/4dp/#_23","text":"0<N\u226410000<N\u22641000 0<V\u226420000<V\u22642000 0<vi,wi,si\u226420000<vi,wi,si\u22642000","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/4dp/#_24","text":"\u672c\u9898\u8003\u67e5\u591a\u91cd\u80cc\u5305\u7684\u4e8c\u8fdb\u5236\u4f18\u5316\u65b9\u6cd5\u3002","title":"\u63d0\u793a\uff1a"},{"location":"algo/base/4dp/#_25","text":"4 5 1 2 3 2 4 1 3 4 3 4 5 2","title":"\u8f93\u5165\u6837\u4f8b"},{"location":"algo/base/4dp/#_26","text":"10 0 1023 1 2 4 8 ... 512 0 - 512 \u53ef\u4ee5\u51d1\u51fa 0 1023\u4efb\u610f\u6570 #include <iostream> using namespace std; const int N = 11 * 2000 + 10, M = 2010; int n, m, v[N], w[N], f[N]; int main() { cin >> n >> m; int cnt = 0; for (int i = 1; i <= n; i++) { int a, b, c, k = 1; cin >> a >> b >> c; while (k <= c) { cnt++; v[cnt] = k * a; w[cnt] = k * b; c -= k; k *= 2; } if (c > 0) { cnt++, v[cnt] = c * a, w[cnt] = c * b; } } for (int i = 1; i <= cnt; i++) { for (int j = m; j >= v[i]; j--) { f[j] = max(f[j], f[j - v[i]] + w[i]); } } cout << f[m]; return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/4dp/#42","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \u72b6\u6001\u6570\u91cf * \u8f6c\u79fb\u8ba1\u7b97\u91cf f[i][j] = max(f[i - 1][j], f[i - 1][j]) + a[i][j]; \u6ce8\u610f\u521d\u59cb\u5316\u6bcf\u884c\u591a\u4e00\u4e2a\u70b9 #include <iostream> using namespace std; const int N = 510, INF = 0x3f3f3f3f; int n, f[N][N], a[N][N]; int main() { cin >> n; for (int i = 1; i <= n; i++) { for (int j = 1; j <= i; j++) { cin >> a[i][j]; } } for (int i = 1; i <= n; i++) { for (int j = 0; j <= i + 1; j++) { f[i][j] = -INF; } } f[1][1] = a[1][1]; for (int i = 2; i <= n; i++) { for (int j = 1; j <= i; j++) { f[i][j] = max(f[i -1][j - 1], f[i - 1][j]) + a[i][j]; } } int res = -INF; for (int i = 1; i <= n; i++) { res = max(res, f[n][i]); } cout << res; return 0; }","title":"4.2"},{"location":"algo/base/4dp/#_27","text":"\u7ed9\u5b9a\u4e24\u4e2a\u957f\u5ea6\u5206\u522b\u4e3a N \u548c M \u7684\u5b57\u7b26\u4e32 A \u548c B\uff0c\u6c42\u65e2\u662f A \u7684\u5b50\u5e8f\u5217\u53c8\u662f B \u7684\u5b50\u5e8f\u5217\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u6700\u957f\u662f\u591a\u5c11\u3002","title":"\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"},{"location":"algo/base/4dp/#_28","text":"\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 N \u548c M\u3002 \u7b2c\u4e8c\u884c\u5305\u542b\u4e00\u4e2a\u957f\u5ea6\u4e3a N \u7684\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u5b57\u7b26\u4e32 A\u3002 \u7b2c\u4e09\u884c\u5305\u542b\u4e00\u4e2a\u957f\u5ea6\u4e3a M \u7684\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u5b57\u7b26\u4e32 B\u3002 \u5b57\u7b26\u4e32\u5747\u7531\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/4dp/#_29","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u957f\u5ea6\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/4dp/#_30","text":"1\u2264N,M\u22641000","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/4dp/#_31","text":"4 5 acbd abedc","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/4dp/#_32","text":"3 #include <iostream> using namespace std; const int N = 1010; int f[N][N], n, m; string a, b; int main() { scanf(\"%d %d\", &n, &m); cin >> a >> b; for (int i = 1; i <= n; i++) { for (int j = 1; j <= m; j++) { f[i][j] = max(f[i -1][j], f[i][j - 1]); if (a[i - 1] == b[j - 1]){ f[i][j] = max(f[i][j], f[i - 1][j - 1] + 1); } } } cout << f[n][m]; return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/4dp/#_33","text":"\u8bbe\u6709 NN \u5806\u77f3\u5b50\u6392\u6210\u4e00\u6392\uff0c\u5176\u7f16\u53f7\u4e3a 1\uff0c2\uff0c3\uff0c\u2026\uff0cN\u3002 \u6bcf\u5806\u77f3\u5b50\u6709\u4e00\u5b9a\u7684\u8d28\u91cf\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u6574\u6570\u6765\u63cf\u8ff0\uff0c\u73b0\u5728\u8981\u5c06\u8fd9 N \u5806\u77f3\u5b50\u5408\u5e76\u6210\u4e3a\u4e00\u5806\u3002 \u6bcf\u6b21\u53ea\u80fd\u5408\u5e76\u76f8\u90bb\u7684\u4e24\u5806\uff0c\u5408\u5e76\u7684\u4ee3\u4ef7\u4e3a\u8fd9\u4e24\u5806\u77f3\u5b50\u7684\u8d28\u91cf\u4e4b\u548c\uff0c\u5408\u5e76\u540e\u4e0e\u8fd9\u4e24\u5806\u77f3\u5b50\u76f8\u90bb\u7684\u77f3\u5b50\u5c06\u548c\u65b0\u5806\u76f8\u90bb\uff0c\u5408\u5e76\u65f6\u7531\u4e8e\u9009\u62e9\u7684\u987a\u5e8f\u4e0d\u540c\uff0c\u5408\u5e76\u7684\u603b\u4ee3\u4ef7\u4e5f\u4e0d\u76f8\u540c\u3002 \u4f8b\u5982\u6709 4 \u5806\u77f3\u5b50\u5206\u522b\u4e3a 1 3 5 2 \uff0c \u6211\u4eec\u53ef\u4ee5\u5148\u5408\u5e76 1\u30012 \u5806\uff0c\u4ee3\u4ef7\u4e3a 4\uff0c\u5f97\u5230 4 5 2 \uff0c \u53c8\u5408\u5e76 1\uff0c2\u5806\uff0c\u4ee3\u4ef7\u4e3a 9\uff0c\u5f97\u5230 9 2 \uff0c\u518d\u5408\u5e76\u5f97\u5230 11\uff0c\u603b\u4ee3\u4ef7\u4e3a 4+9+11=24\uff1b \u5982\u679c\u7b2c\u4e8c\u6b65\u662f\u5148\u5408\u5e76 2\uff0c3\u5806\uff0c\u5219\u4ee3\u4ef7\u4e3a 7\uff0c\u5f97\u5230 4 7 \uff0c\u6700\u540e\u4e00\u6b21\u5408\u5e76\u4ee3\u4ef7\u4e3a 11\uff0c\u603b\u4ee3\u4ef7\u4e3a 4+7+11=22\u3002 \u95ee\u9898\u662f\uff1a\u627e\u51fa\u4e00\u79cd\u5408\u7406\u7684\u65b9\u6cd5\uff0c\u4f7f\u603b\u7684\u4ee3\u4ef7\u6700\u5c0f\uff0c\u8f93\u51fa\u6700\u5c0f\u4ee3\u4ef7\u3002","title":"\u77f3\u5b50\u5408\u5e76"},{"location":"algo/base/4dp/#_34","text":"\u7b2c\u4e00\u884c\u4e00\u4e2a\u6570 N \u8868\u793a\u77f3\u5b50\u7684\u5806\u6570 N\u3002 \u7b2c\u4e8c\u884c N \u4e2a\u6570\uff0c\u8868\u793a\u6bcf\u5806\u77f3\u5b50\u7684\u8d28\u91cf(\u5747\u4e0d\u8d85\u8fc7 1000)\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"algo/base/4dp/#_35","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c0f\u4ee3\u4ef7\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"algo/base/4dp/#_36","text":"1\u2264N\u2264300","title":"\u6570\u636e\u8303\u56f4"},{"location":"algo/base/4dp/#_37","text":"4 1 3 5 2","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"algo/base/4dp/#_38","text":"22 min{f[i][k] + f[k+1][j] + s[j] - s[i - 1]} k= i -> j-1 #include <iostream> using namespace std; const int N = 310; int s[N], f[N][N]; int main() { int n; scanf(\"%d\", &n); for (int i = 1; i <= n; i++) { scanf(\"%d\", &s[i]); s[i] += s[i - 1]; } for (int len = 2; len <= n; len++) { for (int i = 1; i + len - 1 <= n; i++) { int j = i + len - 1; f[i][j] = 1e8; for (int k = i; k < j; k++) { f[i][j] = min(f[i][j], f[i][k] + f[k + 1][j] + s[j] - s[i - 1]); } } } cout << f[1][n]; return 0; } 1 <= xxx1yyy <= abcdefg 1.xxx=000 ~ abc-1, yyy=000~999 abc * 1000 2.xxx = abc 2.1 d < 1 abc1yyy > abc0efg 0 2.2 d = 1 yyy = 000 ~ efg efg+1 2.3 d > 1 yyy = 000 ~ 999 1000 f[i,j] i\u5217 j:\u884c\u6570\u4e8c\u8fdb\u5236 10010 1 <= xxx1yyy <= abcdefg 1. xxx=000~abc yyy=(000~999) -> abc*1000 2. xxx=abc d<1 abc1yyy yyy=0 d=1 yyy=(000~efg) -> efg+1 d>1 yyy=(000~999) -> 1000 f[ij] i\u5217 j \u884c\u6570\u4e8c\u8fdb\u5236 1.j&k == 0 2.j|k \u4e0d\u5b58\u5728\u8fde\u7eed\u5947\u6570\u4e2a0 f[ij] \u4ece0\u8d70\u5230j,\u8d70\u8fc7\u6240\u6709\u7684\u70b9\u662fi\u7684\u6240\u6709\u8def\u5f84 i:\u4e8c\u8fdb\u5236 1\u8d70\u8fc7 0\u6ca1\u6709\u8d70\u8fc7","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"algo/base/%E8%B4%AA%E5%BF%83/","text":"\u533a\u95f4\u9009\u70b9 1.\u533a\u95f4\u53f3\u7aef\u70b9 \u4ece\u5c0f\u5230\u5927\u6392\u5e8f 2.\u4ece\u524d\u5f80\u540e\u4f9d\u6b21\u679a\u4e3e\u6bcf\u4e2a\u533a\u95f4(\u5982\u679c\u5305\u542b\u5219pass \u5426\u5219\u9009\u62e9\u5f53\u524d\u533a\u95f4\u7684\u53f3\u7aef\u70b9) ans <= cnt ans \u6700\u5c0f\u503c ans >= cnt \u6ca1\u6709\u4ea4\u96c6 \u81f3\u5c11\u9700\u8981cnt \u4e00\u79cd\u53ef\u884c\u65b9\u6848 ans >= cnt \u53cd\u8bc1\u6cd5\uff1a \u5982\u679cans > cnt \u5b58\u5728\u4e0d\u76f8\u4ea4\u533a\u95f4 cnt+1 \u4e2a\u70b9 ans <= cnt \u5047\u8bbeansans\u662f\u6700\u4f18\u89e3\uff0c\u8868\u793a\u6700\u591a\u6709ansans\u4e2a\u4e0d\u76f8\u4ea4\u7684\u533a\u95f4\uff1bcntcnt\u662f\u53ef\u884c\u89e3\uff0c\u8868\u793a\u7b97\u6cd5\u6c42\u51facntcnt\u4e2a\u4e0d\u76f8\u4ea4\u7684\u533a\u95f4\uff0c\u663e\u7136\u6709ans\u2265cntans\u2265cnt \u53cd\u8bc1\u6cd5\u8bc1\u660eans\u2264cntans\u2264cnt\u3002\u5047\u8bbeans>cntans>cnt\uff0c\u7531\u6700\u4f18\u89e3\u7684\u542b\u4e49\u77e5\uff0c\u6700\u591a\u6709ansans\u4e2a\u4e0d\u76f8\u4ea4\u7684\u533a\u95f4\uff0c\u56e0\u6b64\u81f3\u5c11\u9700\u8981ansans\u4e2a\u70b9\u624d\u80fd\u8986\u76d6\u6240\u6709\u533a\u95f4\uff0c\u800c\u6839\u636e\u7b97\u6cd5\u77e5\uff0c\u53ea\u9700cntcnt\u4e2a\u70b9\u5c31\u80fd\u8986\u76d6\u5168\u90e8\u533a\u95f4\uff0c\u4e14cnt<anscnt<ans\uff0c\u8fd9\u4e0e\u524d\u8fb9\u5206\u6790\u81f3\u5c11\u9700\u8981ansans\u4e2a\u70b9\u624d\u80fd\u8986\u76d6\u6240\u6709\u533a\u95f4\u76f8\u77db\u76fe\uff0c\u6545ans\u2264cntans\u2264cnt \u7efc\u4e0a\u6240\u8ff0ans=cnt","title":"\u8d2a\u5fc3"},{"location":"base/cpp/1base/","text":"+++ title = \"cpp\u57fa\u7840\" date = 2022-01-20T17:25:20+08:00 featured = false comment = true toc = true reward = true weight = 9 categories = [ \"tool\" ] tags = [ ] series = [ ] images = [] aliases = [ ] +++ file\u4f7f\u7528 \u57fa\u7840\u77e5\u8bc6 demo #include <iostream> using namespace std; int main() { // endl \u56de\u8f66 cout << \"hello word\" << endl; return 0; } \u53d8\u91cf \u53d8\u91cf\u7684\u5b9a\u4e49 \u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\u6ca1\u6709\u521d\u59cb\u5316\u5176\u503c\u4e0d\u786e\u5b9a \u51fd\u6570\u5916\u4f1a\u6709\u9ed8\u8ba4\u503c #include <iostream> using namespace std; int main() { int a = 10; int b = 2, c, d = 1; // \u9519\u8bef // int b, c = 1, 2; cout << a << b << c << d; return 0; } \u53d8\u91cf\u7c7b\u578b -2147483648 -2147483647 1 Byte = 8 bit long long int : 32\u4f4d \u4f7f\u7528 long long int 64 long int float i = 1.1f; double j = 1.2; long double k = 1.1; %d %lld long long int i = 1ll; %f %lf %llf \u8f93\u5165\u8f93\u51fa cstdio \u6bd4 iostream\u5feb\u4e00\u70b9 iostream #include <iostream> using namespace std; int main() { int i = 1; cin >> i; cout << i << endl; return 0; } cstdio #include <cstdio> using namespace std; int main() { long long int i; scanf(\"%lld\", &i); printf(\"%lld\", i); return 0; } int\uff1a%d gloat: %f, \u9ed8\u8ba4\u4fdd\u75596\u4f4d\u5c0f\u6570 double: %lf\uff0c \u9ed8\u8ba4\u4fdd\u75596\u4f4d\u5c0f\u6570 float, double\u7b49\u8f93\u51fa\u4fdd\u7559\u82e5\u5e72\u4f4d\u5c0f\u6570\u65f6\u7528\uff1a%.4f, %3lf %8.3f, \u8868\u793a\u8fd9\u4e2a\u6d6e\u70b9\u6570\u7684\u6700\u5c0f\u5bbd\u5ea6\u4e3a8\uff0c\u4fdd\u75593\u4f4d\u5c0f\u6570\uff0c\u5f53\u5bbd\u5ea6\u4e0d\u8db3\u65f6\u5728\u524d\u9762\u8865\u7a7a\u683c\u3002 %-8.3f\uff0c\u8868\u793a\u6700\u5c0f\u5bbd\u5ea6\u4e3a8\uff0c\u4fdd\u75593\u4f4d\u5c0f\u6570\uff0c\u5f53\u5bbd\u5ea6\u4e0d\u8db3\u65f6\u5728\u540e\u9762\u8865\u4e0a\u7a7a\u683c %08.3f, \u8868\u793a\u6700\u5c0f\u5bbd\u5ea6\u4e3a8\uff0c\u4fdd\u75593\u4f4d\u5c0f\u6570\uff0c\u5f53\u5bbd\u5ea6\u4e0d\u8db3\u65f6\u5728\u524d\u9762\u8865\u4e0a0 \u7b97\u6570\u8fd0\u7b97 \u4fe9\u4e2a\u8ba1\u7b97\u81ea\u52a8\u8f6c\u4e3a\u7cbe\u5ea6\u9ad8\u7684\u6570\u636e\u7c7b\u578b x % y \u7ed3\u679c\u548cx\u6b63\u8d1f\u4e00\u76f4 \u524d\u52a0\u52a0 \u540e\u52a0\u52a0 \u524d\u51cf\u51cf \u540e\u51cf\u51cf \u7c7b\u578b\u8f6c\u6362 long long int i = 10ll; int j = (int)i; pow\uff08double, double\uff09 \u51e0\u6b21\u65b9 sqrt(int) \u5f00 100 50 20 10 5 1 \u5c3d\u91cf\u4f7f\u7528\u5927\u7684\uff0c\u6570\u91cf\u7528\u7684\u5c31\u5c11 string #include <cstdio> #include <iostream> #include <string> using namespace std; int main() { string name; double base; double ex; cin >> name; scanf(\"%lf %lf\", &base, &ex); double res = base + 0.15 * ex; printf(\"TOTAL = R$ %.2lf\", res); return 0; } abs(-1) 1 abs(-1.5) 1.5 \u9898\u76ee \u8bfb\u53d6\u4e00\u4e2a\u5e26\u6709\u4e24\u4e2a\u5c0f\u6570\u4f4d\u7684\u6d6e\u70b9\u6570\uff0c\u8fd9\u4ee3\u8868\u8d27\u5e01\u4ef7\u503c\u3002 \u5728\u6b64\u4e4b\u540e\uff0c\u5c06\u8be5\u503c\u5206\u89e3\u4e3a\u591a\u79cd\u949e\u7968\u4e0e\u786c\u5e01\u7684\u548c\uff0c\u6bcf\u79cd\u9762\u503c\u7684\u949e\u7968\u548c\u786c\u5e01\u4f7f\u7528\u6570\u91cf\u4e0d\u9650\uff0c\u8981\u6c42\u4f7f\u7528\u7684\u949e\u7968\u548c\u786c\u5e01\u7684\u6570\u91cf\u5c3d\u53ef\u80fd\u5c11\u3002 \u949e\u7968\u7684\u9762\u503c\u662f 100,50,20,10,5,2100,50,20,10,5,2\u3002 \u786c\u5e01\u7684\u9762\u503c\u662f 1,0.50,0.25,0.10,0.051,0.50,0.25,0.10,0.05 \u548c 0.010.01\u3002 \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u4e00\u4e2a\u6d6e\u70b9\u6570 NN\u3002 \u8f93\u51fa\u683c\u5f0f \u53c2\u7167\u8f93\u51fa\u6837\u4f8b\uff0c\u8f93\u51fa\u6bcf\u79cd\u9762\u503c\u7684\u949e\u7968\u548c\u786c\u5e01\u7684\u9700\u6c42\u6570\u91cf\u3002 \u6570\u636e\u8303\u56f4 0\u2264N\u22641000000.000\u2264N\u22641000000.00 \u8f93\u5165\u6837\u4f8b\uff1a 576.73 \u8f93\u51fa\u6837\u4f8b\uff1a NOTAS: 5 nota(s) de R$ 100.00 1 nota(s) de R$ 50.00 1 nota(s) de R$ 20.00 0 nota(s) de R$ 10.00 1 nota(s) de R$ 5.00 0 nota(s) de R$ 2.00 MOEDAS: 1 moeda(s) de R$ 1.00 1 moeda(s) de R$ 0.50 0 moeda(s) de R$ 0.25 2 moeda(s) de R$ 0.10 0 moeda(s) de R$ 0.05 3 moeda(s) de R$ 0.01 #include <iostream> #include <cstdio> using namespace std; int main() { double N; cin >> N; int n = (int)(N * 100); printf(\"NOTAS:\\n\"); printf(\"%d nota(s) de R$ 100.00\\n\", n / 10000);n %= 10000; printf(\"%d nota(s) de R$ 50.00\\n\", n / 5000);n %= 5000; printf(\"%d nota(s) de R$ 20.00\\n\", n / 2000);n %= 2000; printf(\"%d nota(s) de R$ 10.00\\n\", n / 1000);n %= 1000; printf(\"%d nota(s) de R$ 5.00\\n\", n / 500);n %= 500; printf(\"%d nota(s) de R$ 2.00\\n\", n / 200);n %= 200; printf(\"MOEDAS:\\n\"); printf(\"%d moeda(s) de R$ 1.00\\n\", n / 100);n %= 100; printf(\"%d moeda(s) de R$ 0.50\\n\", n / 50);n %= 50; printf(\"%d moeda(s) de R$ 0.25\\n\", n / 25);n %= 25; printf(\"%d moeda(s) de R$ 0.10\\n\", n / 10);n %= 10; printf(\"%d moeda(s) de R$ 0.05\\n\", n / 5);n %= 5; printf(\"%d moeda(s) de R$ 0.01\\n\", n / 1); return 0; }","title":"1base"},{"location":"base/cpp/1base/#_1","text":"","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"base/cpp/1base/#demo","text":"#include <iostream> using namespace std; int main() { // endl \u56de\u8f66 cout << \"hello word\" << endl; return 0; }","title":"demo"},{"location":"base/cpp/1base/#_2","text":"","title":"\u53d8\u91cf"},{"location":"base/cpp/1base/#_3","text":"\u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\u6ca1\u6709\u521d\u59cb\u5316\u5176\u503c\u4e0d\u786e\u5b9a \u51fd\u6570\u5916\u4f1a\u6709\u9ed8\u8ba4\u503c #include <iostream> using namespace std; int main() { int a = 10; int b = 2, c, d = 1; // \u9519\u8bef // int b, c = 1, 2; cout << a << b << c << d; return 0; }","title":"\u53d8\u91cf\u7684\u5b9a\u4e49"},{"location":"base/cpp/1base/#_4","text":"-2147483648 -2147483647 1 Byte = 8 bit long long int : 32\u4f4d \u4f7f\u7528 long long int 64 long int float i = 1.1f; double j = 1.2; long double k = 1.1; %d %lld long long int i = 1ll; %f %lf %llf","title":"\u53d8\u91cf\u7c7b\u578b"},{"location":"base/cpp/1base/#_5","text":"cstdio \u6bd4 iostream\u5feb\u4e00\u70b9","title":"\u8f93\u5165\u8f93\u51fa"},{"location":"base/cpp/1base/#iostream","text":"#include <iostream> using namespace std; int main() { int i = 1; cin >> i; cout << i << endl; return 0; }","title":"iostream"},{"location":"base/cpp/1base/#cstdio","text":"#include <cstdio> using namespace std; int main() { long long int i; scanf(\"%lld\", &i); printf(\"%lld\", i); return 0; } int\uff1a%d gloat: %f, \u9ed8\u8ba4\u4fdd\u75596\u4f4d\u5c0f\u6570 double: %lf\uff0c \u9ed8\u8ba4\u4fdd\u75596\u4f4d\u5c0f\u6570 float, double\u7b49\u8f93\u51fa\u4fdd\u7559\u82e5\u5e72\u4f4d\u5c0f\u6570\u65f6\u7528\uff1a%.4f, %3lf %8.3f, \u8868\u793a\u8fd9\u4e2a\u6d6e\u70b9\u6570\u7684\u6700\u5c0f\u5bbd\u5ea6\u4e3a8\uff0c\u4fdd\u75593\u4f4d\u5c0f\u6570\uff0c\u5f53\u5bbd\u5ea6\u4e0d\u8db3\u65f6\u5728\u524d\u9762\u8865\u7a7a\u683c\u3002 %-8.3f\uff0c\u8868\u793a\u6700\u5c0f\u5bbd\u5ea6\u4e3a8\uff0c\u4fdd\u75593\u4f4d\u5c0f\u6570\uff0c\u5f53\u5bbd\u5ea6\u4e0d\u8db3\u65f6\u5728\u540e\u9762\u8865\u4e0a\u7a7a\u683c %08.3f, \u8868\u793a\u6700\u5c0f\u5bbd\u5ea6\u4e3a8\uff0c\u4fdd\u75593\u4f4d\u5c0f\u6570\uff0c\u5f53\u5bbd\u5ea6\u4e0d\u8db3\u65f6\u5728\u524d\u9762\u8865\u4e0a0","title":"cstdio"},{"location":"base/cpp/1base/#_6","text":"","title":"\u7b97\u6570\u8fd0\u7b97"},{"location":"base/cpp/1base/#_7","text":"x % y \u7ed3\u679c\u548cx\u6b63\u8d1f\u4e00\u76f4","title":"\u4fe9\u4e2a\u8ba1\u7b97\u81ea\u52a8\u8f6c\u4e3a\u7cbe\u5ea6\u9ad8\u7684\u6570\u636e\u7c7b\u578b"},{"location":"base/cpp/1base/#_8","text":"","title":"\u524d\u52a0\u52a0 \u540e\u52a0\u52a0 \u524d\u51cf\u51cf \u540e\u51cf\u51cf"},{"location":"base/cpp/1base/#_9","text":"long long int i = 10ll; int j = (int)i; pow\uff08double, double\uff09 \u51e0\u6b21\u65b9 sqrt(int) \u5f00 100 50 20 10 5 1 \u5c3d\u91cf\u4f7f\u7528\u5927\u7684\uff0c\u6570\u91cf\u7528\u7684\u5c31\u5c11 string #include <cstdio> #include <iostream> #include <string> using namespace std; int main() { string name; double base; double ex; cin >> name; scanf(\"%lf %lf\", &base, &ex); double res = base + 0.15 * ex; printf(\"TOTAL = R$ %.2lf\", res); return 0; } abs(-1) 1 abs(-1.5) 1.5","title":"\u7c7b\u578b\u8f6c\u6362"},{"location":"base/cpp/1base/#_10","text":"\u8bfb\u53d6\u4e00\u4e2a\u5e26\u6709\u4e24\u4e2a\u5c0f\u6570\u4f4d\u7684\u6d6e\u70b9\u6570\uff0c\u8fd9\u4ee3\u8868\u8d27\u5e01\u4ef7\u503c\u3002 \u5728\u6b64\u4e4b\u540e\uff0c\u5c06\u8be5\u503c\u5206\u89e3\u4e3a\u591a\u79cd\u949e\u7968\u4e0e\u786c\u5e01\u7684\u548c\uff0c\u6bcf\u79cd\u9762\u503c\u7684\u949e\u7968\u548c\u786c\u5e01\u4f7f\u7528\u6570\u91cf\u4e0d\u9650\uff0c\u8981\u6c42\u4f7f\u7528\u7684\u949e\u7968\u548c\u786c\u5e01\u7684\u6570\u91cf\u5c3d\u53ef\u80fd\u5c11\u3002 \u949e\u7968\u7684\u9762\u503c\u662f 100,50,20,10,5,2100,50,20,10,5,2\u3002 \u786c\u5e01\u7684\u9762\u503c\u662f 1,0.50,0.25,0.10,0.051,0.50,0.25,0.10,0.05 \u548c 0.010.01\u3002","title":"\u9898\u76ee"},{"location":"base/cpp/1base/#_11","text":"\u8f93\u5165\u4e00\u4e2a\u6d6e\u70b9\u6570 NN\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/1base/#_12","text":"\u53c2\u7167\u8f93\u51fa\u6837\u4f8b\uff0c\u8f93\u51fa\u6bcf\u79cd\u9762\u503c\u7684\u949e\u7968\u548c\u786c\u5e01\u7684\u9700\u6c42\u6570\u91cf\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/1base/#_13","text":"0\u2264N\u22641000000.000\u2264N\u22641000000.00","title":"\u6570\u636e\u8303\u56f4"},{"location":"base/cpp/1base/#_14","text":"576.73","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/1base/#_15","text":"NOTAS: 5 nota(s) de R$ 100.00 1 nota(s) de R$ 50.00 1 nota(s) de R$ 20.00 0 nota(s) de R$ 10.00 1 nota(s) de R$ 5.00 0 nota(s) de R$ 2.00 MOEDAS: 1 moeda(s) de R$ 1.00 1 moeda(s) de R$ 0.50 0 moeda(s) de R$ 0.25 2 moeda(s) de R$ 0.10 0 moeda(s) de R$ 0.05 3 moeda(s) de R$ 0.01 #include <iostream> #include <cstdio> using namespace std; int main() { double N; cin >> N; int n = (int)(N * 100); printf(\"NOTAS:\\n\"); printf(\"%d nota(s) de R$ 100.00\\n\", n / 10000);n %= 10000; printf(\"%d nota(s) de R$ 50.00\\n\", n / 5000);n %= 5000; printf(\"%d nota(s) de R$ 20.00\\n\", n / 2000);n %= 2000; printf(\"%d nota(s) de R$ 10.00\\n\", n / 1000);n %= 1000; printf(\"%d nota(s) de R$ 5.00\\n\", n / 500);n %= 500; printf(\"%d nota(s) de R$ 2.00\\n\", n / 200);n %= 200; printf(\"MOEDAS:\\n\"); printf(\"%d moeda(s) de R$ 1.00\\n\", n / 100);n %= 100; printf(\"%d moeda(s) de R$ 0.50\\n\", n / 50);n %= 50; printf(\"%d moeda(s) de R$ 0.25\\n\", n / 25);n %= 25; printf(\"%d moeda(s) de R$ 0.10\\n\", n / 10);n %= 10; printf(\"%d moeda(s) de R$ 0.05\\n\", n / 5);n %= 5; printf(\"%d moeda(s) de R$ 0.01\\n\", n / 1); return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/","text":"\u57fa\u7840\u77e5\u8bc6 \u5b57\u7b26 \u6bcf\u4e2a\u5e38\u7528\u5b57\u7b26\u90fd\u5bf9\u5e94\u4e00\u4e2a-128~127\u7684\u6570\u5b57\uff0c\u4e8c\u8005\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8f6c\u5316 \u5e38\u7528ASCII\u503c\uff1a\u2019A\u2019-\u2018Z\u2019 \u662f65~90\uff0c\u2019a\u2019-\u2018z\u2019\u662f97-122\uff0c\u20190\u2019-\u20189\u2019\u662f48-57\u3002 \u5b57\u7b26\u53ef\u4ee5\u53c2\u4e0e\u8fd0\u7b97\uff0c\u8fd0\u7b97\u65f6\u4f1a\u5c06\u5176\u5f53\u505a\u6574\u6570\uff1a #include <iostream> using namespace std; int main() { char ch = 'a'; cout << (int)ch << endl; ch++; cout << ch; return 0; } \u5b57\u7b26\u6570\u7ec4\u7684\u4f7f\u7528 \u5b57\u7b26\u4e32\u5c31\u662f\u5b57\u7b26\u6570\u7ec4\u52a0\u4e0a\u7ed3\u675f\u7b26\u2019\\0\u2019\u3002 \u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u6765\u521d\u59cb\u5316\u5b57\u7b26\u6570\u7ec4\uff0c\u4f46\u6b64\u65f6\u8981\u6ce8\u610f\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7ed3\u5c3e\u4f1a\u6697\u542b\u4e00\u4e2a\u2019\\0\u2019\u5b57\u7b26\uff0c\u56e0\u6b64\u5b57\u7b26\u6570\u7ec4\u7684\u957f\u5ea6\u81f3\u5c11\u8981\u6bd4\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u591a1\uff01 \u58f0\u660e #include <iostream> using namespace std; int main() { // a0 \u8fd9\u79cd\u4e00\u5b9a\u8981\u52a0\\0 char a0[10] = {'a', 'b', '\\0'}; // a1 a2\u81ea\u52a8\u52a0\u4e86\\0 char a1[10] = \"hello\"; char a2[] = \"aa\"; cout << a1 << endl << a2 << endl; cout << a0; return 0; } \u8f93\u5165\u8f93\u51fa \u57fa\u672c\u7684\u8f93\u5165\u8f93\u51fa #include <iostream> using namespace std; int main() { char s[100]; // 1 cin >> s; cout << s; // 2 char s1[100]; scanf(\"%s\", s); printf(\"%s\", s); return 0; //3 \u6ce8\u610f\u7684\uff1a\u5c06\u8bfb\u5165\u7684\u5b57\u7b26\u4e32\u5b58\u5230\u6570\u7ec4\u7d22\u5f15\u4e3a1\u7684\u5730\u65b9 char s2[100]; scanf(\"%s\", s2 + 1); cout << s2 + 1; return 0; } \u8bfb\u4e00\u884c\u5b57\u7b26\u4e32 fgets\u5305\u542b\\n \u4e0d\u4f1a\u8fc7\u6ee4\\n fgets \u4e5f\u662fiostream\u91cc\u9762\u7684 #include <iostream> #include <cstdio> using namespace std; int main() { char s1[100]; // 1 fgets(s1, 100, stdin); string s2; //2 getline \u4e0d\u80fd\u662f\u5b57\u7b26\u6570\u7ec4 getline(cin, s2); cout << s2; char s3[100]; // 3 cin.getline(s3, 100); // 4 puts(s3); return 0; } \u5b57\u7b26\u6570\u7ec4\u5e38\u7528\u7684\u51fd\u6570 cstring strlen(str)\uff0c\u6c42\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 strcmp(a, b)\uff0c\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\uff0ca < b \u8fd4\u56de-1\uff0ca == b \u8fd4\u56de0\uff0ca > b\u8fd4\u56de1\u3002\u8fd9\u91cc\u7684\u6bd4\u8f83\u65b9\u5f0f\u662f\u5b57\u5178\u5e8f\uff01 strcpy(a, b)\uff0c\u5c06\u5b57\u7b26\u4e32b\u590d\u5236\u7ed9\u4ecea\u5f00\u59cb\u7684\u5b57\u7b26\u6570\u7ec4\u3002 #include <iostream> #include <cstring> using namespace std; int main() { char s1[100], s2[100]; cin >> s1 >> s2; //1 \u5b57\u7b26\u4e32\u7684\u957f\u5ea6 cout << strlen(s1) << endl << strlen(s2); cout << endl; // \u5b57\u7b26\u4e32\u6bd4\u8f83 cout << strcmp(s1, s2) << endl; // 3 s2 \u8d4b\u503c\u7ed9 s1 strcpy(s1, s2); cout << s1 << s2; return 0; } \u5b57\u7b26\u4e32\u7684\u904d\u5386 #include <iostream> #include <cstring> using namespace std; int main() { char s1[100]; cin >> s1; for (int i = 0, len = strlen(s1); i < len; i++) cout << s1[i]; return 0; } string \u58f0\u660e\u521d\u59cb\u5316 #include <iostream> using namespace std; int main() { string s1 = \"aaa\"; cout << s1; return 0; } \u8f93\u5165\u8f93\u51fa #include<iostream> // #include <cstdio> using namespace std; int main() { string s1; // 1 cin >> s1; cout << s1 << endl; // 2\u4e0d\u80fd\u4f7f\u7528scanf printf(\"%s\", s1.c_str()); puts(s1.c_str()); string s2; //3 \u8bfb\u4e00\u884c getline(cin, s2); cout << s2; return 0; } \u57fa\u672c\u4f7f\u7528 string\u7684empty\u548csize\u64cd\u4f5c\uff08\u6ce8\u610fsize\u662f\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u56e0\u6b64 s.size() <= -1\u4e00\u5b9a\u6210\u7acb\uff09 \u652f\u6301 > < >= <= == !=\u7b49\u6240\u6709\u6bd4\u8f83\u64cd\u4f5c\uff0c\u6309\u5b57\u5178\u5e8f\u8fdb\u884c\u6bd4\u8f83 \u5b57\u7b26\u4e32\u76f8\u52a0\u81f3\u5c11\u8981\u6709\u4e00\u4e2astring \u5bf9\u8c61 #include<iostream> // #include <cstdio> using namespace std; int main() { // 1.1 string str3 = \"aa\", str4; cout << str3.empty() << endl; cout << str4.empty() << endl; // 1.2 cout << str3.size() << \"size\\n\"; // 2 cout << (str3 < str4); str4 += str3; cout << str4; // \u4f1a\u62a5\u9519 \u786e\u4fdd\u5de6\u53f3\u4fe9\u8fb9\u81f3\u5c11\u6709\u4e00\u4e2a\u5bf9\u8c61 // \"helo\" \"aa\" \u5747\u4e3a\u5b57\u9762\u91cf string str5 = \"helo\" + \"aa\"; return 0; } \u8303\u56f4\u904d\u5386 auto\u53ef\u4ee5\u81ea\u52a8\u5224\u65ad\u7c7b\u578b #include <iostream> using namespace std; int main() { string s1 = \"aaa bbb ccc\"; // \u8303\u56f4\u904d\u5386 for (auto &ch : s1) { cout << ch << endl; ch = 'a'; } // auto \u7f16\u8bd1\u5668\u81ea\u5df1\u53bb\u731c\u53d8\u91cf\u662f\u4ec0\u4e48\u7c7b\u578b cout << s1; return 0; } \u5f00\u59cb\u4f4d\u7f6e \u51e0\u4e2a\u5b57\u7b26 substr(start, cout) //\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5b57\u7b26 s1.pop_back() // start len s1.substr(0, 10) \u4e60\u9898 \u66ff\u6362\u5b57\u7b26 \u7ed9\u5b9a\u4e00\u4e2a\u7531\u5927\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u7684\u5b57\u7b26\u4e32\u3002 \u628a\u8be5\u5b57\u7b26\u4e32\u4e2d\u7279\u5b9a\u7684\u5b57\u7b26\u5168\u90e8\u7528\u5b57\u7b26 # \u66ff\u6362\u3002 \u8bf7\u4f60\u8f93\u51fa\u66ff\u6362\u540e\u7684\u5b57\u7b26\u4e32\u3002 \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u5171\u4e24\u884c\u3002 \u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u957f\u5ea6\u4e0d\u8d85\u8fc7 3030 \u7684\u5b57\u7b26\u4e32\u3002 \u7b2c\u4e8c\u884c\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\uff0c\u8868\u793a\u8981\u66ff\u6362\u6389\u7684\u7279\u5b9a\u5b57\u7b26\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u5171\u4e00\u884c\uff0c\u4e3a\u66ff\u6362\u540e\u7684\u5b57\u7b26\u4e32\u3002 \u8f93\u5165\u6837\u4f8b\uff1a hello l \u8f93\u51fa\u6837\u4f8b\uff1a he##o \u51fa\u9519 // cin.getline \u4f1a\u8ba1\u7b97\\0 #include <iostream> #include <cstring> using namespace std; int main() { char s1[31], ch; // cin.getline \u4f1a\u8ba1\u7b97\\0 cin.getline(s1, 31); cin >> ch; // cout << ch; for (int i = 0, len = strlen(s1); i < len; i++) { if (s1[i] == ch) s1[i] = '#'; } cout << s1; return 0; } \u7edf\u8ba1\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26 \u7ed9\u4f60\u4e00\u4e2a\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\u3002 \u8bf7\u4f60\u5224\u65ad\u662f\u5426\u5b58\u5728\u53ea\u5728\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u5b57\u7b26\u3002 \u5982\u679c\u5b58\u5728\uff0c\u5219\u8f93\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u7b26\u4e2d\u4f4d\u7f6e\u6700\u9760\u524d\u7684\u90a3\u4e2a\u3002 \u5982\u679c\u6ca1\u6709\uff0c\u8f93\u51fa no \u3002 \u8f93\u5165\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u7531\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u7684\u5b57\u7b26\u4e32\u3002 \u6570\u636e\u4fdd\u8bc1\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 100000100000\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u3002 \u5982\u679c\u6ca1\u6709\uff0c\u5219\u8f93\u51fa no \u3002 \u8f93\u5165\u6837\u4f8b\uff1a abceabcd \u8f93\u51fa\u6837\u4f8b\uff1a e \u51fa\u9519 \u6ca1\u6709\u60f3\u5230\u8fd9\u79cd\u65b9\u6cd5 #include <iostream> #include <cstring> using namespace std; int main() { char s1[100000]; cin >> s1; int c[26] = {0}; for (int i = 0, len = strlen(s1); i < len; i++) c[s1[i] - 'a'] += 1; for (int i = 0, len = strlen(s1); i < len; i++) { if(c[s1[i] - 'a'] == 1){ cout << s1[i]; return 0; } } cout << \"no\"; return 0; } \u5ffd\u7565\u5927\u5c0f\u5199\u6bd4\u8f83\u5b57\u7b26\u4e32 \u4e00\u822c\u6211\u4eec\u7528 strcmpstrcmp \u53ef\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\uff0c\u6bd4\u8f83\u65b9\u6cd5\u4e3a\u5bf9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4ece\u524d\u5f80\u540e\u9010\u4e2a\u5b57\u7b26\u76f8\u6bd4\u8f83\uff08\u6309 ASCII \u7801\u503c\u5927\u5c0f\u6bd4\u8f83\uff09\uff0c\u76f4\u5230\u51fa\u73b0\u4e0d\u540c\u7684\u5b57\u7b26\u6216\u9047\u5230 \\0 \u4e3a\u6b62\u3002 \u5982\u679c\u5168\u90e8\u5b57\u7b26\u90fd\u76f8\u540c\uff0c\u5219\u8ba4\u4e3a\u76f8\u540c\uff1b\u5982\u679c\u51fa\u73b0\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u5219\u4ee5\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\u7684\u6bd4\u8f83\u7ed3\u679c\u4e3a\u51c6\u3002 \u4f46\u5728\u6709\u4e9b\u65f6\u5019\uff0c\u6211\u4eec\u6bd4\u8f83\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u65f6\uff0c\u5e0c\u671b\u5ffd\u7565\u5b57\u6bcd\u7684\u5927\u5c0f\uff0c\u4f8b\u5982 Hello \u548c hello \u5728\u5ffd\u7565\u5b57\u6bcd\u5927\u5c0f\u5199\u65f6\u662f\u76f8\u7b49\u7684\u3002 \u8bf7\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5bf9\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u5ffd\u7565\u5b57\u6bcd\u5927\u5c0f\u5199\u7684\u5927\u5c0f\u6bd4\u8f83\u3002 \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u4e3a\u4e24\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5171\u4e24\u4e2a\u5b57\u7b26\u4e32\u3002\u6ce8\u610f\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5305\u542b\u7a7a\u683c\u3002 \u6570\u636e\u4fdd\u8bc1\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u90fd\u4e0d\u8d85\u8fc7 8080\u3002 \u8f93\u51fa\u683c\u5f0f \u5982\u679c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6bd4\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u5c0f\uff0c\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26 < \u3002 \u5982\u679c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6bd4\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u5927\uff0c\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26 > \u3002 \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\uff0c\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26 = \u3002 \u8f93\u5165\u6837\u4f8b\uff1a Hello hello \u8f93\u51fa\u6837\u4f8b\uff1a = \u95ee\u9898 1.\u6ca1\u60f3\u5230\u5b57\u7b26\u4e32\u5168\u90e8\u8f6c\u4e3a\u5c0f\u5199 2.fgets() \u9700\u8981\u6211\u4eec\u8fc7\u6ee4\u6389 \\n #include <iostream> #include <cstring> using namespace std; int main() { char a[81], b[81]; cin.getline(a, 81); cin.getline(b, 81); for (int i = 0, len = strlen(a); i < len; i++) { if (a[i] >= 'A' && a[i] <= 'Z') { a[i] = 'a' + a[i] - 'A'; } } for (int i = 0, len = strlen(b); i < len; i++) { if (b[i] >= 'A' && b[i] <= 'Z') { b[i] = 'a' + b[i] - 'A'; } } if (a[strlen(a) - 1] == '\\n') a[strlen(a) - 1] = 0; if (b[strlen(b) - 1] == '\\n') b[strlen(b) - 1] = 0; int t = strcmp(a, b); if (t == 0) puts(\"=\"); else if (t > 0) puts(\">\"); else puts(\"<\"); return 0; } 766\u53bb\u6389\u591a\u4f59\u7684\u7a7a\u683c \u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u8fde\u7eed\u7684\u7a7a\u683c\uff0c\u8bf7\u5c06\u591a\u4f59\u7684\u7a7a\u683c\u53bb\u6389\uff0c\u53ea\u7559\u4e0b\u4e00\u4e2a\u7a7a\u683c\u3002 \u8f93\u5165\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u53bb\u6389\u591a\u4f59\u7a7a\u683c\u540e\u7684\u5b57\u7b26\u4e32\uff0c\u5360\u4e00\u884c\u3002 \u6570\u636e\u8303\u56f4 \u8f93\u5165\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 200200\u3002 \u4fdd\u8bc1\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u548c\u7ed3\u5c3e\u6ca1\u6709\u7a7a\u683c\u3002 \u8f93\u5165\u6837\u4f8b\uff1a Hello world.This is c language. \u8f93\u51fa\u6837\u4f8b\uff1a Hello world.This is c language. #include <iostream> using namespace std; int main() { string s; while(cin >> s) cout << s << ' '; return 0; } #include <iostream> using namespace std; int main() { string s; getline(cin, s); string r; for (int i = 0; i < s.size(); i++) { if (s[i] != ' ') r += s[i]; else { r += ' '; int j = i + 1; while (j < s.size() && s[j] == ' ') j++; // i++ i = j - 1; } } cout << r.c_str(); return 0; } 767\u4fe1\u606f\u52a0\u5bc6 \u5728\u4f20\u8f93\u4fe1\u606f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u4fe1\u606f\u7684\u5b89\u5168\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u539f\u4fe1\u606f\u8fdb\u884c\u52a0\u5bc6\u5904\u7406\uff0c\u5f62\u6210\u52a0\u5bc6\u4fe1\u606f\uff0c\u4ece\u800c\u4f7f\u5f97\u4fe1\u606f\u5185\u5bb9\u4e0d\u4f1a\u88ab\u76d1\u542c\u8005\u7a83\u53d6\u3002 \u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5bf9\u5176\u8fdb\u884c\u52a0\u5bc6\u5904\u7406\u3002 \u52a0\u5bc6\u7684\u89c4\u5219\u5982\u4e0b\uff1a \u5b57\u7b26\u4e32\u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\uff0caa \u52a0\u5bc6\u4e3a bb\uff0cbb \u52a0\u5bc6\u4e3a cc\uff0c\u2026\uff0cyy \u52a0\u5bc6\u4e3a zz\uff0czz \u52a0\u5bc6\u4e3a aa\u3002 \u5b57\u7b26\u4e32\u4e2d\u7684\u5927\u5199\u5b57\u6bcd\uff0cAA \u52a0\u5bc6\u4e3a BB\uff0cBB \u52a0\u5bc6\u4e3a CC\uff0c\u2026\uff0cYY \u52a0\u5bc6\u4e3a ZZ\uff0cZZ \u52a0\u5bc6\u4e3a AA\u3002 \u5b57\u7b26\u4e32\u4e2d\u7684\u5176\u4ed6\u5b57\u7b26\uff0c\u4e0d\u4f5c\u5904\u7406\u3002 \u8bf7\u4f60\u8f93\u51fa\u52a0\u5bc6\u540e\u7684\u5b57\u7b26\u4e32\u3002 \u8f93\u5165\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u6ce8\u610f\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5305\u542b\u7a7a\u683c\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u52a0\u5bc6\u540e\u7684\u5b57\u7b26\u4e32\u3002 \u6570\u636e\u8303\u56f4 \u8f93\u5165\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 100100\u3002 \u8f93\u5165\u6837\u4f8b\uff1a Hello! How are you! \u8f93\u51fa\u6837\u4f8b\uff1a Ifmmp! Ipx bsf zpv! \u51fa\u9519 \u5fd8\u8bb0\u8003\u8651 z Z #include <iostream> using namespace std; int main() { string s1; getline(cin, s1); for (char &ch : s1) { if (ch >= 'a' && ch <= 'z') { ch = (ch - 'a' + 1) % 26 + 'a'; } else if (ch >= 'A' && ch <= 'Z') { ch = (ch - 'A' + 1) % 26 + 'A'; } } cout << s1; return 0; } \u8f93\u51fa\u5b57\u7b26\u4e32 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 aa\uff0c\u8bf7\u4f60\u6309\u7167\u4e0b\u9762\u7684\u8981\u6c42\u8f93\u51fa\u5b57\u7b26\u4e32 bb\u3002 \u7ed9\u5b9a\u5b57\u7b26\u4e32 aa \u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\u52a0\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\uff0c\u5f97\u5230 bb \u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff1b \u7ed9\u5b9a\u5b57\u7b26\u4e32 aa \u7684\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\u52a0\u7b2c\u4e09\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\uff0c\u5f97\u5230 bb \u7684\u7b2c\u4e8c\u4e2a\u5b57\u7b26\uff1b \u2026 \u7ed9\u5b9a\u5b57\u7b26\u4e32 aa \u7684\u5012\u6570\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\u52a0\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\uff0c\u5f97\u5230 bb \u7684\u5012\u6570\u7b2c\u4e8c\u4e2a\u5b57\u7b26\uff1b \u7ed9\u5b9a\u5b57\u7b26\u4e32 aa \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\u52a0\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\uff0c\u5f97\u5230 bb \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u3002 \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u5171\u4e00\u884c\uff0c\u5305\u542b\u5b57\u7b26\u4e32 aa\u3002\u6ce8\u610f\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5305\u542b\u7a7a\u683c\u3002 \u6570\u636e\u4fdd\u8bc1\u5b57\u7b26\u4e32\u5185\u7684\u5b57\u7b26\u7684 ASCII \u503c\u5747\u4e0d\u8d85\u8fc7 6363\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u5171\u4e00\u884c\uff0c\u5305\u542b\u5b57\u7b26\u4e32 bb\u3002 \u6570\u636e\u8303\u56f4 2\u2264a\u7684\u957f\u5ea6\u22641002\u2264a\u7684\u957f\u5ea6\u2264100 \u8f93\u5165\u6837\u4f8b\uff1a 1 2 3 \u8f93\u51fa\u6837\u4f8b\uff1a QRRSd #include <iostream> using namespace std; int main() { string a, b; getline(cin, a); for (int i = 0; i < a.size(); i++) b += (char)(a[i] + a[(i + 1) % a.size()]); cout << b << endl; return 0; } sstream 770\u5355\u8bcd\u66ff\u6362 \u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee5\u56de\u8f66\u7ed3\u675f\uff08\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7 100100\uff09\u3002 \u8be5\u5b57\u7b26\u4e32\u7531\u82e5\u5e72\u4e2a\u5355\u8bcd\u7ec4\u6210\uff0c\u5355\u8bcd\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u6240\u6709\u5355\u8bcd\u533a\u5206\u5927\u5c0f\u5199\u3002 \u73b0\u9700\u8981\u5c06\u5176\u4e2d\u7684\u67d0\u4e2a\u5355\u8bcd\u66ff\u6362\u6210\u53e6\u4e00\u4e2a\u5355\u8bcd\uff0c\u5e76\u8f93\u51fa\u66ff\u6362\u4e4b\u540e\u7684\u5b57\u7b26\u4e32\u3002 \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u5171 33 \u884c\u3002 \u7b2c 11 \u884c\u662f\u5305\u542b\u591a\u4e2a\u5355\u8bcd\u7684\u5b57\u7b26\u4e32 ss; \u7b2c 22 \u884c\u662f\u5f85\u66ff\u6362\u7684\u5355\u8bcd aa(\u957f\u5ea6\u4e0d\u8d85\u8fc7 100100); \u7b2c 33 \u884c\u662f aa \u5c06\u88ab\u66ff\u6362\u7684\u5355\u8bcd bb(\u957f\u5ea6\u4e0d\u8d85\u8fc7 100100)\u3002 \u8f93\u51fa\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u8f93\u51fa\u5c06 ss \u4e2d\u6240\u6709\u5355\u8bcd aa \u66ff\u6362\u6210 bb \u4e4b\u540e\u7684\u5b57\u7b26\u4e32\u3002 \u8f93\u5165\u6837\u4f8b\uff1a You want someone to help you You I \u8f93\u51fa\u6837\u4f8b\uff1a I want someone to help you #include <iostream> #include <sstream> using namespace std; int main() { string s, a, b; getline(cin, s); cin >> a >> b; stringstream ssin(s); string str; while(ssin >> str) { if (str == a) cout << b << ' '; else cout << str << ' '; } return 0; } #include <iostream> #include <sstream> using namespace std; int main() { string s; getline(cin, s); stringstream aa(s); int a, b; string c; double d; aa >> a >> b >> c >> d; cout << a << endl << b << endl << c << endl << d; return 0; } 1 2 aaa 1.1 #include <iostream> #include <sstream> #include <cstdio> using namespace std; int main() { char s[1000]; fgets(s, 1000, stdin); int a, b; char c[100]; double d; sscanf(s, \"%d%d%s%ld\", &a, &b, c, &d); printf(\"%d %d %s %ld\", a, b, c, d); return 0; } 777\u6700\u957f\u51fa\u73b0\u7684\u8fde\u7eed\u5b57\u7b26 \u6c42\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u957f\u7684\u8fde\u7eed\u51fa\u73b0\u7684\u5b57\u7b26\uff0c\u8f93\u51fa\u8be5\u5b57\u7b26\u53ca\u5176\u51fa\u73b0\u6b21\u6570\uff0c\u5b57\u7b26\u4e32\u4e2d\u65e0\u7a7a\u767d\u5b57\u7b26\uff08\u7a7a\u683c\u3001\u56de\u8f66\u548c tabtab\uff09\uff0c\u5982\u679c\u8fd9\u6837\u7684\u5b57\u7b26\u4e0d\u6b62\u4e00\u4e2a\uff0c\u5219\u8f93\u51fa\u7b2c\u4e00\u4e2a\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u8f93\u5165\u6574\u6570 NN\uff0c\u8868\u793a\u6d4b\u8bd5\u6570\u636e\u7684\u7ec4\u6570\u3002 \u6bcf\u7ec4\u6570\u636e\u5360\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u4e0d\u542b\u7a7a\u767d\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7 200200\u3002 \u8f93\u51fa\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u8f93\u51fa\u6700\u957f\u7684\u8fde\u7eed\u51fa\u73b0\u7684\u5b57\u7b26\u53ca\u5176\u51fa\u73b0\u6b21\u6570\uff0c\u4e2d\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002 \u8f93\u5165\u6837\u4f8b\uff1a 2 aaaaabbbbbcccccccdddddddddd abcdefghigk \u8f93\u51fa\u6837\u4f8b\uff1a d 10 a 1 #include <iostream> using namespace std; int main() { int n; string s; cin >> n; while (n--) { cin >> s; int cnt = 0; char ch; for (int i = 0; i < s.size(); i++) { int j = i; while (j < s.size() && s[j] == s[i]) j++; if (j - i > cnt) { cnt = j - i; ch = s[i]; } j = j - 1; i = j; } cout << ch << ' ' << cnt << endl; } return 0; } \u6700\u957f\u5355\u8bcd \u4e00\u4e2a\u4ee5 . \u7ed3\u5c3e\u7684\u7b80\u5355\u82f1\u6587\u53e5\u5b50\uff0c\u5355\u8bcd\u4e4b\u95f4\u7528\u7a7a\u683c\u5206\u9694\uff0c\u6ca1\u6709\u7f29\u5199\u5f62\u5f0f\u548c\u5176\u5b83\u7279\u6b8a\u5f62\u5f0f\uff0c\u6c42\u53e5\u5b50\u4e2d\u7684\u6700\u957f\u5355\u8bcd\u3002 \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u8fd9\u4e2a\u7b80\u5355\u82f1\u6587\u53e5\u5b50\uff0c\u957f\u5ea6\u4e0d\u8d85\u8fc7 500500\u3002 \u8f93\u51fa\u683c\u5f0f \u8be5\u53e5\u5b50\u4e2d\u6700\u957f\u7684\u5355\u8bcd\u3002\u5982\u679c\u591a\u4e8e\u4e00\u4e2a\uff0c\u5219\u8f93\u51fa\u7b2c\u4e00\u4e2a\u3002 \u8f93\u5165\u6837\u4f8b\uff1a I am a student of Peking University. \u8f93\u51fa\u6837\u4f8b\uff1a University #include <iostream> using namespace std; int main() { string s, res = \"\"; while(cin >> s) { // back \u6700\u540e\u4e00\u4e2a\u5b57\u7b26 if (s.back() == ' ') s.pop_back(); if (s.size() > res.size()) res = s; } puts(res.c_str()); return 0; } 775\u5012\u6392\u5355\u8bcd \u7f16\u5199\u7a0b\u5e8f\uff0c\u8bfb\u5165\u4e00\u884c\u82f1\u6587(\u53ea\u5305\u542b\u5b57\u6bcd\u548c\u7a7a\u683c\uff0c\u5355\u8bcd\u95f4\u4ee5\u5355\u4e2a\u7a7a\u683c\u5206\u9694)\uff0c\u5c06\u6240\u6709\u5355\u8bcd\u7684\u987a\u5e8f\u5012\u6392\u5e76\u8f93\u51fa\uff0c\u4f9d\u7136\u4ee5\u5355\u4e2a\u7a7a\u683c\u5206\u9694\u3002 \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u5b57\u7b26\u4e32\u957f\u5ea6\u81f3\u591a\u4e3a 100100\uff09\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e3a\u6309\u8981\u6c42\u6392\u5e8f\u540e\u7684\u5b57\u7b26\u4e32\u3002 \u8f93\u5165\u6837\u4f8b\uff1a I am a student \u8f93\u51fa\u6837\u4f8b\uff1a student a am I \u601d\u8def \u4e0d\u7528\u8bfb\u53d6\u6574\u884c \u4e00\u4e2a\u5b57\u7b26\u4e32\u8bfb\u53d6\u5c31\u53ef\u4ee5 res = s + ' ' + res; code #include <iostream> using namespace std; int main() { string s, res; while(cin >> s) res = s + ' ' + res; cout << res; return 0; } 776\u5b57\u7b26\u4e32\u79fb\u4f4d\u5305\u542b\u95ee\u9898 \u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\u6765\u8bf4\uff0c\u5b9a\u4e49\u4e00\u6b21\u5faa\u73af\u79fb\u4f4d\u64cd\u4f5c\u4e3a\uff1a\u5c06\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u79fb\u52a8\u5230\u672b\u5c3e\u5f62\u6210\u65b0\u7684\u5b57\u7b26\u4e32\u3002 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s1s1 \u548c s2s2\uff0c\u8981\u6c42\u5224\u5b9a\u5176\u4e2d\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u662f\u53e6\u4e00\u5b57\u7b26\u4e32\u901a\u8fc7\u82e5\u5e72\u6b21\u5faa\u73af\u79fb\u4f4d\u540e\u7684\u65b0\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\u3002 \u4f8b\u5982 CDAA \u662f\u7531 AABCD \u4e24\u6b21\u79fb\u4f4d\u540e\u4ea7\u751f\u7684\u65b0\u4e32 BCDAA \u7684\u5b50\u4e32\uff0c\u800c ABCD \u4e0e ACBD \u5219\u4e0d\u80fd\u901a\u8fc7\u591a\u6b21\u79fb\u4f4d\u6765\u5f97\u5230\u5176\u4e2d\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u65b0\u4e32\u7684\u5b50\u4e32\u3002 \u8f93\u5165\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5305\u542b\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e2d\u95f4\u7531\u5355\u4e2a\u7a7a\u683c\u9694\u5f00\u3002 \u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5b57\u6bcd\u548c\u6570\u5b57\uff0c\u957f\u5ea6\u4e0d\u8d85\u8fc7 3030\u3002 \u8f93\u51fa\u683c\u5f0f \u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u53e6\u4e00\u5b57\u7b26\u4e32\u901a\u8fc7\u82e5\u5e72\u6b21\u5faa\u73af\u79fb\u4f4d\u4ea7\u751f\u7684\u65b0\u4e32\u7684\u5b50\u4e32\uff0c\u5219\u8f93\u51fa true \uff0c\u5426\u5219\u8f93\u51fa false \u3002 \u8f93\u5165\u6837\u4f8b\uff1a AABCD CDAA \u8f93\u51fa\u6837\u4f8b\uff1a true \u601d\u8def \u904d\u5386\u79fb\u4f4d\u6b21\u6570 -> \u904d\u5386start -> \u904d\u5386\u6bcf\u4e2a\u5b57\u7b26\u770b\u662f\u5426\u76f8\u7b49 code #include <iostream> using namespace std; int main() { string a, b; cin >> a >> b; if (a.size() < b.size()) swap(a, b); for (int i = 0; i < a.size(); i++) { a = a.substr(1) + a[0]; for (int j = 0; j + b.size() <= a.size(); j++) { int k = 0; for (; k < b.size(); k++) { if (b[k] != a[j + k]) break; } if (k == b.size()) { puts(\"true\"); return 0; } } } puts(\"false\"); return 0; } 777\u5b57\u7b26\u4e32\u7684\u4e58\u65b9 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 aa \u548c bb\uff0c\u6211\u4eec\u5b9a\u4e49 a\u00d7ba\u00d7b \u4e3a\u4ed6\u4eec\u7684\u8fde\u63a5\u3002 \u4f8b\u5982\uff0c\u5982\u679c a=a= abc \u800c b=b= def \uff0c \u5219 a\u00d7b=a\u00d7b= abcdef \u3002 \u5982\u679c\u6211\u4eec\u5c06\u8fde\u63a5\u8003\u8651\u6210\u4e58\u6cd5\uff0c\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u7684\u4e58\u65b9\u5c06\u7528\u4e00\u79cd\u901a\u5e38\u7684\u65b9\u5f0f\u5b9a\u4e49\uff1aa0=a0=``(\u7a7a\u5b57\u7b26\u4e32)\uff0ca(n+1)=a\u00d7(an)a(n+1)=a\u00d7(an)\u3002 \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u5305\u542b\u591a\u7ec4\u6d4b\u8bd5\u6837\u4f8b\uff0c\u6bcf\u7ec4\u6d4b\u8bd5\u6837\u4f8b\u5360\u4e00\u884c\u3002 \u6bcf\u7ec4\u6837\u4f8b\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32 ss\uff0css \u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 100100\u3002 \u6700\u540e\u7684\u6d4b\u8bd5\u6837\u4f8b\u540e\u9762\u5c06\u662f\u4e00\u4e2a\u70b9\u53f7\u4f5c\u4e3a\u4e00\u884c\u3002 \u8f93\u51fa\u683c\u5f0f \u5bf9\u4e8e\u6bcf\u4e00\u4e2a ss\uff0c\u4f60\u9700\u8981\u8f93\u51fa\u6700\u5927\u7684 nn\uff0c\u4f7f\u5f97\u5b58\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32 aa\uff0c\u8ba9 s=ans=an\u3002 \u8f93\u5165\u6837\u4f8b\uff1a abcd aaaa ababab . \u8f93\u51fa\u6837\u4f8b\uff1a 1 4 3 \u601d\u8def len / n = m r = m * n r == s code #include <iostream> using namespace std; int main() { string str, s; while(cin >> str, str != \".\") { int len = str.size(); for (int n = len; n; n--) { if (len % n == 0) { int m = len / n; s = str.substr(0, m); string r; for (int i = 0; i < n; i++) r += s; if (r == str){ cout << n << endl; break; } } } } return 0; } 778\u5b57\u7b26\u4e32\u6700\u5927\u8de8\u8ddd \u6709\u4e09\u4e2a\u5b57\u7b26\u4e32 S,S1,S2S,S1,S2\uff0c\u5176\u4e2d\uff0cSS \u957f\u5ea6\u4e0d\u8d85\u8fc7 300300\uff0cS1S1 \u548c S2S2 \u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 1010\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u60f3\u8981\u68c0\u6d4b S1S1 \u548c S2S2 \u662f\u5426\u540c\u65f6\u5728 SS \u4e2d\u51fa\u73b0\uff0c\u4e14 S1S1 \u4f4d\u4e8e S2S2 \u7684\u5de6\u8fb9\uff0c\u5e76\u5728 SS \u4e2d\u4e92\u4e0d\u4ea4\u53c9\uff08\u5373\uff0cS1S1 \u7684\u53f3\u8fb9\u754c\u70b9\u5728 S2S2 \u7684\u5de6\u8fb9\u754c\u70b9\u7684\u5de6\u4fa7\uff09\u3002 \u8ba1\u7b97\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u6700\u5927\u8de8\u8ddd\uff08\u5373\uff0c\u6700\u5927\u95f4\u9694\u8ddd\u79bb\uff1a\u6700\u53f3\u8fb9\u7684 S2S2 \u7684\u8d77\u59cb\u70b9\u4e0e\u6700\u5de6\u8fb9\u7684 S1S1 \u7684\u7ec8\u6b62\u70b9\u4e4b\u95f4\u7684\u5b57\u7b26\u6570\u76ee\uff09\u3002 \u5982\u679c\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684 S1S1\uff0cS2S2 \u5b58\u5728\uff0c\u5219\u8f93\u51fa \u22121\u22121\u3002 \u4f8b\u5982\uff0cS=S= abcd123ab888efghij45ef67kl , S1=S1= ab , S2=S2= ef \uff0c\u5176\u4e2d\uff0cS1S1 \u5728 SS \u4e2d\u51fa\u73b0\u4e86 22 \u6b21\uff0cS2S2 \u4e5f\u5728 SS \u4e2d\u51fa\u73b0\u4e86 22 \u6b21\uff0c\u6700\u5927\u8de8\u8ddd\u4e3a\uff1a1818\u3002 \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u5171\u4e00\u884c\uff0c\u5305\u542b\u4e09\u4e2a\u5b57\u7b26\u4e32 S,S1,S2S,S1,S2\uff0c\u5b57\u7b26\u4e32\u4e4b\u95f4\u7528\u9017\u53f7\u9694\u5f00\u3002 \u6570\u636e\u4fdd\u8bc1\u4e09\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4e0d\u542b\u7a7a\u683c\u548c\u9017\u53f7\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u8de8\u8ddd\u3002 \u5982\u679c\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684 S1S1 \u548c S2S2 \u5b58\u5728\uff0c\u5219\u8f93\u51fa \u22121\u22121\u3002 \u8f93\u5165\u6837\u4f8b\uff1a abcd123ab888efghij45ef67kl,ab,ef \u8f93\u51fa\u6837\u4f8b\uff1a 18 \u601d\u8def \u4e00\u4e2a\u4e00\u4e2a\u5b57\u7b26\u8bfb\u5165 code #include <iostream> using namespace std; int main() { string str, s, s1, s2; char c; while (cin >> c, c != ',') s += c; while (cin >> c, c != ',') s1 += c; while (cin >> c) s2 += c; int l = 0, r = s.size() - s2.size(); while (l <= s.size() - s1.size()) { int i = 0; while(i < s1.size() && s1[i] == s[l + i]) i++; if (i == s1.size())break; l++; } while(r >= 0) { int i = 0; while (i < s2.size() && s2[i] == s[r + i]) i++; if (i == s2.size()) break; r--; } l = l + s1.size() - 1; if (l <= r) { cout << r - l - 1; return 0; } cout << -1; return 0; } 779 \u6700\u957f\u516c\u5171\u5b57\u7b26\u4e32\u540e\u7f00 \u7ed9\u51fa\u82e5\u5e72\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u8fd9\u4e9b\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u540e\u7f00\u3002 \u8f93\u5165\u683c\u5f0f \u7531\u82e5\u5e72\u7ec4\u8f93\u5165\u7ec4\u6210\u3002 \u6bcf\u7ec4\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570 N\u3002 N \u4e3a 0 \u65f6\u8868\u793a\u8f93\u5165\u7ed3\u675f\uff0c\u5426\u5219\u540e\u9762\u4f1a\u7ee7\u7eed\u6709 N \u884c\u8f93\u5165\uff0c\u6bcf\u884c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u5b57\u7b26\u4e32\u5185\u4e0d\u542b\u7a7a\u767d\u7b26\uff09\u3002 \u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 200\u3002 \u8f93\u51fa\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u4e3a NN \u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u540e\u7f00\uff08\u53ef\u80fd\u4e3a\u7a7a\uff09\u3002 \u6570\u636e\u8303\u56f4 1\u2264N\u2264200 \u8f93\u5165\u6837\u4f8b\uff1a 3 baba aba cba 2 aa cc 2 aa a 0 \u8f93\u51fa\u6837\u4f8b\uff1a ba a \u601d\u8def \u83b7\u53d6\u957f\u5ea6\u6700\u5c0f\u7684\u5b57\u7b26\u4e32 len -> 0 { \u200b \u904d\u5386\u5b57\u7b26\u4e32 { \u200b \u904d\u5386\u6bcf\u4e2a\u540e\u7f00\u5b57\u7b26 \u200b } } code #include <iostream> using namespace std; const int N = 200; int main() { int n; while(cin >> n, n) { string s[200]; int len = 200; for (int i = 0; i < n; i++) { cin >> s[i]; if (s[i].size() < len) len = s[i].size(); } while (len) { bool success = true; for (int i = 1; i < n; i++) { bool is_same = true; for (int j = 1; j <= len; j++) { if(s[0][s[0].size() - j] != s[i][s[i].size() - j]) { is_same = false; break; } } if (!is_same) { success = false; break; } } if (success) break; len--; } cout << s[0].substr(s[0].size() - len) << endl; } return 0; }","title":"2string"},{"location":"base/cpp/2string/#_1","text":"","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"base/cpp/2string/#_2","text":"\u6bcf\u4e2a\u5e38\u7528\u5b57\u7b26\u90fd\u5bf9\u5e94\u4e00\u4e2a-128~127\u7684\u6570\u5b57\uff0c\u4e8c\u8005\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8f6c\u5316 \u5e38\u7528ASCII\u503c\uff1a\u2019A\u2019-\u2018Z\u2019 \u662f65~90\uff0c\u2019a\u2019-\u2018z\u2019\u662f97-122\uff0c\u20190\u2019-\u20189\u2019\u662f48-57\u3002 \u5b57\u7b26\u53ef\u4ee5\u53c2\u4e0e\u8fd0\u7b97\uff0c\u8fd0\u7b97\u65f6\u4f1a\u5c06\u5176\u5f53\u505a\u6574\u6570\uff1a #include <iostream> using namespace std; int main() { char ch = 'a'; cout << (int)ch << endl; ch++; cout << ch; return 0; }","title":"\u5b57\u7b26"},{"location":"base/cpp/2string/#_3","text":"\u5b57\u7b26\u4e32\u5c31\u662f\u5b57\u7b26\u6570\u7ec4\u52a0\u4e0a\u7ed3\u675f\u7b26\u2019\\0\u2019\u3002 \u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u6765\u521d\u59cb\u5316\u5b57\u7b26\u6570\u7ec4\uff0c\u4f46\u6b64\u65f6\u8981\u6ce8\u610f\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7ed3\u5c3e\u4f1a\u6697\u542b\u4e00\u4e2a\u2019\\0\u2019\u5b57\u7b26\uff0c\u56e0\u6b64\u5b57\u7b26\u6570\u7ec4\u7684\u957f\u5ea6\u81f3\u5c11\u8981\u6bd4\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u591a1\uff01","title":"\u5b57\u7b26\u6570\u7ec4\u7684\u4f7f\u7528"},{"location":"base/cpp/2string/#_4","text":"#include <iostream> using namespace std; int main() { // a0 \u8fd9\u79cd\u4e00\u5b9a\u8981\u52a0\\0 char a0[10] = {'a', 'b', '\\0'}; // a1 a2\u81ea\u52a8\u52a0\u4e86\\0 char a1[10] = \"hello\"; char a2[] = \"aa\"; cout << a1 << endl << a2 << endl; cout << a0; return 0; }","title":"\u58f0\u660e"},{"location":"base/cpp/2string/#_5","text":"","title":"\u8f93\u5165\u8f93\u51fa"},{"location":"base/cpp/2string/#_6","text":"#include <iostream> using namespace std; int main() { char s[100]; // 1 cin >> s; cout << s; // 2 char s1[100]; scanf(\"%s\", s); printf(\"%s\", s); return 0; //3 \u6ce8\u610f\u7684\uff1a\u5c06\u8bfb\u5165\u7684\u5b57\u7b26\u4e32\u5b58\u5230\u6570\u7ec4\u7d22\u5f15\u4e3a1\u7684\u5730\u65b9 char s2[100]; scanf(\"%s\", s2 + 1); cout << s2 + 1; return 0; }","title":"\u57fa\u672c\u7684\u8f93\u5165\u8f93\u51fa"},{"location":"base/cpp/2string/#_7","text":"fgets\u5305\u542b\\n \u4e0d\u4f1a\u8fc7\u6ee4\\n fgets \u4e5f\u662fiostream\u91cc\u9762\u7684 #include <iostream> #include <cstdio> using namespace std; int main() { char s1[100]; // 1 fgets(s1, 100, stdin); string s2; //2 getline \u4e0d\u80fd\u662f\u5b57\u7b26\u6570\u7ec4 getline(cin, s2); cout << s2; char s3[100]; // 3 cin.getline(s3, 100); // 4 puts(s3); return 0; }","title":"\u8bfb\u4e00\u884c\u5b57\u7b26\u4e32"},{"location":"base/cpp/2string/#_8","text":"cstring strlen(str)\uff0c\u6c42\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 strcmp(a, b)\uff0c\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\uff0ca < b \u8fd4\u56de-1\uff0ca == b \u8fd4\u56de0\uff0ca > b\u8fd4\u56de1\u3002\u8fd9\u91cc\u7684\u6bd4\u8f83\u65b9\u5f0f\u662f\u5b57\u5178\u5e8f\uff01 strcpy(a, b)\uff0c\u5c06\u5b57\u7b26\u4e32b\u590d\u5236\u7ed9\u4ecea\u5f00\u59cb\u7684\u5b57\u7b26\u6570\u7ec4\u3002 #include <iostream> #include <cstring> using namespace std; int main() { char s1[100], s2[100]; cin >> s1 >> s2; //1 \u5b57\u7b26\u4e32\u7684\u957f\u5ea6 cout << strlen(s1) << endl << strlen(s2); cout << endl; // \u5b57\u7b26\u4e32\u6bd4\u8f83 cout << strcmp(s1, s2) << endl; // 3 s2 \u8d4b\u503c\u7ed9 s1 strcpy(s1, s2); cout << s1 << s2; return 0; } \u5b57\u7b26\u4e32\u7684\u904d\u5386 #include <iostream> #include <cstring> using namespace std; int main() { char s1[100]; cin >> s1; for (int i = 0, len = strlen(s1); i < len; i++) cout << s1[i]; return 0; }","title":"\u5b57\u7b26\u6570\u7ec4\u5e38\u7528\u7684\u51fd\u6570"},{"location":"base/cpp/2string/#string","text":"","title":"string"},{"location":"base/cpp/2string/#_9","text":"#include <iostream> using namespace std; int main() { string s1 = \"aaa\"; cout << s1; return 0; }","title":"\u58f0\u660e\u521d\u59cb\u5316"},{"location":"base/cpp/2string/#_10","text":"#include<iostream> // #include <cstdio> using namespace std; int main() { string s1; // 1 cin >> s1; cout << s1 << endl; // 2\u4e0d\u80fd\u4f7f\u7528scanf printf(\"%s\", s1.c_str()); puts(s1.c_str()); string s2; //3 \u8bfb\u4e00\u884c getline(cin, s2); cout << s2; return 0; }","title":"\u8f93\u5165\u8f93\u51fa"},{"location":"base/cpp/2string/#_11","text":"","title":""},{"location":"base/cpp/2string/#_12","text":"string\u7684empty\u548csize\u64cd\u4f5c\uff08\u6ce8\u610fsize\u662f\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u56e0\u6b64 s.size() <= -1\u4e00\u5b9a\u6210\u7acb\uff09 \u652f\u6301 > < >= <= == !=\u7b49\u6240\u6709\u6bd4\u8f83\u64cd\u4f5c\uff0c\u6309\u5b57\u5178\u5e8f\u8fdb\u884c\u6bd4\u8f83 \u5b57\u7b26\u4e32\u76f8\u52a0\u81f3\u5c11\u8981\u6709\u4e00\u4e2astring \u5bf9\u8c61 #include<iostream> // #include <cstdio> using namespace std; int main() { // 1.1 string str3 = \"aa\", str4; cout << str3.empty() << endl; cout << str4.empty() << endl; // 1.2 cout << str3.size() << \"size\\n\"; // 2 cout << (str3 < str4); str4 += str3; cout << str4; // \u4f1a\u62a5\u9519 \u786e\u4fdd\u5de6\u53f3\u4fe9\u8fb9\u81f3\u5c11\u6709\u4e00\u4e2a\u5bf9\u8c61 // \"helo\" \"aa\" \u5747\u4e3a\u5b57\u9762\u91cf string str5 = \"helo\" + \"aa\"; return 0; }","title":"\u57fa\u672c\u4f7f\u7528"},{"location":"base/cpp/2string/#_13","text":"auto\u53ef\u4ee5\u81ea\u52a8\u5224\u65ad\u7c7b\u578b #include <iostream> using namespace std; int main() { string s1 = \"aaa bbb ccc\"; // \u8303\u56f4\u904d\u5386 for (auto &ch : s1) { cout << ch << endl; ch = 'a'; } // auto \u7f16\u8bd1\u5668\u81ea\u5df1\u53bb\u731c\u53d8\u91cf\u662f\u4ec0\u4e48\u7c7b\u578b cout << s1; return 0; } \u5f00\u59cb\u4f4d\u7f6e \u51e0\u4e2a\u5b57\u7b26 substr(start, cout) //\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5b57\u7b26 s1.pop_back() // start len s1.substr(0, 10)","title":"\u8303\u56f4\u904d\u5386"},{"location":"base/cpp/2string/#_14","text":"","title":"\u4e60\u9898"},{"location":"base/cpp/2string/#_15","text":"\u7ed9\u5b9a\u4e00\u4e2a\u7531\u5927\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u7684\u5b57\u7b26\u4e32\u3002 \u628a\u8be5\u5b57\u7b26\u4e32\u4e2d\u7279\u5b9a\u7684\u5b57\u7b26\u5168\u90e8\u7528\u5b57\u7b26 # \u66ff\u6362\u3002 \u8bf7\u4f60\u8f93\u51fa\u66ff\u6362\u540e\u7684\u5b57\u7b26\u4e32\u3002","title":"\u66ff\u6362\u5b57\u7b26"},{"location":"base/cpp/2string/#_16","text":"\u8f93\u5165\u5171\u4e24\u884c\u3002 \u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u957f\u5ea6\u4e0d\u8d85\u8fc7 3030 \u7684\u5b57\u7b26\u4e32\u3002 \u7b2c\u4e8c\u884c\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\uff0c\u8868\u793a\u8981\u66ff\u6362\u6389\u7684\u7279\u5b9a\u5b57\u7b26\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/2string/#_17","text":"\u8f93\u51fa\u5171\u4e00\u884c\uff0c\u4e3a\u66ff\u6362\u540e\u7684\u5b57\u7b26\u4e32\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/2string/#_18","text":"hello l","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_19","text":"he##o","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_20","text":"// cin.getline \u4f1a\u8ba1\u7b97\\0 #include <iostream> #include <cstring> using namespace std; int main() { char s1[31], ch; // cin.getline \u4f1a\u8ba1\u7b97\\0 cin.getline(s1, 31); cin >> ch; // cout << ch; for (int i = 0, len = strlen(s1); i < len; i++) { if (s1[i] == ch) s1[i] = '#'; } cout << s1; return 0; }","title":"\u51fa\u9519"},{"location":"base/cpp/2string/#_21","text":"\u7ed9\u4f60\u4e00\u4e2a\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\u3002 \u8bf7\u4f60\u5224\u65ad\u662f\u5426\u5b58\u5728\u53ea\u5728\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u5b57\u7b26\u3002 \u5982\u679c\u5b58\u5728\uff0c\u5219\u8f93\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u7b26\u4e2d\u4f4d\u7f6e\u6700\u9760\u524d\u7684\u90a3\u4e2a\u3002 \u5982\u679c\u6ca1\u6709\uff0c\u8f93\u51fa no \u3002","title":"\u7edf\u8ba1\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26"},{"location":"base/cpp/2string/#_22","text":"\u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u7531\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u7684\u5b57\u7b26\u4e32\u3002 \u6570\u636e\u4fdd\u8bc1\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 100000100000\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/2string/#_23","text":"\u8f93\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u3002 \u5982\u679c\u6ca1\u6709\uff0c\u5219\u8f93\u51fa no \u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/2string/#_24","text":"abceabcd","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_25","text":"e","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_26","text":"\u6ca1\u6709\u60f3\u5230\u8fd9\u79cd\u65b9\u6cd5 #include <iostream> #include <cstring> using namespace std; int main() { char s1[100000]; cin >> s1; int c[26] = {0}; for (int i = 0, len = strlen(s1); i < len; i++) c[s1[i] - 'a'] += 1; for (int i = 0, len = strlen(s1); i < len; i++) { if(c[s1[i] - 'a'] == 1){ cout << s1[i]; return 0; } } cout << \"no\"; return 0; }","title":"\u51fa\u9519"},{"location":"base/cpp/2string/#_27","text":"\u4e00\u822c\u6211\u4eec\u7528 strcmpstrcmp \u53ef\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\uff0c\u6bd4\u8f83\u65b9\u6cd5\u4e3a\u5bf9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4ece\u524d\u5f80\u540e\u9010\u4e2a\u5b57\u7b26\u76f8\u6bd4\u8f83\uff08\u6309 ASCII \u7801\u503c\u5927\u5c0f\u6bd4\u8f83\uff09\uff0c\u76f4\u5230\u51fa\u73b0\u4e0d\u540c\u7684\u5b57\u7b26\u6216\u9047\u5230 \\0 \u4e3a\u6b62\u3002 \u5982\u679c\u5168\u90e8\u5b57\u7b26\u90fd\u76f8\u540c\uff0c\u5219\u8ba4\u4e3a\u76f8\u540c\uff1b\u5982\u679c\u51fa\u73b0\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u5219\u4ee5\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\u7684\u6bd4\u8f83\u7ed3\u679c\u4e3a\u51c6\u3002 \u4f46\u5728\u6709\u4e9b\u65f6\u5019\uff0c\u6211\u4eec\u6bd4\u8f83\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u65f6\uff0c\u5e0c\u671b\u5ffd\u7565\u5b57\u6bcd\u7684\u5927\u5c0f\uff0c\u4f8b\u5982 Hello \u548c hello \u5728\u5ffd\u7565\u5b57\u6bcd\u5927\u5c0f\u5199\u65f6\u662f\u76f8\u7b49\u7684\u3002 \u8bf7\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5bf9\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u5ffd\u7565\u5b57\u6bcd\u5927\u5c0f\u5199\u7684\u5927\u5c0f\u6bd4\u8f83\u3002","title":"\u5ffd\u7565\u5927\u5c0f\u5199\u6bd4\u8f83\u5b57\u7b26\u4e32"},{"location":"base/cpp/2string/#_28","text":"\u8f93\u5165\u4e3a\u4e24\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5171\u4e24\u4e2a\u5b57\u7b26\u4e32\u3002\u6ce8\u610f\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5305\u542b\u7a7a\u683c\u3002 \u6570\u636e\u4fdd\u8bc1\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u90fd\u4e0d\u8d85\u8fc7 8080\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/2string/#_29","text":"\u5982\u679c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6bd4\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u5c0f\uff0c\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26 < \u3002 \u5982\u679c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6bd4\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u5927\uff0c\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26 > \u3002 \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\uff0c\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26 = \u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/2string/#_30","text":"Hello hello","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_31","text":"=","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_32","text":"1.\u6ca1\u60f3\u5230\u5b57\u7b26\u4e32\u5168\u90e8\u8f6c\u4e3a\u5c0f\u5199 2.fgets() \u9700\u8981\u6211\u4eec\u8fc7\u6ee4\u6389 \\n #include <iostream> #include <cstring> using namespace std; int main() { char a[81], b[81]; cin.getline(a, 81); cin.getline(b, 81); for (int i = 0, len = strlen(a); i < len; i++) { if (a[i] >= 'A' && a[i] <= 'Z') { a[i] = 'a' + a[i] - 'A'; } } for (int i = 0, len = strlen(b); i < len; i++) { if (b[i] >= 'A' && b[i] <= 'Z') { b[i] = 'a' + b[i] - 'A'; } } if (a[strlen(a) - 1] == '\\n') a[strlen(a) - 1] = 0; if (b[strlen(b) - 1] == '\\n') b[strlen(b) - 1] = 0; int t = strcmp(a, b); if (t == 0) puts(\"=\"); else if (t > 0) puts(\">\"); else puts(\"<\"); return 0; } 766\u53bb\u6389\u591a\u4f59\u7684\u7a7a\u683c \u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u8fde\u7eed\u7684\u7a7a\u683c\uff0c\u8bf7\u5c06\u591a\u4f59\u7684\u7a7a\u683c\u53bb\u6389\uff0c\u53ea\u7559\u4e0b\u4e00\u4e2a\u7a7a\u683c\u3002","title":"\u95ee\u9898"},{"location":"base/cpp/2string/#_33","text":"\u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/2string/#_34","text":"\u8f93\u51fa\u53bb\u6389\u591a\u4f59\u7a7a\u683c\u540e\u7684\u5b57\u7b26\u4e32\uff0c\u5360\u4e00\u884c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/2string/#_35","text":"\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 200200\u3002 \u4fdd\u8bc1\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u548c\u7ed3\u5c3e\u6ca1\u6709\u7a7a\u683c\u3002","title":"\u6570\u636e\u8303\u56f4"},{"location":"base/cpp/2string/#_36","text":"Hello world.This is c language.","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_37","text":"Hello world.This is c language. #include <iostream> using namespace std; int main() { string s; while(cin >> s) cout << s << ' '; return 0; } #include <iostream> using namespace std; int main() { string s; getline(cin, s); string r; for (int i = 0; i < s.size(); i++) { if (s[i] != ' ') r += s[i]; else { r += ' '; int j = i + 1; while (j < s.size() && s[j] == ' ') j++; // i++ i = j - 1; } } cout << r.c_str(); return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#767","text":"\u5728\u4f20\u8f93\u4fe1\u606f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u4fe1\u606f\u7684\u5b89\u5168\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u539f\u4fe1\u606f\u8fdb\u884c\u52a0\u5bc6\u5904\u7406\uff0c\u5f62\u6210\u52a0\u5bc6\u4fe1\u606f\uff0c\u4ece\u800c\u4f7f\u5f97\u4fe1\u606f\u5185\u5bb9\u4e0d\u4f1a\u88ab\u76d1\u542c\u8005\u7a83\u53d6\u3002 \u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5bf9\u5176\u8fdb\u884c\u52a0\u5bc6\u5904\u7406\u3002 \u52a0\u5bc6\u7684\u89c4\u5219\u5982\u4e0b\uff1a \u5b57\u7b26\u4e32\u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\uff0caa \u52a0\u5bc6\u4e3a bb\uff0cbb \u52a0\u5bc6\u4e3a cc\uff0c\u2026\uff0cyy \u52a0\u5bc6\u4e3a zz\uff0czz \u52a0\u5bc6\u4e3a aa\u3002 \u5b57\u7b26\u4e32\u4e2d\u7684\u5927\u5199\u5b57\u6bcd\uff0cAA \u52a0\u5bc6\u4e3a BB\uff0cBB \u52a0\u5bc6\u4e3a CC\uff0c\u2026\uff0cYY \u52a0\u5bc6\u4e3a ZZ\uff0cZZ \u52a0\u5bc6\u4e3a AA\u3002 \u5b57\u7b26\u4e32\u4e2d\u7684\u5176\u4ed6\u5b57\u7b26\uff0c\u4e0d\u4f5c\u5904\u7406\u3002 \u8bf7\u4f60\u8f93\u51fa\u52a0\u5bc6\u540e\u7684\u5b57\u7b26\u4e32\u3002","title":"767\u4fe1\u606f\u52a0\u5bc6"},{"location":"base/cpp/2string/#_38","text":"\u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u6ce8\u610f\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5305\u542b\u7a7a\u683c\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/2string/#_39","text":"\u8f93\u51fa\u52a0\u5bc6\u540e\u7684\u5b57\u7b26\u4e32\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/2string/#_40","text":"\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 100100\u3002","title":"\u6570\u636e\u8303\u56f4"},{"location":"base/cpp/2string/#_41","text":"Hello! How are you!","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_42","text":"Ifmmp! Ipx bsf zpv!","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_43","text":"\u5fd8\u8bb0\u8003\u8651 z Z #include <iostream> using namespace std; int main() { string s1; getline(cin, s1); for (char &ch : s1) { if (ch >= 'a' && ch <= 'z') { ch = (ch - 'a' + 1) % 26 + 'a'; } else if (ch >= 'A' && ch <= 'Z') { ch = (ch - 'A' + 1) % 26 + 'A'; } } cout << s1; return 0; }","title":"\u51fa\u9519"},{"location":"base/cpp/2string/#_44","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 aa\uff0c\u8bf7\u4f60\u6309\u7167\u4e0b\u9762\u7684\u8981\u6c42\u8f93\u51fa\u5b57\u7b26\u4e32 bb\u3002 \u7ed9\u5b9a\u5b57\u7b26\u4e32 aa \u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\u52a0\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\uff0c\u5f97\u5230 bb \u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff1b \u7ed9\u5b9a\u5b57\u7b26\u4e32 aa \u7684\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\u52a0\u7b2c\u4e09\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\uff0c\u5f97\u5230 bb \u7684\u7b2c\u4e8c\u4e2a\u5b57\u7b26\uff1b \u2026 \u7ed9\u5b9a\u5b57\u7b26\u4e32 aa \u7684\u5012\u6570\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\u52a0\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\uff0c\u5f97\u5230 bb \u7684\u5012\u6570\u7b2c\u4e8c\u4e2a\u5b57\u7b26\uff1b \u7ed9\u5b9a\u5b57\u7b26\u4e32 aa \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\u52a0\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684 ASCII \u503c\uff0c\u5f97\u5230 bb \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u3002","title":"\u8f93\u51fa\u5b57\u7b26\u4e32"},{"location":"base/cpp/2string/#_45","text":"\u8f93\u5165\u5171\u4e00\u884c\uff0c\u5305\u542b\u5b57\u7b26\u4e32 aa\u3002\u6ce8\u610f\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5305\u542b\u7a7a\u683c\u3002 \u6570\u636e\u4fdd\u8bc1\u5b57\u7b26\u4e32\u5185\u7684\u5b57\u7b26\u7684 ASCII \u503c\u5747\u4e0d\u8d85\u8fc7 6363\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/2string/#_46","text":"\u8f93\u51fa\u5171\u4e00\u884c\uff0c\u5305\u542b\u5b57\u7b26\u4e32 bb\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/2string/#_47","text":"2\u2264a\u7684\u957f\u5ea6\u22641002\u2264a\u7684\u957f\u5ea6\u2264100","title":"\u6570\u636e\u8303\u56f4"},{"location":"base/cpp/2string/#_48","text":"1 2 3","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_49","text":"QRRSd #include <iostream> using namespace std; int main() { string a, b; getline(cin, a); for (int i = 0; i < a.size(); i++) b += (char)(a[i] + a[(i + 1) % a.size()]); cout << b << endl; return 0; } sstream","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#770","text":"\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee5\u56de\u8f66\u7ed3\u675f\uff08\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7 100100\uff09\u3002 \u8be5\u5b57\u7b26\u4e32\u7531\u82e5\u5e72\u4e2a\u5355\u8bcd\u7ec4\u6210\uff0c\u5355\u8bcd\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u6240\u6709\u5355\u8bcd\u533a\u5206\u5927\u5c0f\u5199\u3002 \u73b0\u9700\u8981\u5c06\u5176\u4e2d\u7684\u67d0\u4e2a\u5355\u8bcd\u66ff\u6362\u6210\u53e6\u4e00\u4e2a\u5355\u8bcd\uff0c\u5e76\u8f93\u51fa\u66ff\u6362\u4e4b\u540e\u7684\u5b57\u7b26\u4e32\u3002","title":"770\u5355\u8bcd\u66ff\u6362"},{"location":"base/cpp/2string/#_50","text":"\u8f93\u5165\u5171 33 \u884c\u3002 \u7b2c 11 \u884c\u662f\u5305\u542b\u591a\u4e2a\u5355\u8bcd\u7684\u5b57\u7b26\u4e32 ss; \u7b2c 22 \u884c\u662f\u5f85\u66ff\u6362\u7684\u5355\u8bcd aa(\u957f\u5ea6\u4e0d\u8d85\u8fc7 100100); \u7b2c 33 \u884c\u662f aa \u5c06\u88ab\u66ff\u6362\u7684\u5355\u8bcd bb(\u957f\u5ea6\u4e0d\u8d85\u8fc7 100100)\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/2string/#_51","text":"\u5171\u4e00\u884c\uff0c\u8f93\u51fa\u5c06 ss \u4e2d\u6240\u6709\u5355\u8bcd aa \u66ff\u6362\u6210 bb \u4e4b\u540e\u7684\u5b57\u7b26\u4e32\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/2string/#_52","text":"You want someone to help you You I","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_53","text":"I want someone to help you #include <iostream> #include <sstream> using namespace std; int main() { string s, a, b; getline(cin, s); cin >> a >> b; stringstream ssin(s); string str; while(ssin >> str) { if (str == a) cout << b << ' '; else cout << str << ' '; } return 0; } #include <iostream> #include <sstream> using namespace std; int main() { string s; getline(cin, s); stringstream aa(s); int a, b; string c; double d; aa >> a >> b >> c >> d; cout << a << endl << b << endl << c << endl << d; return 0; } 1 2 aaa 1.1 #include <iostream> #include <sstream> #include <cstdio> using namespace std; int main() { char s[1000]; fgets(s, 1000, stdin); int a, b; char c[100]; double d; sscanf(s, \"%d%d%s%ld\", &a, &b, c, &d); printf(\"%d %d %s %ld\", a, b, c, d); return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#777","text":"\u6c42\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u957f\u7684\u8fde\u7eed\u51fa\u73b0\u7684\u5b57\u7b26\uff0c\u8f93\u51fa\u8be5\u5b57\u7b26\u53ca\u5176\u51fa\u73b0\u6b21\u6570\uff0c\u5b57\u7b26\u4e32\u4e2d\u65e0\u7a7a\u767d\u5b57\u7b26\uff08\u7a7a\u683c\u3001\u56de\u8f66\u548c tabtab\uff09\uff0c\u5982\u679c\u8fd9\u6837\u7684\u5b57\u7b26\u4e0d\u6b62\u4e00\u4e2a\uff0c\u5219\u8f93\u51fa\u7b2c\u4e00\u4e2a\u3002","title":"777\u6700\u957f\u51fa\u73b0\u7684\u8fde\u7eed\u5b57\u7b26"},{"location":"base/cpp/2string/#_54","text":"\u7b2c\u4e00\u884c\u8f93\u5165\u6574\u6570 NN\uff0c\u8868\u793a\u6d4b\u8bd5\u6570\u636e\u7684\u7ec4\u6570\u3002 \u6bcf\u7ec4\u6570\u636e\u5360\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u4e0d\u542b\u7a7a\u767d\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7 200200\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/2string/#_55","text":"\u5171\u4e00\u884c\uff0c\u8f93\u51fa\u6700\u957f\u7684\u8fde\u7eed\u51fa\u73b0\u7684\u5b57\u7b26\u53ca\u5176\u51fa\u73b0\u6b21\u6570\uff0c\u4e2d\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/2string/#_56","text":"2 aaaaabbbbbcccccccdddddddddd abcdefghigk","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_57","text":"d 10 a 1 #include <iostream> using namespace std; int main() { int n; string s; cin >> n; while (n--) { cin >> s; int cnt = 0; char ch; for (int i = 0; i < s.size(); i++) { int j = i; while (j < s.size() && s[j] == s[i]) j++; if (j - i > cnt) { cnt = j - i; ch = s[i]; } j = j - 1; i = j; } cout << ch << ' ' << cnt << endl; } return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_58","text":"\u4e00\u4e2a\u4ee5 . \u7ed3\u5c3e\u7684\u7b80\u5355\u82f1\u6587\u53e5\u5b50\uff0c\u5355\u8bcd\u4e4b\u95f4\u7528\u7a7a\u683c\u5206\u9694\uff0c\u6ca1\u6709\u7f29\u5199\u5f62\u5f0f\u548c\u5176\u5b83\u7279\u6b8a\u5f62\u5f0f\uff0c\u6c42\u53e5\u5b50\u4e2d\u7684\u6700\u957f\u5355\u8bcd\u3002","title":"\u6700\u957f\u5355\u8bcd"},{"location":"base/cpp/2string/#_59","text":"\u8f93\u5165\u8fd9\u4e2a\u7b80\u5355\u82f1\u6587\u53e5\u5b50\uff0c\u957f\u5ea6\u4e0d\u8d85\u8fc7 500500\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/2string/#_60","text":"\u8be5\u53e5\u5b50\u4e2d\u6700\u957f\u7684\u5355\u8bcd\u3002\u5982\u679c\u591a\u4e8e\u4e00\u4e2a\uff0c\u5219\u8f93\u51fa\u7b2c\u4e00\u4e2a\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/2string/#_61","text":"I am a student of Peking University.","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_62","text":"University #include <iostream> using namespace std; int main() { string s, res = \"\"; while(cin >> s) { // back \u6700\u540e\u4e00\u4e2a\u5b57\u7b26 if (s.back() == ' ') s.pop_back(); if (s.size() > res.size()) res = s; } puts(res.c_str()); return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#775","text":"\u7f16\u5199\u7a0b\u5e8f\uff0c\u8bfb\u5165\u4e00\u884c\u82f1\u6587(\u53ea\u5305\u542b\u5b57\u6bcd\u548c\u7a7a\u683c\uff0c\u5355\u8bcd\u95f4\u4ee5\u5355\u4e2a\u7a7a\u683c\u5206\u9694)\uff0c\u5c06\u6240\u6709\u5355\u8bcd\u7684\u987a\u5e8f\u5012\u6392\u5e76\u8f93\u51fa\uff0c\u4f9d\u7136\u4ee5\u5355\u4e2a\u7a7a\u683c\u5206\u9694\u3002","title":"775\u5012\u6392\u5355\u8bcd"},{"location":"base/cpp/2string/#_63","text":"\u8f93\u5165\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u5b57\u7b26\u4e32\u957f\u5ea6\u81f3\u591a\u4e3a 100100\uff09\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/2string/#_64","text":"\u8f93\u51fa\u4e3a\u6309\u8981\u6c42\u6392\u5e8f\u540e\u7684\u5b57\u7b26\u4e32\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/2string/#_65","text":"I am a student","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_66","text":"student a am I","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_67","text":"\u4e0d\u7528\u8bfb\u53d6\u6574\u884c \u4e00\u4e2a\u5b57\u7b26\u4e32\u8bfb\u53d6\u5c31\u53ef\u4ee5 res = s + ' ' + res;","title":"\u601d\u8def"},{"location":"base/cpp/2string/#code","text":"#include <iostream> using namespace std; int main() { string s, res; while(cin >> s) res = s + ' ' + res; cout << res; return 0; }","title":"code"},{"location":"base/cpp/2string/#776","text":"\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\u6765\u8bf4\uff0c\u5b9a\u4e49\u4e00\u6b21\u5faa\u73af\u79fb\u4f4d\u64cd\u4f5c\u4e3a\uff1a\u5c06\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u79fb\u52a8\u5230\u672b\u5c3e\u5f62\u6210\u65b0\u7684\u5b57\u7b26\u4e32\u3002 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s1s1 \u548c s2s2\uff0c\u8981\u6c42\u5224\u5b9a\u5176\u4e2d\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u662f\u53e6\u4e00\u5b57\u7b26\u4e32\u901a\u8fc7\u82e5\u5e72\u6b21\u5faa\u73af\u79fb\u4f4d\u540e\u7684\u65b0\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\u3002 \u4f8b\u5982 CDAA \u662f\u7531 AABCD \u4e24\u6b21\u79fb\u4f4d\u540e\u4ea7\u751f\u7684\u65b0\u4e32 BCDAA \u7684\u5b50\u4e32\uff0c\u800c ABCD \u4e0e ACBD \u5219\u4e0d\u80fd\u901a\u8fc7\u591a\u6b21\u79fb\u4f4d\u6765\u5f97\u5230\u5176\u4e2d\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u65b0\u4e32\u7684\u5b50\u4e32\u3002","title":"776\u5b57\u7b26\u4e32\u79fb\u4f4d\u5305\u542b\u95ee\u9898"},{"location":"base/cpp/2string/#_68","text":"\u5171\u4e00\u884c\uff0c\u5305\u542b\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e2d\u95f4\u7531\u5355\u4e2a\u7a7a\u683c\u9694\u5f00\u3002 \u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5b57\u6bcd\u548c\u6570\u5b57\uff0c\u957f\u5ea6\u4e0d\u8d85\u8fc7 3030\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/2string/#_69","text":"\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u53e6\u4e00\u5b57\u7b26\u4e32\u901a\u8fc7\u82e5\u5e72\u6b21\u5faa\u73af\u79fb\u4f4d\u4ea7\u751f\u7684\u65b0\u4e32\u7684\u5b50\u4e32\uff0c\u5219\u8f93\u51fa true \uff0c\u5426\u5219\u8f93\u51fa false \u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/2string/#_70","text":"AABCD CDAA","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_71","text":"true","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_72","text":"\u904d\u5386\u79fb\u4f4d\u6b21\u6570 -> \u904d\u5386start -> \u904d\u5386\u6bcf\u4e2a\u5b57\u7b26\u770b\u662f\u5426\u76f8\u7b49","title":"\u601d\u8def"},{"location":"base/cpp/2string/#code_1","text":"#include <iostream> using namespace std; int main() { string a, b; cin >> a >> b; if (a.size() < b.size()) swap(a, b); for (int i = 0; i < a.size(); i++) { a = a.substr(1) + a[0]; for (int j = 0; j + b.size() <= a.size(); j++) { int k = 0; for (; k < b.size(); k++) { if (b[k] != a[j + k]) break; } if (k == b.size()) { puts(\"true\"); return 0; } } } puts(\"false\"); return 0; }","title":"code"},{"location":"base/cpp/2string/#777_1","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 aa \u548c bb\uff0c\u6211\u4eec\u5b9a\u4e49 a\u00d7ba\u00d7b \u4e3a\u4ed6\u4eec\u7684\u8fde\u63a5\u3002 \u4f8b\u5982\uff0c\u5982\u679c a=a= abc \u800c b=b= def \uff0c \u5219 a\u00d7b=a\u00d7b= abcdef \u3002 \u5982\u679c\u6211\u4eec\u5c06\u8fde\u63a5\u8003\u8651\u6210\u4e58\u6cd5\uff0c\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u7684\u4e58\u65b9\u5c06\u7528\u4e00\u79cd\u901a\u5e38\u7684\u65b9\u5f0f\u5b9a\u4e49\uff1aa0=a0=``(\u7a7a\u5b57\u7b26\u4e32)\uff0ca(n+1)=a\u00d7(an)a(n+1)=a\u00d7(an)\u3002","title":"777\u5b57\u7b26\u4e32\u7684\u4e58\u65b9"},{"location":"base/cpp/2string/#_73","text":"\u8f93\u5165\u5305\u542b\u591a\u7ec4\u6d4b\u8bd5\u6837\u4f8b\uff0c\u6bcf\u7ec4\u6d4b\u8bd5\u6837\u4f8b\u5360\u4e00\u884c\u3002 \u6bcf\u7ec4\u6837\u4f8b\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32 ss\uff0css \u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 100100\u3002 \u6700\u540e\u7684\u6d4b\u8bd5\u6837\u4f8b\u540e\u9762\u5c06\u662f\u4e00\u4e2a\u70b9\u53f7\u4f5c\u4e3a\u4e00\u884c\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/2string/#_74","text":"\u5bf9\u4e8e\u6bcf\u4e00\u4e2a ss\uff0c\u4f60\u9700\u8981\u8f93\u51fa\u6700\u5927\u7684 nn\uff0c\u4f7f\u5f97\u5b58\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32 aa\uff0c\u8ba9 s=ans=an\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/2string/#_75","text":"abcd aaaa ababab .","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_76","text":"1 4 3","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_77","text":"len / n = m r = m * n r == s","title":"\u601d\u8def"},{"location":"base/cpp/2string/#code_2","text":"#include <iostream> using namespace std; int main() { string str, s; while(cin >> str, str != \".\") { int len = str.size(); for (int n = len; n; n--) { if (len % n == 0) { int m = len / n; s = str.substr(0, m); string r; for (int i = 0; i < n; i++) r += s; if (r == str){ cout << n << endl; break; } } } } return 0; }","title":"code"},{"location":"base/cpp/2string/#778","text":"\u6709\u4e09\u4e2a\u5b57\u7b26\u4e32 S,S1,S2S,S1,S2\uff0c\u5176\u4e2d\uff0cSS \u957f\u5ea6\u4e0d\u8d85\u8fc7 300300\uff0cS1S1 \u548c S2S2 \u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 1010\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u60f3\u8981\u68c0\u6d4b S1S1 \u548c S2S2 \u662f\u5426\u540c\u65f6\u5728 SS \u4e2d\u51fa\u73b0\uff0c\u4e14 S1S1 \u4f4d\u4e8e S2S2 \u7684\u5de6\u8fb9\uff0c\u5e76\u5728 SS \u4e2d\u4e92\u4e0d\u4ea4\u53c9\uff08\u5373\uff0cS1S1 \u7684\u53f3\u8fb9\u754c\u70b9\u5728 S2S2 \u7684\u5de6\u8fb9\u754c\u70b9\u7684\u5de6\u4fa7\uff09\u3002 \u8ba1\u7b97\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u6700\u5927\u8de8\u8ddd\uff08\u5373\uff0c\u6700\u5927\u95f4\u9694\u8ddd\u79bb\uff1a\u6700\u53f3\u8fb9\u7684 S2S2 \u7684\u8d77\u59cb\u70b9\u4e0e\u6700\u5de6\u8fb9\u7684 S1S1 \u7684\u7ec8\u6b62\u70b9\u4e4b\u95f4\u7684\u5b57\u7b26\u6570\u76ee\uff09\u3002 \u5982\u679c\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684 S1S1\uff0cS2S2 \u5b58\u5728\uff0c\u5219\u8f93\u51fa \u22121\u22121\u3002 \u4f8b\u5982\uff0cS=S= abcd123ab888efghij45ef67kl , S1=S1= ab , S2=S2= ef \uff0c\u5176\u4e2d\uff0cS1S1 \u5728 SS \u4e2d\u51fa\u73b0\u4e86 22 \u6b21\uff0cS2S2 \u4e5f\u5728 SS \u4e2d\u51fa\u73b0\u4e86 22 \u6b21\uff0c\u6700\u5927\u8de8\u8ddd\u4e3a\uff1a1818\u3002","title":"778\u5b57\u7b26\u4e32\u6700\u5927\u8de8\u8ddd"},{"location":"base/cpp/2string/#_78","text":"\u8f93\u5165\u5171\u4e00\u884c\uff0c\u5305\u542b\u4e09\u4e2a\u5b57\u7b26\u4e32 S,S1,S2S,S1,S2\uff0c\u5b57\u7b26\u4e32\u4e4b\u95f4\u7528\u9017\u53f7\u9694\u5f00\u3002 \u6570\u636e\u4fdd\u8bc1\u4e09\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4e0d\u542b\u7a7a\u683c\u548c\u9017\u53f7\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/2string/#_79","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u8de8\u8ddd\u3002 \u5982\u679c\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684 S1S1 \u548c S2S2 \u5b58\u5728\uff0c\u5219\u8f93\u51fa \u22121\u22121\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/2string/#_80","text":"abcd123ab888efghij45ef67kl,ab,ef","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_81","text":"18","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_82","text":"\u4e00\u4e2a\u4e00\u4e2a\u5b57\u7b26\u8bfb\u5165","title":"\u601d\u8def"},{"location":"base/cpp/2string/#code_3","text":"#include <iostream> using namespace std; int main() { string str, s, s1, s2; char c; while (cin >> c, c != ',') s += c; while (cin >> c, c != ',') s1 += c; while (cin >> c) s2 += c; int l = 0, r = s.size() - s2.size(); while (l <= s.size() - s1.size()) { int i = 0; while(i < s1.size() && s1[i] == s[l + i]) i++; if (i == s1.size())break; l++; } while(r >= 0) { int i = 0; while (i < s2.size() && s2[i] == s[r + i]) i++; if (i == s2.size()) break; r--; } l = l + s1.size() - 1; if (l <= r) { cout << r - l - 1; return 0; } cout << -1; return 0; }","title":"code"},{"location":"base/cpp/2string/#779","text":"\u7ed9\u51fa\u82e5\u5e72\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u8fd9\u4e9b\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u540e\u7f00\u3002","title":"779 \u6700\u957f\u516c\u5171\u5b57\u7b26\u4e32\u540e\u7f00"},{"location":"base/cpp/2string/#_83","text":"\u7531\u82e5\u5e72\u7ec4\u8f93\u5165\u7ec4\u6210\u3002 \u6bcf\u7ec4\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570 N\u3002 N \u4e3a 0 \u65f6\u8868\u793a\u8f93\u5165\u7ed3\u675f\uff0c\u5426\u5219\u540e\u9762\u4f1a\u7ee7\u7eed\u6709 N \u884c\u8f93\u5165\uff0c\u6bcf\u884c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u5b57\u7b26\u4e32\u5185\u4e0d\u542b\u7a7a\u767d\u7b26\uff09\u3002 \u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 200\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/2string/#_84","text":"\u5171\u4e00\u884c\uff0c\u4e3a NN \u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u540e\u7f00\uff08\u53ef\u80fd\u4e3a\u7a7a\uff09\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/2string/#_85","text":"1\u2264N\u2264200","title":"\u6570\u636e\u8303\u56f4"},{"location":"base/cpp/2string/#_86","text":"3 baba aba cba 2 aa cc 2 aa a 0","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_87","text":"ba a","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/2string/#_88","text":"\u83b7\u53d6\u957f\u5ea6\u6700\u5c0f\u7684\u5b57\u7b26\u4e32 len -> 0 { \u200b \u904d\u5386\u5b57\u7b26\u4e32 { \u200b \u904d\u5386\u6bcf\u4e2a\u540e\u7f00\u5b57\u7b26 \u200b } }","title":"\u601d\u8def"},{"location":"base/cpp/2string/#code_4","text":"#include <iostream> using namespace std; const int N = 200; int main() { int n; while(cin >> n, n) { string s[200]; int len = 200; for (int i = 0; i < n; i++) { cin >> s[i]; if (s[i].size() < len) len = s[i].size(); } while (len) { bool success = true; for (int i = 1; i < n; i++) { bool is_same = true; for (int j = 1; j <= len; j++) { if(s[0][s[0].size() - j] != s[i][s[i].size() - j]) { is_same = false; break; } } if (!is_same) { success = false; break; } } if (success) break; len--; } cout << s[0].substr(s[0].size() - len) << endl; } return 0; }","title":"code"},{"location":"base/cpp/3array/","text":"\u6570\u7ec4 \u57fa\u672c\u77e5\u8bc6 \u4e00\u7ef4\u6570\u7ec4 \u58f0\u660e #include <iostream> using namespace std; int main() { int a[5], b[10]; return 0; } \u521d\u59cb\u5316 a \u7d22\u5f152 \u540e\u9762\u7684\u6ca1\u6709\u8d4b\u503c\u5c31\u662f0 #include <stdio.h> int main() { int a[10] = {1, 2, 3}; return 0; } \u4e8c\u7ef4\u6570\u7ec4 #include <iostream> using namespace std; int main() { int a[3][3] = { {1, 2, 3}, {1, 2, 3}, {1, 2, 3} } ; for (int i = 0; i < 3; i++) { for (int j = 0; j < 3; j++) { a[i][j] = i + j; } } for (int i = 0; i < 3; i++) { for (int j = 0; j < 3; j++) { cout << a[i][j] << endl; } } return 0; } #include <iostream> #include <cstring> using namespace std; int main() { int a[10]; // const \u5e38\u91cf // 40 byte int = 4byte memset(a, -1, 40); // s\u8fd4\u56de\u6570\u7ec4\u5b57\u8282\u5927\u5c0f // a \u590d\u5236\u7ed9 b memcpy(b, a, sizeof a); memset(a, 0 ,sizeof a); for (int i = 0; i < 10; i++) { cout << a[i] << endl; } return 0; } \u51fd\u6570\u5916\u5806 \u51fd\u6570\u5185\u6808 \u9ed8\u8ba4\u6808\u7a7a\u95f41mb\u5c40\u90e8\u53d8\u91cf\u503c\u968f\u673a\u7684 \u5168\u5c40\u53d8\u91cf\u662f0 #include <iostream> using namespace std; int main() { int a[3] = {0, 1, 2}; int b[] = {1, 2, 3}; // \u6ca1\u6709\u7ed9\u51fa\u7684\u503c \u9ed8\u8ba4\u4e3a0 int c[5] = {1, 2, 3}; int d[10] = {0}; // \u4e0d\u521d\u59cb\u5316 \u503c\u662f\u968f\u673a\u7684 return 0; } \u9898\u76ee \u6570\u7ec4\u7ffb\u8f6ck\u6b21 #include <iostream> #include <algorithm> using namespace std; int main() { int a[5] = {1, 2, 3, 4, 5}; int k; cin >> k; // [start, end) reverse(a, a + 5); reverse(a, a + k); reverse(a + k, a + 5); for (int i = 0; i < 5; i++) { cout << a[i]; } return 0; } fabs() abs() sqrt() double #include <iostream> #include <cstdio> #include <cmath> using namespace std; int main() { int i = 3; printf(\"%.20lf\", sqrt(i) * sqrt(i)); return 0; } \u9ad8\u7cbe\u5ea6\u8ba1\u7b97 2^n #include <iostream> using namespace std; const int N = 3000; int main() { int a[N] = {1}; int m = 1, n; cin >> n; for (int i = 0; i < n; i++) { int t = 0; for (int j = 0; j < m; j++) { t += a[j] * 2; a[j] = t % 10; t = t / 10; } if (t) a[m++] = 1; } for (int i = m - 1; i >= 0; i--) cout << a[i]; } ========== min(1, 2); max(1, 2); \u8f93\u5165\u6574\u6570 NN\uff0c\u8f93\u51fa\u4e00\u4e2a NN \u9636\u7684\u56de\u5b57\u5f62\u4e8c\u7ef4\u6570\u7ec4\u3002 \u6570\u7ec4\u7684\u6700\u5916\u5c42\u4e3a 11\uff0c\u6b21\u5916\u5c42\u4e3a 22\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u8f93\u5165\u683c\u5f0f \u8f93\u5165\u5305\u542b\u591a\u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 NN\u3002 \u5f53\u8f93\u5165\u884c\u4e3a N=0N=0 \u65f6\uff0c\u8868\u793a\u8f93\u5165\u7ed3\u675f\uff0c\u4e14\u8be5\u884c\u65e0\u9700\u4f5c\u4efb\u4f55\u5904\u7406\u3002 \u8f93\u51fa\u683c\u5f0f \u5bf9\u4e8e\u6bcf\u4e2a\u8f93\u5165\u6574\u6570 NN\uff0c\u8f93\u51fa\u4e00\u4e2a\u6ee1\u8db3\u8981\u6c42\u7684 NN \u9636\u4e8c\u7ef4\u6570\u7ec4\u3002 \u6bcf\u4e2a\u6570\u7ec4\u5360 NN \u884c\uff0c\u6bcf\u884c\u5305\u542b NN \u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570\u3002 \u6bcf\u4e2a\u6570\u7ec4\u8f93\u51fa\u5b8c\u6bd5\u540e\uff0c\u8f93\u51fa\u4e00\u4e2a\u7a7a\u884c\u3002 \u6570\u636e\u8303\u56f4 0\u2264N\u22641000\u2264N\u2264100 \u8f93\u5165\u6837\u4f8b\uff1a 1 2 3 4 5 0 \u8f93\u51fa\u6837\u4f8b\uff1a 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 2 2 2 1 1 2 3 2 1 1 2 2 2 1 1 1 1 1 1 \u5750\u6807\u5230\u5de6\u8fb9 \u53f3\u8fb9 \u4e0a\u8fb9 \u4e0b\u8fb9 \u6700\u5c0f\u503c\u5c31\u662f\u8be5\u503c #include <iostream> using namespace std; int main() { int n; while(true) { cin >> n; if (!n) break; for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) { int up = i + 1, down = n - i, left = j + 1, right = n - j; cout << min(min(up, down), min(left, right)); if (j != n - 1) cout << \" \"; } cout << endl; } cout << endl; } return 0; } cpp \u4e00\u5b9a\u8981\u8d4b\u521d\u503c int main() { // \u8fd9\u4e2a\u7a7a\u683c\u4e0d\u4ec5\u53ef\u4ee5\u662f\u7a7a\u683c \u4e5f\u53ef\u4ee5\u662f\u6362\u884c scanf(\"%d %d\",1, 2); } \u9632\u6b62\u79d1\u5b66\u8f93\u51fa #include <iostream> #include <cmath> using namespace std; int main() { int n; while (true) { cin >> n; if (!n) return 0; for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) { cout << (long int)pow(2, i + j); if (j != n - 1) cout << \" \"; } cout << endl; } cout << endl; } return 0; } int a[] = {1, 2, 3}; \u86c7\u5f62\u77e9\u9635 #include <iostream> using namespace std; int res[100][100]; int main() { int dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0}, m, n; cin >> m >> n; for (int x = 0, y = 0, k = 1, d= 0; k <= m * n; k++) { res[x][y] = k; int a = x + dx[d], b = y + dy[d]; if (a < 0 || a >= m || b < 0 || b >= n || res[a][b]) { d = (d + 1) % 4; a = x + dx[d]; b = y + dy[d]; } x = a; y = b; } for (int i = 0; i < m; i++) { for (int j = 0; j < n; j++) { cout << res[i][j] << \" \"; } cout << endl; } return 0; }","title":"\u6570\u7ec4"},{"location":"base/cpp/3array/#_1","text":"","title":"\u6570\u7ec4"},{"location":"base/cpp/3array/#_2","text":"","title":"\u57fa\u672c\u77e5\u8bc6"},{"location":"base/cpp/3array/#_3","text":"","title":"\u4e00\u7ef4\u6570\u7ec4"},{"location":"base/cpp/3array/#_4","text":"#include <iostream> using namespace std; int main() { int a[5], b[10]; return 0; }","title":"\u58f0\u660e"},{"location":"base/cpp/3array/#_5","text":"a \u7d22\u5f152 \u540e\u9762\u7684\u6ca1\u6709\u8d4b\u503c\u5c31\u662f0 #include <stdio.h> int main() { int a[10] = {1, 2, 3}; return 0; }","title":"\u521d\u59cb\u5316"},{"location":"base/cpp/3array/#_6","text":"#include <iostream> using namespace std; int main() { int a[3][3] = { {1, 2, 3}, {1, 2, 3}, {1, 2, 3} } ; for (int i = 0; i < 3; i++) { for (int j = 0; j < 3; j++) { a[i][j] = i + j; } } for (int i = 0; i < 3; i++) { for (int j = 0; j < 3; j++) { cout << a[i][j] << endl; } } return 0; } #include <iostream> #include <cstring> using namespace std; int main() { int a[10]; // const \u5e38\u91cf // 40 byte int = 4byte memset(a, -1, 40); // s\u8fd4\u56de\u6570\u7ec4\u5b57\u8282\u5927\u5c0f // a \u590d\u5236\u7ed9 b memcpy(b, a, sizeof a); memset(a, 0 ,sizeof a); for (int i = 0; i < 10; i++) { cout << a[i] << endl; } return 0; } \u51fd\u6570\u5916\u5806 \u51fd\u6570\u5185\u6808 \u9ed8\u8ba4\u6808\u7a7a\u95f41mb\u5c40\u90e8\u53d8\u91cf\u503c\u968f\u673a\u7684 \u5168\u5c40\u53d8\u91cf\u662f0 #include <iostream> using namespace std; int main() { int a[3] = {0, 1, 2}; int b[] = {1, 2, 3}; // \u6ca1\u6709\u7ed9\u51fa\u7684\u503c \u9ed8\u8ba4\u4e3a0 int c[5] = {1, 2, 3}; int d[10] = {0}; // \u4e0d\u521d\u59cb\u5316 \u503c\u662f\u968f\u673a\u7684 return 0; }","title":"\u4e8c\u7ef4\u6570\u7ec4"},{"location":"base/cpp/3array/#_7","text":"","title":"\u9898\u76ee"},{"location":"base/cpp/3array/#k","text":"#include <iostream> #include <algorithm> using namespace std; int main() { int a[5] = {1, 2, 3, 4, 5}; int k; cin >> k; // [start, end) reverse(a, a + 5); reverse(a, a + k); reverse(a + k, a + 5); for (int i = 0; i < 5; i++) { cout << a[i]; } return 0; } fabs() abs() sqrt() double #include <iostream> #include <cstdio> #include <cmath> using namespace std; int main() { int i = 3; printf(\"%.20lf\", sqrt(i) * sqrt(i)); return 0; }","title":"\u6570\u7ec4\u7ffb\u8f6ck\u6b21"},{"location":"base/cpp/3array/#_8","text":"2^n #include <iostream> using namespace std; const int N = 3000; int main() { int a[N] = {1}; int m = 1, n; cin >> n; for (int i = 0; i < n; i++) { int t = 0; for (int j = 0; j < m; j++) { t += a[j] * 2; a[j] = t % 10; t = t / 10; } if (t) a[m++] = 1; } for (int i = m - 1; i >= 0; i--) cout << a[i]; } ========== min(1, 2); max(1, 2); \u8f93\u5165\u6574\u6570 NN\uff0c\u8f93\u51fa\u4e00\u4e2a NN \u9636\u7684\u56de\u5b57\u5f62\u4e8c\u7ef4\u6570\u7ec4\u3002 \u6570\u7ec4\u7684\u6700\u5916\u5c42\u4e3a 11\uff0c\u6b21\u5916\u5c42\u4e3a 22\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002","title":"\u9ad8\u7cbe\u5ea6\u8ba1\u7b97"},{"location":"base/cpp/3array/#_9","text":"\u8f93\u5165\u5305\u542b\u591a\u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 NN\u3002 \u5f53\u8f93\u5165\u884c\u4e3a N=0N=0 \u65f6\uff0c\u8868\u793a\u8f93\u5165\u7ed3\u675f\uff0c\u4e14\u8be5\u884c\u65e0\u9700\u4f5c\u4efb\u4f55\u5904\u7406\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/3array/#_10","text":"\u5bf9\u4e8e\u6bcf\u4e2a\u8f93\u5165\u6574\u6570 NN\uff0c\u8f93\u51fa\u4e00\u4e2a\u6ee1\u8db3\u8981\u6c42\u7684 NN \u9636\u4e8c\u7ef4\u6570\u7ec4\u3002 \u6bcf\u4e2a\u6570\u7ec4\u5360 NN \u884c\uff0c\u6bcf\u884c\u5305\u542b NN \u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570\u3002 \u6bcf\u4e2a\u6570\u7ec4\u8f93\u51fa\u5b8c\u6bd5\u540e\uff0c\u8f93\u51fa\u4e00\u4e2a\u7a7a\u884c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/3array/#_11","text":"0\u2264N\u22641000\u2264N\u2264100","title":"\u6570\u636e\u8303\u56f4"},{"location":"base/cpp/3array/#_12","text":"1 2 3 4 5 0","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/3array/#_13","text":"1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 2 2 2 1 1 2 3 2 1 1 2 2 2 1 1 1 1 1 1 \u5750\u6807\u5230\u5de6\u8fb9 \u53f3\u8fb9 \u4e0a\u8fb9 \u4e0b\u8fb9 \u6700\u5c0f\u503c\u5c31\u662f\u8be5\u503c #include <iostream> using namespace std; int main() { int n; while(true) { cin >> n; if (!n) break; for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) { int up = i + 1, down = n - i, left = j + 1, right = n - j; cout << min(min(up, down), min(left, right)); if (j != n - 1) cout << \" \"; } cout << endl; } cout << endl; } return 0; } cpp \u4e00\u5b9a\u8981\u8d4b\u521d\u503c int main() { // \u8fd9\u4e2a\u7a7a\u683c\u4e0d\u4ec5\u53ef\u4ee5\u662f\u7a7a\u683c \u4e5f\u53ef\u4ee5\u662f\u6362\u884c scanf(\"%d %d\",1, 2); } \u9632\u6b62\u79d1\u5b66\u8f93\u51fa #include <iostream> #include <cmath> using namespace std; int main() { int n; while (true) { cin >> n; if (!n) return 0; for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) { cout << (long int)pow(2, i + j); if (j != n - 1) cout << \" \"; } cout << endl; } cout << endl; } return 0; } int a[] = {1, 2, 3}; \u86c7\u5f62\u77e9\u9635 #include <iostream> using namespace std; int res[100][100]; int main() { int dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0}, m, n; cin >> m >> n; for (int x = 0, y = 0, k = 1, d= 0; k <= m * n; k++) { res[x][y] = k; int a = x + dx[d], b = y + dy[d]; if (a < 0 || a >= m || b < 0 || b >= n || res[a][b]) { d = (d + 1) % 4; a = x + dx[d]; b = y + dy[d]; } x = a; y = b; } for (int i = 0; i < m; i++) { for (int j = 0; j < n; j++) { cout << res[i][j] << \" \"; } cout << endl; } return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/4if/","text":"\u57fa\u7840\u77e5\u8bc6 if #include <iostream> using namespace std; int main() { int i = 0; if (i == 0) cout i; else cout i + 1; if (i > 0) { i++; cout << i; } return 0; } \u5173\u7cfb\u8868\u8fbe\u5f0f \u5927\u4e8e > \u5c0f\u4e8e < \u5927\u4e8e\u7b49\u4e8e >= \u5c0f\u4e8e\u7b49\u4e8e <= \u7b49\u4e8e == \u4e0d\u7b49\u4e8e != \u6761\u4ef6\u8868\u8fbe\u5f0f \u4e0e && \u6216 || \u975e ! printf(\"%5d!\\n\", i); \u5de6\u8fb9\u8865\u7a7a\u683c printf(\"%-5d!\\n\", i); printf(\"%05d!\\n\", i); printf(\"%05.2f!\\n\", m); int t; cin >> t; cout << -t << endl; || \u7684\u4f18\u5148\u7ea7\u5c0f\u4e8e && \u8f93\u5165\u6570\u636e\u5751\u4e86 \u5750\u6807 \u7ed9\u5b9a\u4e24\u4e2a\u4fdd\u7559\u4e00\u4f4d\u5c0f\u6570\u7684\u6d6e\u70b9\u6570 X,YX,Y\uff0c\u7528\u6765\u8868\u793a\u4e00\u4e2a\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u3002 \u8bf7\u4f60\u5224\u65ad\u8be5\u70b9\u5728\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u3002 \u8f93\u5165\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5305\u542b\u4e24\u4e2a\u6d6e\u70b9\u6570 X,YX,Y\uff0c\u8868\u793a\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u3002 \u8f93\u51fa\u683c\u5f0f \u5982\u679c\u70b9\u5728\u7b2c\u4e00\u8c61\u9650\uff0c\u5219\u8f93\u51fa Q1 \uff0c\u5728\u7b2c\u4e8c\u8c61\u9650\uff0c\u5219\u8f93\u51fa Q2 \uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u5982\u679c\u70b9\u5728\u539f\u70b9\u5904\uff0c\u5219\u8f93\u51fa Origem \u3002 \u5426\u5219\uff0c\u5982\u679c\u70b9\u5728 xx \u5750\u6807\u4e0a\uff0c\u5219\u8f93\u51fa Eixo X \uff0c\u5728 yy \u5750\u6807\u4e0a\uff0c\u5219\u8f93\u51fa Eixo Y \u3002 \u6570\u636e\u8303\u56f4 \u221210.0\u2264X,Y\u226410.0\u221210.0\u2264X,Y\u226410.0 \u8f93\u5165\u6837\u4f8b1\uff1a 4.5 -2.2 \u8f93\u51fa\u6837\u4f8b1\uff1a Q4 \u8f93\u5165\u6837\u4f8b2\uff1a 0.0 0.0 \u8f93\u51fa\u6837\u4f8b2\uff1a Origem #include <iostream> using namespace std; int main() { double a, b; cin >> a >> b; if (a > 0 && b > 0) { cout << \"Q1\"; } else if (a < 0 && b > 0) { cout << \"Q2\"; } else if (a < 0 && b < 0) { cout << \"Q3\"; } else if (a > 0 && b < 0) { cout << \"Q4\"; } else if (a == 0 && b == 0) { cout << \"Origem\"; } else if (a == 0) { cout << \"Eixo Y\"; } else if (b == 0) { cout << \"Eixo X\"; } return 0; } \u6e38\u620f\u65f6\u95f42 \u8bfb\u53d6\u56db\u4e2a\u6574\u6570 A,B,C,DA,B,C,D\uff0c\u7528\u6765\u8868\u793a\u6e38\u620f\u7684\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u3002 \u5176\u4e2d AA \u548c BB \u4e3a\u5f00\u59cb\u65f6\u523b\u7684\u5c0f\u65f6\u548c\u5206\u949f\u6570\uff0cCC \u548c DD \u4e3a\u7ed3\u675f\u65f6\u523b\u7684\u5c0f\u65f6\u548c\u5206\u949f\u6570\u3002 \u8bf7\u4f60\u8ba1\u7b97\u6e38\u620f\u7684\u6301\u7eed\u65f6\u95f4\u3002 \u6bd4\u8d5b\u6700\u77ed\u6301\u7eed 11 \u5206\u949f\uff0c\u6700\u957f\u6301\u7eed 2424 \u5c0f\u65f6\u3002 \u8f93\u5165\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5305\u542b\u56db\u4e2a\u6574\u6570 A,B,C,DA,B,C,D\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u683c\u5f0f\u4e3a O JOGO DUROU X HORA(S) E Y MINUTO(S) \uff0c\u8868\u793a\u6e38\u620f\u5171\u6301\u7eed\u4e86 XX \u5c0f\u65f6 YY \u5206\u949f\u3002 \u6570\u636e\u8303\u56f4 0\u2264A,C\u2264230\u2264A,C\u226423, 0\u2264B,D\u2264590\u2264B,D\u226459 \u8f93\u5165\u6837\u4f8b1\uff1a 7 8 9 10 \u8f93\u51fa\u6837\u4f8b1\uff1a O JOGO DUROU 2 HORA(S) E 2 MINUTO(S) \u8f93\u5165\u6837\u4f8b2\uff1a 7 7 7 7 \u8f93\u51fa\u6837\u4f8b2\uff1a O JOGO DUROU 24 HORA(S) E 0 MINUTO(S) \u8f93\u5165\u6837\u4f8b3\uff1a 7 10 8 9 \u8f93\u51fa\u6837\u4f8b3\uff1a O JOGO DUROU 0 HORA(S) E 59 MINUTO(S) \u5c0f\u65f6\u76f8\u7b49 \u5206\u949f\u4e0d\u7b49 10 9 10 7 \u8fd9\u79cd\u60c5\u51b5\u5fd8\u8bb0\u7279\u6b8a\u5904\u7406 \u4e5f\u53ef\u4ee5\u5316\u6210min #include <cstdio> #include <iostream> using namespace std; int main() { int a, b, c, d; cin >> a >> b >> c >> d; if (a == c && b == d) { printf(\"O JOGO DUROU 24 HORA(S) E 0 MINUTO(S)\"); } else if (a == c) { if (d > b) printf(\"O JOGO DUROU %d HORA(S) E %d MINUTO(S)\",c - a, d - b); else printf(\"O JOGO DUROU %d HORA(S) E %d MINUTO(S)\", 24 + c - a - 1, 60 + d - b); } else if (c > a) { if (d >= b) printf(\"O JOGO DUROU %d HORA(S) E %d MINUTO(S)\",c - a, d - b); else printf(\"O JOGO DUROU %d HORA(S) E %d MINUTO(S)\", c - a - 1, 60 + d - b); } else { if (d >= b) printf(\"O JOGO DUROU %d HORA(S) E %d MINUTO(S)\",24 + c - a, d - b); else printf(\"O JOGO DUROU %d HORA(S) E %d MINUTO(S)\", 24 + c - a - 1, 60 + d - b); } return 0; } #include <cstdio> #include <iostream> using namespace std; int main() { int a, b, c, d; cin >> a >> b >> c >> d; int s = a * 60 + b; int e = c * 60 + d; int res = e - s; if (res <= 0) res += 1440; printf(\"O JOGO DUROU %d HORA(S) E %d MINUTO(S)\", res / 60, res % 60); return 0; } \u7b80\u5355\u7684\u6392\u5e8f \u8bfb\u53d6\u4e09\u4e2a\u6574\u6570\u5e76\u6309\u5347\u5e8f\u5bf9\u5b83\u4eec\u8fdb\u884c\u6392\u5e8f\u3002 \u8f93\u5165\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5305\u542b\u4e09\u4e2a\u6574\u6570\u3002 \u8f93\u51fa\u683c\u5f0f \u9996\u5148\uff0c\u5c06\u4e09\u4e2a\u6574\u6570\u6309\u5347\u5e8f\u987a\u5e8f\u8f93\u51fa\uff0c\u6bcf\u884c\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\u3002 \u7136\u540e\uff0c\u8f93\u51fa\u4e00\u4e2a\u7a7a\u884c\u3002 \u7d27\u63a5\u7740\uff0c\u5c06\u4e09\u4e2a\u6574\u6570\u6309\u539f\u8f93\u5165\u987a\u5e8f\u8f93\u51fa\uff0c\u6bcf\u884c\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\u3002 \u6570\u636e\u8303\u56f4 \u2212100\u2264\u8f93\u5165\u6574\u6570\u2264100\u2212100\u2264\u8f93\u5165\u6574\u6570\u2264100 \u8f93\u5165\u6837\u4f8b\uff1a 7 21 -14 \u8f93\u51fa\u6837\u4f8b\uff1a -14 7 21 7 21 -14 #include <iostream> using namespace std; int main() { int a, b, c, a1, b1, c1, t; cin >> a >> b >> c; a1 = a; b1 = b; c1 = c; if (a1 < b1) { t = a1; a1 = b1; b1 = t; if (a1 < c1) { t = a1; a1 = c1; c1 = t; } } if (a1 < c1) { t = a1; a1 = c1; c1 = t; if (a1 < b1) { t = a1; a1 = b1; b1 = t; } } if (b1 < c1) { t = b1; b1 = c1; c1 = t; } cout << c1 << endl; cout << b1 << endl; cout << a1 << endl; cout << endl; cout << a << endl; cout << b << endl; cout << c << endl; return 0; }","title":"4if"},{"location":"base/cpp/4if/#_1","text":"","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"base/cpp/4if/#if","text":"#include <iostream> using namespace std; int main() { int i = 0; if (i == 0) cout i; else cout i + 1; if (i > 0) { i++; cout << i; } return 0; }","title":"if"},{"location":"base/cpp/4if/#_2","text":"\u5927\u4e8e > \u5c0f\u4e8e < \u5927\u4e8e\u7b49\u4e8e >= \u5c0f\u4e8e\u7b49\u4e8e <= \u7b49\u4e8e == \u4e0d\u7b49\u4e8e !=","title":"\u5173\u7cfb\u8868\u8fbe\u5f0f"},{"location":"base/cpp/4if/#_3","text":"\u4e0e && \u6216 || \u975e ! printf(\"%5d!\\n\", i); \u5de6\u8fb9\u8865\u7a7a\u683c printf(\"%-5d!\\n\", i); printf(\"%05d!\\n\", i); printf(\"%05.2f!\\n\", m); int t; cin >> t; cout << -t << endl; || \u7684\u4f18\u5148\u7ea7\u5c0f\u4e8e && \u8f93\u5165\u6570\u636e\u5751\u4e86","title":"\u6761\u4ef6\u8868\u8fbe\u5f0f"},{"location":"base/cpp/4if/#_4","text":"\u7ed9\u5b9a\u4e24\u4e2a\u4fdd\u7559\u4e00\u4f4d\u5c0f\u6570\u7684\u6d6e\u70b9\u6570 X,YX,Y\uff0c\u7528\u6765\u8868\u793a\u4e00\u4e2a\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u3002 \u8bf7\u4f60\u5224\u65ad\u8be5\u70b9\u5728\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u3002","title":"\u5750\u6807"},{"location":"base/cpp/4if/#_5","text":"\u5171\u4e00\u884c\uff0c\u5305\u542b\u4e24\u4e2a\u6d6e\u70b9\u6570 X,YX,Y\uff0c\u8868\u793a\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/4if/#_6","text":"\u5982\u679c\u70b9\u5728\u7b2c\u4e00\u8c61\u9650\uff0c\u5219\u8f93\u51fa Q1 \uff0c\u5728\u7b2c\u4e8c\u8c61\u9650\uff0c\u5219\u8f93\u51fa Q2 \uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u5982\u679c\u70b9\u5728\u539f\u70b9\u5904\uff0c\u5219\u8f93\u51fa Origem \u3002 \u5426\u5219\uff0c\u5982\u679c\u70b9\u5728 xx \u5750\u6807\u4e0a\uff0c\u5219\u8f93\u51fa Eixo X \uff0c\u5728 yy \u5750\u6807\u4e0a\uff0c\u5219\u8f93\u51fa Eixo Y \u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/4if/#_7","text":"\u221210.0\u2264X,Y\u226410.0\u221210.0\u2264X,Y\u226410.0","title":"\u6570\u636e\u8303\u56f4"},{"location":"base/cpp/4if/#1","text":"4.5 -2.2","title":"\u8f93\u5165\u6837\u4f8b1\uff1a"},{"location":"base/cpp/4if/#1_1","text":"Q4","title":"\u8f93\u51fa\u6837\u4f8b1\uff1a"},{"location":"base/cpp/4if/#2","text":"0.0 0.0","title":"\u8f93\u5165\u6837\u4f8b2\uff1a"},{"location":"base/cpp/4if/#2_1","text":"Origem #include <iostream> using namespace std; int main() { double a, b; cin >> a >> b; if (a > 0 && b > 0) { cout << \"Q1\"; } else if (a < 0 && b > 0) { cout << \"Q2\"; } else if (a < 0 && b < 0) { cout << \"Q3\"; } else if (a > 0 && b < 0) { cout << \"Q4\"; } else if (a == 0 && b == 0) { cout << \"Origem\"; } else if (a == 0) { cout << \"Eixo Y\"; } else if (b == 0) { cout << \"Eixo X\"; } return 0; }","title":"\u8f93\u51fa\u6837\u4f8b2\uff1a"},{"location":"base/cpp/4if/#2_2","text":"\u8bfb\u53d6\u56db\u4e2a\u6574\u6570 A,B,C,DA,B,C,D\uff0c\u7528\u6765\u8868\u793a\u6e38\u620f\u7684\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u3002 \u5176\u4e2d AA \u548c BB \u4e3a\u5f00\u59cb\u65f6\u523b\u7684\u5c0f\u65f6\u548c\u5206\u949f\u6570\uff0cCC \u548c DD \u4e3a\u7ed3\u675f\u65f6\u523b\u7684\u5c0f\u65f6\u548c\u5206\u949f\u6570\u3002 \u8bf7\u4f60\u8ba1\u7b97\u6e38\u620f\u7684\u6301\u7eed\u65f6\u95f4\u3002 \u6bd4\u8d5b\u6700\u77ed\u6301\u7eed 11 \u5206\u949f\uff0c\u6700\u957f\u6301\u7eed 2424 \u5c0f\u65f6\u3002","title":"\u6e38\u620f\u65f6\u95f42"},{"location":"base/cpp/4if/#_8","text":"\u5171\u4e00\u884c\uff0c\u5305\u542b\u56db\u4e2a\u6574\u6570 A,B,C,DA,B,C,D\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/4if/#_9","text":"\u8f93\u51fa\u683c\u5f0f\u4e3a O JOGO DUROU X HORA(S) E Y MINUTO(S) \uff0c\u8868\u793a\u6e38\u620f\u5171\u6301\u7eed\u4e86 XX \u5c0f\u65f6 YY \u5206\u949f\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/4if/#_10","text":"0\u2264A,C\u2264230\u2264A,C\u226423, 0\u2264B,D\u2264590\u2264B,D\u226459","title":"\u6570\u636e\u8303\u56f4"},{"location":"base/cpp/4if/#1_2","text":"7 8 9 10","title":"\u8f93\u5165\u6837\u4f8b1\uff1a"},{"location":"base/cpp/4if/#1_3","text":"O JOGO DUROU 2 HORA(S) E 2 MINUTO(S)","title":"\u8f93\u51fa\u6837\u4f8b1\uff1a"},{"location":"base/cpp/4if/#2_3","text":"7 7 7 7","title":"\u8f93\u5165\u6837\u4f8b2\uff1a"},{"location":"base/cpp/4if/#2_4","text":"O JOGO DUROU 24 HORA(S) E 0 MINUTO(S)","title":"\u8f93\u51fa\u6837\u4f8b2\uff1a"},{"location":"base/cpp/4if/#3","text":"7 10 8 9","title":"\u8f93\u5165\u6837\u4f8b3\uff1a"},{"location":"base/cpp/4if/#3_1","text":"O JOGO DUROU 0 HORA(S) E 59 MINUTO(S) \u5c0f\u65f6\u76f8\u7b49 \u5206\u949f\u4e0d\u7b49 10 9 10 7 \u8fd9\u79cd\u60c5\u51b5\u5fd8\u8bb0\u7279\u6b8a\u5904\u7406 \u4e5f\u53ef\u4ee5\u5316\u6210min #include <cstdio> #include <iostream> using namespace std; int main() { int a, b, c, d; cin >> a >> b >> c >> d; if (a == c && b == d) { printf(\"O JOGO DUROU 24 HORA(S) E 0 MINUTO(S)\"); } else if (a == c) { if (d > b) printf(\"O JOGO DUROU %d HORA(S) E %d MINUTO(S)\",c - a, d - b); else printf(\"O JOGO DUROU %d HORA(S) E %d MINUTO(S)\", 24 + c - a - 1, 60 + d - b); } else if (c > a) { if (d >= b) printf(\"O JOGO DUROU %d HORA(S) E %d MINUTO(S)\",c - a, d - b); else printf(\"O JOGO DUROU %d HORA(S) E %d MINUTO(S)\", c - a - 1, 60 + d - b); } else { if (d >= b) printf(\"O JOGO DUROU %d HORA(S) E %d MINUTO(S)\",24 + c - a, d - b); else printf(\"O JOGO DUROU %d HORA(S) E %d MINUTO(S)\", 24 + c - a - 1, 60 + d - b); } return 0; } #include <cstdio> #include <iostream> using namespace std; int main() { int a, b, c, d; cin >> a >> b >> c >> d; int s = a * 60 + b; int e = c * 60 + d; int res = e - s; if (res <= 0) res += 1440; printf(\"O JOGO DUROU %d HORA(S) E %d MINUTO(S)\", res / 60, res % 60); return 0; }","title":"\u8f93\u51fa\u6837\u4f8b3\uff1a"},{"location":"base/cpp/4if/#_11","text":"\u8bfb\u53d6\u4e09\u4e2a\u6574\u6570\u5e76\u6309\u5347\u5e8f\u5bf9\u5b83\u4eec\u8fdb\u884c\u6392\u5e8f\u3002","title":"\u7b80\u5355\u7684\u6392\u5e8f"},{"location":"base/cpp/4if/#_12","text":"\u5171\u4e00\u884c\uff0c\u5305\u542b\u4e09\u4e2a\u6574\u6570\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/4if/#_13","text":"\u9996\u5148\uff0c\u5c06\u4e09\u4e2a\u6574\u6570\u6309\u5347\u5e8f\u987a\u5e8f\u8f93\u51fa\uff0c\u6bcf\u884c\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\u3002 \u7136\u540e\uff0c\u8f93\u51fa\u4e00\u4e2a\u7a7a\u884c\u3002 \u7d27\u63a5\u7740\uff0c\u5c06\u4e09\u4e2a\u6574\u6570\u6309\u539f\u8f93\u5165\u987a\u5e8f\u8f93\u51fa\uff0c\u6bcf\u884c\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/4if/#_14","text":"\u2212100\u2264\u8f93\u5165\u6574\u6570\u2264100\u2212100\u2264\u8f93\u5165\u6574\u6570\u2264100","title":"\u6570\u636e\u8303\u56f4"},{"location":"base/cpp/4if/#_15","text":"7 21 -14","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/4if/#_16","text":"-14 7 21 7 21 -14 #include <iostream> using namespace std; int main() { int a, b, c, a1, b1, c1, t; cin >> a >> b >> c; a1 = a; b1 = b; c1 = c; if (a1 < b1) { t = a1; a1 = b1; b1 = t; if (a1 < c1) { t = a1; a1 = c1; c1 = t; } } if (a1 < c1) { t = a1; a1 = c1; c1 = t; if (a1 < b1) { t = a1; a1 = b1; b1 = t; } } if (b1 < c1) { t = b1; b1 = c1; c1 = t; } cout << c1 << endl; cout << b1 << endl; cout << a1 << endl; cout << endl; cout << a << endl; cout << b << endl; cout << c << endl; return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/5while/","text":"\u57fa\u7840\u77e5\u8bc6 while #include <iostream> #include <cstring> using namespace std; int main() { int i = 10; while (i != 0) { cout << i; i--; } } \u8f93\u5165 EOF:\u7ed3\u675f\u7b26 1 // \u8bfb\u4e0d\u5230\u5c31\u4f1a\u8fd4\u56deflase while (cin >> x) 2 // cin >> x, x // \u9017\u53f7\u8868\u8fbe\u5f0f \u4ee5\u6700\u540e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e3a\u51c6 while(cin >> x, x) 3 while(scanf(\"%d\", &x) != -1) 4 while(~scanf(\"%d\", &x)) \u8f93\u51fa% printf(\"%%\"); do while #include <iostream> #include <cstring> using namespace std; int main() { int i = 0; do { cout << i; i++; } while (i != 0); } for #include <iostream> using namespace std; int main() { int i = 0; for (i; i < 10; i++) cout << i; } break continue break\u8df3\u51fa\u5f53\u524d\u5faa\u73af continue:\u8df3\u51fa\u672c\u6b21\u5faa\u73af #include <iostream> using namespace std; int main() { int n, a = 1, b = 1; cin >> n; int i = 0; while (i < n - 1) { int c = a + b; a = b; b = c; i++; } cout << a; return 0; } \u5faa\u73af\u5feb \u9012\u5f52\u6162 \u66fc\u54c8\u987f\u8ddd\u79bb |x - x1| + |y - y1| #include <iostream> using namespace std; int main() { int n; cin >> n; int mid = n / 2; for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) { if ((abs(i - mid) + abs(j - mid)) <= mid) { cout << \"*\"; } else { cout << \" \"; } } cout << endl; } return 0; } \u8fde\u7eed\u5947\u6570\u7684\u548c \u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570 XX \u548c YY\uff0c\u8f93\u51fa\u5728\u4ed6\u4eec\u4e4b\u95f4\uff08\u4e0d\u5305\u62ec XX \u548c YY\uff09\u7684\u6240\u6709\u5947\u6570\u7684\u548c\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u8f93\u5165 XX\uff0c\u7b2c\u4e8c\u884c\u8f93\u5165 YY\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u5947\u6570\u7684\u548c\u3002 \u6570\u636e\u8303\u56f4 \u2212100\u2264X,Y\u2264100\u2212100\u2264X,Y\u2264100 \u8f93\u5165\u6837\u4f8b1\uff1a 6 -5 \u8f93\u51fa\u6837\u4f8b1\uff1a 5 \u8f93\u5165\u6837\u4f8b2\uff1a 15 12 \u8f93\u51fa\u6837\u4f8b2\uff1a 13 \u8f93\u5165\u6837\u4f8b3\uff1a 12 12 \u8f93\u51fa\u6837\u4f8b3\uff1a 0 \u6ce8\u610f\u6b63\u8d1f\u6570 #include <iostream> #include <cmath> using namespace std; int main() { int X, Y, t, res; cin >> X >> Y; if (X > Y) { t = Y; Y = X; X = t; } res = 0; for (int i = X + 1; i < Y; i++) { if (abs(i % 2) == 1) res += i; } cout << res; return 0; } \u58f0\u660e\u591a\u53d8\u91cf #include <iostream> using namespace std; int main() { int n = 1, index = 0; cout << n << index; return 0; } algorithm swap(x, y) \u8fde\u7eed\u5947\u6570\u7684\u548c \u8f93\u5165 NN \u5bf9\u6574\u6570\u5bf9 X,YX,Y\uff0c\u5bf9\u4e8e\u6bcf\u5bf9 X,YX,Y\uff0c\u8bf7\u4f60\u6c42\u51fa\u5b83\u4eec\u4e4b\u95f4\uff08\u4e0d\u5305\u62ec XX \u548c YY\uff09\u7684\u6240\u6709\u5947\u6570\u7684\u548c\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u8f93\u5165\u6574\u6570 NN\uff0c\u8868\u793a\u5171\u6709 NN \u5bf9\u6d4b\u8bd5\u6570\u636e\u3002 \u63a5\u4e0b\u6765 NN \u884c\uff0c\u6bcf\u884c\u8f93\u5165\u4e00\u7ec4\u6574\u6570 XX \u548c YY\u3002 \u8f93\u51fa\u683c\u5f0f \u6bcf\u5bf9 X,YX,Y \u8f93\u51fa\u4e00\u4e2a\u5360\u4e00\u884c\u7684\u5947\u6570\u548c\u3002 \u6570\u636e\u8303\u56f4 1\u2264N\u22641001\u2264N\u2264100, \u22121000\u2264X,Y\u22641000\u22121000\u2264X,Y\u22641000 \u8f93\u5165\u6837\u4f8b\uff1a 7 4 5 13 10 6 4 3 3 3 5 3 4 3 8 \u8f93\u51fa\u6837\u4f8b\uff1a 0 11 5 0 0 0 12 1 -1 \u6570\u636e\u8303\u56f4 #include <iostream> using namespace std; int main() { long int n, x, y; cin >> n; for (int i = 0; i < n; i++) { cin >> x >> y; if (x > y) swap(x, y); int res = 0; for (int j = x + 1; j < y; j++) { if (j % 2 == 1 || j % 2 == -1) res += j; } cout << res << endl; } return 0; } \u4e0d\u8d4b\u503c \u5b83\u7684\u503c \u4e0d\u786e\u5b9a \u8d85\u65f6 CPP:1s \u4e00\u4ebf\u6b21 \u5b8c\u5168\u6570 \u4e00\u4e2a\u6574\u6570\uff0c\u9664\u4e86\u672c\u8eab\u4ee5\u5916\u7684\u5176\u4ed6\u6240\u6709\u7ea6\u6570\u7684\u548c\u5982\u679c\u7b49\u4e8e\u8be5\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u79f0\u8fd9\u4e2a\u6574\u6570\u4e3a\u5b8c\u5168\u6570\u3002 \u4f8b\u5982\uff0c66 \u5c31\u662f\u4e00\u4e2a\u5b8c\u5168\u6570\uff0c\u56e0\u4e3a\u5b83\u7684\u9664\u4e86\u672c\u8eab\u4ee5\u5916\u7684\u5176\u4ed6\u7ea6\u6570\u7684\u548c\u4e3a 1+2+3=61+2+3=6\u3002 \u73b0\u5728\uff0c\u7ed9\u5b9a\u4f60 NN \u4e2a\u6574\u6570\uff0c\u8bf7\u4f60\u4f9d\u6b21\u5224\u65ad\u8fd9\u4e9b\u6570\u662f\u5426\u662f\u5b8c\u5168\u6570\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 NN\uff0c\u8868\u793a\u5171\u6709 NN \u4e2a\u6d4b\u8bd5\u7528\u4f8b\u3002 \u63a5\u4e0b\u6765 NN \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u9700\u8981\u4f60\u8fdb\u884c\u5224\u65ad\u7684\u6574\u6570 XX\u3002 \u8f93\u51fa\u683c\u5f0f \u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u8f93\u51fa\u4e00\u4e2a\u7ed3\u679c\uff0c\u6bcf\u4e2a\u7ed3\u679c\u5360\u4e00\u884c\u3002 \u5982\u679c\u6d4b\u8bd5\u6570\u636e\u662f\u5b8c\u5168\u6570\uff0c\u5219\u8f93\u51fa X is perfect \uff0c\u5176\u4e2d XX \u662f\u6d4b\u8bd5\u6570\u636e\u3002 \u5982\u679c\u6d4b\u8bd5\u6570\u636e\u4e0d\u662f\u5b8c\u5168\u6570\uff0c\u5219\u8f93\u51fa X is not perfect \uff0c\u5176\u4e2d XX \u662f\u6d4b\u8bd5\u6570\u636e\u3002 \u6570\u636e\u8303\u56f4 1\u2264X\u226410^8 \u8f93\u5165\u6837\u4f8b\uff1a 3 6 5 28 \u8f93\u51fa\u6837\u4f8b\uff1a 6 is perfect 5 is not perfect 28 is perfect using namespace std; int main() { long int N, x; cin >> N; while (N--) { cin >> x; long int sum = 0; for (long int i = 1; i * i <= x ; i++) { if (x % i == 0) { if (i < x) sum += i; if (i != x / i && x / i < x) sum += x / i; } } if (sum == x) cout << x << \" is perfect\\n\"; else cout << x << \" is not perfect\\n\"; } return 0; } \u6210\u5bf9\u51fa\u73b0\u7684 6 2 ======== 3","title":"5while"},{"location":"base/cpp/5while/#_1","text":"","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"base/cpp/5while/#while","text":"#include <iostream> #include <cstring> using namespace std; int main() { int i = 10; while (i != 0) { cout << i; i--; } } \u8f93\u5165 EOF:\u7ed3\u675f\u7b26 1 // \u8bfb\u4e0d\u5230\u5c31\u4f1a\u8fd4\u56deflase while (cin >> x) 2 // cin >> x, x // \u9017\u53f7\u8868\u8fbe\u5f0f \u4ee5\u6700\u540e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e3a\u51c6 while(cin >> x, x) 3 while(scanf(\"%d\", &x) != -1) 4 while(~scanf(\"%d\", &x)) \u8f93\u51fa% printf(\"%%\");","title":"while"},{"location":"base/cpp/5while/#do-while","text":"#include <iostream> #include <cstring> using namespace std; int main() { int i = 0; do { cout << i; i++; } while (i != 0); }","title":"do while"},{"location":"base/cpp/5while/#for","text":"#include <iostream> using namespace std; int main() { int i = 0; for (i; i < 10; i++) cout << i; }","title":"for"},{"location":"base/cpp/5while/#break-continue","text":"break\u8df3\u51fa\u5f53\u524d\u5faa\u73af continue:\u8df3\u51fa\u672c\u6b21\u5faa\u73af #include <iostream> using namespace std; int main() { int n, a = 1, b = 1; cin >> n; int i = 0; while (i < n - 1) { int c = a + b; a = b; b = c; i++; } cout << a; return 0; } \u5faa\u73af\u5feb \u9012\u5f52\u6162 \u66fc\u54c8\u987f\u8ddd\u79bb |x - x1| + |y - y1| #include <iostream> using namespace std; int main() { int n; cin >> n; int mid = n / 2; for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) { if ((abs(i - mid) + abs(j - mid)) <= mid) { cout << \"*\"; } else { cout << \" \"; } } cout << endl; } return 0; }","title":"break continue"},{"location":"base/cpp/5while/#_2","text":"\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570 XX \u548c YY\uff0c\u8f93\u51fa\u5728\u4ed6\u4eec\u4e4b\u95f4\uff08\u4e0d\u5305\u62ec XX \u548c YY\uff09\u7684\u6240\u6709\u5947\u6570\u7684\u548c\u3002","title":"\u8fde\u7eed\u5947\u6570\u7684\u548c"},{"location":"base/cpp/5while/#_3","text":"\u7b2c\u4e00\u884c\u8f93\u5165 XX\uff0c\u7b2c\u4e8c\u884c\u8f93\u5165 YY\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/5while/#_4","text":"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u5947\u6570\u7684\u548c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/5while/#_5","text":"\u2212100\u2264X,Y\u2264100\u2212100\u2264X,Y\u2264100","title":"\u6570\u636e\u8303\u56f4"},{"location":"base/cpp/5while/#1","text":"6 -5","title":"\u8f93\u5165\u6837\u4f8b1\uff1a"},{"location":"base/cpp/5while/#1_1","text":"5","title":"\u8f93\u51fa\u6837\u4f8b1\uff1a"},{"location":"base/cpp/5while/#2","text":"15 12","title":"\u8f93\u5165\u6837\u4f8b2\uff1a"},{"location":"base/cpp/5while/#2_1","text":"13","title":"\u8f93\u51fa\u6837\u4f8b2\uff1a"},{"location":"base/cpp/5while/#3","text":"12 12","title":"\u8f93\u5165\u6837\u4f8b3\uff1a"},{"location":"base/cpp/5while/#3_1","text":"0 \u6ce8\u610f\u6b63\u8d1f\u6570 #include <iostream> #include <cmath> using namespace std; int main() { int X, Y, t, res; cin >> X >> Y; if (X > Y) { t = Y; Y = X; X = t; } res = 0; for (int i = X + 1; i < Y; i++) { if (abs(i % 2) == 1) res += i; } cout << res; return 0; } \u58f0\u660e\u591a\u53d8\u91cf #include <iostream> using namespace std; int main() { int n = 1, index = 0; cout << n << index; return 0; } algorithm swap(x, y)","title":"\u8f93\u51fa\u6837\u4f8b3\uff1a"},{"location":"base/cpp/5while/#_6","text":"\u8f93\u5165 NN \u5bf9\u6574\u6570\u5bf9 X,YX,Y\uff0c\u5bf9\u4e8e\u6bcf\u5bf9 X,YX,Y\uff0c\u8bf7\u4f60\u6c42\u51fa\u5b83\u4eec\u4e4b\u95f4\uff08\u4e0d\u5305\u62ec XX \u548c YY\uff09\u7684\u6240\u6709\u5947\u6570\u7684\u548c\u3002","title":"\u8fde\u7eed\u5947\u6570\u7684\u548c"},{"location":"base/cpp/5while/#_7","text":"\u7b2c\u4e00\u884c\u8f93\u5165\u6574\u6570 NN\uff0c\u8868\u793a\u5171\u6709 NN \u5bf9\u6d4b\u8bd5\u6570\u636e\u3002 \u63a5\u4e0b\u6765 NN \u884c\uff0c\u6bcf\u884c\u8f93\u5165\u4e00\u7ec4\u6574\u6570 XX \u548c YY\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/5while/#_8","text":"\u6bcf\u5bf9 X,YX,Y \u8f93\u51fa\u4e00\u4e2a\u5360\u4e00\u884c\u7684\u5947\u6570\u548c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/5while/#_9","text":"1\u2264N\u22641001\u2264N\u2264100, \u22121000\u2264X,Y\u22641000\u22121000\u2264X,Y\u22641000","title":"\u6570\u636e\u8303\u56f4"},{"location":"base/cpp/5while/#_10","text":"7 4 5 13 10 6 4 3 3 3 5 3 4 3 8","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/5while/#_11","text":"0 11 5 0 0 0 12 1 -1 \u6570\u636e\u8303\u56f4 #include <iostream> using namespace std; int main() { long int n, x, y; cin >> n; for (int i = 0; i < n; i++) { cin >> x >> y; if (x > y) swap(x, y); int res = 0; for (int j = x + 1; j < y; j++) { if (j % 2 == 1 || j % 2 == -1) res += j; } cout << res << endl; } return 0; } \u4e0d\u8d4b\u503c \u5b83\u7684\u503c \u4e0d\u786e\u5b9a \u8d85\u65f6 CPP:1s \u4e00\u4ebf\u6b21 \u5b8c\u5168\u6570 \u4e00\u4e2a\u6574\u6570\uff0c\u9664\u4e86\u672c\u8eab\u4ee5\u5916\u7684\u5176\u4ed6\u6240\u6709\u7ea6\u6570\u7684\u548c\u5982\u679c\u7b49\u4e8e\u8be5\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u79f0\u8fd9\u4e2a\u6574\u6570\u4e3a\u5b8c\u5168\u6570\u3002 \u4f8b\u5982\uff0c66 \u5c31\u662f\u4e00\u4e2a\u5b8c\u5168\u6570\uff0c\u56e0\u4e3a\u5b83\u7684\u9664\u4e86\u672c\u8eab\u4ee5\u5916\u7684\u5176\u4ed6\u7ea6\u6570\u7684\u548c\u4e3a 1+2+3=61+2+3=6\u3002 \u73b0\u5728\uff0c\u7ed9\u5b9a\u4f60 NN \u4e2a\u6574\u6570\uff0c\u8bf7\u4f60\u4f9d\u6b21\u5224\u65ad\u8fd9\u4e9b\u6570\u662f\u5426\u662f\u5b8c\u5168\u6570\u3002","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/5while/#_12","text":"\u7b2c\u4e00\u884c\u5305\u542b\u6574\u6570 NN\uff0c\u8868\u793a\u5171\u6709 NN \u4e2a\u6d4b\u8bd5\u7528\u4f8b\u3002 \u63a5\u4e0b\u6765 NN \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u9700\u8981\u4f60\u8fdb\u884c\u5224\u65ad\u7684\u6574\u6570 XX\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/5while/#_13","text":"\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u8f93\u51fa\u4e00\u4e2a\u7ed3\u679c\uff0c\u6bcf\u4e2a\u7ed3\u679c\u5360\u4e00\u884c\u3002 \u5982\u679c\u6d4b\u8bd5\u6570\u636e\u662f\u5b8c\u5168\u6570\uff0c\u5219\u8f93\u51fa X is perfect \uff0c\u5176\u4e2d XX \u662f\u6d4b\u8bd5\u6570\u636e\u3002 \u5982\u679c\u6d4b\u8bd5\u6570\u636e\u4e0d\u662f\u5b8c\u5168\u6570\uff0c\u5219\u8f93\u51fa X is not perfect \uff0c\u5176\u4e2d XX \u662f\u6d4b\u8bd5\u6570\u636e\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/5while/#_14","text":"1\u2264X\u226410^8","title":"\u6570\u636e\u8303\u56f4"},{"location":"base/cpp/5while/#_15","text":"3 6 5 28","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/5while/#_16","text":"6 is perfect 5 is not perfect 28 is perfect using namespace std; int main() { long int N, x; cin >> N; while (N--) { cin >> x; long int sum = 0; for (long int i = 1; i * i <= x ; i++) { if (x % i == 0) { if (i < x) sum += i; if (i != x / i && x / i < x) sum += x / i; } } if (sum == x) cout << x << \" is perfect\\n\"; else cout << x << \" is not perfect\\n\"; } return 0; } \u6210\u5bf9\u51fa\u73b0\u7684 6 2 ======== 3","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/6func/","text":"\u7406\u8bba \u51fd\u6570 \u6837\u4f8b #include <iostream> using namespace std; // \u51fd\u6570\u58f0\u660e void f(); // \u51fd\u6570\u5b9a\u4e49 // b\u6709\u9ed8\u8ba4\u503c\u4e0d\u4f20\u4e5f\u4f1a\u6709\u503c void f(int a, int b = 10) { // \u9759\u6001\u53d8\u91cf \u5806 // \u65e0\u8bba\u8c03\u7528\u591a\u5c11\u6b21f \u53ea\u4f1a\u5b9a\u4e49\u4e00\u6b21i static int i = 10; cout << \"hello word\"; cout << a << b << endl; } int main() { // \u4e0d\u5199\u8fd4\u56de\u503c \u4f1a\u8fd4\u56de\u968f\u673a\u503c f(1); f(2, 3); return 0; } \u4f20\u9012 int max(int &x, int &y) { x = 1; y = 2; if (x > y) return x; return y; } // *a a[] a[10] void out(int *a) { for (int i = 0; i < 3; i++) cout << a[i]; cout << endl; } // (*a)[3] // \u7b2c\u4e00\u7ef4\u53c2\u6570\u53ef\u4ee5\u7701\u7565 \u7b2c\u4e8c\u7ef4\u4e0d\u53ef\u4ee5 a[][3] void output(int a[3][3]) { for (int i = 0; i < 3; i++) { for (int j = 0; j < 3; j++) cout << a[i][j] << endl; } } \u9012\u5f52 #include <iostream> using namespace std; int sum1(int n, int sum) { if (n == 0) return sum; else { sum = n + sum1(n - 1, sum); } return sum; } // main\u51fd\u6570\u5199\u5728\u6700\u540e int main() { cout << sum1(3, 0); return 0; } -x \u4e60\u9898 \u6700\u5c0f\u516c\u500d\u6570 #include <iostream> using namespace std; int lcm(int a, int b) { if (a < b) swap(a, b); int i = 1; while (i != 0) { if (a * i % b == 0) break; i++; } return a * i; } int main() { int a, b; cin >> a >> b; cout << lcm(a, b); return 0; } 817\u6570\u7ec4\u53bb\u91cd \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 a\uff0c\u8bf7\u4f60\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff1a int get_unique_count(int a[], int n); // \u8fd4\u56de\u6570\u7ec4\u524dn\u4e2a\u6570\u4e2d\u7684\u4e0d\u540c\u6570\u7684\u4e2a\u6570 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 n\u3002 \u7b2c\u4e8c\u884c\u5305\u542b n \u4e2a\u6574\u6570\uff0c\u8868\u793a\u6570\u7ec4 a\u3002 \u8f93\u51fa\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\u8868\u793a\u6570\u7ec4\u4e2d\u4e0d\u540c\u6570\u7684\u4e2a\u6570\u3002 \u6570\u636e\u8303\u56f4 1\u2264n\u22641000, 1\u2264ai\u22641000 \u8f93\u5165\u6837\u4f8b\uff1a 5 1 1 2 4 5 \u8f93\u51fa\u6837\u4f8b\uff1a 4 #include <iostream> using namespace std; int unique(int n, int a[]) { int cnt = 0; for (int i = 0; i < n; i++) { bool is_exists = false; for (int j = 0; j < i; j++) { if (a[j] == a[i]) { is_exists = true; break; } } if (!is_exists) cnt++; } return cnt; } int main() { int n, a[1000]; cin >> n; for (int i = 0; i < n; i++) cin >> a[i]; cout << unique(n, a); return 0; } 823\u6392\u5217 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 nn\uff0c\u5c06\u6570\u5b57 1\u223cn1\u223cn \u6392\u6210\u4e00\u6392\uff0c\u5c06\u4f1a\u6709\u5f88\u591a\u79cd\u6392\u5217\u65b9\u6cd5\u3002 \u73b0\u5728\uff0c\u8bf7\u4f60\u6309\u7167\u5b57\u5178\u5e8f\u5c06\u6240\u6709\u7684\u6392\u5217\u65b9\u6cd5\u8f93\u51fa\u3002 \u8f93\u5165\u683c\u5f0f \u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570 nn\u3002 \u8f93\u51fa\u683c\u5f0f \u6309\u5b57\u5178\u5e8f\u8f93\u51fa\u6240\u6709\u6392\u5217\u65b9\u6848\uff0c\u6bcf\u4e2a\u65b9\u6848\u5360\u4e00\u884c\u3002 \u6570\u636e\u8303\u56f4 1\u2264n\u226491\u2264n\u22649 \u8f93\u5165\u6837\u4f8b\uff1a 3 \u8f93\u51fa\u6837\u4f8b\uff1a 1 2 3 1 3 2 2 1 3 2 3 1 3 1 2 3 2 1 #include <iostream> using namespace std; const int N = 10; int n; void dfs(int nums[], bool has_visited[], int index) { if (index > n) { for (int i = 1; i <= n; i++) cout << nums[i] << ' '; cout << endl; return; } for (int i = 1; i <= n; i++) { if (has_visited[i]) continue; has_visited[i] = true; nums[index] = i; dfs(nums, has_visited, index + 1); has_visited[i] = false; } } int main() { int nums[N]; bool has_visited[N] = {false}; cin >> n; dfs(nums, has_visited, 1); return 0; }","title":"6func"},{"location":"base/cpp/6func/#_1","text":"","title":"\u7406\u8bba"},{"location":"base/cpp/6func/#_2","text":"","title":"\u51fd\u6570"},{"location":"base/cpp/6func/#_3","text":"#include <iostream> using namespace std; // \u51fd\u6570\u58f0\u660e void f(); // \u51fd\u6570\u5b9a\u4e49 // b\u6709\u9ed8\u8ba4\u503c\u4e0d\u4f20\u4e5f\u4f1a\u6709\u503c void f(int a, int b = 10) { // \u9759\u6001\u53d8\u91cf \u5806 // \u65e0\u8bba\u8c03\u7528\u591a\u5c11\u6b21f \u53ea\u4f1a\u5b9a\u4e49\u4e00\u6b21i static int i = 10; cout << \"hello word\"; cout << a << b << endl; } int main() { // \u4e0d\u5199\u8fd4\u56de\u503c \u4f1a\u8fd4\u56de\u968f\u673a\u503c f(1); f(2, 3); return 0; }","title":"\u6837\u4f8b"},{"location":"base/cpp/6func/#_4","text":"int max(int &x, int &y) { x = 1; y = 2; if (x > y) return x; return y; } // *a a[] a[10] void out(int *a) { for (int i = 0; i < 3; i++) cout << a[i]; cout << endl; } // (*a)[3] // \u7b2c\u4e00\u7ef4\u53c2\u6570\u53ef\u4ee5\u7701\u7565 \u7b2c\u4e8c\u7ef4\u4e0d\u53ef\u4ee5 a[][3] void output(int a[3][3]) { for (int i = 0; i < 3; i++) { for (int j = 0; j < 3; j++) cout << a[i][j] << endl; } }","title":"\u4f20\u9012"},{"location":"base/cpp/6func/#_5","text":"#include <iostream> using namespace std; int sum1(int n, int sum) { if (n == 0) return sum; else { sum = n + sum1(n - 1, sum); } return sum; } // main\u51fd\u6570\u5199\u5728\u6700\u540e int main() { cout << sum1(3, 0); return 0; } -x","title":"\u9012\u5f52"},{"location":"base/cpp/6func/#_6","text":"","title":"\u4e60\u9898"},{"location":"base/cpp/6func/#_7","text":"#include <iostream> using namespace std; int lcm(int a, int b) { if (a < b) swap(a, b); int i = 1; while (i != 0) { if (a * i % b == 0) break; i++; } return a * i; } int main() { int a, b; cin >> a >> b; cout << lcm(a, b); return 0; }","title":"\u6700\u5c0f\u516c\u500d\u6570"},{"location":"base/cpp/6func/#817","text":"\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 a\uff0c\u8bf7\u4f60\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff1a int get_unique_count(int a[], int n); // \u8fd4\u56de\u6570\u7ec4\u524dn\u4e2a\u6570\u4e2d\u7684\u4e0d\u540c\u6570\u7684\u4e2a\u6570","title":"817\u6570\u7ec4\u53bb\u91cd"},{"location":"base/cpp/6func/#_8","text":"\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 n\u3002 \u7b2c\u4e8c\u884c\u5305\u542b n \u4e2a\u6574\u6570\uff0c\u8868\u793a\u6570\u7ec4 a\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/6func/#_9","text":"\u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\u8868\u793a\u6570\u7ec4\u4e2d\u4e0d\u540c\u6570\u7684\u4e2a\u6570\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/6func/#_10","text":"1\u2264n\u22641000, 1\u2264ai\u22641000","title":"\u6570\u636e\u8303\u56f4"},{"location":"base/cpp/6func/#_11","text":"5 1 1 2 4 5","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/6func/#_12","text":"4 #include <iostream> using namespace std; int unique(int n, int a[]) { int cnt = 0; for (int i = 0; i < n; i++) { bool is_exists = false; for (int j = 0; j < i; j++) { if (a[j] == a[i]) { is_exists = true; break; } } if (!is_exists) cnt++; } return cnt; } int main() { int n, a[1000]; cin >> n; for (int i = 0; i < n; i++) cin >> a[i]; cout << unique(n, a); return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/6func/#823","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 nn\uff0c\u5c06\u6570\u5b57 1\u223cn1\u223cn \u6392\u6210\u4e00\u6392\uff0c\u5c06\u4f1a\u6709\u5f88\u591a\u79cd\u6392\u5217\u65b9\u6cd5\u3002 \u73b0\u5728\uff0c\u8bf7\u4f60\u6309\u7167\u5b57\u5178\u5e8f\u5c06\u6240\u6709\u7684\u6392\u5217\u65b9\u6cd5\u8f93\u51fa\u3002","title":"823\u6392\u5217"},{"location":"base/cpp/6func/#_13","text":"\u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570 nn\u3002","title":"\u8f93\u5165\u683c\u5f0f"},{"location":"base/cpp/6func/#_14","text":"\u6309\u5b57\u5178\u5e8f\u8f93\u51fa\u6240\u6709\u6392\u5217\u65b9\u6848\uff0c\u6bcf\u4e2a\u65b9\u6848\u5360\u4e00\u884c\u3002","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"base/cpp/6func/#_15","text":"1\u2264n\u226491\u2264n\u22649","title":"\u6570\u636e\u8303\u56f4"},{"location":"base/cpp/6func/#_16","text":"3","title":"\u8f93\u5165\u6837\u4f8b\uff1a"},{"location":"base/cpp/6func/#_17","text":"1 2 3 1 3 2 2 1 3 2 3 1 3 1 2 3 2 1 #include <iostream> using namespace std; const int N = 10; int n; void dfs(int nums[], bool has_visited[], int index) { if (index > n) { for (int i = 1; i <= n; i++) cout << nums[i] << ' '; cout << endl; return; } for (int i = 1; i <= n; i++) { if (has_visited[i]) continue; has_visited[i] = true; nums[index] = i; dfs(nums, has_visited, index + 1); has_visited[i] = false; } } int main() { int nums[N]; bool has_visited[N] = {false}; cin >> n; dfs(nums, has_visited, 1); return 0; }","title":"\u8f93\u51fa\u6837\u4f8b\uff1a"},{"location":"base/cpp/7class/","text":"\u6982\u5ff5 \u7c7b #include <iostream> using namespace std; class Solution { public: // \u65b9\u6cd5 int add(int i, int j) { return i + j; } int age = 11; // \u6784\u9020\u51fd\u6570 Solution() {} A(int _age, string _name) : age(_age), name(_name){} // Solution(int _age) : age(_age){} Solution(int _age) { age = _age; } // \u58f0\u660e\u51e0\u4e2a\u53d8\u91cf }solution1, solution2, solution3[10]; int main() { // \u53d8\u91cf . \u8bbf\u95ee Solution s = Solution(23); // s.age = 12; cout << s.age; cout << endl; // \u6307\u9488 -> \u8fdb\u884c\u8bbf\u95ee Solution* s1 = new Solution(); s1 -> age = 13; cout << s1 -> age; return 0; } \u7c7b\u4e2d\u7684\u53d8\u91cf\u548c\u51fd\u6570\u88ab\u7edf\u4e00\u79f0\u4e3a\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u3002 private:\u7c7b\u7684\u5916\u90e8\u4e0d\u53ef\u4ee5\u8bbf\u95ee public:\u7c7b\u7684\u5916\u90e8\u53ef\u4ee5\u8bbf\u95ee \u7c7b\u7ed3\u675f\u52a0 \uff1b \u90fd\u662fpublic\u4e0d\u7528\u5199\u6784\u9020\u5668\uff0c\u76f4\u63a5{} \u5426\u5219\u9700\u8981\u5199\u6784\u9020\u5668 \u7ed3\u6784\u4f53 struct Book { int age = 11; string name; }; int main() { Book b = Book(); cout << b.name; Book b1 = {11, \"matt\"}; return 0; } \u7ed3\u6784\u4f53\u7684\u7528\u6cd5\u548c\u7c7b\u4e00\u6a21\u4e00\u6837\uff0c\u4e0d\u540c\u7684\u662f\u7c7b\u9ed8\u8ba4\u662fprivate,\u7ed3\u6784\u4f53\u662fpublic \u6307\u9488 #include <iostream> using namespace std; int main() { int a = 10; // \u6307\u9488\u7684\u58f0\u660e // &a \u83b7\u53d6a\u7684\u5730\u5740 int p = &a; // int* p = &a; // int& p = a; p\u76f8\u5f53\u4e8ea\u7684\u522b\u540d cout << p << endl; // \u4fee\u6539p\u7684\u503c *p = 12; // *p\u53d6\u5f97\u53d8\u91cf\u7684\u503c cout << *p; return 0; } \u94fe\u8868 #include <iostream> using namespace std; struct Node { int val; Node* next; Node(){} Node(int _val) : val(_val){} }*head; int main() { for (int i = 1; i < 5; i++) { // Node() \u53d8\u91cf new Node(i) \u6307\u9488 Node* p = new Node(i); //\u6307\u9488 -> \u53d8\u91cf. p -> next = head; head = p; } Node* p = head; while (p) { cout << p -> val << ' '; p = p -> next; } return 0; } \u6808\u4ece\u4e0a\u5f80\u4e0b \u968f\u673a\u7684 \u5806\u4ece\u4e0b\u5f80\u4e0a \u4f1a\u6709\u9ed8\u8ba4\u503c \u4e60\u9898 84\u6c421+2+...+n \u6c42 1+2+\u2026+n\uff0c\u8981\u6c42\u4e0d\u80fd\u4f7f\u7528\u4e58\u9664\u6cd5\u3001for\u3001while\u3001if\u3001else\u3001switch\u3001case \u7b49\u5173\u952e\u5b57\u53ca\u6761\u4ef6\u5224\u65ad\u8bed\u53e5 (A?B:C)\u3002 \u6837\u4f8b \u8f93\u5165\uff1a10 \u8f93\u51fa\uff1a55 \u601d\u8def \u5de7\u5999\u7684\u4f7f\u7528\u4e86&& \u7684\u77ed\u8def\u529f\u80fd code class Solution { public: int getSum(int n) { int res = 0; // return \u4e0d\u80fd\u653e\u5728\u6761\u4ef6\u8868\u8fbe\u5f0f\u91cc\u9762 n > 0 && (res += getSum(n - 1) + n); return res; } }; o1\u65f6\u95f4\u5220\u9664\u8282\u70b9 \u7ed9\u5b9a\u5355\u5411\u94fe\u8868\u7684\u4e00\u4e2a\u8282\u70b9\u6307\u9488\uff0c\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u5728O(1)\u65f6\u95f4\u5220\u9664\u8be5\u7ed3\u70b9\u3002 \u5047\u8bbe\u94fe\u8868\u4e00\u5b9a\u5b58\u5728\uff0c\u5e76\u4e14\u8be5\u8282\u70b9\u4e00\u5b9a\u4e0d\u662f\u5c3e\u8282\u70b9\u3002 \u6837\u4f8b \u8f93\u5165\uff1a\u94fe\u8868 1->4->6->8 \u5220\u6389\u8282\u70b9\uff1a\u7b2c2\u4e2a\u8282\u70b9\u53736\uff08\u5934\u8282\u70b9\u4e3a\u7b2c0\u4e2a\u8282\u70b9\uff09 \u8f93\u51fa\uff1a\u65b0\u94fe\u8868 1->4->8 \u601d\u8def \u6574\u4f53\u8d4b\u503c code class Solution { public: void deleteNode(ListNode* node) { // node -> val = node -> next -> val; // node -> next = node -> next -> next; // \u6574\u4f53\u8d4b\u503c *node = *(node -> next); } }; \u5408\u5e76\u4fe9\u4e2a\u6709\u5e8f\u94fe\u8868 \u8f93\u5165\u4e24\u4e2a\u9012\u589e\u6392\u5e8f\u7684\u94fe\u8868\uff0c\u5408\u5e76\u8fd9\u4e24\u4e2a\u94fe\u8868\u5e76\u4f7f\u65b0\u94fe\u8868\u4e2d\u7684\u7ed3\u70b9\u4ecd\u7136\u662f\u6309\u7167\u9012\u589e\u6392\u5e8f\u7684\u3002 \u6837\u4f8b \u8f93\u5165\uff1a1->3->5 , 2->4->5 \u8f93\u51fa\uff1a1->2->3->4->5->5 \u601d\u8def tail = tail -> next = l1; \u7b49\u4ef7\u4e8e tail -> nest = l1; tail = tail -> next; code \u5783\u573e\u4ee3\u7801 class Solution { public: ListNode* merge(ListNode* l1, ListNode* l2) { if (!l1) return l2; else if (!l2) return l1; ListNode* head = new ListNode(-1), *node = new ListNode(-1); if (l1 -> val < l2 -> val) head -> next = l1; else head -> next = l2; node = head; while (l1 && l2) { if (l1 -> val < l2 -> val) { node -> next = l1; l1 = l1 -> next; } else { node -> next = l2; l2 = l2 -> ; } node = node -> next; } if (l1) node -> next = l1; if (l2) node -> next = l2; return head -> next; } }; \u4f18\u79c0\u4ee3\u7801 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public: ListNode* merge(ListNode* l1, ListNode* l2) { auto dummy = new ListNode(-1), tail = dummy; while(l1 && l2) { if (l1 -> val < l2 -> val) { tail = tail -> next = l1; l1 = l1 -> next; } else { tail = tail -> next = l2; l2 = l2 -> next; } } if (l1) tail -> next = l1; if (l2) tail -> next = l2; return dummy -> next; } }; \u7ffb\u8f6c\u94fe\u8868 \u601d\u8def \u58f0\u660e\u4fe9\u4e2a\u8282\u70b9 p q \u5783\u573e\u4ee3\u7801 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public: ListNode* reverseList(ListNode* head) { ListNode* node = new ListNode(-1); ListNode* next; while(head) { next = head -> next; head -> next = node -> next; node -> next = head; head = next; } return node -> next; } }; \u4f18\u79c0\u4ee3\u7801 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public: ListNode* reverseList(ListNode* head) { if (!head || !head -> next) return head; auto p = head, q = head -> next; while(q) { auto o = q -> next; q -> next = p; p = q, q = o; } head -> next = NULL; return p; } }; \u9012\u5f52 class Solution { public: ListNode* reverseList(ListNode* head) { if (!head || !head -> next) return head; auto res = reverseList(head -> next); head -> next -> next = head; head -> next = NULL; return res; } }; \u4fe9\u4e2a\u94fe\u8868\u627e\u516c\u5171\u7684\u8282\u70b9 \u7a7a\u8282\u70b9 0 NULL nullptr \u601d\u8def code /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public: ListNode *findFirstCommonNode(ListNode *headA, ListNode *headB) { auto l1 = headA; auto l2 = headB; while(l1 != l2) { if (l1) l1 = l1 -> next; else l1 = headB; if (l2) l2 = l2 -> next; else l2 = headA; } return l1; } }; \u5220\u9664\u91cd\u590d\u7684\u8282\u70b9 1-> 2-> 2-> 3-> 3 1->3 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public: ListNode* deleteDuplication(ListNode* head) { auto dummy = new ListNode(-1); dummy -> next = head; auto p = dummy; while (p -> next) { auto q = p -> next; while(q -> next && q -> val == q -> next -> val) q = q -> next; if (p -> next != q) { p -> next = q -> next; } else { p = q; } } return dummy -> next; } };","title":"7class"},{"location":"base/cpp/7class/#_1","text":"","title":"\u6982\u5ff5"},{"location":"base/cpp/7class/#_2","text":"#include <iostream> using namespace std; class Solution { public: // \u65b9\u6cd5 int add(int i, int j) { return i + j; } int age = 11; // \u6784\u9020\u51fd\u6570 Solution() {} A(int _age, string _name) : age(_age), name(_name){} // Solution(int _age) : age(_age){} Solution(int _age) { age = _age; } // \u58f0\u660e\u51e0\u4e2a\u53d8\u91cf }solution1, solution2, solution3[10]; int main() { // \u53d8\u91cf . \u8bbf\u95ee Solution s = Solution(23); // s.age = 12; cout << s.age; cout << endl; // \u6307\u9488 -> \u8fdb\u884c\u8bbf\u95ee Solution* s1 = new Solution(); s1 -> age = 13; cout << s1 -> age; return 0; } \u7c7b\u4e2d\u7684\u53d8\u91cf\u548c\u51fd\u6570\u88ab\u7edf\u4e00\u79f0\u4e3a\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u3002 private:\u7c7b\u7684\u5916\u90e8\u4e0d\u53ef\u4ee5\u8bbf\u95ee public:\u7c7b\u7684\u5916\u90e8\u53ef\u4ee5\u8bbf\u95ee \u7c7b\u7ed3\u675f\u52a0 \uff1b \u90fd\u662fpublic\u4e0d\u7528\u5199\u6784\u9020\u5668\uff0c\u76f4\u63a5{} \u5426\u5219\u9700\u8981\u5199\u6784\u9020\u5668","title":"\u7c7b"},{"location":"base/cpp/7class/#_3","text":"struct Book { int age = 11; string name; }; int main() { Book b = Book(); cout << b.name; Book b1 = {11, \"matt\"}; return 0; } \u7ed3\u6784\u4f53\u7684\u7528\u6cd5\u548c\u7c7b\u4e00\u6a21\u4e00\u6837\uff0c\u4e0d\u540c\u7684\u662f\u7c7b\u9ed8\u8ba4\u662fprivate,\u7ed3\u6784\u4f53\u662fpublic","title":"\u7ed3\u6784\u4f53"},{"location":"base/cpp/7class/#_4","text":"#include <iostream> using namespace std; int main() { int a = 10; // \u6307\u9488\u7684\u58f0\u660e // &a \u83b7\u53d6a\u7684\u5730\u5740 int p = &a; // int* p = &a; // int& p = a; p\u76f8\u5f53\u4e8ea\u7684\u522b\u540d cout << p << endl; // \u4fee\u6539p\u7684\u503c *p = 12; // *p\u53d6\u5f97\u53d8\u91cf\u7684\u503c cout << *p; return 0; }","title":"\u6307\u9488"},{"location":"base/cpp/7class/#_5","text":"#include <iostream> using namespace std; struct Node { int val; Node* next; Node(){} Node(int _val) : val(_val){} }*head; int main() { for (int i = 1; i < 5; i++) { // Node() \u53d8\u91cf new Node(i) \u6307\u9488 Node* p = new Node(i); //\u6307\u9488 -> \u53d8\u91cf. p -> next = head; head = p; } Node* p = head; while (p) { cout << p -> val << ' '; p = p -> next; } return 0; } \u6808\u4ece\u4e0a\u5f80\u4e0b \u968f\u673a\u7684 \u5806\u4ece\u4e0b\u5f80\u4e0a \u4f1a\u6709\u9ed8\u8ba4\u503c","title":"\u94fe\u8868"},{"location":"base/cpp/7class/#_6","text":"","title":"\u4e60\u9898"},{"location":"base/cpp/7class/#8412n","text":"\u6c42 1+2+\u2026+n\uff0c\u8981\u6c42\u4e0d\u80fd\u4f7f\u7528\u4e58\u9664\u6cd5\u3001for\u3001while\u3001if\u3001else\u3001switch\u3001case \u7b49\u5173\u952e\u5b57\u53ca\u6761\u4ef6\u5224\u65ad\u8bed\u53e5 (A?B:C)\u3002","title":"84\u6c421+2+...+n"},{"location":"base/cpp/7class/#_7","text":"\u8f93\u5165\uff1a10 \u8f93\u51fa\uff1a55","title":"\u6837\u4f8b"},{"location":"base/cpp/7class/#_8","text":"\u5de7\u5999\u7684\u4f7f\u7528\u4e86&& \u7684\u77ed\u8def\u529f\u80fd","title":"\u601d\u8def"},{"location":"base/cpp/7class/#code","text":"class Solution { public: int getSum(int n) { int res = 0; // return \u4e0d\u80fd\u653e\u5728\u6761\u4ef6\u8868\u8fbe\u5f0f\u91cc\u9762 n > 0 && (res += getSum(n - 1) + n); return res; } };","title":"code"},{"location":"base/cpp/7class/#o1","text":"\u7ed9\u5b9a\u5355\u5411\u94fe\u8868\u7684\u4e00\u4e2a\u8282\u70b9\u6307\u9488\uff0c\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u5728O(1)\u65f6\u95f4\u5220\u9664\u8be5\u7ed3\u70b9\u3002 \u5047\u8bbe\u94fe\u8868\u4e00\u5b9a\u5b58\u5728\uff0c\u5e76\u4e14\u8be5\u8282\u70b9\u4e00\u5b9a\u4e0d\u662f\u5c3e\u8282\u70b9\u3002","title":"o1\u65f6\u95f4\u5220\u9664\u8282\u70b9"},{"location":"base/cpp/7class/#_9","text":"\u8f93\u5165\uff1a\u94fe\u8868 1->4->6->8 \u5220\u6389\u8282\u70b9\uff1a\u7b2c2\u4e2a\u8282\u70b9\u53736\uff08\u5934\u8282\u70b9\u4e3a\u7b2c0\u4e2a\u8282\u70b9\uff09 \u8f93\u51fa\uff1a\u65b0\u94fe\u8868 1->4->8","title":"\u6837\u4f8b"},{"location":"base/cpp/7class/#_10","text":"\u6574\u4f53\u8d4b\u503c","title":"\u601d\u8def"},{"location":"base/cpp/7class/#code_1","text":"class Solution { public: void deleteNode(ListNode* node) { // node -> val = node -> next -> val; // node -> next = node -> next -> next; // \u6574\u4f53\u8d4b\u503c *node = *(node -> next); } };","title":"code"},{"location":"base/cpp/7class/#_11","text":"\u8f93\u5165\u4e24\u4e2a\u9012\u589e\u6392\u5e8f\u7684\u94fe\u8868\uff0c\u5408\u5e76\u8fd9\u4e24\u4e2a\u94fe\u8868\u5e76\u4f7f\u65b0\u94fe\u8868\u4e2d\u7684\u7ed3\u70b9\u4ecd\u7136\u662f\u6309\u7167\u9012\u589e\u6392\u5e8f\u7684\u3002","title":"\u5408\u5e76\u4fe9\u4e2a\u6709\u5e8f\u94fe\u8868"},{"location":"base/cpp/7class/#_12","text":"\u8f93\u5165\uff1a1->3->5 , 2->4->5 \u8f93\u51fa\uff1a1->2->3->4->5->5","title":"\u6837\u4f8b"},{"location":"base/cpp/7class/#_13","text":"tail = tail -> next = l1; \u7b49\u4ef7\u4e8e tail -> nest = l1; tail = tail -> next;","title":"\u601d\u8def"},{"location":"base/cpp/7class/#code_2","text":"","title":"code"},{"location":"base/cpp/7class/#_14","text":"class Solution { public: ListNode* merge(ListNode* l1, ListNode* l2) { if (!l1) return l2; else if (!l2) return l1; ListNode* head = new ListNode(-1), *node = new ListNode(-1); if (l1 -> val < l2 -> val) head -> next = l1; else head -> next = l2; node = head; while (l1 && l2) { if (l1 -> val < l2 -> val) { node -> next = l1; l1 = l1 -> next; } else { node -> next = l2; l2 = l2 -> ; } node = node -> next; } if (l1) node -> next = l1; if (l2) node -> next = l2; return head -> next; } };","title":"\u5783\u573e\u4ee3\u7801"},{"location":"base/cpp/7class/#_15","text":"/** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public: ListNode* merge(ListNode* l1, ListNode* l2) { auto dummy = new ListNode(-1), tail = dummy; while(l1 && l2) { if (l1 -> val < l2 -> val) { tail = tail -> next = l1; l1 = l1 -> next; } else { tail = tail -> next = l2; l2 = l2 -> next; } } if (l1) tail -> next = l1; if (l2) tail -> next = l2; return dummy -> next; } };","title":"\u4f18\u79c0\u4ee3\u7801"},{"location":"base/cpp/7class/#_16","text":"","title":"\u7ffb\u8f6c\u94fe\u8868"},{"location":"base/cpp/7class/#_17","text":"\u58f0\u660e\u4fe9\u4e2a\u8282\u70b9 p q","title":"\u601d\u8def"},{"location":"base/cpp/7class/#_18","text":"/** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public: ListNode* reverseList(ListNode* head) { ListNode* node = new ListNode(-1); ListNode* next; while(head) { next = head -> next; head -> next = node -> next; node -> next = head; head = next; } return node -> next; } };","title":"\u5783\u573e\u4ee3\u7801"},{"location":"base/cpp/7class/#_19","text":"/** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public: ListNode* reverseList(ListNode* head) { if (!head || !head -> next) return head; auto p = head, q = head -> next; while(q) { auto o = q -> next; q -> next = p; p = q, q = o; } head -> next = NULL; return p; } };","title":"\u4f18\u79c0\u4ee3\u7801"},{"location":"base/cpp/7class/#_20","text":"class Solution { public: ListNode* reverseList(ListNode* head) { if (!head || !head -> next) return head; auto res = reverseList(head -> next); head -> next -> next = head; head -> next = NULL; return res; } };","title":"\u9012\u5f52"},{"location":"base/cpp/7class/#_21","text":"\u7a7a\u8282\u70b9 0 NULL nullptr","title":"\u4fe9\u4e2a\u94fe\u8868\u627e\u516c\u5171\u7684\u8282\u70b9"},{"location":"base/cpp/7class/#_22","text":"","title":"\u601d\u8def"},{"location":"base/cpp/7class/#code_3","text":"/** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public: ListNode *findFirstCommonNode(ListNode *headA, ListNode *headB) { auto l1 = headA; auto l2 = headB; while(l1 != l2) { if (l1) l1 = l1 -> next; else l1 = headB; if (l2) l2 = l2 -> next; else l2 = headA; } return l1; } };","title":"code"},{"location":"base/cpp/7class/#_23","text":"1-> 2-> 2-> 3-> 3 1->3 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public: ListNode* deleteDuplication(ListNode* head) { auto dummy = new ListNode(-1); dummy -> next = head; auto p = dummy; while (p -> next) { auto q = p -> next; while(q -> next && q -> val == q -> next -> val) q = q -> next; if (p -> next != q) { p -> next = q -> next; } else { p = q; } } return dummy -> next; } };","title":"\u5220\u9664\u91cd\u590d\u7684\u8282\u70b9"},{"location":"base/cpp/%E4%BD%8D%E8%BF%90%E7%AE%97/","text":"& \u4e0e | \u6216 ~ \u975e ^ \u5f02\u6216 >> \u53f3\u79fb << \u5de6\u79fb (1) \u6c42x\u7684\u7b2ck\u4f4d\u6570\u5b57 x >> k & 1 (2) lowbit(x) = x & -x\uff0c\u8fd4\u56dex\u7684\u6700\u540e\u4e00\u4f4d1 100 -100 100 \u53d6\u53cd+1 \u5e38\u7528\u5e93\u51fd\u6570 reverse \u7ffb\u8f6c reverse(a.begin(), a.end()) unique \u53bb\u91cd \u9002\u54081 2 2 3 3 4 \u4e0d\u9002\u5408 1 2 2 3 2 unique(a.begin(), a.end()) #include <iostream> #include <vector> #include <algorithm> using namespace std; int main() { vector<int> a({1, 2, 3, 3, 4}); int p = unique(a.begin(), a.end()) - a.begin(); cout << p; return 0; } random_shuffle random_shuffle(c.begin(), c.end()); #include <iostream> #include <algorithm> #include <vector> #include <ctime> using namespace std; // a \u662f\u5426\u6392\u5728b\u7684\u524d\u9762 a > b a \u5728\u524d\u9762 bool cmp(int a, int b) { return a > b; } int main() { srand(time(0)); vector<int> c({1, 2, 3, 4, 5}); random_shuffle(c.begin(), c.end()); for (auto x : c) cout << x << ' '; cout << endl; sort(c.begin(), c.end()); for (auto x : c) cout << x << ' '; cout << endl; //sort(c.begin(), c.end(), greater<int>()); sort(c.begin(), c.end(), cmp); for (auto x : c) cout << x << ' '; cout << endl; return 0; } sort #include <iostream> #include <algorithm> using namespace std; struct User { int x, y; // \u5f53\u524d\u548c\u540e\u4e00\u4e2a\u6bd4\u8f83 bool operator< (const User &u) const { return x > u.x; } }a[5]; bool cmp(User a, User b) { return a.x > b.x; } int main() { for (int i = 0; i < 5; i++) { a[i].x = i; a[i].y = -i; } for (int i = 0; i < 5; i++) cout << a[i].x << a[i].y << ' '; // sort(a, a + 5, greater<int>()) // sort(a, a + 5, cmp); sort(a, a + 5); cout << endl; for (int i = 0; i < 5; i++) cout << a[i].x << a[i].y << ' '; return 0; } lower_bound upper_bound #include <iostream> #include <algorithm> using namespace std; int main() { int a[] = {1, 2, 3, 4, 5}; int p = lower_bound(a, a + 5, 2) - a; // 1 cout << p; return 0; } class Solution { public: void reOrderArray(vector<int> &array) { int i = 0, j = array.size() - 1; while (i < j) { while (i < j && array[i] % 2 == 1) i++; while (i < j && array[j] % 2 == 0) j--; swap(array[i], array[j]); i++; j--; } return; } }; class Solution { public: vector<vector<int>> permutation(vector<int>& nums) { vector<vector<int>> res; sort(nums.begin(), nums.end()); do { res.push_back(nums); } while (next_permutation(nums.begin(), nums.end())); return res; } }; class Solution { public: int NumberOf1(int n) { int cnt = 0; for (int i = 0; i< 32; i++) { if (n & 1) cnt++; n >>= 1; } return cnt; } }; class Solution { public: int NumberOf1(int n) { int res = 0; while (n) { n -= n & -n; res++; } return res; } }; #include <iostream> #include <map> #include <algorithm> using namespace std; struct Rec { int m; double n; string s; }r[10000]; bool cmp(Rec m1, Rec m2) { return m1.m < m2.m; } int main() { int m; int c; double n; string s; scanf(\"%d\", &c); for (int i = 0; i < c; i++) { cin >> r[i].m >> r[i].n >> r[i].s; } sort(r, r + c, cmp); for (int i = 0; i < c; i++) { printf(\"%d %.2lf %s\\n\", r[i].m, r[i].n, r[i].s.c_str()); } return 0; }","title":"\u4f4d\u8fd0\u7b97"},{"location":"base/cpp/%E4%BD%8D%E8%BF%90%E7%AE%97/#_1","text":"","title":"\u5e38\u7528\u5e93\u51fd\u6570"},{"location":"base/cpp/%E4%BD%8D%E8%BF%90%E7%AE%97/#reverse","text":"\u7ffb\u8f6c reverse(a.begin(), a.end())","title":"reverse"},{"location":"base/cpp/%E4%BD%8D%E8%BF%90%E7%AE%97/#unique","text":"\u53bb\u91cd \u9002\u54081 2 2 3 3 4 \u4e0d\u9002\u5408 1 2 2 3 2 unique(a.begin(), a.end()) #include <iostream> #include <vector> #include <algorithm> using namespace std; int main() { vector<int> a({1, 2, 3, 3, 4}); int p = unique(a.begin(), a.end()) - a.begin(); cout << p; return 0; }","title":"unique"},{"location":"base/cpp/%E4%BD%8D%E8%BF%90%E7%AE%97/#random_shuffle","text":"random_shuffle(c.begin(), c.end()); #include <iostream> #include <algorithm> #include <vector> #include <ctime> using namespace std; // a \u662f\u5426\u6392\u5728b\u7684\u524d\u9762 a > b a \u5728\u524d\u9762 bool cmp(int a, int b) { return a > b; } int main() { srand(time(0)); vector<int> c({1, 2, 3, 4, 5}); random_shuffle(c.begin(), c.end()); for (auto x : c) cout << x << ' '; cout << endl; sort(c.begin(), c.end()); for (auto x : c) cout << x << ' '; cout << endl; //sort(c.begin(), c.end(), greater<int>()); sort(c.begin(), c.end(), cmp); for (auto x : c) cout << x << ' '; cout << endl; return 0; }","title":"random_shuffle"},{"location":"base/cpp/%E4%BD%8D%E8%BF%90%E7%AE%97/#sort","text":"#include <iostream> #include <algorithm> using namespace std; struct User { int x, y; // \u5f53\u524d\u548c\u540e\u4e00\u4e2a\u6bd4\u8f83 bool operator< (const User &u) const { return x > u.x; } }a[5]; bool cmp(User a, User b) { return a.x > b.x; } int main() { for (int i = 0; i < 5; i++) { a[i].x = i; a[i].y = -i; } for (int i = 0; i < 5; i++) cout << a[i].x << a[i].y << ' '; // sort(a, a + 5, greater<int>()) // sort(a, a + 5, cmp); sort(a, a + 5); cout << endl; for (int i = 0; i < 5; i++) cout << a[i].x << a[i].y << ' '; return 0; }","title":"sort"},{"location":"base/cpp/%E4%BD%8D%E8%BF%90%E7%AE%97/#lower_bound-upper_bound","text":"#include <iostream> #include <algorithm> using namespace std; int main() { int a[] = {1, 2, 3, 4, 5}; int p = lower_bound(a, a + 5, 2) - a; // 1 cout << p; return 0; } class Solution { public: void reOrderArray(vector<int> &array) { int i = 0, j = array.size() - 1; while (i < j) { while (i < j && array[i] % 2 == 1) i++; while (i < j && array[j] % 2 == 0) j--; swap(array[i], array[j]); i++; j--; } return; } }; class Solution { public: vector<vector<int>> permutation(vector<int>& nums) { vector<vector<int>> res; sort(nums.begin(), nums.end()); do { res.push_back(nums); } while (next_permutation(nums.begin(), nums.end())); return res; } }; class Solution { public: int NumberOf1(int n) { int cnt = 0; for (int i = 0; i< 32; i++) { if (n & 1) cnt++; n >>= 1; } return cnt; } }; class Solution { public: int NumberOf1(int n) { int res = 0; while (n) { n -= n & -n; res++; } return res; } }; #include <iostream> #include <map> #include <algorithm> using namespace std; struct Rec { int m; double n; string s; }r[10000]; bool cmp(Rec m1, Rec m2) { return m1.m < m2.m; } int main() { int m; int c; double n; string s; scanf(\"%d\", &c); for (int i = 0; i < c; i++) { cin >> r[i].m >> r[i].n >> r[i].s; } sort(r, r + c, cmp); for (int i = 0; i < c; i++) { printf(\"%d %.2lf %s\\n\", r[i].m, r[i].n, r[i].s.c_str()); } return 0; }","title":"lower_bound upper_bound"},{"location":"base/cpp/1stl/0init/","text":"#include <iostream> #include <vector> #include <queue> #include <stack> #include <deque> #include <set> #include <map> using namespace std; int main() { vector<int> v1({1, 2, 3}); v1 = {1, 2, 3}; queue<int> q({1, 2, 3}); // \u9519\u8bef //q = {1, 2, 3}; deque<int> d1 = {1, 2, 3}; stack<int> stk1({1, 2, 3}); // \u9519\u8bef // stack<int> s = {1, 2, 3}; set<int> s1 = {1, 2, 3}; set<int> s2({1, 2, 3}); map<string, string> m1({{1, 2}}); return 0; } #include <iostream> #include <vector> #include <queue> #include <stack> #include <deque> #include <set> #include <map> using namespace std; int main() { map<string, string> m1 = { {\"name\", \"matt\"} }; m1.insert({\"age\", \"17\"}); for (auto i = m1.begin(); i != m1.end(); i++) cout << i -> first; return 0; } #include <iostream> using namespace std; int main() { // pair \u5728iostream\u91cc\u9762 pair<int, int> p1 = {1, 2}; cout << p1.first; return 0; }","title":"0init"},{"location":"base/cpp/1stl/1stl/","text":"vector vector\u662f\u53d8\u957f\u6570\u7ec4\uff0c\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u4e0d\u652f\u6301\u5728\u4efb\u610f\u4f4d\u7f6eO(1)\u63d2\u5165\u3002\u4e3a\u4e86\u4fdd\u8bc1\u6548\u7387\uff0c\u5143\u7d20\u7684\u589e\u5220\u4e00\u822c\u5e94\u8be5\u5728\u672b\u5c3e\u8fdb\u884c\u3002 \u57fa\u672c\u4f7f\u7528 #include <iostream> #include <vector> using namespace std; int main() { // \u521d\u59cb\u5316 vector<int> a({1, 2, 3}); a = {1, 2, 3}; // empty size clear cout << a.size() << endl; cout << a.empty() << endl; cout << a.size() << endl; // \u8bbf\u95ee cout << a[0]; // \u8fed\u4ee3\u5668 \u7c7b\u4f3c\u4e8e\u6307\u9488 cout << \"iterator\"; vector<int>::iterator it = a.begin(); while (it != a.end()) { cout << *it << endl; it++; } // front \u7b2c\u4e00\u4e2a // back \u6700\u540e\u4e00\u4e2a cout << a.front() << endl; cout << a.back() << endl; // \u4ece\u6700\u540e\u4e00\u4e2a\u6dfb\u52a0 a.push_back(4); cout << a.back() << endl; // \u5220\u9664\u6700\u540e\u4e00\u4e2a a.pop_back(); return 0; } #include <iostream> #include <vector> using namespace std; int main() { vector<int> a({1, 2, 3}); vector<int> b = {1, 2, 3, 4}; for (vector<int>::iterator it = a.begin(); it != a.end(); it++) { cout << *it; } cout << endl; for (auto it = b.begin(); it != b.end(); it++) cout << *it; return 0; } queue \u961f\u5217 #include <iostream> #include <queue> using namespace std; int main() { queue<int> q({1, 3, 4}); // \u9519\u8bef\u7684\u3001 //q = {1, 2}; // push \u538b\u5165 pop \u5f39\u51fa q.push(1); q.push(2); cout << q.size(); q.pop(); cout << q.size(); cout << endl; // front \u5934 back \u5c3e\u5df4 cout << q.front() << q.back(); return 0; } priority_queue #include <iostream> #include <queue> using namespace std; int main() { priority_queue<int> p; p.push(1); p.push(2); p.pop(); // cout << p.size(); cout << p.top(); cout << \"\u5c0f\u6839\u5806\"; priority_queue<int, vector<int>, greater<int>> q; // priority_queue<int, vector<int>, greater<int>> q q.push(10); q.push(2); cout << q.top(); return 0; } #include <iostream> #include <queue> #include <vector> using namespace std; int main() { struct User { int a; bool operator> (const User& u) const { return a > u.a; } }; priority_queue<int, vector<int>, greater<int>> p; p.push({1}); p.push({2}); cout << p.top(); return 0; } #include <iostream> #include <algorithm> #include <queue> using namespace std; struct User { int x, y; bool operator< (const User &u) const { return x < u.x; } }; // \u524d\u9762\u548c\u540e\u9762\u6bd4\u8f83 bool cmp(User u1, User u2) { return u1.x > u2.x; } int main () { priority_queue<User> p; p.push({1, 2}); p.push({10, 3}); p.push({4, 3}); // \u6ce8\u610f\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7 cout << (p.top().x); return 0; } stack #include <stack> #include <iostream> using namespace std; int main() { stack<int> s; s.push(1); // top \u8fd4\u56de\u7a7a s.pop(); cout << s.top(); return 0; } deque \u53cc\u7aef\u961f\u5217deque\u662f\u4e00\u4e2a\u652f\u6301\u5728\u4e24\u7aef\u9ad8\u6548\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\u7684\u8fde\u7eed\u7ebf\u6027\u5b58\u50a8\u7a7a\u95f4\u3002\u5b83\u5c31\u50cf\u662fvector\u548cqueue\u7684\u7ed3\u5408\u3002\u4e0evector\u76f8\u6bd4\uff0cdeque\u5728\u5934\u90e8\u589e\u5220\u5143\u7d20\u4ec5\u9700\u8981O(1)\u7684\u65f6\u95f4\uff1b\u4e0equeue\u76f8\u6bd4\uff0cdeque\u50cf\u6570\u7ec4\u4e00\u6837\u652f\u6301\u968f\u673a\u8bbf\u95ee\u3002 #include <iostream> #include <deque> using namespace std; int main() { deque<int> d; // push_front push_back pop_front pop_back // front back // begin end // [] d.push_front(1); d.push_front(2); d.push_back(3); d.pop_back(); cout << d.front(); cout << endl; for (auto it = d.begin(); it != d.end(); it++) cout << *it << ' '; return 0; } set \u5934\u6587\u4ef6set\u4e3b\u8981\u5305\u62ecset\u548cmultiset\u4e24\u4e2a\u5bb9\u5668\uff0c\u5206\u522b\u662f\u201c\u6709\u5e8f\u96c6\u5408\u201d\u548c\u201c\u6709\u5e8f\u591a\u91cd\u96c6\u5408\u201d\uff0c\u5373\u524d\u8005\u7684\u5143\u7d20\u4e0d\u80fd\u91cd\u590d\uff0c\u800c\u540e\u8005\u53ef\u4ee5\u5305\u542b\u82e5\u5e72\u4e2a\u76f8\u7b49\u7684\u5143\u7d20\u3002set\u548cmultiset\u7684\u5185\u90e8\u5b9e\u73b0\u662f\u4e00\u68f5\u7ea2\u9ed1\u6811\uff0c\u5b83\u4eec\u652f\u6301\u7684\u51fd\u6570\u57fa\u672c\u76f8\u540c\u3002 #include <set> #include <iostream> using namespace std; int main() { // empty size clear // begin end find insert // lower_bound upper_bound // erase count set<int> s1({1,2 ,-3}); s1 = {1, 2, 3}; set<int> s; s.insert(1); s.insert(1); s.insert(2); s.insert(34); s.insert(40); cout << s.size(); cout << \"find\" << endl; cout << (s.find(3) == s.end()); // it++ it-- for (auto it = s.begin(); it != s.end(); it++) cout << *it; cout << endl; auto it = s.lower_bound(34); cout << \"lower_bound\" << *it; cout << endl; it = s.upper_bound(34); cout << \"upper_bound\" << *it; s.erase(it); cout << endl; cout << s.count(40); return 0; } map map\u5bb9\u5668\u662f\u4e00\u4e2a\u952e\u503c\u5bf9key-value\u7684\u6620\u5c04\uff0c\u5176\u5185\u90e8\u5b9e\u73b0\u662f\u4e00\u68f5\u4ee5key\u4e3a\u5173\u952e\u7801\u7684\u7ea2\u9ed1\u6811\u3002Map\u7684key\u548cvalue\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\uff0c\u5176\u4e2dkey\u5fc5\u987b\u5b9a\u4e49\u5c0f\u4e8e\u53f7\u8fd0\u7b97\u7b26\u3002 #include <map> #include <iostream> using namespace std; int main() { // empty size clear // [] map<string, string> m1{{\"a\", \"a1\"}, {\"b\", \"b1\"}}; m1 = {{\"a\", \"b\"}}; map<int, int> m1; m1[1] = 2; m1.insert({1, 2}); // begin end find insert cout << (m1.find(1) == m1.end()); cout << endl; cout << \"base\" << m1.empty() << m1.size(); m1.clear(); cout << \"clear\"; cout << m1.size(); // begin end cout << \"begin end\" << endl; for (auto it = m1.begin(); it != m1.end(); it++) cout << (it->first) << (it -> second); return 0; } // unordered_set \u65e0\u5e8fset o(1) // unordered_multiset<int> // unordered_map \u4e00\u822c\u4f7f\u7528\u8fd9\u4e2a cpp 11\u652f\u6301 pair<int, string> p, q; p = {1, \"matt\"}; // cpp 99 p = make_pair(1, \"bb\"); cout << p.first << p.second; #include <iostream> #include <bitset> #include <algorithm> using namespace std; int main() { bitset<10> s; // \u4ece\u540e\u9762 s.set(3); cout << s; s.reset(3); cout << endl; cout << s; return 0; } 0000001000 0000000000","title":"1stl"},{"location":"base/cpp/1stl/1stl/#vector","text":"vector\u662f\u53d8\u957f\u6570\u7ec4\uff0c\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u4e0d\u652f\u6301\u5728\u4efb\u610f\u4f4d\u7f6eO(1)\u63d2\u5165\u3002\u4e3a\u4e86\u4fdd\u8bc1\u6548\u7387\uff0c\u5143\u7d20\u7684\u589e\u5220\u4e00\u822c\u5e94\u8be5\u5728\u672b\u5c3e\u8fdb\u884c\u3002","title":"vector"},{"location":"base/cpp/1stl/1stl/#_1","text":"#include <iostream> #include <vector> using namespace std; int main() { // \u521d\u59cb\u5316 vector<int> a({1, 2, 3}); a = {1, 2, 3}; // empty size clear cout << a.size() << endl; cout << a.empty() << endl; cout << a.size() << endl; // \u8bbf\u95ee cout << a[0]; // \u8fed\u4ee3\u5668 \u7c7b\u4f3c\u4e8e\u6307\u9488 cout << \"iterator\"; vector<int>::iterator it = a.begin(); while (it != a.end()) { cout << *it << endl; it++; } // front \u7b2c\u4e00\u4e2a // back \u6700\u540e\u4e00\u4e2a cout << a.front() << endl; cout << a.back() << endl; // \u4ece\u6700\u540e\u4e00\u4e2a\u6dfb\u52a0 a.push_back(4); cout << a.back() << endl; // \u5220\u9664\u6700\u540e\u4e00\u4e2a a.pop_back(); return 0; } #include <iostream> #include <vector> using namespace std; int main() { vector<int> a({1, 2, 3}); vector<int> b = {1, 2, 3, 4}; for (vector<int>::iterator it = a.begin(); it != a.end(); it++) { cout << *it; } cout << endl; for (auto it = b.begin(); it != b.end(); it++) cout << *it; return 0; }","title":"\u57fa\u672c\u4f7f\u7528"},{"location":"base/cpp/1stl/1stl/#queue","text":"\u961f\u5217 #include <iostream> #include <queue> using namespace std; int main() { queue<int> q({1, 3, 4}); // \u9519\u8bef\u7684\u3001 //q = {1, 2}; // push \u538b\u5165 pop \u5f39\u51fa q.push(1); q.push(2); cout << q.size(); q.pop(); cout << q.size(); cout << endl; // front \u5934 back \u5c3e\u5df4 cout << q.front() << q.back(); return 0; } priority_queue #include <iostream> #include <queue> using namespace std; int main() { priority_queue<int> p; p.push(1); p.push(2); p.pop(); // cout << p.size(); cout << p.top(); cout << \"\u5c0f\u6839\u5806\"; priority_queue<int, vector<int>, greater<int>> q; // priority_queue<int, vector<int>, greater<int>> q q.push(10); q.push(2); cout << q.top(); return 0; } #include <iostream> #include <queue> #include <vector> using namespace std; int main() { struct User { int a; bool operator> (const User& u) const { return a > u.a; } }; priority_queue<int, vector<int>, greater<int>> p; p.push({1}); p.push({2}); cout << p.top(); return 0; } #include <iostream> #include <algorithm> #include <queue> using namespace std; struct User { int x, y; bool operator< (const User &u) const { return x < u.x; } }; // \u524d\u9762\u548c\u540e\u9762\u6bd4\u8f83 bool cmp(User u1, User u2) { return u1.x > u2.x; } int main () { priority_queue<User> p; p.push({1, 2}); p.push({10, 3}); p.push({4, 3}); // \u6ce8\u610f\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7 cout << (p.top().x); return 0; }","title":"queue"},{"location":"base/cpp/1stl/1stl/#stack","text":"#include <stack> #include <iostream> using namespace std; int main() { stack<int> s; s.push(1); // top \u8fd4\u56de\u7a7a s.pop(); cout << s.top(); return 0; }","title":"stack"},{"location":"base/cpp/1stl/1stl/#deque","text":"\u53cc\u7aef\u961f\u5217deque\u662f\u4e00\u4e2a\u652f\u6301\u5728\u4e24\u7aef\u9ad8\u6548\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\u7684\u8fde\u7eed\u7ebf\u6027\u5b58\u50a8\u7a7a\u95f4\u3002\u5b83\u5c31\u50cf\u662fvector\u548cqueue\u7684\u7ed3\u5408\u3002\u4e0evector\u76f8\u6bd4\uff0cdeque\u5728\u5934\u90e8\u589e\u5220\u5143\u7d20\u4ec5\u9700\u8981O(1)\u7684\u65f6\u95f4\uff1b\u4e0equeue\u76f8\u6bd4\uff0cdeque\u50cf\u6570\u7ec4\u4e00\u6837\u652f\u6301\u968f\u673a\u8bbf\u95ee\u3002 #include <iostream> #include <deque> using namespace std; int main() { deque<int> d; // push_front push_back pop_front pop_back // front back // begin end // [] d.push_front(1); d.push_front(2); d.push_back(3); d.pop_back(); cout << d.front(); cout << endl; for (auto it = d.begin(); it != d.end(); it++) cout << *it << ' '; return 0; }","title":"deque"},{"location":"base/cpp/1stl/1stl/#set","text":"\u5934\u6587\u4ef6set\u4e3b\u8981\u5305\u62ecset\u548cmultiset\u4e24\u4e2a\u5bb9\u5668\uff0c\u5206\u522b\u662f\u201c\u6709\u5e8f\u96c6\u5408\u201d\u548c\u201c\u6709\u5e8f\u591a\u91cd\u96c6\u5408\u201d\uff0c\u5373\u524d\u8005\u7684\u5143\u7d20\u4e0d\u80fd\u91cd\u590d\uff0c\u800c\u540e\u8005\u53ef\u4ee5\u5305\u542b\u82e5\u5e72\u4e2a\u76f8\u7b49\u7684\u5143\u7d20\u3002set\u548cmultiset\u7684\u5185\u90e8\u5b9e\u73b0\u662f\u4e00\u68f5\u7ea2\u9ed1\u6811\uff0c\u5b83\u4eec\u652f\u6301\u7684\u51fd\u6570\u57fa\u672c\u76f8\u540c\u3002 #include <set> #include <iostream> using namespace std; int main() { // empty size clear // begin end find insert // lower_bound upper_bound // erase count set<int> s1({1,2 ,-3}); s1 = {1, 2, 3}; set<int> s; s.insert(1); s.insert(1); s.insert(2); s.insert(34); s.insert(40); cout << s.size(); cout << \"find\" << endl; cout << (s.find(3) == s.end()); // it++ it-- for (auto it = s.begin(); it != s.end(); it++) cout << *it; cout << endl; auto it = s.lower_bound(34); cout << \"lower_bound\" << *it; cout << endl; it = s.upper_bound(34); cout << \"upper_bound\" << *it; s.erase(it); cout << endl; cout << s.count(40); return 0; }","title":"set"},{"location":"base/cpp/1stl/1stl/#map","text":"map\u5bb9\u5668\u662f\u4e00\u4e2a\u952e\u503c\u5bf9key-value\u7684\u6620\u5c04\uff0c\u5176\u5185\u90e8\u5b9e\u73b0\u662f\u4e00\u68f5\u4ee5key\u4e3a\u5173\u952e\u7801\u7684\u7ea2\u9ed1\u6811\u3002Map\u7684key\u548cvalue\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\uff0c\u5176\u4e2dkey\u5fc5\u987b\u5b9a\u4e49\u5c0f\u4e8e\u53f7\u8fd0\u7b97\u7b26\u3002 #include <map> #include <iostream> using namespace std; int main() { // empty size clear // [] map<string, string> m1{{\"a\", \"a1\"}, {\"b\", \"b1\"}}; m1 = {{\"a\", \"b\"}}; map<int, int> m1; m1[1] = 2; m1.insert({1, 2}); // begin end find insert cout << (m1.find(1) == m1.end()); cout << endl; cout << \"base\" << m1.empty() << m1.size(); m1.clear(); cout << \"clear\"; cout << m1.size(); // begin end cout << \"begin end\" << endl; for (auto it = m1.begin(); it != m1.end(); it++) cout << (it->first) << (it -> second); return 0; } // unordered_set \u65e0\u5e8fset o(1) // unordered_multiset<int> // unordered_map \u4e00\u822c\u4f7f\u7528\u8fd9\u4e2a cpp 11\u652f\u6301 pair<int, string> p, q; p = {1, \"matt\"}; // cpp 99 p = make_pair(1, \"bb\"); cout << p.first << p.second; #include <iostream> #include <bitset> #include <algorithm> using namespace std; int main() { bitset<10> s; // \u4ece\u540e\u9762 s.set(3); cout << s; s.reset(3); cout << endl; cout << s; return 0; } 0000001000 0000000000","title":"map"},{"location":"base/go/pprof/","text":"\u4ee3\u7801\u914d\u7f6e gin \u4f7f\u7528 package httpserv import ( \"github.com/gin-contrib/pprof\" \"github.com/gin-gonic/gin\" \"github.com/imattdu/go-standard/middleware\" ) func Start() { r := gin.New() // \u4f7f\u7528pprof pprof.Register(r) r.Use(middleware.GinLogger(), middleware.GinRecovery(true), middleware.TraceLoggerMiddleware()) Config(r) _ = r.Run() // \u76d1\u542c\u5e76\u5728 0.0.0.0:8080 \u4e0a\u542f\u52a8\u670d\u52a1 } \u4f7f\u7528\u9ed8\u8ba4\u7684 http.DefaultServeMux import _ \"net/http/pprof\" http.ListenAndServe(\"0.0.0.0:8000\", nil) \u81ea\u5b9a\u4e49\u7684 server pprof\u4e2dinit\u7684\u914d\u7f6e r.HandleFunc(\"/debug/pprof/\", pprof.Index) r.HandleFunc(\"/debug/pprof/cmdline\", pprof.Cmdline) r.HandleFunc(\"/debug/pprof/profile\", pprof.Profile) r.HandleFunc(\"/debug/pprof/symbol\", pprof.Symbol) r.HandleFunc(\"/debug/pprof/trace\", pprof.Trace) func init() { http.HandleFunc(\"/debug/pprof/\", Index) http.HandleFunc(\"/debug/pprof/cmdline\", Cmdline) http.HandleFunc(\"/debug/pprof/profile\", Profile) http.HandleFunc(\"/debug/pprof/symbol\", Symbol) http.HandleFunc(\"/debug/pprof/trace\", Trace) } go tool pprof -http=:9000 http://localhost:8080/debug/pprof/allocs brew install graphviz","title":"Pprof"},{"location":"base/go/pprof/#_1","text":"gin \u4f7f\u7528 package httpserv import ( \"github.com/gin-contrib/pprof\" \"github.com/gin-gonic/gin\" \"github.com/imattdu/go-standard/middleware\" ) func Start() { r := gin.New() // \u4f7f\u7528pprof pprof.Register(r) r.Use(middleware.GinLogger(), middleware.GinRecovery(true), middleware.TraceLoggerMiddleware()) Config(r) _ = r.Run() // \u76d1\u542c\u5e76\u5728 0.0.0.0:8080 \u4e0a\u542f\u52a8\u670d\u52a1 } \u4f7f\u7528\u9ed8\u8ba4\u7684 http.DefaultServeMux import _ \"net/http/pprof\" http.ListenAndServe(\"0.0.0.0:8000\", nil) \u81ea\u5b9a\u4e49\u7684 server pprof\u4e2dinit\u7684\u914d\u7f6e r.HandleFunc(\"/debug/pprof/\", pprof.Index) r.HandleFunc(\"/debug/pprof/cmdline\", pprof.Cmdline) r.HandleFunc(\"/debug/pprof/profile\", pprof.Profile) r.HandleFunc(\"/debug/pprof/symbol\", pprof.Symbol) r.HandleFunc(\"/debug/pprof/trace\", pprof.Trace) func init() { http.HandleFunc(\"/debug/pprof/\", Index) http.HandleFunc(\"/debug/pprof/cmdline\", Cmdline) http.HandleFunc(\"/debug/pprof/profile\", Profile) http.HandleFunc(\"/debug/pprof/symbol\", Symbol) http.HandleFunc(\"/debug/pprof/trace\", Trace) } go tool pprof -http=:9000 http://localhost:8080/debug/pprof/allocs brew install graphviz","title":"\u4ee3\u7801\u914d\u7f6e"},{"location":"base/go/0base/0setup/","text":"111 mac \u5b89\u88c5 brew install go \u914d\u7f6e vim .zshrc ```sh title=\"\u914d\u7f6e\" GOROOT=/opt/homebrew/Cellar/go/1.17.6/libexec export GOROOT export GOPATH=/Users/matt/workspace/go export GOBIN=$GOPATH/bin export PATH=$PATH:$GOBIN:$GOROOT/bin # (1)! 1. :man_raising_hand: I'm a code annotation! I can contain `code`, __formatted text__, images, ... basically anything that can be written in Markdown. ``` yaml this is good # (1)! If you ++cmd++ :material-plus::material-cursor-default-outline: me, I'm rendered open in a new tab. You can also right-click me to copy link address to share me with others. win \u5b89\u88c5 \u4e0b\u8f7d\u5730\u5740 win10/64-\u300b\u9009\u62e9x86-64 \u914d\u7f6e GOROOT:\u6307\u5b9ago\u7684\u5b89\u88c5\u76ee\u5f55 path:\u6307\u5b9ago\u7684\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684bin\u76ee\u5f55 GOPATH:\u5de5\u4f5c\u76ee\u5f55\uff0cgo\u9879\u76ee\u7684\u5de5\u4f5c\u76ee\u5f55 \u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\u6dfb\u52a0 GOROOT D:\\develop\\env\\go path %GOROOT%\\bin GOPATH D:\\matt\\workspace\\go \u8bbe\u7f6e \u8bbe\u7f6e\u56fd\u5185\u955c\u50cf go env -w GOPROXY=https://goproxy.cn,direct go\u7684\u4f9d\u8d56\u7ba1\u7406\uff0c\u5f00\u542fgomod go env -w GO111MODULE=on \u9a8c\u8bc1\u914d\u7f6e,\u53ef\u80fd\u9a8c\u8bc1\u7684\u9ed8\u8ba4\u7f51\u7ad9\u65e0\u6cd5\u8bbf\u95ee sum.golang.org go env -w GOSUMDB=\"sum.golang.google.cn\" \u6216\u8005\u5173\u95ed\u9a8c\u8bc1 go env -w GOSUMDB=off \u9a8c\u8bc1 \u9a8c\u8bc1go\u73af\u5883\u662f\u5426\u5b89\u88c5\u6210\u529f go version \u683c\u5f0f\u5316\u4ee3\u7801 go fmt -w main.go \u8d44\u6599 \u4e2d\u6587API \u5b98\u7f51 \u4f7f\u7528 \u9879\u76ee\u653e\u5728\u76ee\u5f55\u4e0b \u9879\u76ee\u90fd\u653e\u5728src\u4e0b\u9762 \u4e0b\u8f7d\u7684\u4f9d\u8d56\u90fd\u4f1a\u8fdb\u5165\u5230pkg\u6587\u4ef6\u5939 \u53ef\u6267\u884c\u6587\u4ef6\u8fdb\u5165bin \u5305\u7684\u7ba1\u7406 GO111MODULE\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\uff1aoff\u3001on\u3001auto\uff08\u9ed8\u8ba4\u503c\uff09\uff0c\u4eceGO111MODULE\u53d8\u91cf\u540d\u53ef\u4ee5\u770b\u51fa\uff0c\u662fGo1.11\u7248\u672c\u4e4b\u540e\u624d\u51fa\u6765\u6709\u4f9d\u8d56\u5305\u7ba1\u7406\u529e\u6cd5\u3002 \u4e3a off \u65f6\uff0c\u5219\u4e0d\u4f7f\u7528go mod\uff0c\u67e5\u627e\u4f9d\u8d56\u5305\u7684\u987a\u5e8f\u662f\uff1a\u5f53\u524d\u9879\u76ee\u6839\u76ee\u5f55 /vendor \uff0c\u5176\u6b21\u662f $GOPATH/src $GOROOT/src \uff08\u8fd9\u662fGolang1.11\u7248\u672c\u4e4b\u524d\u7684\u7528\u6cd5\uff09\u3002 \u4e3a on \u65f6\uff0c\u5219\u5f00\u542fgo mod\uff0c\u67e5\u627e\u4f9d\u8d56\u5305\u662f\u4ee5\u5f53\u524d\u9879\u76ee\u6839\u76ee\u5f55\u7684 go.mod \u6587\u4ef6\u4e3a\u57fa\u51c6\uff0c\u4f1a\u5ffd\u7565 $GOPATH \u548c vendor \u6587\u4ef6\u5939\uff0c\u53ea\u6839\u636e go.mod \u4e0b\u8f7d\u4f9d\u8d56\u3002 \u4e3a auto \u6216\u672a\u8bbe\u7f6e\uff0c\u5219go\u547d\u4ee4\u6839\u636e\u5f53\u524d\u76ee\u5f55\u542f\u7528\u6216\u7981\u7528\u6a21\u5757\u652f\u6301\u3002\u6839\u636e\u5f53\u524d\u6587\u4ef6\u5939\u662f\u5426\u6709go.mod\u6765\u51b3\u5b9a\u662f\u5426\u5f00\u542fgomod goland \u6ce8\u610f\u4e8b\u9879 1.Global GOPATH \u9009\u5219\u4f60\u5728\u73af\u5883\u53d8\u91cf\u4e2d\u914d\u7f6e\u7684GOPATH\u8def\u5f84 2.Project GOPATH \u9879\u76ee\u7684GOPATH,\u6700\u597d\u4e0d\u597d\u8bbe\u7f6eGlobal GOPATH,\u56e0\u4e3a\u90a3\u4f60\u7684\u9879\u76ee\u5c06\u4f1a\u4f7f\u7528\u5230\u6240\u7528\u914d\u7f6e\u5230GOPATH\u7684\u6587\u4ef6 3.Use GOPATH that`s defined in system environment \u5982\u679c\u9009\u4e2d\u8fd9\u4e2a\uff0c\u4ed6\u5c06\u4f7f\u7528\u7cfb\u7edf\u5b9a\u4e49\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5e76\u8bbe\u7f6e\u5230Global GOPATH 4.Index entire GOPATH: \u4f1a\u4f7f\u7528\u7cfb\u7edf\u4e2d\u914d\u7f6e\u7684gopath,\u4e00\u822c\u4e0d\u8981\u52fe\u9009\u8fd9\u4e2a \u5e38\u7528\u547d\u4ee4 \u7f16\u8bd1 go build -o ./bin/main main.go \u8fd0\u884c go run main.go -config app.cfg go get download compile install \u53c2\u6570 go get -u xxx -d \u53ea\u4e0b\u8f7d\u4e0d\u5b89\u88c5 -u \u66f4\u65b0\u4e0b\u8f7d\uff0c\u9ed8\u8ba4\u4e0d\u4f1a\u66f4\u65b0\u4e0b\u8f7d \u6307\u5b9a\u7248\u672c go get k8s.io/klog@v1.0.0 go install compile install go mod init go mod tidy go mod download \u4e0b\u8f7d\u6a21\u5757\u5230\u672c\u5730\u7f13\u5b58\uff0c\u7f13\u5b58\u8def\u5f84\u662f $GOPATH/pkg/mod/cache go mod edit \u662f\u63d0\u4f9b\u4e86\u547d\u4ee4\u7248\u7f16\u8f91 go.mod \u7684\u529f\u80fd\uff0c\u4f8b\u5982 go mod edit -fmt go.mod \u4f1a\u683c\u5f0f\u5316 go.mod go mod graph \u628a\u6a21\u5757\u4e4b\u95f4\u7684\u4f9d\u8d56\u56fe\u663e\u793a\u51fa\u6765 go mod init \u521d\u59cb\u5316\u6a21\u5757\uff08\u4f8b\u5982\u628a\u539f\u672cdep\u7ba1\u7406\u7684\u4f9d\u8d56\u5173\u7cfb\u8f6c\u6362\u8fc7\u6765\uff09 go mod tidy \u589e\u52a0\u7f3a\u5931\u7684\u5305\uff0c\u79fb\u9664\u6ca1\u7528\u7684\u5305 go mod vendor \u628a\u4f9d\u8d56\u62f7\u8d1d\u5230 vendor/ \u76ee\u5f55\u4e0b go mod verify \u786e\u8ba4\u4f9d\u8d56\u5173\u7cfb go mod why \u89e3\u91ca\u4e3a\u4ec0\u4e48\u9700\u8981\u5305\u548c\u6a21\u5757","title":"\u5b89\u88c5"},{"location":"base/go/0base/0setup/#111","text":"","title":"111"},{"location":"base/go/0base/0setup/#mac","text":"","title":"mac"},{"location":"base/go/0base/0setup/#_1","text":"brew install go","title":"\u5b89\u88c5"},{"location":"base/go/0base/0setup/#_2","text":"vim .zshrc ```sh title=\"\u914d\u7f6e\" GOROOT=/opt/homebrew/Cellar/go/1.17.6/libexec export GOROOT export GOPATH=/Users/matt/workspace/go export GOBIN=$GOPATH/bin export PATH=$PATH:$GOBIN:$GOROOT/bin # (1)! 1. :man_raising_hand: I'm a code annotation! I can contain `code`, __formatted text__, images, ... basically anything that can be written in Markdown. ``` yaml this is good # (1)! If you ++cmd++ :material-plus::material-cursor-default-outline: me, I'm rendered open in a new tab. You can also right-click me to copy link address to share me with others.","title":"\u914d\u7f6e"},{"location":"base/go/0base/0setup/#win","text":"","title":"win"},{"location":"base/go/0base/0setup/#_3","text":"\u4e0b\u8f7d\u5730\u5740 win10/64-\u300b\u9009\u62e9x86-64","title":"\u5b89\u88c5"},{"location":"base/go/0base/0setup/#_4","text":"GOROOT:\u6307\u5b9ago\u7684\u5b89\u88c5\u76ee\u5f55 path:\u6307\u5b9ago\u7684\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684bin\u76ee\u5f55 GOPATH:\u5de5\u4f5c\u76ee\u5f55\uff0cgo\u9879\u76ee\u7684\u5de5\u4f5c\u76ee\u5f55 \u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\u6dfb\u52a0 GOROOT D:\\develop\\env\\go path %GOROOT%\\bin GOPATH D:\\matt\\workspace\\go","title":"\u914d\u7f6e"},{"location":"base/go/0base/0setup/#_5","text":"","title":"\u8bbe\u7f6e"},{"location":"base/go/0base/0setup/#_6","text":"go env -w GOPROXY=https://goproxy.cn,direct","title":"\u8bbe\u7f6e\u56fd\u5185\u955c\u50cf"},{"location":"base/go/0base/0setup/#gogomod","text":"go env -w GO111MODULE=on","title":"go\u7684\u4f9d\u8d56\u7ba1\u7406\uff0c\u5f00\u542fgomod"},{"location":"base/go/0base/0setup/#sumgolangorg","text":"go env -w GOSUMDB=\"sum.golang.google.cn\" \u6216\u8005\u5173\u95ed\u9a8c\u8bc1 go env -w GOSUMDB=off","title":"\u9a8c\u8bc1\u914d\u7f6e,\u53ef\u80fd\u9a8c\u8bc1\u7684\u9ed8\u8ba4\u7f51\u7ad9\u65e0\u6cd5\u8bbf\u95ee sum.golang.org"},{"location":"base/go/0base/0setup/#_7","text":"\u9a8c\u8bc1go\u73af\u5883\u662f\u5426\u5b89\u88c5\u6210\u529f go version \u683c\u5f0f\u5316\u4ee3\u7801 go fmt -w main.go","title":"\u9a8c\u8bc1"},{"location":"base/go/0base/0setup/#_8","text":"\u4e2d\u6587API \u5b98\u7f51","title":"\u8d44\u6599"},{"location":"base/go/0base/0setup/#_9","text":"","title":"\u4f7f\u7528"},{"location":"base/go/0base/0setup/#_10","text":"\u9879\u76ee\u90fd\u653e\u5728src\u4e0b\u9762 \u4e0b\u8f7d\u7684\u4f9d\u8d56\u90fd\u4f1a\u8fdb\u5165\u5230pkg\u6587\u4ef6\u5939 \u53ef\u6267\u884c\u6587\u4ef6\u8fdb\u5165bin","title":"\u9879\u76ee\u653e\u5728\u76ee\u5f55\u4e0b"},{"location":"base/go/0base/0setup/#_11","text":"GO111MODULE\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\uff1aoff\u3001on\u3001auto\uff08\u9ed8\u8ba4\u503c\uff09\uff0c\u4eceGO111MODULE\u53d8\u91cf\u540d\u53ef\u4ee5\u770b\u51fa\uff0c\u662fGo1.11\u7248\u672c\u4e4b\u540e\u624d\u51fa\u6765\u6709\u4f9d\u8d56\u5305\u7ba1\u7406\u529e\u6cd5\u3002 \u4e3a off \u65f6\uff0c\u5219\u4e0d\u4f7f\u7528go mod\uff0c\u67e5\u627e\u4f9d\u8d56\u5305\u7684\u987a\u5e8f\u662f\uff1a\u5f53\u524d\u9879\u76ee\u6839\u76ee\u5f55 /vendor \uff0c\u5176\u6b21\u662f $GOPATH/src $GOROOT/src \uff08\u8fd9\u662fGolang1.11\u7248\u672c\u4e4b\u524d\u7684\u7528\u6cd5\uff09\u3002 \u4e3a on \u65f6\uff0c\u5219\u5f00\u542fgo mod\uff0c\u67e5\u627e\u4f9d\u8d56\u5305\u662f\u4ee5\u5f53\u524d\u9879\u76ee\u6839\u76ee\u5f55\u7684 go.mod \u6587\u4ef6\u4e3a\u57fa\u51c6\uff0c\u4f1a\u5ffd\u7565 $GOPATH \u548c vendor \u6587\u4ef6\u5939\uff0c\u53ea\u6839\u636e go.mod \u4e0b\u8f7d\u4f9d\u8d56\u3002 \u4e3a auto \u6216\u672a\u8bbe\u7f6e\uff0c\u5219go\u547d\u4ee4\u6839\u636e\u5f53\u524d\u76ee\u5f55\u542f\u7528\u6216\u7981\u7528\u6a21\u5757\u652f\u6301\u3002\u6839\u636e\u5f53\u524d\u6587\u4ef6\u5939\u662f\u5426\u6709go.mod\u6765\u51b3\u5b9a\u662f\u5426\u5f00\u542fgomod","title":"\u5305\u7684\u7ba1\u7406"},{"location":"base/go/0base/0setup/#goland","text":"","title":"goland \u6ce8\u610f\u4e8b\u9879"},{"location":"base/go/0base/0setup/#1global-gopath","text":"\u9009\u5219\u4f60\u5728\u73af\u5883\u53d8\u91cf\u4e2d\u914d\u7f6e\u7684GOPATH\u8def\u5f84","title":"1.Global GOPATH"},{"location":"base/go/0base/0setup/#2project-gopath","text":"\u9879\u76ee\u7684GOPATH,\u6700\u597d\u4e0d\u597d\u8bbe\u7f6eGlobal GOPATH,\u56e0\u4e3a\u90a3\u4f60\u7684\u9879\u76ee\u5c06\u4f1a\u4f7f\u7528\u5230\u6240\u7528\u914d\u7f6e\u5230GOPATH\u7684\u6587\u4ef6","title":"2.Project GOPATH"},{"location":"base/go/0base/0setup/#3use-gopath-thats-defined-in-system-environment","text":"\u5982\u679c\u9009\u4e2d\u8fd9\u4e2a\uff0c\u4ed6\u5c06\u4f7f\u7528\u7cfb\u7edf\u5b9a\u4e49\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5e76\u8bbe\u7f6e\u5230Global GOPATH","title":"3.Use GOPATH that`s defined in system environment"},{"location":"base/go/0base/0setup/#4index-entire-gopath","text":"\u4f1a\u4f7f\u7528\u7cfb\u7edf\u4e2d\u914d\u7f6e\u7684gopath,\u4e00\u822c\u4e0d\u8981\u52fe\u9009\u8fd9\u4e2a","title":"4.Index entire GOPATH:"},{"location":"base/go/0base/0setup/#_12","text":"","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"base/go/0base/0setup/#_13","text":"go build -o ./bin/main main.go","title":"\u7f16\u8bd1"},{"location":"base/go/0base/0setup/#_14","text":"go run main.go -config app.cfg","title":"\u8fd0\u884c"},{"location":"base/go/0base/0setup/#go-get","text":"download compile install","title":"go get"},{"location":"base/go/0base/0setup/#_15","text":"go get -u xxx -d \u53ea\u4e0b\u8f7d\u4e0d\u5b89\u88c5 -u \u66f4\u65b0\u4e0b\u8f7d\uff0c\u9ed8\u8ba4\u4e0d\u4f1a\u66f4\u65b0\u4e0b\u8f7d","title":"\u53c2\u6570"},{"location":"base/go/0base/0setup/#_16","text":"go get k8s.io/klog@v1.0.0","title":"\u6307\u5b9a\u7248\u672c"},{"location":"base/go/0base/0setup/#go-install","text":"compile install go mod init go mod tidy go mod download \u4e0b\u8f7d\u6a21\u5757\u5230\u672c\u5730\u7f13\u5b58\uff0c\u7f13\u5b58\u8def\u5f84\u662f $GOPATH/pkg/mod/cache go mod edit \u662f\u63d0\u4f9b\u4e86\u547d\u4ee4\u7248\u7f16\u8f91 go.mod \u7684\u529f\u80fd\uff0c\u4f8b\u5982 go mod edit -fmt go.mod \u4f1a\u683c\u5f0f\u5316 go.mod go mod graph \u628a\u6a21\u5757\u4e4b\u95f4\u7684\u4f9d\u8d56\u56fe\u663e\u793a\u51fa\u6765 go mod init \u521d\u59cb\u5316\u6a21\u5757\uff08\u4f8b\u5982\u628a\u539f\u672cdep\u7ba1\u7406\u7684\u4f9d\u8d56\u5173\u7cfb\u8f6c\u6362\u8fc7\u6765\uff09 go mod tidy \u589e\u52a0\u7f3a\u5931\u7684\u5305\uff0c\u79fb\u9664\u6ca1\u7528\u7684\u5305 go mod vendor \u628a\u4f9d\u8d56\u62f7\u8d1d\u5230 vendor/ \u76ee\u5f55\u4e0b go mod verify \u786e\u8ba4\u4f9d\u8d56\u5173\u7cfb go mod why \u89e3\u91ca\u4e3a\u4ec0\u4e48\u9700\u8981\u5305\u548c\u6a21\u5757","title":"go  install"},{"location":"base/go/0base/1base/","text":"\u57fa\u7840 \u7a0b\u5e8f \u65b0\u5efa\u9879\u76ee \u9879\u76ee\u4e0b\u521b\u5efasrc\u6587\u4ef6\u5939\uff0c\u521b\u5efabin\u6587\u4ef6\u5939\uff0c\u521b\u5efapkg\u6587\u4ef6\u5939 package main import \"fmt\" func main() { fmt.Println(\"hello word\") } \u7f16\u8bd1\u8fd0\u884c \u7f16\u8bd1\u8fd0\u884c\u5206\u5f00 \u7f16\u8bd1 go build hello.go \u8fd0\u884c hello.exe \u7f16\u8bd1\u8fd0\u884c\u4e0d\u5206\u5f00 go run hello.go \u5206\u5f00\u548c\u4e0d\u5206\u5f00\u533a\u522b 1) \u5982\u679c\u6211\u4eec\u5148\u7f16\u8bd1\u751f\u6210\u4e86\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u8be5\u53ef\u6267\u884c\u6587\u4ef6\u62f7\u8d1d\u5230\u6ca1\u6709 go \u5f00\u53d1\u73af\u5883\u7684\u673a\u5668\u4e0a\uff0c\u4ecd\u7136\u53ef\u4ee5\u8fd0\u884c 2) \u5982\u679c\u6211\u4eec\u662f\u76f4\u63a5 go run go \u6e90\u4ee3\u7801\uff0c\u90a3\u4e48\u5982\u679c\u8981\u5728\u53e6\u5916\u4e00\u4e2a\u673a\u5668\u4e0a\u8fd9\u4e48\u8fd0\u884c\uff0c\u4e5f\u9700\u8981 go \u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u65e0\u6cd5\u6267\u884c\u3002 3) \u5728\u7f16\u8bd1\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u5c06\u7a0b\u5e8f\u8fd0\u884c\u4f9d\u8d56\u7684\u5e93\u6587\u4ef6\u5305\u542b\u5728\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\uff0c\u6240\u4ee5\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u53d8\u5927\u4e86\u5f88\u591a\u3002 \u6ce8\u610f\u4e8b\u9879 go\u6e90\u6587\u4ef6\u4ee5 go \u4e3a\u6269\u5c55\u540d go \u7684\u5165\u53e3\u51fd\u6570\u662f main() \u51fd\u6570 go \u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199 go \u8bed\u53e5\u4e0d\u9700\u8981\u52a0\u5206\u53f7\uff0cgo\u8bed\u8a00\u81ea\u52a8\u4f1a\u52a0\u5206\u53f7 go\u8bed\u53e5\u662f\u4e00\u884c\u4e00\u884c\u7f16\u8bd1\uff0c\u6240\u4ee5\u4e00\u884c\u4e0d\u53ef\u4ee5\u5199\u591a\u6761\u8bed\u53e5 \u5f15\u7528\u7684\u5305\u6216\u8005\u5b9a\u4e49\u7684\u53d8\u91cf\u5fc5\u987b\u4f7f\u7528\uff0c\u4e0d\u4f7f\u7528\u4f1a\u62a5\u9519 \u6ce8\u91ca package main import \"fmt\" import \"time\" func main() { // \u884c\u6ce8\u91ca\uff0c\u63a8\u8350\u4f7f\u7528\u884c\u6ce8\u91ca /* \u5757\u6ce8\u91ca \u4f60\u597d\u5757\u6ce8\u91ca */ fmt.Println(time.Now()) } \u53d8\u91cf \u57fa\u7840 \u8f6c\u4e49\u5b57\u7b26 \u4e00\u4e9b\u7279\u6b8a\u7684\u5b57\u7b26\uff1a\u6bd4\u5982\u7528\u6237\u60f3\u8981\u6211\u4eec\u6253\u51fa\u6362\u884c 1) \\t : \u8868\u793a\u4e00\u4e2a\u5236\u8868\u7b26\uff0c\u901a\u5e38\u4f7f\u7528\u5b83\u53ef\u4ee5\u6392\u7248\u3002 2) \\n \uff1a\u6362\u884c\u7b26 3) \\\\ \uff1a\u4e00\u4e2a\\ 4) \\\\\" \uff1a\u4e00\u4e2a\" 5) \\r \uff1a\u4e00\u4e2a\u56de\u8f66 fmt.Println(\"aaa\\r bb\"); \u53d8\u91cf\u58f0\u660e \u6307\u5b9a\u53d8\u91cf\u7c7b\u578b\uff0c \u6574\u6570\uff1a0 \u6d6e\u70b9\u6570\uff1a0 bool:false // \u5982\u679c\u4e0d\u8d4b\u503c\uff0c\u5219\u4f7f\u7528\u5b83\u7684\u9ed8\u8ba4\u503c var j int \u4e0d\u6307\u5b9a\u7c7b\u578b\uff0c\u81ea\u5df1\u5224\u65ad var i = 100 var j \u7b2c\u4e09\u79cd,\u7701\u7565var // i\u6ca1\u6709\u58f0\u660e\u8fc7 i := 100 \u591a\u53d8\u91cf\u58f0\u660e var a, b, c int fmt.Println(a, b, c) var d, e, f = 1, 2, 3 fmt.Println(d, e, f) g, h := \"1\", \"2\" fmt.Println(g, h) \u5168\u5c40\u53d8\u91cf // \u5168\u5c40\u53d8\u91cf var a1 = 100 var a2 = 200 // \u63a8\u8350\u4f7f\u7528 var ( a3 = 300 a4 = 400 ) \u5e38\u91cf // \u5e38\u91cf const i = 10 \u6570\u636e\u7c7b\u578b \u57fa\u672c\u6570\u636e\u7c7b\u578b \u6574\u6570 \u6709\u7b26\u53f7 \u65e0\u7b26\u53f7 package main // import \"fmt\" // import \"unsafe\" import ( \"fmt\" \"unsafe\" ) func main() { var i int = 100 fmt.Println(i, unsafe.Sizeof(i)) } \u6d6e\u70b9\u6570 \u7cfb\u7edf\u9ed8\u8ba4\u4f7f\u7528float64,\u63a8\u8350\u4f7f\u7528float64 \u7c7b\u578b \u5360\u7528\u5b58\u50a8\u5927\u5c0f \u8303\u56f4 float32 4 -3.4E38\uff5e3.4E38 float64 8 -1.7E308\uff5e1.7E308 package main import ( \"fmt\" ) func main() { var i float64 = 1.1 fmt.Println(\"\u6d6e\u70b9\u6570\", i) } \u5b57\u7b26 \u4f7f\u7528'',\u5b57\u7b26\u6709\u4e00\u4e2a\u7801\u503c package main import \"fmt\" func main() { var i byte = '1' fmt.Println(i) fmt.Printf(\"%c\\n\", i) // %d %s %c // \u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u8d85\u8fc7byte\u8868\u793a\u7684\u7c7b\u578b\uff0c\u4f7f\u7528int\u7c7b\u578b\u5373\u53ef var j int = '\u4e2d' fmt.Printf(\"%c\", j) } \u5b57\u7b26 \u5b58\u50a8\u5230 \u8ba1\u7b97\u673a\u4e2d\uff0c\u9700\u8981\u5c06\u5b57\u7b26\u5bf9\u5e94\u7684\u7801\u503c\uff08\u6574\u6570\uff09\u627e\u51fa\u6765 \u5b58\u50a8\uff1a\u5b57\u7b26--->\u5bf9\u5e94\u7801\u503c---->\u4e8c\u8fdb\u5236-->\u5b58\u50a8 \u8bfb\u53d6\uff1a\u4e8c\u8fdb\u5236----> \u7801\u503c ----> \u5b57\u7b26 --> \u8bfb\u53d6 \u200b bool package main import ( \"fmt\" \"unsafe\" ) func main() { var i bool = false fmt.Println(i, unsafe.Sizeof(i)) } string package main import \"fmt\" func main() { var name string = \"matt\" var address = ` hahahninrerer ` fmt.Println(name) fmt.Println(address) } 1\u4e00\u822c\u4f7f\u7528\"\",\u4e5f\u53ef\u4ee5\u8f93\u51fa\u53cd\u5f15\u53f7`` 2\u53cd\u5f15\u53f7\u53ef\u4ee5\u8d4b\u503c\u591a\u884c 3\u5b57\u7b26\u4e32\u62fc\u63a5 +\u8981\u5199\u5728\u6bcf\u4e00\u884c\u540e\u9762 var address = \"hello\" + \"word\" 4 // \u591a\u884c\u8f93\u51fa fmt.Println(\"hello word\", \"\u4f60\u597d\") \u7c7b\u578b\u8f6c\u6362 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u8f6c\u6362 \u6ce8\u610f var i int8 = 10 // i + 8 \u662fint8\u7c7b\u578b \u4e00\u822c\u90fd\u662f\u5f3a\u8f6c var i int8 = 1 var j = int16(i) \u57fa\u672c\u7c7b\u578b\u8f6c\u5b57\u7b26\u4e32 \u4f7f\u7528fmt\u4e0b\u7684Sprintf package main import ( \"fmt\" ) func main() { var i int8 = 100 var address string = fmt.Sprintf(\"%d hello3434\", i) fmt.Println(address) } \u4f7f\u7528strconv\u5305 \u5b57\u7b26\u4e32\u8f6c\u5176\u4ed6\u57fa\u672c\u6570\u636e\u7c7b\u578b \u4f7f\u7528strconv\u5305 package main import ( \"fmt\" \"strconv\" ) func main() { var i string = \"100\" var j int64 // \u56e0\u4e3a\u8fd9\u4e2a\u51fd\u6570\u4f1a\u6709\u4fe9\u4e2a\u8fd4\u56de\u503c j, _ = strconv.ParseInt(i, 10, 8) fmt.Println(j) } \u6ce8\u610f \u5982\u679c\u662f\"hello\"\u8f6cint\uff0c\u90a3\u4e48\u76f4\u63a5\u8f6c\u4e3a0\uff0c\u5e76\u4e0d\u4f1a\u62a5\u9519 \u9ad8\u7cbe\u5ea6\u5230\u4f4e\u7cbe\u5ea6\u53ea\u4f1a\u7cbe\u5ea6\u4e22\u5931\uff0c\u5e76\u4e0d\u4f1a\u62a5\u9519 \u6307\u9488\u7c7b\u578b \u57fa\u7840 package main import \"fmt\" func main() { var num int = 10 var p *int = &num fmt.Println(p) *p = 20 fmt.Println(num) } &num:\u83b7\u53d6num\u5730\u5740 *int:int\u7c7b\u578b\u7684\u6307\u9488 *p:\u83b7\u53d6p\u6307\u9488\u6307\u5411\u53d8\u91cf\u7684\u5730\u5740 \u503c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b (1) \u503c\u7c7b\u578b\uff0c\u90fd\u6709\u5bf9\u5e94\u7684\u6307\u9488\u7c7b\u578b\uff0c \u5f62\u5f0f\u4e3a \u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u5982 int \u7684\u5bf9\u5e94\u7684\u6307\u9488\u5c31\u662f int, float32\u5bf9\u5e94\u7684\u6307\u9488\u7c7b\u578b\u5c31\u662f *float32, \u4f9d\u6b21\u7c7b\u63a8\u3002 (2) \u503c\u7c7b\u578b\u5305\u62ec\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b int \u7cfb\u5217, float \u7cfb\u5217, bool, string \u3001\u6570\u7ec4\u548c\u7ed3\u6784\u4f53 struct (1) \u503c\u7c7b\u578b\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b int \u7cfb\u5217, float \u7cfb\u5217, bool, string \u3001\u6570\u7ec4\u548c\u7ed3\u6784\u4f53 struct (2) \u5f15\u7528\u7c7b\u578b\uff1a\u6307\u9488\u3001slice \u5207\u7247\u3001map\u3001\u7ba1\u9053 chan\u3001interface \u7b49\u90fd\u662f\u5f15\u7528\u7c7b\u578b \u503c\u7c7b\u578b\uff1a\u53d8\u91cf\u76f4\u63a5\u5b58\u50a8\u503c\uff0c\u5185\u5b58\u901a\u5e38\u5728\u6808\u4e2d\u5206\u914d \u5f15\u7528\u7c7b\u578b\uff1a\u53d8\u91cf\u5b58\u50a8\u7684\u662f\u4e00\u4e2a\u5730\u5740\uff0c\u8fd9\u4e2a\u5730\u5740\u5bf9\u5e94\u7684\u7a7a\u95f4\u624d\u771f\u6b63\u5b58\u50a8\u6570\u636e(\u503c)\uff0c\u5185\u5b58\u901a\u5e38\u5728\u5806 \u4e0a\u5206\u914d\uff0c\u5f53\u6ca1\u6709\u4efb\u4f55\u53d8\u91cf\u5f15\u7528\u8fd9\u4e2a\u5730\u5740\u65f6\uff0c\u8be5\u5730\u5740\u5bf9\u5e94\u7684\u6570\u636e\u7a7a\u95f4\u5c31\u6210\u4e3a\u4e00\u4e2a\u5783\u573e\uff0c\u7531GC \u6765\u56de\u6536 \u6807\u8bc6\u7b26 \u57fa\u7840 Golang \u5bf9\u5404\u79cd\u53d8\u91cf\u3001\u65b9\u6cd5\u3001\u51fd\u6570\u7b49\u547d\u540d\u65f6\u4f7f\u7528\u7684\u5b57\u7b26\u5e8f\u5217\u79f0\u4e3a\u6807\u8bc6\u7b26 \u51e1\u662f\u81ea\u5df1\u53ef\u4ee5\u8d77\u540d\u5b57\u7684\u5730\u65b9\u90fd\u53eb\u6807\u8bc6\u7b26 \u547d\u540d\u89c4\u5219 (1) \u7531 26 \u4e2a\u82f1\u6587\u5b57\u6bcd\u5927\u5c0f\u5199\uff0c0-9 \uff0c_ \u7ec4\u6210 (2) \u6570\u5b57\u4e0d\u53ef\u4ee5\u5f00\u5934\u3002var num int //ok var 3num int //error (3) Golang \u4e2d\u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199 (4) \u4e0b\u5212\u7ebf\"_\"\u672c\u8eab\u5728Go \u4e2d\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6807\u8bc6\u7b26\uff0c\u79f0\u4e3a\u7a7a\u6807\u8bc6\u7b26\u3002\u53ef\u4ee5\u4ee3\u8868\u4efb\u4f55\u5176\u5b83\u7684\u6807\u8bc6\u7b26\uff0c\u4f46 \u662f\u5b83\u5bf9\u5e94\u7684\u503c\u4f1a\u88ab\u5ffd\u7565(\u6bd4\u5982\uff1a\u5ffd\u7565\u67d0\u4e2a\u8fd4\u56de\u503c)\u3002\u6240\u4ee5\u4ec5\u80fd\u88ab\u4f5c\u4e3a\u5360\u4f4d\u7b26\u4f7f\u7528\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u6807\u8bc6\u7b26\u4f7f\u7528 \u7cfb\u7edf\u4fdd\u7559\u5173\u952e\u5b57 \u7cfb\u7edf\u7684\u9884\u5b9a\u4e49\u6807\u8bc6\u7b26 \u5f53\u7136\uff0c\u8fd9\u662f\u5728 go \u4e2d\uff0cgo \u7684\u5173\u952e\u5b57\u591a\u662f\u8bed\u53e5\u8bed\u6cd5\uff0c\u800c\u9884\u5b9a\u4e49\u6807\u8bc6\u7b26\u591a\u662f\u7c7b\u578b \u8fd0\u7b97\u7b26 \u7b97\u672f\u8fd0\u7b97\u7b26 \u6ce8\u610f\u4e8b\u9879 1.\u53d6\u6a21% a % b = a - a / b * b \u4e0ea\u7684\u6b63\u8d1f\u4e00\u81f4 2.\u9664\u6cd5 10/3 = 3 3.++ -- go \u8bed\u8a00\u53ea\u652f\u6301 i++, i-- \u8fd9\u6837\u7684\uff0c\u6ca1\u6709 --i , ++i \u540c\u65f6 j = i++\u8fd9\u6837\u4e5f\u662f\u9519\u8bef\u7684 \u5173\u7cfb\u8fd0\u7b97\u7b26 \u903b\u8f91\u8fd0\u7b97\u7b26 \u77ed\u8def (1) &&\u4e5f\u53eb\u77ed\u8def\u4e0e\uff1a\u5982\u679c\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e3a false\uff0c\u5219\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u4e0d\u4f1a\u5224\u65ad\uff0c\u6700\u7ec8\u7ed3\u679c\u4e3a false (2) ||\u4e5f\u53eb\u77ed\u8def\u6216\uff1a\u5982\u679c\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e3a true\uff0c\u5219\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u4e0d\u4f1a\u5224\u65ad\uff0c\u6700\u7ec8\u7ed3\u679c\u4e3a true \u8d4b\u503c\u8fd0\u7b97\u7b26 \u539f\u7801\u53cd\u7801\u8865\u7801 \u6b63\u6570\u548c0\uff1a\u539f\u7801\u53cd\u7801\u8865\u7801\u76f8\u540c \u8d1f\u6570\u7684\u53cd\u7801\uff1a\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4ed6\u4f4d\u53d6\u53cd \u8d1f\u6570\u7684\u8865\u7801\uff1a\u53cd\u7801+1 \u8ba1\u7b97\u673a\u90fd\u662f\u4ee5\u8865\u7801\u8fdb\u884c\u8fd0\u7b97 \u4f4d\u8fd0\u7b97\u7b26 \u56e0\u6b64\u6240\u8bf4\u7684 \u6709\u7b26\u53f7\u3001\u65e0\u7b26\u53f7 \u770b\u7684\u5c31\u662f\u4e8c\u8fdb\u5236\u7684\u7b26\u53f7\u4f4d\uff0c \u65e0\u7b26\u53f7:3\u5c31\u4e0d\u7ba1\u7b26\u53f7\u4f4d\uff0c\u53f3\u79fb\u53ea\u586b\u51450\uff1b\u6709\u7b26\u53f7\uff0c\u5c31\u662f\u7b26\u53f7\u4f4d\u662f\u5565\uff0c\u6211\u5c31\u586b\u5145\u5565\uff0cJava\u4e2d\u4e5f\u662f\u540c\u7406\u3002 \u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7 1\uff1a\u62ec\u53f7\uff0c++, -- 2: \u5355\u76ee\u8fd0\u7b97 3\uff1a\u7b97\u672f\u8fd0\u7b97\u7b26 4\uff1a\u79fb\u4f4d\u8fd0\u7b97 5\uff1a\u5173\u7cfb\u8fd0\u7b97\u7b26 6\uff1a\u4f4d\u8fd0\u7b97\u7b26 7\uff1a\u903b\u8f91\u8fd0\u7b97\u7b26 8\uff1a\u8d4b\u503c\u8fd0\u7b97\u7b26 9\uff1a\u9017\u53f7 go\u6ca1\u6709\u4e09\u6728\u8fd0\u7b97\u7b26 \u6d41\u7a0b\u63a7\u5236 if else package main import ( \"fmt\" ) func main() { var age int fmt.Scanln(&age) if age < 0 { fmt.Println(\"\u9519\u8bef\u7684\u6570\u636e\") } else if age < -1 { fmt.Println(\"\u672a\u6210\u5e74\") } else { fmt.Println(\"\u6210\u5e74\u4eba\") } } \u6ce8\u610f\uff1a\u5373\u4f7fif\u8bed\u53e5\u4e2d\u53ea\u6709\u4ee5\u53ca\u4ecd\u7136\u8981\u52a0{} switch package main import ( \"fmt\" ) func main() { var ch byte // \u4e0d\u8981\u4f7f\u7528 Scanln fmt.Scanf(\"%c\", &ch) // switch 'a' // switch test('a') switch ch { case 'a', 'b': fmt.Println(\"\u661f\u671f\u4e00\u6216\u8005\u661f\u671f\u4e8c\") case 'c': fmt.Println(\"\u661f\u671f\u4e09\") default: fmt.Println(\"\u5176\u4ed6\") } } switch\uff1a\u4e0d\u9700\u8981\u5199break\uff0cgo\u5df2\u7ecf\u5e2e\u6211\u4eec\u6dfb\u52a0\u4e86 golang \u7684 case \u540e\u7684\u8868\u8fbe\u5f0f\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u4f7f\u7528 \u9017\u53f7 \u95f4\u9694,\u8868\u793a\u6216\u7684\u610f\u601d case \u540e\u7684\u5404\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5fc5\u987b\u548c switch \u7684\u8868\u8fbe\u5f0f\u6570\u636e\u7c7b\u578b\u4e00\u81f4 case/switch \u540e\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f( \u5373\uff1a\u5e38\u91cf\u503c\u3001\u53d8\u91cf\u3001\u4e00\u4e2a\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u7b49\u90fd\u53ef\u4ee5) // switch 'a' // switch test('a') default:\u4e0d\u662f\u5fc5\u987b\u7684 case \u540e\u9762\u7684\u8868\u8fbe\u5f0f\u5982\u679c\u662f\u5e38\u91cf\u503c(\u5b57\u9762\u91cf)\uff0c\u5219\u8981\u6c42\u4e0d\u80fd\u91cd\u590d switch:\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u4e0d\u63a8\u8350 switch age := 12; { case age == 18: fmt.Println(\"18\") // \u7a7f\u900f fallthrough case age < 18: fmt.Println(\"\u672a\u6210\u5e74\") fallthrough default: fmt.Println(\"\u6210\u5e74\") } switch\uff1a\u6a21\u62dfifel switch { case 1 == 1 && 2 == 3: fmt.Println(\"error\") default: fmt.Println(\"true\") } switch \u7a7f\u900f-fallthrough \uff0c\u5982\u679c\u5728 case \u8bed\u53e5\u5757\u540e\u589e\u52a0 fallthrough ,\u5219\u4f1a\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u4e2a case\uff0c\u4e5f \u53eb switch \u7a7f\u900f,\u4f46\u662f\u53ea\u53ef\u4ee5\u7a7f\u900f\u4e00\u6b21 6.3for// go\u6ca1\u6709while package main import \"fmt\" func main() { for i := 0; i < 10; i++{ fmt.Println(\"matt\", i) } } i := 0 for i < 10 { fmt.Println(\"matt\", i) i++ } \u904d\u5386\u5b57\u7b26\u4e32 \u6839\u636e\u5b57\u7b26\u904d\u5386\u7684 var str = \"hello wordz\u4e2d\u6587\" // \u5982\u679c\u4f7f\u7528\u4f20\u7edf\u7684\u5b57\u7b26\u4e32\u904d\u5386\u5c31\u4f1a\u51fa\u9519\uff0c\u56e0\u4e3a3\u4e2a\u5b57\u8282 for index, val := range str { //fmt.Println(index, val) fmt.Printf(\"%d %c\\n\", index, val) } 6.4break break:\u8df3\u51fafor\u5faa\u73af 6.5continue continue:\u8df3\u51fa\u5f53\u524d\u5faa\u73af 6.6label label:\u4f7f\u7528break\u8df3\u51fa\u6307\u5b9a\u7684for\u5faa\u73af \u540c\u6837continue\u4e5f\u53ef\u4ee5\u4f7f\u7528 package main import \"fmt\" func main() { label1: for i := 0; i < 10; i++ { for j := 0; j < 10; j++ { if j == 3 { break label1 } fmt.Println(j) } fmt.Println(i) } } 6.7goto goto:\u8df3\u8f6c\u5230\u6307\u5b9a\u7684\u884c\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528 package main import ( \"fmt\" ) func main() { goto label1 fmt.Print(\"\u4e0d\u6267\u884c\") label1: fmt.Print(\"\u6267\u884c\") } \u8f93\u51fa\uff1a\u6267\u884c \u95ee\u9898 \u5728\u51fd\u6570\u5916\u4f7f\u7528\u5982\u4e0b\u5c31\u4f1a\u51fa\u9519 i := 1 // \u7b49\u4ef7\u4e8e var i int // i = 1 \u8d4b\u503c\u8bed\u53e5\u4e0d\u53ef\u4ee5\u5728\u51fd\u6570\u5916\u4f7f\u7528\uff0c\u662f\u6267\u884c\u8bed\u53e5 i = 1","title":"\u57fa\u7840"},{"location":"base/go/0base/1base/#_1","text":"","title":"\u57fa\u7840"},{"location":"base/go/0base/1base/#_2","text":"\u65b0\u5efa\u9879\u76ee \u9879\u76ee\u4e0b\u521b\u5efasrc\u6587\u4ef6\u5939\uff0c\u521b\u5efabin\u6587\u4ef6\u5939\uff0c\u521b\u5efapkg\u6587\u4ef6\u5939 package main import \"fmt\" func main() { fmt.Println(\"hello word\") }","title":"\u7a0b\u5e8f"},{"location":"base/go/0base/1base/#_3","text":"","title":"\u7f16\u8bd1\u8fd0\u884c"},{"location":"base/go/0base/1base/#_4","text":"\u7f16\u8bd1 go build hello.go \u8fd0\u884c hello.exe","title":"\u7f16\u8bd1\u8fd0\u884c\u5206\u5f00"},{"location":"base/go/0base/1base/#_5","text":"go run hello.go","title":"\u7f16\u8bd1\u8fd0\u884c\u4e0d\u5206\u5f00"},{"location":"base/go/0base/1base/#_6","text":"1) \u5982\u679c\u6211\u4eec\u5148\u7f16\u8bd1\u751f\u6210\u4e86\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u8be5\u53ef\u6267\u884c\u6587\u4ef6\u62f7\u8d1d\u5230\u6ca1\u6709 go \u5f00\u53d1\u73af\u5883\u7684\u673a\u5668\u4e0a\uff0c\u4ecd\u7136\u53ef\u4ee5\u8fd0\u884c 2) \u5982\u679c\u6211\u4eec\u662f\u76f4\u63a5 go run go \u6e90\u4ee3\u7801\uff0c\u90a3\u4e48\u5982\u679c\u8981\u5728\u53e6\u5916\u4e00\u4e2a\u673a\u5668\u4e0a\u8fd9\u4e48\u8fd0\u884c\uff0c\u4e5f\u9700\u8981 go \u5f00\u53d1\u73af\u5883\uff0c\u5426\u5219\u65e0\u6cd5\u6267\u884c\u3002 3) \u5728\u7f16\u8bd1\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u5c06\u7a0b\u5e8f\u8fd0\u884c\u4f9d\u8d56\u7684\u5e93\u6587\u4ef6\u5305\u542b\u5728\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\uff0c\u6240\u4ee5\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u53d8\u5927\u4e86\u5f88\u591a\u3002","title":"\u5206\u5f00\u548c\u4e0d\u5206\u5f00\u533a\u522b"},{"location":"base/go/0base/1base/#_7","text":"go\u6e90\u6587\u4ef6\u4ee5 go \u4e3a\u6269\u5c55\u540d go \u7684\u5165\u53e3\u51fd\u6570\u662f main() \u51fd\u6570 go \u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199 go \u8bed\u53e5\u4e0d\u9700\u8981\u52a0\u5206\u53f7\uff0cgo\u8bed\u8a00\u81ea\u52a8\u4f1a\u52a0\u5206\u53f7 go\u8bed\u53e5\u662f\u4e00\u884c\u4e00\u884c\u7f16\u8bd1\uff0c\u6240\u4ee5\u4e00\u884c\u4e0d\u53ef\u4ee5\u5199\u591a\u6761\u8bed\u53e5 \u5f15\u7528\u7684\u5305\u6216\u8005\u5b9a\u4e49\u7684\u53d8\u91cf\u5fc5\u987b\u4f7f\u7528\uff0c\u4e0d\u4f7f\u7528\u4f1a\u62a5\u9519","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"base/go/0base/1base/#_8","text":"package main import \"fmt\" import \"time\" func main() { // \u884c\u6ce8\u91ca\uff0c\u63a8\u8350\u4f7f\u7528\u884c\u6ce8\u91ca /* \u5757\u6ce8\u91ca \u4f60\u597d\u5757\u6ce8\u91ca */ fmt.Println(time.Now()) }","title":"\u6ce8\u91ca"},{"location":"base/go/0base/1base/#_9","text":"","title":"\u53d8\u91cf"},{"location":"base/go/0base/1base/#_10","text":"","title":"\u57fa\u7840"},{"location":"base/go/0base/1base/#_11","text":"\u4e00\u4e9b\u7279\u6b8a\u7684\u5b57\u7b26\uff1a\u6bd4\u5982\u7528\u6237\u60f3\u8981\u6211\u4eec\u6253\u51fa\u6362\u884c 1) \\t : \u8868\u793a\u4e00\u4e2a\u5236\u8868\u7b26\uff0c\u901a\u5e38\u4f7f\u7528\u5b83\u53ef\u4ee5\u6392\u7248\u3002 2) \\n \uff1a\u6362\u884c\u7b26 3) \\\\ \uff1a\u4e00\u4e2a\\ 4) \\\\\" \uff1a\u4e00\u4e2a\" 5) \\r \uff1a\u4e00\u4e2a\u56de\u8f66 fmt.Println(\"aaa\\r bb\");","title":"\u8f6c\u4e49\u5b57\u7b26"},{"location":"base/go/0base/1base/#_12","text":"\u6307\u5b9a\u53d8\u91cf\u7c7b\u578b\uff0c \u6574\u6570\uff1a0 \u6d6e\u70b9\u6570\uff1a0 bool:false // \u5982\u679c\u4e0d\u8d4b\u503c\uff0c\u5219\u4f7f\u7528\u5b83\u7684\u9ed8\u8ba4\u503c var j int \u4e0d\u6307\u5b9a\u7c7b\u578b\uff0c\u81ea\u5df1\u5224\u65ad var i = 100 var j \u7b2c\u4e09\u79cd,\u7701\u7565var // i\u6ca1\u6709\u58f0\u660e\u8fc7 i := 100 \u591a\u53d8\u91cf\u58f0\u660e var a, b, c int fmt.Println(a, b, c) var d, e, f = 1, 2, 3 fmt.Println(d, e, f) g, h := \"1\", \"2\" fmt.Println(g, h) \u5168\u5c40\u53d8\u91cf // \u5168\u5c40\u53d8\u91cf var a1 = 100 var a2 = 200 // \u63a8\u8350\u4f7f\u7528 var ( a3 = 300 a4 = 400 ) \u5e38\u91cf // \u5e38\u91cf const i = 10","title":"\u53d8\u91cf\u58f0\u660e"},{"location":"base/go/0base/1base/#_13","text":"","title":"\u6570\u636e\u7c7b\u578b"},{"location":"base/go/0base/1base/#_14","text":"","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"base/go/0base/1base/#_15","text":"\u6709\u7b26\u53f7 \u65e0\u7b26\u53f7 package main // import \"fmt\" // import \"unsafe\" import ( \"fmt\" \"unsafe\" ) func main() { var i int = 100 fmt.Println(i, unsafe.Sizeof(i)) }","title":"\u6574\u6570"},{"location":"base/go/0base/1base/#_16","text":"\u7cfb\u7edf\u9ed8\u8ba4\u4f7f\u7528float64,\u63a8\u8350\u4f7f\u7528float64 \u7c7b\u578b \u5360\u7528\u5b58\u50a8\u5927\u5c0f \u8303\u56f4 float32 4 -3.4E38\uff5e3.4E38 float64 8 -1.7E308\uff5e1.7E308 package main import ( \"fmt\" ) func main() { var i float64 = 1.1 fmt.Println(\"\u6d6e\u70b9\u6570\", i) }","title":"\u6d6e\u70b9\u6570"},{"location":"base/go/0base/1base/#_17","text":"\u4f7f\u7528'',\u5b57\u7b26\u6709\u4e00\u4e2a\u7801\u503c package main import \"fmt\" func main() { var i byte = '1' fmt.Println(i) fmt.Printf(\"%c\\n\", i) // %d %s %c // \u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u8d85\u8fc7byte\u8868\u793a\u7684\u7c7b\u578b\uff0c\u4f7f\u7528int\u7c7b\u578b\u5373\u53ef var j int = '\u4e2d' fmt.Printf(\"%c\", j) } \u5b57\u7b26 \u5b58\u50a8\u5230 \u8ba1\u7b97\u673a\u4e2d\uff0c\u9700\u8981\u5c06\u5b57\u7b26\u5bf9\u5e94\u7684\u7801\u503c\uff08\u6574\u6570\uff09\u627e\u51fa\u6765 \u5b58\u50a8\uff1a\u5b57\u7b26--->\u5bf9\u5e94\u7801\u503c---->\u4e8c\u8fdb\u5236-->\u5b58\u50a8 \u8bfb\u53d6\uff1a\u4e8c\u8fdb\u5236----> \u7801\u503c ----> \u5b57\u7b26 --> \u8bfb\u53d6 \u200b","title":"\u5b57\u7b26"},{"location":"base/go/0base/1base/#bool","text":"package main import ( \"fmt\" \"unsafe\" ) func main() { var i bool = false fmt.Println(i, unsafe.Sizeof(i)) }","title":"bool"},{"location":"base/go/0base/1base/#string","text":"package main import \"fmt\" func main() { var name string = \"matt\" var address = ` hahahninrerer ` fmt.Println(name) fmt.Println(address) } 1\u4e00\u822c\u4f7f\u7528\"\",\u4e5f\u53ef\u4ee5\u8f93\u51fa\u53cd\u5f15\u53f7`` 2\u53cd\u5f15\u53f7\u53ef\u4ee5\u8d4b\u503c\u591a\u884c 3\u5b57\u7b26\u4e32\u62fc\u63a5 +\u8981\u5199\u5728\u6bcf\u4e00\u884c\u540e\u9762 var address = \"hello\" + \"word\" 4 // \u591a\u884c\u8f93\u51fa fmt.Println(\"hello word\", \"\u4f60\u597d\")","title":"string"},{"location":"base/go/0base/1base/#_18","text":"","title":"\u7c7b\u578b\u8f6c\u6362"},{"location":"base/go/0base/1base/#_19","text":"\u6ce8\u610f var i int8 = 10 // i + 8 \u662fint8\u7c7b\u578b \u4e00\u822c\u90fd\u662f\u5f3a\u8f6c var i int8 = 1 var j = int16(i)","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b\u8f6c\u6362"},{"location":"base/go/0base/1base/#_20","text":"\u4f7f\u7528fmt\u4e0b\u7684Sprintf package main import ( \"fmt\" ) func main() { var i int8 = 100 var address string = fmt.Sprintf(\"%d hello3434\", i) fmt.Println(address) } \u4f7f\u7528strconv\u5305","title":"\u57fa\u672c\u7c7b\u578b\u8f6c\u5b57\u7b26\u4e32"},{"location":"base/go/0base/1base/#_21","text":"\u4f7f\u7528strconv\u5305 package main import ( \"fmt\" \"strconv\" ) func main() { var i string = \"100\" var j int64 // \u56e0\u4e3a\u8fd9\u4e2a\u51fd\u6570\u4f1a\u6709\u4fe9\u4e2a\u8fd4\u56de\u503c j, _ = strconv.ParseInt(i, 10, 8) fmt.Println(j) } \u6ce8\u610f \u5982\u679c\u662f\"hello\"\u8f6cint\uff0c\u90a3\u4e48\u76f4\u63a5\u8f6c\u4e3a0\uff0c\u5e76\u4e0d\u4f1a\u62a5\u9519 \u9ad8\u7cbe\u5ea6\u5230\u4f4e\u7cbe\u5ea6\u53ea\u4f1a\u7cbe\u5ea6\u4e22\u5931\uff0c\u5e76\u4e0d\u4f1a\u62a5\u9519","title":"\u5b57\u7b26\u4e32\u8f6c\u5176\u4ed6\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"base/go/0base/1base/#_22","text":"","title":"\u6307\u9488\u7c7b\u578b"},{"location":"base/go/0base/1base/#_23","text":"package main import \"fmt\" func main() { var num int = 10 var p *int = &num fmt.Println(p) *p = 20 fmt.Println(num) } &num:\u83b7\u53d6num\u5730\u5740 *int:int\u7c7b\u578b\u7684\u6307\u9488 *p:\u83b7\u53d6p\u6307\u9488\u6307\u5411\u53d8\u91cf\u7684\u5730\u5740","title":"\u57fa\u7840"},{"location":"base/go/0base/1base/#_24","text":"(1) \u503c\u7c7b\u578b\uff0c\u90fd\u6709\u5bf9\u5e94\u7684\u6307\u9488\u7c7b\u578b\uff0c \u5f62\u5f0f\u4e3a \u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u5982 int \u7684\u5bf9\u5e94\u7684\u6307\u9488\u5c31\u662f int, float32\u5bf9\u5e94\u7684\u6307\u9488\u7c7b\u578b\u5c31\u662f *float32, \u4f9d\u6b21\u7c7b\u63a8\u3002 (2) \u503c\u7c7b\u578b\u5305\u62ec\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b int \u7cfb\u5217, float \u7cfb\u5217, bool, string \u3001\u6570\u7ec4\u548c\u7ed3\u6784\u4f53 struct (1) \u503c\u7c7b\u578b\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b int \u7cfb\u5217, float \u7cfb\u5217, bool, string \u3001\u6570\u7ec4\u548c\u7ed3\u6784\u4f53 struct (2) \u5f15\u7528\u7c7b\u578b\uff1a\u6307\u9488\u3001slice \u5207\u7247\u3001map\u3001\u7ba1\u9053 chan\u3001interface \u7b49\u90fd\u662f\u5f15\u7528\u7c7b\u578b \u503c\u7c7b\u578b\uff1a\u53d8\u91cf\u76f4\u63a5\u5b58\u50a8\u503c\uff0c\u5185\u5b58\u901a\u5e38\u5728\u6808\u4e2d\u5206\u914d \u5f15\u7528\u7c7b\u578b\uff1a\u53d8\u91cf\u5b58\u50a8\u7684\u662f\u4e00\u4e2a\u5730\u5740\uff0c\u8fd9\u4e2a\u5730\u5740\u5bf9\u5e94\u7684\u7a7a\u95f4\u624d\u771f\u6b63\u5b58\u50a8\u6570\u636e(\u503c)\uff0c\u5185\u5b58\u901a\u5e38\u5728\u5806 \u4e0a\u5206\u914d\uff0c\u5f53\u6ca1\u6709\u4efb\u4f55\u53d8\u91cf\u5f15\u7528\u8fd9\u4e2a\u5730\u5740\u65f6\uff0c\u8be5\u5730\u5740\u5bf9\u5e94\u7684\u6570\u636e\u7a7a\u95f4\u5c31\u6210\u4e3a\u4e00\u4e2a\u5783\u573e\uff0c\u7531GC \u6765\u56de\u6536","title":"\u503c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b"},{"location":"base/go/0base/1base/#_25","text":"","title":"\u6807\u8bc6\u7b26"},{"location":"base/go/0base/1base/#_26","text":"Golang \u5bf9\u5404\u79cd\u53d8\u91cf\u3001\u65b9\u6cd5\u3001\u51fd\u6570\u7b49\u547d\u540d\u65f6\u4f7f\u7528\u7684\u5b57\u7b26\u5e8f\u5217\u79f0\u4e3a\u6807\u8bc6\u7b26 \u51e1\u662f\u81ea\u5df1\u53ef\u4ee5\u8d77\u540d\u5b57\u7684\u5730\u65b9\u90fd\u53eb\u6807\u8bc6\u7b26","title":"\u57fa\u7840"},{"location":"base/go/0base/1base/#_27","text":"(1) \u7531 26 \u4e2a\u82f1\u6587\u5b57\u6bcd\u5927\u5c0f\u5199\uff0c0-9 \uff0c_ \u7ec4\u6210 (2) \u6570\u5b57\u4e0d\u53ef\u4ee5\u5f00\u5934\u3002var num int //ok var 3num int //error (3) Golang \u4e2d\u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199 (4) \u4e0b\u5212\u7ebf\"_\"\u672c\u8eab\u5728Go \u4e2d\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6807\u8bc6\u7b26\uff0c\u79f0\u4e3a\u7a7a\u6807\u8bc6\u7b26\u3002\u53ef\u4ee5\u4ee3\u8868\u4efb\u4f55\u5176\u5b83\u7684\u6807\u8bc6\u7b26\uff0c\u4f46 \u662f\u5b83\u5bf9\u5e94\u7684\u503c\u4f1a\u88ab\u5ffd\u7565(\u6bd4\u5982\uff1a\u5ffd\u7565\u67d0\u4e2a\u8fd4\u56de\u503c)\u3002\u6240\u4ee5\u4ec5\u80fd\u88ab\u4f5c\u4e3a\u5360\u4f4d\u7b26\u4f7f\u7528\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u6807\u8bc6\u7b26\u4f7f\u7528","title":"\u547d\u540d\u89c4\u5219"},{"location":"base/go/0base/1base/#_28","text":"","title":"\u7cfb\u7edf\u4fdd\u7559\u5173\u952e\u5b57"},{"location":"base/go/0base/1base/#_29","text":"\u5f53\u7136\uff0c\u8fd9\u662f\u5728 go \u4e2d\uff0cgo \u7684\u5173\u952e\u5b57\u591a\u662f\u8bed\u53e5\u8bed\u6cd5\uff0c\u800c\u9884\u5b9a\u4e49\u6807\u8bc6\u7b26\u591a\u662f\u7c7b\u578b","title":"\u7cfb\u7edf\u7684\u9884\u5b9a\u4e49\u6807\u8bc6\u7b26"},{"location":"base/go/0base/1base/#_30","text":"","title":"\u8fd0\u7b97\u7b26"},{"location":"base/go/0base/1base/#_31","text":"","title":"\u7b97\u672f\u8fd0\u7b97\u7b26"},{"location":"base/go/0base/1base/#_32","text":"","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"base/go/0base/1base/#1","text":"a % b = a - a / b * b \u4e0ea\u7684\u6b63\u8d1f\u4e00\u81f4","title":"1.\u53d6\u6a21%"},{"location":"base/go/0base/1base/#2","text":"10/3 = 3","title":"2.\u9664\u6cd5"},{"location":"base/go/0base/1base/#3-","text":"go \u8bed\u8a00\u53ea\u652f\u6301 i++, i-- \u8fd9\u6837\u7684\uff0c\u6ca1\u6709 --i , ++i \u540c\u65f6 j = i++\u8fd9\u6837\u4e5f\u662f\u9519\u8bef\u7684","title":"3.++ --"},{"location":"base/go/0base/1base/#_33","text":"","title":"\u5173\u7cfb\u8fd0\u7b97\u7b26"},{"location":"base/go/0base/1base/#_34","text":"\u77ed\u8def (1) &&\u4e5f\u53eb\u77ed\u8def\u4e0e\uff1a\u5982\u679c\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e3a false\uff0c\u5219\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u4e0d\u4f1a\u5224\u65ad\uff0c\u6700\u7ec8\u7ed3\u679c\u4e3a false (2) ||\u4e5f\u53eb\u77ed\u8def\u6216\uff1a\u5982\u679c\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e3a true\uff0c\u5219\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u4e0d\u4f1a\u5224\u65ad\uff0c\u6700\u7ec8\u7ed3\u679c\u4e3a true","title":"\u903b\u8f91\u8fd0\u7b97\u7b26"},{"location":"base/go/0base/1base/#_35","text":"","title":"\u8d4b\u503c\u8fd0\u7b97\u7b26"},{"location":"base/go/0base/1base/#_36","text":"\u6b63\u6570\u548c0\uff1a\u539f\u7801\u53cd\u7801\u8865\u7801\u76f8\u540c \u8d1f\u6570\u7684\u53cd\u7801\uff1a\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4ed6\u4f4d\u53d6\u53cd \u8d1f\u6570\u7684\u8865\u7801\uff1a\u53cd\u7801+1 \u8ba1\u7b97\u673a\u90fd\u662f\u4ee5\u8865\u7801\u8fdb\u884c\u8fd0\u7b97","title":"\u539f\u7801\u53cd\u7801\u8865\u7801"},{"location":"base/go/0base/1base/#_37","text":"\u56e0\u6b64\u6240\u8bf4\u7684 \u6709\u7b26\u53f7\u3001\u65e0\u7b26\u53f7 \u770b\u7684\u5c31\u662f\u4e8c\u8fdb\u5236\u7684\u7b26\u53f7\u4f4d\uff0c \u65e0\u7b26\u53f7:3\u5c31\u4e0d\u7ba1\u7b26\u53f7\u4f4d\uff0c\u53f3\u79fb\u53ea\u586b\u51450\uff1b\u6709\u7b26\u53f7\uff0c\u5c31\u662f\u7b26\u53f7\u4f4d\u662f\u5565\uff0c\u6211\u5c31\u586b\u5145\u5565\uff0cJava\u4e2d\u4e5f\u662f\u540c\u7406\u3002","title":"\u4f4d\u8fd0\u7b97\u7b26"},{"location":"base/go/0base/1base/#_38","text":"1\uff1a\u62ec\u53f7\uff0c++, -- 2: \u5355\u76ee\u8fd0\u7b97 3\uff1a\u7b97\u672f\u8fd0\u7b97\u7b26 4\uff1a\u79fb\u4f4d\u8fd0\u7b97 5\uff1a\u5173\u7cfb\u8fd0\u7b97\u7b26 6\uff1a\u4f4d\u8fd0\u7b97\u7b26 7\uff1a\u903b\u8f91\u8fd0\u7b97\u7b26 8\uff1a\u8d4b\u503c\u8fd0\u7b97\u7b26 9\uff1a\u9017\u53f7","title":"\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7"},{"location":"base/go/0base/1base/#go","text":"","title":"go\u6ca1\u6709\u4e09\u6728\u8fd0\u7b97\u7b26"},{"location":"base/go/0base/1base/#_39","text":"","title":"\u6d41\u7a0b\u63a7\u5236"},{"location":"base/go/0base/1base/#if-else","text":"package main import ( \"fmt\" ) func main() { var age int fmt.Scanln(&age) if age < 0 { fmt.Println(\"\u9519\u8bef\u7684\u6570\u636e\") } else if age < -1 { fmt.Println(\"\u672a\u6210\u5e74\") } else { fmt.Println(\"\u6210\u5e74\u4eba\") } } \u6ce8\u610f\uff1a\u5373\u4f7fif\u8bed\u53e5\u4e2d\u53ea\u6709\u4ee5\u53ca\u4ecd\u7136\u8981\u52a0{}","title":"if else"},{"location":"base/go/0base/1base/#switch","text":"package main import ( \"fmt\" ) func main() { var ch byte // \u4e0d\u8981\u4f7f\u7528 Scanln fmt.Scanf(\"%c\", &ch) // switch 'a' // switch test('a') switch ch { case 'a', 'b': fmt.Println(\"\u661f\u671f\u4e00\u6216\u8005\u661f\u671f\u4e8c\") case 'c': fmt.Println(\"\u661f\u671f\u4e09\") default: fmt.Println(\"\u5176\u4ed6\") } } switch\uff1a\u4e0d\u9700\u8981\u5199break\uff0cgo\u5df2\u7ecf\u5e2e\u6211\u4eec\u6dfb\u52a0\u4e86 golang \u7684 case \u540e\u7684\u8868\u8fbe\u5f0f\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u4f7f\u7528 \u9017\u53f7 \u95f4\u9694,\u8868\u793a\u6216\u7684\u610f\u601d case \u540e\u7684\u5404\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5fc5\u987b\u548c switch \u7684\u8868\u8fbe\u5f0f\u6570\u636e\u7c7b\u578b\u4e00\u81f4 case/switch \u540e\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f( \u5373\uff1a\u5e38\u91cf\u503c\u3001\u53d8\u91cf\u3001\u4e00\u4e2a\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u7b49\u90fd\u53ef\u4ee5) // switch 'a' // switch test('a') default:\u4e0d\u662f\u5fc5\u987b\u7684 case \u540e\u9762\u7684\u8868\u8fbe\u5f0f\u5982\u679c\u662f\u5e38\u91cf\u503c(\u5b57\u9762\u91cf)\uff0c\u5219\u8981\u6c42\u4e0d\u80fd\u91cd\u590d switch:\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u4e0d\u63a8\u8350 switch age := 12; { case age == 18: fmt.Println(\"18\") // \u7a7f\u900f fallthrough case age < 18: fmt.Println(\"\u672a\u6210\u5e74\") fallthrough default: fmt.Println(\"\u6210\u5e74\") } switch\uff1a\u6a21\u62dfifel switch { case 1 == 1 && 2 == 3: fmt.Println(\"error\") default: fmt.Println(\"true\") } switch \u7a7f\u900f-fallthrough \uff0c\u5982\u679c\u5728 case \u8bed\u53e5\u5757\u540e\u589e\u52a0 fallthrough ,\u5219\u4f1a\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u4e2a case\uff0c\u4e5f \u53eb switch \u7a7f\u900f,\u4f46\u662f\u53ea\u53ef\u4ee5\u7a7f\u900f\u4e00\u6b21","title":"switch"},{"location":"base/go/0base/1base/#63forgowhile","text":"package main import \"fmt\" func main() { for i := 0; i < 10; i++{ fmt.Println(\"matt\", i) } } i := 0 for i < 10 { fmt.Println(\"matt\", i) i++ } \u904d\u5386\u5b57\u7b26\u4e32 \u6839\u636e\u5b57\u7b26\u904d\u5386\u7684 var str = \"hello wordz\u4e2d\u6587\" // \u5982\u679c\u4f7f\u7528\u4f20\u7edf\u7684\u5b57\u7b26\u4e32\u904d\u5386\u5c31\u4f1a\u51fa\u9519\uff0c\u56e0\u4e3a3\u4e2a\u5b57\u8282 for index, val := range str { //fmt.Println(index, val) fmt.Printf(\"%d %c\\n\", index, val) }","title":"6.3for//go\u6ca1\u6709while"},{"location":"base/go/0base/1base/#64break","text":"break:\u8df3\u51fafor\u5faa\u73af","title":"6.4break"},{"location":"base/go/0base/1base/#65continue","text":"continue:\u8df3\u51fa\u5f53\u524d\u5faa\u73af","title":"6.5continue"},{"location":"base/go/0base/1base/#66label","text":"label:\u4f7f\u7528break\u8df3\u51fa\u6307\u5b9a\u7684for\u5faa\u73af \u540c\u6837continue\u4e5f\u53ef\u4ee5\u4f7f\u7528 package main import \"fmt\" func main() { label1: for i := 0; i < 10; i++ { for j := 0; j < 10; j++ { if j == 3 { break label1 } fmt.Println(j) } fmt.Println(i) } }","title":"6.6label"},{"location":"base/go/0base/1base/#67goto","text":"goto:\u8df3\u8f6c\u5230\u6307\u5b9a\u7684\u884c\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528 package main import ( \"fmt\" ) func main() { goto label1 fmt.Print(\"\u4e0d\u6267\u884c\") label1: fmt.Print(\"\u6267\u884c\") } \u8f93\u51fa\uff1a\u6267\u884c","title":"6.7goto"},{"location":"base/go/0base/1base/#_40","text":"\u5728\u51fd\u6570\u5916\u4f7f\u7528\u5982\u4e0b\u5c31\u4f1a\u51fa\u9519 i := 1 // \u7b49\u4ef7\u4e8e var i int // i = 1 \u8d4b\u503c\u8bed\u53e5\u4e0d\u53ef\u4ee5\u5728\u51fd\u6570\u5916\u4f7f\u7528\uff0c\u662f\u6267\u884c\u8bed\u53e5 i = 1","title":"\u95ee\u9898"},{"location":"base/go/0base/2data_structure/","text":"\u6570\u7ec4 \u4ecb\u7ecd \u5b58\u653e\u591a\u4e2a\u540c\u4e00\u7c7b\u578b\u7684\u6570\u636e \u4f7f\u7528 \u58f0\u660e var arr1 [3]int \u56db\u79cd\u521d\u59cb\u5316\u65b9\u6cd5 var arr1 [3]int = [3]int{1, 2, 3} fmt.Println(arr1) var arr2 = [5]int{1, 2, 3, 4, 5} fmt.Println(arr2) arr3 := [...]float64{1, 2, 3} fmt.Println(arr3) var arr4 = [...]string{1: \"aa\", 0: \"bb\"} fmt.Println(arr4) \u904d\u5386 for index, val := range arr4 { fmt.Println(index, val) } for i := 0; i < len(arr4); i++ { fmt.Println(arr4[i]) } \u6ce8\u610f 1.\u6570\u7ec4\u4e00\u65e6\u58f0\u660e\uff0c\u5176\u957f\u5ea6\u4e0d\u80fd\u53d1\u751f\u6539\u53d8\uff1b\u6570\u7ec4\u521b\u5efa\u540e\uff0c\u6ca1\u6709\u8d4b\u503c\uff0c\u4f1a\u6709\u9ed8\u8ba4\u503c 2.go \u8bed\u8a00\u4e2d\u6570\u7ec4\u662f\u503c\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u5f15\u7528\u7c7b\u578b 3.\u4f20\u9012\u53c2\u6570\u9700\u8981\u6307\u5b9a\u6570\u7ec4\u957f\u5ea6 // [3]int [4]int \u8ba4\u4e3a\u662f\u4e0d\u540c\u6570\u636e\u7c7b\u578b func valueTest(arr [3]int) { arr[0] = 1 } \u4e8c\u7ef4\u6570\u7ec4 func main() { var arr = [2][2]int{{1, 2}, {3, 4}} fmt.Println(arr) // \u53ea\u6709\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u4e3a... var arr1 = [...][3]int{{1, 2}, {3, 4}} fmt.Println(arr1) } \u5207\u7247 \u57fa\u7840 \u521d\u59cb\u5316 \u6570\u7ec4\u7684\u5207 - make - \u76f4\u63a5\u521d\u59cb\u5316 - \u76f4\u63a5\u58f0\u660e 1 var arr = [5]int{1, 2, 3, 45, 5} slice := arr[2:4] arr[2] = -1 fmt.Println(slice) // \u5143\u7d20\u6570\u91cffmt.Println(len(slice)) // \u5bb9\u91cffmt.Println(cap(slice)) 2 var slice1 []int = make([]int, 2, 10) slice1[0] = 0 slice1[1] = 1 fmt.Println(slice1) 3 fmt.Println(\"\u65b9\u5f0f\u4e09\") var slice2 []float64 = []float64{1, 2, 3} fmt.Println(cap(slice2)) 4 var s []int type slice struct { ptr *[2]int len int cap int } \u5f15\u7528\u4e00\u4e2a\u6570\u7ec4 \u6570\u91cf \u5bb9\u91cf \u904d\u5386 for index, value := range slice2 { fmt.Printf(\"---%v:%v \", index, value) } \u4f7f\u7528 \u6570\u7ec4\u5207\u7247\u5206\u5272 var slieceDemo = arr[startIndex: endIndex] \u5305\u542b\u5de6\u8fb9\uff0c\u4e0d\u5305\u542b\u53f3\u8fb9 var slice = arr[0:end] \u53ef\u4ee5\u7b80\u5199 var slice = arr[:end] var slice = arr[start:len(arr)] \u53ef\u4ee5\u7b80\u5199\uff1a var slice = arr[start:] var slice = arr[0:len(arr)] \u53ef\u4ee5\u7b80\u5199: var slice = arr[:] cap \u662f\u4e00\u4e2a\u5185\u7f6e\u51fd\u6570\uff0c\u7528\u4e8e\u7edf\u8ba1\u5207\u7247\u7684\u5bb9\u91cf\uff0c\u5373\u6700\u5927\u53ef\u4ee5\u5b58\u653e\u591a\u5c11\u4e2a\u5143\u7d20\u3002 \u5207\u7247\u4ecd\u7136\u53ef\u4ee5\u5207\u7247 // \u5143\u7d20\u6570\u91cffmt.Println(len(slice))// \u5bb9\u91cffmt.Println(cap(slice)) append \u7528 append \u5185\u7f6e\u51fd\u6570\uff0c\u53ef\u4ee5\u5bf9\u5207\u7247\u8fdb\u884c\u52a8\u6001\u8ffd\u52a0 var arr = [5]int{1, 2, 3, 4, 5} var slice []int = arr[:] fmt.Println(slice)// \u8fd4\u56de slice = append(slice, 10) fmt.Println(slice) \u5207\u7247\u7684\u62f7\u8d1d package mainimport \"fmt\" func main() { var slice1 []int = make([]int, 5) var slice2 []int = make([]int, 10) slice1[0] = 1 copy(slice2, slice1) fmt.Println(slice2) } \u6ce8\u610f \u5207\u7247\u662f\u5f15\u7528\u4f20\u9012 string\u5e95\u5c42\u4e5f\u662f\u6570\u7ec4\uff0c\u53ef\u4ee5\u4f7f\u7528\u5207\u7247 Map\u4f7f\u7528 \u4ecb\u7ecd key-value \u7684\u6570\u636e\u7ed3\u6784\uff0c\u7c7b\u4f3c\u4e8e java \u4e2d\u7684 map key \u7684\u7c7b\u578b\uff1abool, \u6570\u5b57\uff0cstring, \u6307\u9488, channel , \u8fd8\u53ef\u4ee5\u662f\u53ea\u5305\u542b\u524d\u9762\u51e0\u4e2a\u7c7b\u578b\u7684 \u63a5\u53e3, \u7ed3\u6784\u4f53, \u6570\u7ec4\uff0c\u901a\u5e38 key \u4e3a int \u3001string \u6ce8\u610f: slice\uff0c map \u8fd8\u6709 function \u4e0d\u53ef\u4ee5\uff0c\u56e0\u4e3a\u8fd9\u51e0\u4e2a\u6ca1\u6cd5\u7528 == \u6765\u5224\u65ad valuetype \u7684\u7c7b\u578b\u548c key \u57fa\u672c\u4e00\u6837\uff0c\u901a\u5e38\u4e3a: \u6570\u5b57(\u6574\u6570,\u6d6e\u70b9\u6570),string,map,struct \u4f7f\u7528 \u58f0\u660e var map1 map[int]int 1.map \u5728\u4f7f\u7528\u524d\u4e00\u5b9a\u8981make(\u9700\u8981\u5206\u914d\u5185\u5b58) 2.map \u7684 key \u662f\u4e0d\u80fd\u91cd\u590d\uff0cv \u53ef\u4ee5\u91cd\u590d map \u7684 key-value \u662f\u65e0\u5e8f \u4e09\u79cd\u4f7f\u7528\u65b9\u5f0f var map1 map[int]int map1 = make(map[int]int, 10) fmt.Println(map1) map2 := make(map[int]int, 10) fmt.Println(map2) map3 := map[int]int { 1: 1, 2: 2, } fmt.Println(map3) map\u4e2d\u7684\u65b9\u6cd5 \u6dfb\u52a0\u548c\u66f4\u65b0 var a = make(map[int]string) a[0] = \"matt\" a[1] = \"pony\" a[0] = \"jack\" a[100] = \"aa\" \u5220\u9664 // \u5220\u9664\u4e0d\u5b58\u5728\u7684 key \u4e5f\u4e0d\u4f1a\u51fa\u9519 delete(a, 1) \u67e5\u627e // val:\u503c ok:\u662f\u5426\u627e\u5230 val, ok := a[3] fmt.Println(ok, val) \u904d\u5386 a1 := make(map[string]string) a1[\"1\"] = \"a\" a1[\"2\"] = \"b\" a1[\"3\"] = \"c\" a1[\"4\"] = \"d\" for k, v := range a1 { fmt.Println(k, v) } \u957f\u5ea6 fmt.Println(len(a1), \"map\u7684\u957f\u5ea6\") \u6ce8\u610f map\u662f\u5f15\u7528\u7c7b\u578b map\u4f1a\u81ea\u52a8\u6269\u5bb9 map\u7684 value \u7ecf\u5e38\u662fstruct","title":"\u5e38\u7528\u6570\u636e\u7ed3\u6784"},{"location":"base/go/0base/2data_structure/#_1","text":"","title":"\u6570\u7ec4"},{"location":"base/go/0base/2data_structure/#_2","text":"\u5b58\u653e\u591a\u4e2a\u540c\u4e00\u7c7b\u578b\u7684\u6570\u636e","title":"\u4ecb\u7ecd"},{"location":"base/go/0base/2data_structure/#_3","text":"","title":"\u4f7f\u7528"},{"location":"base/go/0base/2data_structure/#_4","text":"var arr1 [3]int","title":"\u58f0\u660e"},{"location":"base/go/0base/2data_structure/#_5","text":"var arr1 [3]int = [3]int{1, 2, 3} fmt.Println(arr1) var arr2 = [5]int{1, 2, 3, 4, 5} fmt.Println(arr2) arr3 := [...]float64{1, 2, 3} fmt.Println(arr3) var arr4 = [...]string{1: \"aa\", 0: \"bb\"} fmt.Println(arr4)","title":"\u56db\u79cd\u521d\u59cb\u5316\u65b9\u6cd5"},{"location":"base/go/0base/2data_structure/#_6","text":"for index, val := range arr4 { fmt.Println(index, val) } for i := 0; i < len(arr4); i++ { fmt.Println(arr4[i]) }","title":"\u904d\u5386"},{"location":"base/go/0base/2data_structure/#_7","text":"1.\u6570\u7ec4\u4e00\u65e6\u58f0\u660e\uff0c\u5176\u957f\u5ea6\u4e0d\u80fd\u53d1\u751f\u6539\u53d8\uff1b\u6570\u7ec4\u521b\u5efa\u540e\uff0c\u6ca1\u6709\u8d4b\u503c\uff0c\u4f1a\u6709\u9ed8\u8ba4\u503c 2.go \u8bed\u8a00\u4e2d\u6570\u7ec4\u662f\u503c\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u5f15\u7528\u7c7b\u578b 3.\u4f20\u9012\u53c2\u6570\u9700\u8981\u6307\u5b9a\u6570\u7ec4\u957f\u5ea6 // [3]int [4]int \u8ba4\u4e3a\u662f\u4e0d\u540c\u6570\u636e\u7c7b\u578b func valueTest(arr [3]int) { arr[0] = 1 }","title":"\u6ce8\u610f"},{"location":"base/go/0base/2data_structure/#_8","text":"func main() { var arr = [2][2]int{{1, 2}, {3, 4}} fmt.Println(arr) // \u53ea\u6709\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u4e3a... var arr1 = [...][3]int{{1, 2}, {3, 4}} fmt.Println(arr1) }","title":"\u4e8c\u7ef4\u6570\u7ec4"},{"location":"base/go/0base/2data_structure/#_9","text":"","title":"\u5207\u7247"},{"location":"base/go/0base/2data_structure/#_10","text":"","title":"\u57fa\u7840"},{"location":"base/go/0base/2data_structure/#_11","text":"\u6570\u7ec4\u7684\u5207 - make - \u76f4\u63a5\u521d\u59cb\u5316 - \u76f4\u63a5\u58f0\u660e 1 var arr = [5]int{1, 2, 3, 45, 5} slice := arr[2:4] arr[2] = -1 fmt.Println(slice) // \u5143\u7d20\u6570\u91cffmt.Println(len(slice)) // \u5bb9\u91cffmt.Println(cap(slice)) 2 var slice1 []int = make([]int, 2, 10) slice1[0] = 0 slice1[1] = 1 fmt.Println(slice1) 3 fmt.Println(\"\u65b9\u5f0f\u4e09\") var slice2 []float64 = []float64{1, 2, 3} fmt.Println(cap(slice2)) 4 var s []int type slice struct { ptr *[2]int len int cap int } \u5f15\u7528\u4e00\u4e2a\u6570\u7ec4 \u6570\u91cf \u5bb9\u91cf","title":"\u521d\u59cb\u5316"},{"location":"base/go/0base/2data_structure/#_12","text":"for index, value := range slice2 { fmt.Printf(\"---%v:%v \", index, value) }","title":"\u904d\u5386"},{"location":"base/go/0base/2data_structure/#_13","text":"","title":"\u4f7f\u7528"},{"location":"base/go/0base/2data_structure/#_14","text":"var slieceDemo = arr[startIndex: endIndex] \u5305\u542b\u5de6\u8fb9\uff0c\u4e0d\u5305\u542b\u53f3\u8fb9 var slice = arr[0:end] \u53ef\u4ee5\u7b80\u5199 var slice = arr[:end] var slice = arr[start:len(arr)] \u53ef\u4ee5\u7b80\u5199\uff1a var slice = arr[start:] var slice = arr[0:len(arr)] \u53ef\u4ee5\u7b80\u5199: var slice = arr[:] cap \u662f\u4e00\u4e2a\u5185\u7f6e\u51fd\u6570\uff0c\u7528\u4e8e\u7edf\u8ba1\u5207\u7247\u7684\u5bb9\u91cf\uff0c\u5373\u6700\u5927\u53ef\u4ee5\u5b58\u653e\u591a\u5c11\u4e2a\u5143\u7d20\u3002 \u5207\u7247\u4ecd\u7136\u53ef\u4ee5\u5207\u7247 // \u5143\u7d20\u6570\u91cffmt.Println(len(slice))// \u5bb9\u91cffmt.Println(cap(slice))","title":"\u6570\u7ec4\u5207\u7247\u5206\u5272"},{"location":"base/go/0base/2data_structure/#append","text":"\u7528 append \u5185\u7f6e\u51fd\u6570\uff0c\u53ef\u4ee5\u5bf9\u5207\u7247\u8fdb\u884c\u52a8\u6001\u8ffd\u52a0 var arr = [5]int{1, 2, 3, 4, 5} var slice []int = arr[:] fmt.Println(slice)// \u8fd4\u56de slice = append(slice, 10) fmt.Println(slice)","title":"append"},{"location":"base/go/0base/2data_structure/#_15","text":"package mainimport \"fmt\" func main() { var slice1 []int = make([]int, 5) var slice2 []int = make([]int, 10) slice1[0] = 1 copy(slice2, slice1) fmt.Println(slice2) }","title":"\u5207\u7247\u7684\u62f7\u8d1d"},{"location":"base/go/0base/2data_structure/#_16","text":"\u5207\u7247\u662f\u5f15\u7528\u4f20\u9012 string\u5e95\u5c42\u4e5f\u662f\u6570\u7ec4\uff0c\u53ef\u4ee5\u4f7f\u7528\u5207\u7247","title":"\u6ce8\u610f"},{"location":"base/go/0base/2data_structure/#_17","text":"","title":""},{"location":"base/go/0base/2data_structure/#map","text":"","title":"Map\u4f7f\u7528"},{"location":"base/go/0base/2data_structure/#_18","text":"key-value \u7684\u6570\u636e\u7ed3\u6784\uff0c\u7c7b\u4f3c\u4e8e java \u4e2d\u7684 map key \u7684\u7c7b\u578b\uff1abool, \u6570\u5b57\uff0cstring, \u6307\u9488, channel , \u8fd8\u53ef\u4ee5\u662f\u53ea\u5305\u542b\u524d\u9762\u51e0\u4e2a\u7c7b\u578b\u7684 \u63a5\u53e3, \u7ed3\u6784\u4f53, \u6570\u7ec4\uff0c\u901a\u5e38 key \u4e3a int \u3001string \u6ce8\u610f: slice\uff0c map \u8fd8\u6709 function \u4e0d\u53ef\u4ee5\uff0c\u56e0\u4e3a\u8fd9\u51e0\u4e2a\u6ca1\u6cd5\u7528 == \u6765\u5224\u65ad valuetype \u7684\u7c7b\u578b\u548c key \u57fa\u672c\u4e00\u6837\uff0c\u901a\u5e38\u4e3a: \u6570\u5b57(\u6574\u6570,\u6d6e\u70b9\u6570),string,map,struct","title":"\u4ecb\u7ecd"},{"location":"base/go/0base/2data_structure/#_19","text":"","title":"\u4f7f\u7528"},{"location":"base/go/0base/2data_structure/#_20","text":"var map1 map[int]int 1.map \u5728\u4f7f\u7528\u524d\u4e00\u5b9a\u8981make(\u9700\u8981\u5206\u914d\u5185\u5b58) 2.map \u7684 key \u662f\u4e0d\u80fd\u91cd\u590d\uff0cv \u53ef\u4ee5\u91cd\u590d map \u7684 key-value \u662f\u65e0\u5e8f","title":"\u58f0\u660e"},{"location":"base/go/0base/2data_structure/#_21","text":"var map1 map[int]int map1 = make(map[int]int, 10) fmt.Println(map1) map2 := make(map[int]int, 10) fmt.Println(map2) map3 := map[int]int { 1: 1, 2: 2, } fmt.Println(map3)","title":"\u4e09\u79cd\u4f7f\u7528\u65b9\u5f0f"},{"location":"base/go/0base/2data_structure/#map_1","text":"","title":"map\u4e2d\u7684\u65b9\u6cd5"},{"location":"base/go/0base/2data_structure/#_22","text":"var a = make(map[int]string) a[0] = \"matt\" a[1] = \"pony\" a[0] = \"jack\" a[100] = \"aa\"","title":"\u6dfb\u52a0\u548c\u66f4\u65b0"},{"location":"base/go/0base/2data_structure/#_23","text":"// \u5220\u9664\u4e0d\u5b58\u5728\u7684 key \u4e5f\u4e0d\u4f1a\u51fa\u9519 delete(a, 1)","title":"\u5220\u9664"},{"location":"base/go/0base/2data_structure/#_24","text":"// val:\u503c ok:\u662f\u5426\u627e\u5230 val, ok := a[3] fmt.Println(ok, val)","title":"\u67e5\u627e"},{"location":"base/go/0base/2data_structure/#_25","text":"a1 := make(map[string]string) a1[\"1\"] = \"a\" a1[\"2\"] = \"b\" a1[\"3\"] = \"c\" a1[\"4\"] = \"d\" for k, v := range a1 { fmt.Println(k, v) }","title":"\u904d\u5386"},{"location":"base/go/0base/2data_structure/#_26","text":"fmt.Println(len(a1), \"map\u7684\u957f\u5ea6\")","title":"\u957f\u5ea6"},{"location":"base/go/0base/2data_structure/#_27","text":"map\u662f\u5f15\u7528\u7c7b\u578b map\u4f1a\u81ea\u52a8\u6269\u5bb9 map\u7684 value \u7ecf\u5e38\u662fstruct","title":"\u6ce8\u610f"},{"location":"base/go/0base/3func/","text":"\u8ba4\u8bc6 func add(i int, j int) int { return i + j } func \u51fd\u6570\u540d (\u53c2\u6570\u5217\u8868) (\u8fd4\u56de\u503c\u7c7b\u578b\u5217\u8868) \u200b \u51fd\u6570\u4f53 \u53ef\u4ee5\u6709\u8fd4\u56de\u503c\u4e5f\u53ef\u4ee5\u6ca1\u6709 \u5305 \u4ec0\u4e48\u662f\u5305 \u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5bf9\u5e94\u4e00\u4e2a\u5305 \u4f7f\u7528 package db var Ip int = 11 package main import ( // \u5305\u540d\u7684\u8def\u5f84\u662f\u5728 %GOPATH/src\u8def\u5f84\u4e0b\u7684 \"db\" \"fmt\" \"utils\" ) func main() { fmt.Println(\"hello word\") fmt.Println(utils.Add(1, 2)) fmt.Println(db.Ip) } :warning:\u6ce8\u610f\u4e8b\u9879 1.\u6587\u4ef6\u7684\u5305\u540d\u901a\u5e38\u548c\u5b83\u7684\u6587\u4ef6\u5939\u540d\u4e00\u6837 2.\u5305\u7684\u5f15\u5165 import \"utils\" \u63a8\u8350\u8fd9\u79cd import ( \"fmt\" \"utils\" ) \u5173\u4e8e\u5305\u7684\u8def\u5f84\uff1a\u5305\u7684\u8def\u5f84\u662f\u5728 $GOPATH/src \u5f00\u59cb\u627e 3.\u5305\u540d.\u65b9\u6cd5 \u5305\u540d.\u53d8\u91cf \u5927\u5c0f\u5199 \u4e0d\u80fd\u91cd\u590d\u53d8\u91cf\u540d\u6216\u8005\u65b9\u6cd5\u540d 4.\u5305\u540d\u53ef\u4ee5\u8d77\u522b\u540d import tDb \"db\" 5.\u5982\u679c\u60f3\u628a\u4e00\u4e2a.go\u6587\u4ef6\u7f16\u8bd1\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5219\u628a\u8be5\u6587\u4ef6\u5305\u540d\u8bbe\u7f6e\u4e3a main return \u53ea\u6709\u4e00\u4e2a\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u4e0d\u5199 () \u53ef\u4ee5\u7528_\u63a5\u6536\u65b9\u6cd5\u7684\u8fd4\u56de\u503c func add(i int, j int) int { return i + j } func add(i int, j int) (int, int) { return i + j, 1 } func main() { res, _ = add(1, 2) } \u51fd\u6570\u6ce8\u610f\u7ec6\u8282 1.\u53c2\u6570\u503c \u3001\u5f15\u7528 \u7c7b\u578b\u53ef\u4ee5\u662f\u503c\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u662f\u5f15\u7528\u7c7b\u578b \u57fa\u7840\u6570\u636e\u7c7b\u578b\u3001\u6570\u7ec4\u4f7f\u7528\u503c\u5f97\u4f20\u9012\uff0c\u5f15\u7528\u7c7b\u578b\u4f7f\u7528\u5f15\u7528\u4f20\u9012 1)\u503c\u7c7b\u578b\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b int \u7cfb\u5217, float \u7cfb\u5217, bool, string \u3001\u6570\u7ec4\u548c\u7ed3\u6784\u4f53 struct 2)\u5f15\u7528\u7c7b\u578b\uff1a\u6307\u9488\u3001slice \u5207\u7247\u3001map\u3001\u7ba1\u9053 chan\u3001interface \u7b49\u90fd\u662f\u5f15\u7528\u7c7b\u578b 2.\u652f\u6301\u53ef\u53d8\u53c2\u6570 func test4(args... int) () { fmt.Println(args) fmt.Println(len(args)) } func main() { test4(1, 2, 3) } 3.\u652f\u6301\u5bf9\u65b9\u6cd5\u8fd4\u56de\u503c\u547d\u540d \u53ef\u4ee5\u4e0d\u5199 return sum // \u76f4\u63a5\u5bf9\u8fd4\u56de\u503c\u547d\u540d func test3(i int, j int) (sum int) { sum = i + j return } 4.\u4f7f\u7528 _\u63a5\u6536\u65b9\u6cd5\u7684\u8fd4\u56de\u503c 5.\u51fd\u6570 \u6ce8\u610f\u53d8\u91cf\u7684\u8bbf\u95ee\u8303\u56f4\uff0c\u51fd\u6570\u5185\u58f0\u660e\u7684\uff0c\u51fd\u6570\u5916\u5c31\u4e0d\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5982\u679c\u51fd\u6570\u5185\u548c\u51fd\u6570\u58f0\u660e\u76f8\u540c\u7684\u53d8\u91cf\uff0c\u5219\u51fd\u6570\u5185\u4f7f\u7528\u51fd\u6570\u5185\u58f0\u660e\u7684\u53d8\u91cf \u5927\u5c0f\u5199\u63a7\u5236\u8bbf\u95ee\u8303\u56f4 \u4e0d\u652f\u6301\u91cd\u8f7d 6.\u51fd\u6570\u53ef\u4ee5\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570 a := test1 fmt.Println(a(1)) func test2(test1 func(int) (int, int), n int) (){ fmt.Println(test1(1)) return } init\u51fd\u6570 main\u51fd\u6570\u6267\u884c\u4e4b\u524d\u88ab\u6267\u884c func init() { // main\u51fd\u6570\u6267\u884c\u4e4b\u524d\u88ab\u6267\u884c fmt.Println(\"init function\") } \u53d8\u91cf\u5b9a\u4e49 -> init \u51fd\u6570 -> main \u51fd\u6570 \u5982\u679c\u5f15\u7528\u4e86\u5176\u4ed6\u6587\u4ef6\uff0c\u5148\u6267\u884c\u5176\u4ed6\u6587\u4ef6\u7684 \u533f\u540d\u51fd\u6570 \u8ba4\u77e5 \u533f\u540d\u51fd\u6570\uff1a\u6ca1\u6709\u540d\u5b57\u7684\u51fd\u6570 \u4f7f\u7528 1.\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u5c31\u4f7f\u7528 // \u5b9a\u4e49\u7684\u65f6\u5019\u5c31\u4f7f\u7528 res := func(i int, j int) int { return i + j }(1, 2) fmt.Println(res) 2.\u5c06\u51fd\u6570\u8d4b\u503c\u4e00\u4e2a\u53d8\u91cf // \u5c06\u8be5\u51fd\u6570\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff0c\u901a\u8fc7\u53d8\u91cf\u6765\u8c03\u7528 add := func(i int, j int) int { return i + j } fmt.Println(add(1, 2)) \u95ed\u5305 \u8ba4\u8bc6 \u95ed\u5305\uff1a\u4e00\u4e2a\u51fd\u6570\u548c\u4e0e\u5176\u76f8\u5173\u7684\u5f15\u7528\u73af\u5883\u7ec4\u5408\u7684\u4e00\u4e2a\u6574\u4f53(\u5b9e\u4f53) \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570 \u4f7f\u7528 func makeSuffix(suffix string) func(string) string { return func(fileName string) string { if strings.HasSuffix(fileName, suffix) { return fileName } return fileName + suffix } } \u8fd4\u56de\u7684\u51fd\u6570\u548csuffix\u7ec4\u6210\u4e00\u4e2a\u6574\u4f53\uff0c\u8fd4\u56de\u7684\u51fd\u6570\u5bf9suffix\u8fdb\u884c\u64cd\u4f5c func main() { b := makeSuffix(\".jpg\") fmt.Println(b(\"aaa.js\")) fmt.Println(b(\"aa.jpg\")) } defer\u4f7f\u7528 func testDefer(n int) int { // \u503c\u7684\u62f7\u8d1d defer fmt.Println(\"defer\" + fmt.Sprintln(n)) n++ fmt.Println(\"111\") return 1 } defer fmt.Println(\"defer\" + fmt.Sprintln(n)) \u8fd9\u6837\u4f1a\u4f9d\u6b21\u538b\u5165\u6808\uff0c\u5e76\u5728\u8be5\u51fd\u6570\u6267\u884c\u5b8c\u540e\u5728\u4ece\u6808\u53d6\u51fa\uff0c\u540c\u65f6n\u4e5f\u662f\u503c\u7684\u62f7\u8d1d","title":"\u51fd\u6570"},{"location":"base/go/0base/3func/#_1","text":"func add(i int, j int) int { return i + j } func \u51fd\u6570\u540d (\u53c2\u6570\u5217\u8868) (\u8fd4\u56de\u503c\u7c7b\u578b\u5217\u8868) \u200b \u51fd\u6570\u4f53 \u53ef\u4ee5\u6709\u8fd4\u56de\u503c\u4e5f\u53ef\u4ee5\u6ca1\u6709","title":"\u8ba4\u8bc6"},{"location":"base/go/0base/3func/#_2","text":"","title":"\u5305"},{"location":"base/go/0base/3func/#_3","text":"\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5bf9\u5e94\u4e00\u4e2a\u5305","title":"\u4ec0\u4e48\u662f\u5305"},{"location":"base/go/0base/3func/#_4","text":"package db var Ip int = 11 package main import ( // \u5305\u540d\u7684\u8def\u5f84\u662f\u5728 %GOPATH/src\u8def\u5f84\u4e0b\u7684 \"db\" \"fmt\" \"utils\" ) func main() { fmt.Println(\"hello word\") fmt.Println(utils.Add(1, 2)) fmt.Println(db.Ip) }","title":"\u4f7f\u7528"},{"location":"base/go/0base/3func/#warning","text":"","title":":warning:\u6ce8\u610f\u4e8b\u9879"},{"location":"base/go/0base/3func/#1","text":"","title":"1.\u6587\u4ef6\u7684\u5305\u540d\u901a\u5e38\u548c\u5b83\u7684\u6587\u4ef6\u5939\u540d\u4e00\u6837"},{"location":"base/go/0base/3func/#2","text":"import \"utils\" \u63a8\u8350\u8fd9\u79cd import ( \"fmt\" \"utils\" ) \u5173\u4e8e\u5305\u7684\u8def\u5f84\uff1a\u5305\u7684\u8def\u5f84\u662f\u5728 $GOPATH/src \u5f00\u59cb\u627e","title":"2.\u5305\u7684\u5f15\u5165"},{"location":"base/go/0base/3func/#3","text":"\u5927\u5c0f\u5199 \u4e0d\u80fd\u91cd\u590d\u53d8\u91cf\u540d\u6216\u8005\u65b9\u6cd5\u540d","title":"3.\u5305\u540d.\u65b9\u6cd5 \u5305\u540d.\u53d8\u91cf"},{"location":"base/go/0base/3func/#4","text":"import tDb \"db\"","title":"4.\u5305\u540d\u53ef\u4ee5\u8d77\u522b\u540d"},{"location":"base/go/0base/3func/#5go-main","text":"","title":"5.\u5982\u679c\u60f3\u628a\u4e00\u4e2a.go\u6587\u4ef6\u7f16\u8bd1\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5219\u628a\u8be5\u6587\u4ef6\u5305\u540d\u8bbe\u7f6e\u4e3a main"},{"location":"base/go/0base/3func/#return","text":"\u53ea\u6709\u4e00\u4e2a\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u4e0d\u5199 () \u53ef\u4ee5\u7528_\u63a5\u6536\u65b9\u6cd5\u7684\u8fd4\u56de\u503c func add(i int, j int) int { return i + j } func add(i int, j int) (int, int) { return i + j, 1 } func main() { res, _ = add(1, 2) }","title":"return"},{"location":"base/go/0base/3func/#_5","text":"","title":"\u51fd\u6570\u6ce8\u610f\u7ec6\u8282"},{"location":"base/go/0base/3func/#1_1","text":"\u7c7b\u578b\u53ef\u4ee5\u662f\u503c\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u662f\u5f15\u7528\u7c7b\u578b \u57fa\u7840\u6570\u636e\u7c7b\u578b\u3001\u6570\u7ec4\u4f7f\u7528\u503c\u5f97\u4f20\u9012\uff0c\u5f15\u7528\u7c7b\u578b\u4f7f\u7528\u5f15\u7528\u4f20\u9012 1)\u503c\u7c7b\u578b\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b int \u7cfb\u5217, float \u7cfb\u5217, bool, string \u3001\u6570\u7ec4\u548c\u7ed3\u6784\u4f53 struct 2)\u5f15\u7528\u7c7b\u578b\uff1a\u6307\u9488\u3001slice \u5207\u7247\u3001map\u3001\u7ba1\u9053 chan\u3001interface \u7b49\u90fd\u662f\u5f15\u7528\u7c7b\u578b","title":"1.\u53c2\u6570\u503c \u3001\u5f15\u7528"},{"location":"base/go/0base/3func/#2_1","text":"func test4(args... int) () { fmt.Println(args) fmt.Println(len(args)) } func main() { test4(1, 2, 3) }","title":"2.\u652f\u6301\u53ef\u53d8\u53c2\u6570"},{"location":"base/go/0base/3func/#3_1","text":"\u53ef\u4ee5\u4e0d\u5199 return sum // \u76f4\u63a5\u5bf9\u8fd4\u56de\u503c\u547d\u540d func test3(i int, j int) (sum int) { sum = i + j return }","title":"3.\u652f\u6301\u5bf9\u65b9\u6cd5\u8fd4\u56de\u503c\u547d\u540d"},{"location":"base/go/0base/3func/#4-_","text":"","title":"4.\u4f7f\u7528 _\u63a5\u6536\u65b9\u6cd5\u7684\u8fd4\u56de\u503c"},{"location":"base/go/0base/3func/#5","text":"\u6ce8\u610f\u53d8\u91cf\u7684\u8bbf\u95ee\u8303\u56f4\uff0c\u51fd\u6570\u5185\u58f0\u660e\u7684\uff0c\u51fd\u6570\u5916\u5c31\u4e0d\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5982\u679c\u51fd\u6570\u5185\u548c\u51fd\u6570\u58f0\u660e\u76f8\u540c\u7684\u53d8\u91cf\uff0c\u5219\u51fd\u6570\u5185\u4f7f\u7528\u51fd\u6570\u5185\u58f0\u660e\u7684\u53d8\u91cf \u5927\u5c0f\u5199\u63a7\u5236\u8bbf\u95ee\u8303\u56f4 \u4e0d\u652f\u6301\u91cd\u8f7d","title":"5.\u51fd\u6570"},{"location":"base/go/0base/3func/#6","text":"a := test1 fmt.Println(a(1)) func test2(test1 func(int) (int, int), n int) (){ fmt.Println(test1(1)) return }","title":"6.\u51fd\u6570\u53ef\u4ee5\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570"},{"location":"base/go/0base/3func/#init","text":"main\u51fd\u6570\u6267\u884c\u4e4b\u524d\u88ab\u6267\u884c func init() { // main\u51fd\u6570\u6267\u884c\u4e4b\u524d\u88ab\u6267\u884c fmt.Println(\"init function\") } \u53d8\u91cf\u5b9a\u4e49 -> init \u51fd\u6570 -> main \u51fd\u6570 \u5982\u679c\u5f15\u7528\u4e86\u5176\u4ed6\u6587\u4ef6\uff0c\u5148\u6267\u884c\u5176\u4ed6\u6587\u4ef6\u7684","title":"init\u51fd\u6570"},{"location":"base/go/0base/3func/#_6","text":"","title":"\u533f\u540d\u51fd\u6570"},{"location":"base/go/0base/3func/#_7","text":"\u533f\u540d\u51fd\u6570\uff1a\u6ca1\u6709\u540d\u5b57\u7684\u51fd\u6570","title":"\u8ba4\u77e5"},{"location":"base/go/0base/3func/#_8","text":"1.\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u5c31\u4f7f\u7528 // \u5b9a\u4e49\u7684\u65f6\u5019\u5c31\u4f7f\u7528 res := func(i int, j int) int { return i + j }(1, 2) fmt.Println(res) 2.\u5c06\u51fd\u6570\u8d4b\u503c\u4e00\u4e2a\u53d8\u91cf // \u5c06\u8be5\u51fd\u6570\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff0c\u901a\u8fc7\u53d8\u91cf\u6765\u8c03\u7528 add := func(i int, j int) int { return i + j } fmt.Println(add(1, 2))","title":"\u4f7f\u7528"},{"location":"base/go/0base/3func/#_9","text":"","title":"\u95ed\u5305"},{"location":"base/go/0base/3func/#_10","text":"\u95ed\u5305\uff1a\u4e00\u4e2a\u51fd\u6570\u548c\u4e0e\u5176\u76f8\u5173\u7684\u5f15\u7528\u73af\u5883\u7ec4\u5408\u7684\u4e00\u4e2a\u6574\u4f53(\u5b9e\u4f53) \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570","title":"\u8ba4\u8bc6"},{"location":"base/go/0base/3func/#_11","text":"func makeSuffix(suffix string) func(string) string { return func(fileName string) string { if strings.HasSuffix(fileName, suffix) { return fileName } return fileName + suffix } } \u8fd4\u56de\u7684\u51fd\u6570\u548csuffix\u7ec4\u6210\u4e00\u4e2a\u6574\u4f53\uff0c\u8fd4\u56de\u7684\u51fd\u6570\u5bf9suffix\u8fdb\u884c\u64cd\u4f5c func main() { b := makeSuffix(\".jpg\") fmt.Println(b(\"aaa.js\")) fmt.Println(b(\"aa.jpg\")) }","title":"\u4f7f\u7528"},{"location":"base/go/0base/3func/#defer","text":"func testDefer(n int) int { // \u503c\u7684\u62f7\u8d1d defer fmt.Println(\"defer\" + fmt.Sprintln(n)) n++ fmt.Println(\"111\") return 1 } defer fmt.Println(\"defer\" + fmt.Sprintln(n)) \u8fd9\u6837\u4f1a\u4f9d\u6b21\u538b\u5165\u6808\uff0c\u5e76\u5728\u8be5\u51fd\u6570\u6267\u884c\u5b8c\u540e\u5728\u4ece\u6808\u53d6\u51fa\uff0c\u540c\u65f6n\u4e5f\u662f\u503c\u7684\u62f7\u8d1d","title":"defer\u4f7f\u7528"},{"location":"base/go/0base/4struct/","text":"\u7ed3\u6784\u4f53 \u6982\u8ff0 go \u8bed\u8a00\u5e76\u6ca1\u6709\u7c7b\uff0c\u800c\u91c7\u7528\u7ed3\u6784\u4f53\uff0c\u4ecd\u7136\u6709\u9762\u5411\u5bf9\u8c61\u4e2d\u5c01\u88c5\u7ee7\u627f\u591a\u6001\u7b49\u7279\u6027\u3002 \u7ed3\u6784\u4f53\u4f7f\u7528 \u58f0\u660e\u7ed3\u6784\u4f53 type \u7ed3\u6784\u4f53\u540d struct { \u5b57\u6bb5\u540d \u7c7b\u578b } type Person struct { Name string Age int // \u4e0d\u662f\u4e00\u4e2a\u5305\u8bbf\u95ee\u4e0d\u5230 p *int slice []int map1 map[string]string } \u7ed3\u6784\u4f53\u662f\u503c\u7c7b\u578b \u521b\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u540e\uff0c\u5982\u679c\u6ca1\u6709\u7ed9\u5b57\u6bb5\u8d4b\u503c\uff0c\u90fd\u4f1a\u6709\u96f6\u503c\uff0c\u5982\u679c\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u5728\u6ca1\u6709\u8fdb\u884c\u5206\u914d\u5185\u5b58\u5219\u5b83\u7684\u503c\u4e3a nil \u3002 \u7ed3\u6784\u4f53\u521d\u59cb\u5316 func main() { // 1 var person Person person.Age = 11 person.Name = \"matt\" fmt.Println(person) //2 var p1 = Person{} fmt.Println(p1) // 3 var p3 *Person = new(Person) (*p3).Name = \"33\" p3.Name = \"44\u4f18\u5316\u7b49\u4ef7\u4e8e\u4e0a\u9762\u7684\" fmt.Println(*p3) // 4 var p4 *Person = &Person{} p4.Age = 111 fmt.Println(*p4) } \u521b\u5efa\u7ed3\u6784\u4f53\u53d8\u91cf\u4e5f\u53ef\u4ee5\u6307\u5b9a\u5b57\u6bb5\u503c func main() { var c Computer = Computer{ Age: 1, Name: \"matt\", } fmt.Println(c) } \u53ef\u4ee5\u53ea\u5199\u90e8\u5206\u5b57\u6bb5\uff0c\u8fd9\u6837\u6307\u5b9a\u5b57\u6bb5\u53ef\u4ee5\u4e0d\u6309\u7ed3\u6784\u4f53\u4e2d\u7684\u987a\u5e8f\uff0c\u5426\u5219\u5c31\u8981\u6309\u7ed3\u6784\u4f53\u4e2d\u7684\u987a\u5e8f\u3002 \u7ed3\u6784\u4f53\u4f7f\u7528\u6ce8\u610f 1.\u7ed3\u6784\u4f53\u6240\u6709\u5b57\u6bb5\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u7684 2.struct \u7684\u6bcf\u4e2a\u5b57\u6bb5\u4e0a\uff0c\u53ef\u4ee5\u5199\u4e0a\u4e00\u4e2a tag, \u8be5 tag \u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u673a\u5236\u83b7\u53d6\uff0c\u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\u5c31\u662f\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002 import \"fmt\" import \"encoding/json\" type A struct { age int num int } type B struct { age int num int } type C struct { Name string `json:\"name\"` } func main() { var a A var b B a.age = 1 // \u8981\u6c42\u5b57\u6bb5\u4e00\u81f4 b = B(a) var c C c.Name = \"hello ma\" str1, _ := json.Marshal(c) fmt.Println(string(str1)) fmt.Println(b) } 3.\u4fe9\u4e2a\u7ed3\u6784\u4f53\u8fdb\u884c\u8f6c\u6362\u7684\u65f6\u5019\uff0c\u8981\u6c42\u8fd9\u4fe9\u4e2a\u7ed3\u6784\u4f53\u9700\u8981\u6709\u76f8\u540c\u7684\u5b57\u6bb5 a = B(b) 4.\u5bf9\u7ed3\u6784\u4f53\u8fdb\u884c\u91cd\u65b0\u5b9a\u4e49\uff0c golang \u8ba4\u4e3a\u662f\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b type P Person \u65b9\u6cd5 \u4f7f\u7528 import \"fmt\" type Person struct { Age int } func (p Person) getAge() int { return p.Age } func main() { var p Person p.Age = 18 fmt.Println(p.getAge()) } \u8be5\u65b9\u6cd5\u548c Person \u7ed3\u6784\u4f53\u8fdb\u884c\u7ed1\u5b9a \u65b9\u6cd5\u8fdb\u884c\u8c03\u7528\u4f1a\u628a\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u53d8\u91cf\u8d4b\u503c\u7ed9\u8be5\u65b9\u6cd5 \u65b9\u6cd5\u4f7f\u7528\u6ce8\u610f 1. \u7ed3\u6784\u4f53\u7c7b\u578b\u662f\u503c\u7c7b\u578b\uff0c\u5728\u65b9\u6cd5\u8c03\u7528\u4e2d\uff0c\u9075\u5b88\u503c\u7c7b\u578b\u7684\u4f20\u9012\u673a\u5236\uff0c\u662f\u503c\u62f7\u8d1d\u4f20\u9012\u65b9\u5f0f \u65b9\u6cd5\u4e5f\u53ef\u4ee5\u63a5\u6536\u7ed3\u6784\u4f53\u6307\u9488,\u5f15\u7528\u4f20\u9012 \u65b9\u6cd5\u63a5\u6536\u7c7b\u578b\u662f\u4ec0\u4e48\u5c31\u662f\u4ec0\u4e48\u4f20\u9012 func (circle *Circle) test() { // (*circle).R // \u8fdb\u884c\u4e86\u4f18\u5316 fmt.Println(circle.R) } 2.\u65b9\u6cd5\u4e0d\u4ec5\u53ef\u4ee5\u4f5c\u7528\u4e8e\u7ed3\u6784\u4f53\uff0c\u8fd8\u53ef\u4ee5\u4f5c\u7528\u4e8e int,string\u7b49 import \"fmt\" func (i integer) testInt() { fmt.Println(i) } type integer int func main() { var j integer = 10 j.testInt() } 3.\u65b9\u6cd5\u7684\u8bbf\u95ee\u8303\u56f4\u63a7\u5236\u7684\u89c4\u5219\uff0c\u548c\u51fd\u6570\u4e00\u6837\u3002\u65b9\u6cd5\u540d\u9996\u5b57\u6bcd\u5c0f\u5199\uff0c\u53ea\u80fd\u5728\u672c\u5305\u8bbf\u95ee\uff0c\u65b9\u6cd5\u9996\u5b57\u6bcd \u5927\u5199\uff0c\u53ef\u4ee5\u5728\u672c\u5305\u548c\u5176\u5b83\u5305\u8bbf\u95ee\u3002 4.\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u5b9e\u73b0\u4e86 String()\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u90a3\u4e48 fmt.Println \u9ed8\u8ba4\u4f1a\u8c03\u7528\u8fd9\u4e2a\u53d8\u91cf\u7684 String()\u8fdb\u884c\u8f93\u51fa\uff0c\u7c7b\u4f3c\u4e8e java \u4e2d\u7684 toString() \u65b9\u6cd5 func (c Computer) String() string { str := fmt.Sprintf(\"Name=%s Age=%d\", c.Name, c.Age) return str } \u9762\u5411\u5bf9\u8c61\u7279\u6027 \u5c01\u88c5 \u6982\u5ff5 \u5c06\u5bf9\u8c61\u5c5e\u6027\u9690\u85cf\u8d77\u6765\uff0c\u5c5e\u6027\u7684\u64cd\u4f5c\u53ea\u53ef\u4ee5\u901a\u8fc7\u88ab\u6388\u6743\u7684\u65b9\u6cd5\u3002 \u4f7f\u7528 \u7ed3\u6784\u4f53\u5c5e\u6027\u3001\u65b9\u6cd5\u9996\u5b57\u6bcd\u5c0f\u5199\uff0c\u5176\u4ed6\u5305\u5c31\u4e0d\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5f53\u524d\u5305\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u3002 \u4e3a\u7ed3\u6784\u4f53\u63d0\u4f9b\u4e00\u4e2a\u521b\u5efa\u7684\u51fd\u6570\uff0c\u76f8\u5f53\u4e8ejava\u4e2d\u7684\u6784\u9020\u51fd\u6570\u3002 \u7f16\u5199set,get \u65b9\u6cd5\u3002 package main type Person struct { name string age int } func NewPerson() Person { var person = Person{} return person } func (p *Person) SetName(name string) { p.name = name } func (p *Person) GetName() string { return p.name } \u7ee7\u627f \u6982\u8ff0 \u5b50\u7c7b\u5177\u6709\u7236\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5 \u4f7f\u7528 type S struct { Name string Age int } type X struct { S } func (s S) showInfo() { fmt.Println(s.Name) } func (x *X) showInfo() { fmt.Printf(\"x---name=%v age=%v\\n\",x.Name, x.Age) } func main() { var x = &X{} x.S.Name = \"matt\" x.S.Name = \"aa\" x.Name = \"ma\" x.S.showInfo() x1 := X{ S{ Name: \"aa\", Age: 11, }, } fmt.Println(x1) } \u7ee7\u627f\u4f7f\u7528\u6ce8\u610f \u7ed3\u6784\u4f53\u53ef\u4ee5\u4f7f\u7528\u5d4c\u5957\u533f\u540d\u7ed3\u6784\u4f53\u6240\u6709\u7684\u5b57\u6bb5\u548c\u65b9\u6cd5(\u9996\u5b57\u6bcd\u5927\u5c0f\u5199\u90fd\u53ef\u4ee5\u83b7\u5f97) \u7ed3\u6784\u4f53\u8bbf\u95ee\u53ef\u4ee5\u7b80\u5316 func main() { var x = &X{} x.S.Name = \"matt\" // \u5bf9\u4e0a\u9762\u8fdb\u884c\u7b80\u5316 x.Name = \"ma\" x.S.showInfo() } 1.\u4e0a\u8ff0Name\u5b57\u6bb5\uff0c\u7f16\u8bd1\u5668\u9996\u5148\u4f1a\u4ece X \u4e2d\u67e5\u627e\u8be5\u5c5e\u6027\uff0c\u627e\u4e0d\u5230\u5728\u4ece\u4e0dS\u4e2d\u627e\uff0c\u6700\u540e\u627e\u4e0d\u5230\u5219\u62a5\u9519\u3002 \u5f53\u7ed3\u6784\u4f53\u548c\u533f\u540d\u7ed3\u6784\u4f53\u6709\u76f8\u540c\u7684\u5b57\u6bb5\u6216\u8005\u65b9\u6cd5\u65f6\uff0c\u7f16\u8bd1\u5668\u91c7\u7528\u5c31\u8fd1\u8bbf\u95ee\u539f\u5219\u8bbf\u95ee\uff0c\u5982\u5e0c\u671b\u8bbf\u95ee \u533f\u540d\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\u548c\u65b9\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7\u533f\u540d\u7ed3\u6784\u4f53\u540d\uff08x.S.Name\uff09\u6765\u533a\u5206 2.\u7ed3\u6784\u4f53\u5d4c\u5165\u4e24\u4e2a(\u6216\u591a\u4e2a)\u533f\u540d\u7ed3\u6784\u4f53\uff0c\u5982\u4e24\u4e2a\u533f\u540d\u7ed3\u6784\u4f53\u6709\u76f8\u540c\u7684\u5b57\u6bb5\u548c\u65b9\u6cd5(\u540c\u65f6\u7ed3\u6784\u4f53\u672c\u8eab \u6ca1\u6709\u540c\u540d\u7684\u5b57\u6bb5\u548c\u65b9\u6cd5)\uff0c\u5728\u8bbf\u95ee\u65f6\uff0c\u5c31\u5fc5\u987b\u660e\u786e\u6307\u5b9a\u533f\u540d\u7ed3\u6784\u4f53\u540d\u5b57\uff0c\u5426\u5219\u7f16\u8bd1\u62a5\u9519\u3002 3.\u5982\u679c\u4e00\u4e2a struct \u5d4c\u5957\u4e86\u4e00\u4e2a\u6709\u540d\u7ed3\u6784\u4f53\uff0c\u8fd9\u79cd\u6a21\u5f0f\u5c31\u662f\u7ec4\u5408\uff0c\u5982\u679c\u662f\u7ec4\u5408\u5173\u7cfb\uff0c\u90a3\u4e48\u5728\u8bbf\u95ee\u7ec4\u5408 \u7684\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\u6216\u65b9\u6cd5\u65f6\uff0c\u5fc5\u987b\u5e26\u4e0a\u7ed3\u6784\u4f53\u7684\u540d\u5b57 \u5b57\u6bb5\u9700\u8981\u6307\u5b9a \u65b9\u6cd5\u4e0d\u9700\u8981\u6307\u5b9a type A struct { Name string } type B struct { a A } func main() { var b B = B{} b.a.Name = \"matt\" fmt.Println(b) } \u53ef\u4ee5\u5728\u521b\u5efa\u7ed3\u6784\u4f53\u53d8\u91cf\u65f6\u6307\u5b9a\u533f\u540d\u7ed3\u6784\u4f53\u503c var a A = B{ B{ Name: \"matt sir\" } } package main import \"fmt\" type F1 struct { Name string } type S1 struct { F1 Age int } func main() { s1 := S1{ Age: 11, F1: F1{ Name:\"matt\", }, } fmt.Println(s1) } \u63a5\u53e3 \u4f7f\u7528 type I interface { start() } type A struct { } func (a *A) start() { fmt.Println(\"A \u5f00\u59cb...\") } \u7ed3\u6784\u4f53 A \u5b9e\u73b0\u63a5\u53e3 I \u4f7f\u7528\u63a5\u53e3\u6ce8\u610f 1.\u63a5\u53e3\u4e2d\u4e0d\u53ef\u4ee5\u6709\u53d8\u91cf,\u53ea\u6709\u65b9\u6cd5\uff0c\u63a5\u53e3\u4e2d\u6240\u6709\u7684\u65b9\u6cd5\u90fd\u6ca1\u6709\u5b9e\u73b0 2.\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7c7b\u578b\uff08\u5305\u62ec\u7ed3\u6784\u4f53\uff09\u5b9e\u73b0\u4e86\u4e00\u4e2a\u63a5\u53e3\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u5c31\u8ba4\u4e3a\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3 3.\u63a5\u53e3\u672c\u8eab\u4e0d\u80fd\u521b\u5efa\u5b9e\u4f8b,\u4f46\u662f\u53ef\u4ee5\u6307\u5411\u4e00\u4e2a\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\u7684\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u53d8\u91cf(\u5b9e\u4f8b) interface \u7c7b\u578b\u9ed8\u8ba4\u662f\u4e00\u4e2a\u6307\u9488(\u5f15\u7528\u7c7b\u578b)\uff0c\u5982\u679c\u6ca1\u6709\u5bf9 interface \u521d\u59cb\u5316\u5c31\u4f7f\u7528\uff0c\u90a3\u4e48\u4f1a\u8f93\u51fa nil // I\u662f\u63a5\u53e3 s \u662fS\u7684\u5b9e\u4f8b\uff0cS\u5b9e\u73b0I var s I 4.\u4e00\u4e2a\u63a5\u53e3\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u63a5\u53e3\uff0c\u6bd4\u5982A\u63a5\u53e3\u7ee7\u627fB\uff0cC, \u5982\u679c\u5b9e\u73b0A\u63a5\u53e3\uff0c\u90a3\u4e48\u5c31\u8981\u628aA,B,C\u4e2d\u6240\u6709\u65b9\u6cd5\u5b9e\u73b0\u3002 5.\u7a7a\u63a5\u53e3\u662f\u6ca1\u6709\u65b9\u6cd5\uff0c\u5373\u4efb\u4f55\u53d8\u91cf\u5b9e\u73b0\u4e86\u7a7a\u63a5\u53e3 \u5b9e\u73b0\u548c\u7ee7\u627f \u7ee7\u627f\u7684\u4ef7\u503c\u4e3b\u8981\u5728\u4e8e\uff1a\u89e3\u51b3\u4ee3\u7801\u7684\u590d\u7528\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 \u63a5\u53e3\u7684\u4ef7\u503c\u4e3b\u8981\u5728\u4e8e\uff1a\u8bbe\u8ba1\uff0c\u8bbe\u8ba1\u597d\u5404\u79cd\u89c4\u8303(\u65b9\u6cd5)\uff0c\u8ba9\u5176\u5b83\u81ea\u5b9a\u4e49\u7c7b\u578b\u53bb\u5b9e\u73b0\u8fd9\u4e9b\u65b9\u6cd5 \u591a\u6001 \u591a\u6001\u53c2\u6570\uff1a \u4e00\u4e2a\u65b9\u6cd5\u4e2d\u7684\u4e00\u4e2a\u53c2\u6570\u662fI\u7c7b\u578b\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u63a5\u6536\u5b9e\u73b0I\u7c7b\u578b\u7684\u6240\u6709\u7c7b \u591a\u6001\u6570\u7ec4 \u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684I\u7c7b\u578b\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u63a5\u6536\u5b9e\u73b0I\u7c7b\u578b\u7684\u6240\u6709\u7c7b \u7c7b\u578b\u65ad\u8a00 \u6982\u8ff0 \u4e00\u4e2a\u53d8\u91cf\u77e5\u9053\u4ed6\u662f\u67d0\u4e00\u4e2a\u63a5\u53e3\u7c7b\u578b\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u5b83\u662f\u54ea\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\uff0c\u6240\u4ee5\u4f7f\u7528\u65ad\u8a00\u3002 \u4f7f\u7528 func main() { var a interface{} var b B = B{} a = b c, ok := a.(B) fmt.Println(ok) fmt.Println(c) } \u5176\u4ed6 \u53cd\u5f15\u5b57\u6bb5 type User struct { Id int64 `json:\"id\"` Name string `json:\"name\"` Age int64 `json:\"age\"` // omitempty \u5982\u679c\u4e0d\u8bbe\u7f6e\u8fd9\u4e2a\u5b57\u6bb5\u5c31\u4e0d\u4f1a\u8f93\u51fa // \u4e0d\u52a0omitempty\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\u8fd9\u4e2a\u5b57\u6bb5\u4e5f\u4f1a\u8f93\u51fa\u9ed8\u8ba4\u503c H string `json:\"h,omitempty\"` } get: \u5f97\u5230\uff0c\u83b7\u5f97 select\uff1a\u9009\u62e9 find\uff1a\u5f3a\u8c03\u627e\u7684\u7ed3\u679c\u3002 search\uff1a\u5f3a\u8c03\u627e\u7684\u8fc7\u7a0b\u3002 \u6211\u7528\u4e00\u53e5\u8bdd\u8ba9\u4f60\u660e\u767d\u533a\u522b\u3002\u5148SEARCH\uff0c\u518dFIND(OUT\uff09\uff0c\u518dSELECT\uff0c\u6700\u540eGET","title":"\u7ed3\u6784\u4f53"},{"location":"base/go/0base/4struct/#_1","text":"","title":"\u7ed3\u6784\u4f53"},{"location":"base/go/0base/4struct/#_2","text":"go \u8bed\u8a00\u5e76\u6ca1\u6709\u7c7b\uff0c\u800c\u91c7\u7528\u7ed3\u6784\u4f53\uff0c\u4ecd\u7136\u6709\u9762\u5411\u5bf9\u8c61\u4e2d\u5c01\u88c5\u7ee7\u627f\u591a\u6001\u7b49\u7279\u6027\u3002","title":"\u6982\u8ff0"},{"location":"base/go/0base/4struct/#_3","text":"","title":"\u7ed3\u6784\u4f53\u4f7f\u7528"},{"location":"base/go/0base/4struct/#_4","text":"type \u7ed3\u6784\u4f53\u540d struct { \u5b57\u6bb5\u540d \u7c7b\u578b } type Person struct { Name string Age int // \u4e0d\u662f\u4e00\u4e2a\u5305\u8bbf\u95ee\u4e0d\u5230 p *int slice []int map1 map[string]string } \u7ed3\u6784\u4f53\u662f\u503c\u7c7b\u578b \u521b\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u540e\uff0c\u5982\u679c\u6ca1\u6709\u7ed9\u5b57\u6bb5\u8d4b\u503c\uff0c\u90fd\u4f1a\u6709\u96f6\u503c\uff0c\u5982\u679c\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u5728\u6ca1\u6709\u8fdb\u884c\u5206\u914d\u5185\u5b58\u5219\u5b83\u7684\u503c\u4e3a nil \u3002","title":"\u58f0\u660e\u7ed3\u6784\u4f53"},{"location":"base/go/0base/4struct/#_5","text":"func main() { // 1 var person Person person.Age = 11 person.Name = \"matt\" fmt.Println(person) //2 var p1 = Person{} fmt.Println(p1) // 3 var p3 *Person = new(Person) (*p3).Name = \"33\" p3.Name = \"44\u4f18\u5316\u7b49\u4ef7\u4e8e\u4e0a\u9762\u7684\" fmt.Println(*p3) // 4 var p4 *Person = &Person{} p4.Age = 111 fmt.Println(*p4) } \u521b\u5efa\u7ed3\u6784\u4f53\u53d8\u91cf\u4e5f\u53ef\u4ee5\u6307\u5b9a\u5b57\u6bb5\u503c func main() { var c Computer = Computer{ Age: 1, Name: \"matt\", } fmt.Println(c) } \u53ef\u4ee5\u53ea\u5199\u90e8\u5206\u5b57\u6bb5\uff0c\u8fd9\u6837\u6307\u5b9a\u5b57\u6bb5\u53ef\u4ee5\u4e0d\u6309\u7ed3\u6784\u4f53\u4e2d\u7684\u987a\u5e8f\uff0c\u5426\u5219\u5c31\u8981\u6309\u7ed3\u6784\u4f53\u4e2d\u7684\u987a\u5e8f\u3002","title":"\u7ed3\u6784\u4f53\u521d\u59cb\u5316"},{"location":"base/go/0base/4struct/#_6","text":"1.\u7ed3\u6784\u4f53\u6240\u6709\u5b57\u6bb5\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u7684 2.struct \u7684\u6bcf\u4e2a\u5b57\u6bb5\u4e0a\uff0c\u53ef\u4ee5\u5199\u4e0a\u4e00\u4e2a tag, \u8be5 tag \u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u673a\u5236\u83b7\u53d6\uff0c\u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\u5c31\u662f\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002 import \"fmt\" import \"encoding/json\" type A struct { age int num int } type B struct { age int num int } type C struct { Name string `json:\"name\"` } func main() { var a A var b B a.age = 1 // \u8981\u6c42\u5b57\u6bb5\u4e00\u81f4 b = B(a) var c C c.Name = \"hello ma\" str1, _ := json.Marshal(c) fmt.Println(string(str1)) fmt.Println(b) } 3.\u4fe9\u4e2a\u7ed3\u6784\u4f53\u8fdb\u884c\u8f6c\u6362\u7684\u65f6\u5019\uff0c\u8981\u6c42\u8fd9\u4fe9\u4e2a\u7ed3\u6784\u4f53\u9700\u8981\u6709\u76f8\u540c\u7684\u5b57\u6bb5 a = B(b) 4.\u5bf9\u7ed3\u6784\u4f53\u8fdb\u884c\u91cd\u65b0\u5b9a\u4e49\uff0c golang \u8ba4\u4e3a\u662f\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b type P Person","title":"\u7ed3\u6784\u4f53\u4f7f\u7528\u6ce8\u610f"},{"location":"base/go/0base/4struct/#_7","text":"","title":"\u65b9\u6cd5"},{"location":"base/go/0base/4struct/#_8","text":"import \"fmt\" type Person struct { Age int } func (p Person) getAge() int { return p.Age } func main() { var p Person p.Age = 18 fmt.Println(p.getAge()) } \u8be5\u65b9\u6cd5\u548c Person \u7ed3\u6784\u4f53\u8fdb\u884c\u7ed1\u5b9a \u65b9\u6cd5\u8fdb\u884c\u8c03\u7528\u4f1a\u628a\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u53d8\u91cf\u8d4b\u503c\u7ed9\u8be5\u65b9\u6cd5","title":"\u4f7f\u7528"},{"location":"base/go/0base/4struct/#_9","text":"1. \u7ed3\u6784\u4f53\u7c7b\u578b\u662f\u503c\u7c7b\u578b\uff0c\u5728\u65b9\u6cd5\u8c03\u7528\u4e2d\uff0c\u9075\u5b88\u503c\u7c7b\u578b\u7684\u4f20\u9012\u673a\u5236\uff0c\u662f\u503c\u62f7\u8d1d\u4f20\u9012\u65b9\u5f0f \u65b9\u6cd5\u4e5f\u53ef\u4ee5\u63a5\u6536\u7ed3\u6784\u4f53\u6307\u9488,\u5f15\u7528\u4f20\u9012 \u65b9\u6cd5\u63a5\u6536\u7c7b\u578b\u662f\u4ec0\u4e48\u5c31\u662f\u4ec0\u4e48\u4f20\u9012 func (circle *Circle) test() { // (*circle).R // \u8fdb\u884c\u4e86\u4f18\u5316 fmt.Println(circle.R) } 2.\u65b9\u6cd5\u4e0d\u4ec5\u53ef\u4ee5\u4f5c\u7528\u4e8e\u7ed3\u6784\u4f53\uff0c\u8fd8\u53ef\u4ee5\u4f5c\u7528\u4e8e int,string\u7b49 import \"fmt\" func (i integer) testInt() { fmt.Println(i) } type integer int func main() { var j integer = 10 j.testInt() } 3.\u65b9\u6cd5\u7684\u8bbf\u95ee\u8303\u56f4\u63a7\u5236\u7684\u89c4\u5219\uff0c\u548c\u51fd\u6570\u4e00\u6837\u3002\u65b9\u6cd5\u540d\u9996\u5b57\u6bcd\u5c0f\u5199\uff0c\u53ea\u80fd\u5728\u672c\u5305\u8bbf\u95ee\uff0c\u65b9\u6cd5\u9996\u5b57\u6bcd \u5927\u5199\uff0c\u53ef\u4ee5\u5728\u672c\u5305\u548c\u5176\u5b83\u5305\u8bbf\u95ee\u3002 4.\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u5b9e\u73b0\u4e86 String()\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u90a3\u4e48 fmt.Println \u9ed8\u8ba4\u4f1a\u8c03\u7528\u8fd9\u4e2a\u53d8\u91cf\u7684 String()\u8fdb\u884c\u8f93\u51fa\uff0c\u7c7b\u4f3c\u4e8e java \u4e2d\u7684 toString() \u65b9\u6cd5 func (c Computer) String() string { str := fmt.Sprintf(\"Name=%s Age=%d\", c.Name, c.Age) return str }","title":"\u65b9\u6cd5\u4f7f\u7528\u6ce8\u610f"},{"location":"base/go/0base/4struct/#_10","text":"","title":"\u9762\u5411\u5bf9\u8c61\u7279\u6027"},{"location":"base/go/0base/4struct/#_11","text":"","title":"\u5c01\u88c5"},{"location":"base/go/0base/4struct/#_12","text":"\u5c06\u5bf9\u8c61\u5c5e\u6027\u9690\u85cf\u8d77\u6765\uff0c\u5c5e\u6027\u7684\u64cd\u4f5c\u53ea\u53ef\u4ee5\u901a\u8fc7\u88ab\u6388\u6743\u7684\u65b9\u6cd5\u3002","title":"\u6982\u5ff5"},{"location":"base/go/0base/4struct/#_13","text":"\u7ed3\u6784\u4f53\u5c5e\u6027\u3001\u65b9\u6cd5\u9996\u5b57\u6bcd\u5c0f\u5199\uff0c\u5176\u4ed6\u5305\u5c31\u4e0d\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5f53\u524d\u5305\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u3002 \u4e3a\u7ed3\u6784\u4f53\u63d0\u4f9b\u4e00\u4e2a\u521b\u5efa\u7684\u51fd\u6570\uff0c\u76f8\u5f53\u4e8ejava\u4e2d\u7684\u6784\u9020\u51fd\u6570\u3002 \u7f16\u5199set,get \u65b9\u6cd5\u3002 package main type Person struct { name string age int } func NewPerson() Person { var person = Person{} return person } func (p *Person) SetName(name string) { p.name = name } func (p *Person) GetName() string { return p.name }","title":"\u4f7f\u7528"},{"location":"base/go/0base/4struct/#_14","text":"","title":"\u7ee7\u627f"},{"location":"base/go/0base/4struct/#_15","text":"\u5b50\u7c7b\u5177\u6709\u7236\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5","title":"\u6982\u8ff0"},{"location":"base/go/0base/4struct/#_16","text":"type S struct { Name string Age int } type X struct { S } func (s S) showInfo() { fmt.Println(s.Name) } func (x *X) showInfo() { fmt.Printf(\"x---name=%v age=%v\\n\",x.Name, x.Age) } func main() { var x = &X{} x.S.Name = \"matt\" x.S.Name = \"aa\" x.Name = \"ma\" x.S.showInfo() x1 := X{ S{ Name: \"aa\", Age: 11, }, } fmt.Println(x1) }","title":"\u4f7f\u7528"},{"location":"base/go/0base/4struct/#_17","text":"\u7ed3\u6784\u4f53\u53ef\u4ee5\u4f7f\u7528\u5d4c\u5957\u533f\u540d\u7ed3\u6784\u4f53\u6240\u6709\u7684\u5b57\u6bb5\u548c\u65b9\u6cd5(\u9996\u5b57\u6bcd\u5927\u5c0f\u5199\u90fd\u53ef\u4ee5\u83b7\u5f97) \u7ed3\u6784\u4f53\u8bbf\u95ee\u53ef\u4ee5\u7b80\u5316 func main() { var x = &X{} x.S.Name = \"matt\" // \u5bf9\u4e0a\u9762\u8fdb\u884c\u7b80\u5316 x.Name = \"ma\" x.S.showInfo() } 1.\u4e0a\u8ff0Name\u5b57\u6bb5\uff0c\u7f16\u8bd1\u5668\u9996\u5148\u4f1a\u4ece X \u4e2d\u67e5\u627e\u8be5\u5c5e\u6027\uff0c\u627e\u4e0d\u5230\u5728\u4ece\u4e0dS\u4e2d\u627e\uff0c\u6700\u540e\u627e\u4e0d\u5230\u5219\u62a5\u9519\u3002 \u5f53\u7ed3\u6784\u4f53\u548c\u533f\u540d\u7ed3\u6784\u4f53\u6709\u76f8\u540c\u7684\u5b57\u6bb5\u6216\u8005\u65b9\u6cd5\u65f6\uff0c\u7f16\u8bd1\u5668\u91c7\u7528\u5c31\u8fd1\u8bbf\u95ee\u539f\u5219\u8bbf\u95ee\uff0c\u5982\u5e0c\u671b\u8bbf\u95ee \u533f\u540d\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\u548c\u65b9\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7\u533f\u540d\u7ed3\u6784\u4f53\u540d\uff08x.S.Name\uff09\u6765\u533a\u5206 2.\u7ed3\u6784\u4f53\u5d4c\u5165\u4e24\u4e2a(\u6216\u591a\u4e2a)\u533f\u540d\u7ed3\u6784\u4f53\uff0c\u5982\u4e24\u4e2a\u533f\u540d\u7ed3\u6784\u4f53\u6709\u76f8\u540c\u7684\u5b57\u6bb5\u548c\u65b9\u6cd5(\u540c\u65f6\u7ed3\u6784\u4f53\u672c\u8eab \u6ca1\u6709\u540c\u540d\u7684\u5b57\u6bb5\u548c\u65b9\u6cd5)\uff0c\u5728\u8bbf\u95ee\u65f6\uff0c\u5c31\u5fc5\u987b\u660e\u786e\u6307\u5b9a\u533f\u540d\u7ed3\u6784\u4f53\u540d\u5b57\uff0c\u5426\u5219\u7f16\u8bd1\u62a5\u9519\u3002 3.\u5982\u679c\u4e00\u4e2a struct \u5d4c\u5957\u4e86\u4e00\u4e2a\u6709\u540d\u7ed3\u6784\u4f53\uff0c\u8fd9\u79cd\u6a21\u5f0f\u5c31\u662f\u7ec4\u5408\uff0c\u5982\u679c\u662f\u7ec4\u5408\u5173\u7cfb\uff0c\u90a3\u4e48\u5728\u8bbf\u95ee\u7ec4\u5408 \u7684\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\u6216\u65b9\u6cd5\u65f6\uff0c\u5fc5\u987b\u5e26\u4e0a\u7ed3\u6784\u4f53\u7684\u540d\u5b57 \u5b57\u6bb5\u9700\u8981\u6307\u5b9a \u65b9\u6cd5\u4e0d\u9700\u8981\u6307\u5b9a type A struct { Name string } type B struct { a A } func main() { var b B = B{} b.a.Name = \"matt\" fmt.Println(b) } \u53ef\u4ee5\u5728\u521b\u5efa\u7ed3\u6784\u4f53\u53d8\u91cf\u65f6\u6307\u5b9a\u533f\u540d\u7ed3\u6784\u4f53\u503c var a A = B{ B{ Name: \"matt sir\" } } package main import \"fmt\" type F1 struct { Name string } type S1 struct { F1 Age int } func main() { s1 := S1{ Age: 11, F1: F1{ Name:\"matt\", }, } fmt.Println(s1) }","title":"\u7ee7\u627f\u4f7f\u7528\u6ce8\u610f"},{"location":"base/go/0base/4struct/#_18","text":"","title":"\u63a5\u53e3"},{"location":"base/go/0base/4struct/#_19","text":"type I interface { start() } type A struct { } func (a *A) start() { fmt.Println(\"A \u5f00\u59cb...\") } \u7ed3\u6784\u4f53 A \u5b9e\u73b0\u63a5\u53e3 I","title":"\u4f7f\u7528"},{"location":"base/go/0base/4struct/#_20","text":"1.\u63a5\u53e3\u4e2d\u4e0d\u53ef\u4ee5\u6709\u53d8\u91cf,\u53ea\u6709\u65b9\u6cd5\uff0c\u63a5\u53e3\u4e2d\u6240\u6709\u7684\u65b9\u6cd5\u90fd\u6ca1\u6709\u5b9e\u73b0 2.\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7c7b\u578b\uff08\u5305\u62ec\u7ed3\u6784\u4f53\uff09\u5b9e\u73b0\u4e86\u4e00\u4e2a\u63a5\u53e3\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u5c31\u8ba4\u4e3a\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3 3.\u63a5\u53e3\u672c\u8eab\u4e0d\u80fd\u521b\u5efa\u5b9e\u4f8b,\u4f46\u662f\u53ef\u4ee5\u6307\u5411\u4e00\u4e2a\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\u7684\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u53d8\u91cf(\u5b9e\u4f8b) interface \u7c7b\u578b\u9ed8\u8ba4\u662f\u4e00\u4e2a\u6307\u9488(\u5f15\u7528\u7c7b\u578b)\uff0c\u5982\u679c\u6ca1\u6709\u5bf9 interface \u521d\u59cb\u5316\u5c31\u4f7f\u7528\uff0c\u90a3\u4e48\u4f1a\u8f93\u51fa nil // I\u662f\u63a5\u53e3 s \u662fS\u7684\u5b9e\u4f8b\uff0cS\u5b9e\u73b0I var s I 4.\u4e00\u4e2a\u63a5\u53e3\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u63a5\u53e3\uff0c\u6bd4\u5982A\u63a5\u53e3\u7ee7\u627fB\uff0cC, \u5982\u679c\u5b9e\u73b0A\u63a5\u53e3\uff0c\u90a3\u4e48\u5c31\u8981\u628aA,B,C\u4e2d\u6240\u6709\u65b9\u6cd5\u5b9e\u73b0\u3002 5.\u7a7a\u63a5\u53e3\u662f\u6ca1\u6709\u65b9\u6cd5\uff0c\u5373\u4efb\u4f55\u53d8\u91cf\u5b9e\u73b0\u4e86\u7a7a\u63a5\u53e3","title":"\u4f7f\u7528\u63a5\u53e3\u6ce8\u610f"},{"location":"base/go/0base/4struct/#_21","text":"\u7ee7\u627f\u7684\u4ef7\u503c\u4e3b\u8981\u5728\u4e8e\uff1a\u89e3\u51b3\u4ee3\u7801\u7684\u590d\u7528\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 \u63a5\u53e3\u7684\u4ef7\u503c\u4e3b\u8981\u5728\u4e8e\uff1a\u8bbe\u8ba1\uff0c\u8bbe\u8ba1\u597d\u5404\u79cd\u89c4\u8303(\u65b9\u6cd5)\uff0c\u8ba9\u5176\u5b83\u81ea\u5b9a\u4e49\u7c7b\u578b\u53bb\u5b9e\u73b0\u8fd9\u4e9b\u65b9\u6cd5","title":"\u5b9e\u73b0\u548c\u7ee7\u627f"},{"location":"base/go/0base/4struct/#_22","text":"\u591a\u6001\u53c2\u6570\uff1a \u4e00\u4e2a\u65b9\u6cd5\u4e2d\u7684\u4e00\u4e2a\u53c2\u6570\u662fI\u7c7b\u578b\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u63a5\u6536\u5b9e\u73b0I\u7c7b\u578b\u7684\u6240\u6709\u7c7b \u591a\u6001\u6570\u7ec4 \u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684I\u7c7b\u578b\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u63a5\u6536\u5b9e\u73b0I\u7c7b\u578b\u7684\u6240\u6709\u7c7b","title":"\u591a\u6001"},{"location":"base/go/0base/4struct/#_23","text":"","title":"\u7c7b\u578b\u65ad\u8a00"},{"location":"base/go/0base/4struct/#_24","text":"\u4e00\u4e2a\u53d8\u91cf\u77e5\u9053\u4ed6\u662f\u67d0\u4e00\u4e2a\u63a5\u53e3\u7c7b\u578b\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u5b83\u662f\u54ea\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\uff0c\u6240\u4ee5\u4f7f\u7528\u65ad\u8a00\u3002","title":"\u6982\u8ff0"},{"location":"base/go/0base/4struct/#_25","text":"func main() { var a interface{} var b B = B{} a = b c, ok := a.(B) fmt.Println(ok) fmt.Println(c) }","title":"\u4f7f\u7528"},{"location":"base/go/0base/4struct/#_26","text":"","title":"\u5176\u4ed6"},{"location":"base/go/0base/4struct/#_27","text":"type User struct { Id int64 `json:\"id\"` Name string `json:\"name\"` Age int64 `json:\"age\"` // omitempty \u5982\u679c\u4e0d\u8bbe\u7f6e\u8fd9\u4e2a\u5b57\u6bb5\u5c31\u4e0d\u4f1a\u8f93\u51fa // \u4e0d\u52a0omitempty\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\u8fd9\u4e2a\u5b57\u6bb5\u4e5f\u4f1a\u8f93\u51fa\u9ed8\u8ba4\u503c H string `json:\"h,omitempty\"` } get: \u5f97\u5230\uff0c\u83b7\u5f97 select\uff1a\u9009\u62e9 find\uff1a\u5f3a\u8c03\u627e\u7684\u7ed3\u679c\u3002 search\uff1a\u5f3a\u8c03\u627e\u7684\u8fc7\u7a0b\u3002 \u6211\u7528\u4e00\u53e5\u8bdd\u8ba9\u4f60\u660e\u767d\u533a\u522b\u3002\u5148SEARCH\uff0c\u518dFIND(OUT\uff09\uff0c\u518dSELECT\uff0c\u6700\u540eGET","title":"\u53cd\u5f15\u5b57\u6bb5"},{"location":"base/go/0base/7error/","text":"\u5f02\u5e38\u5904\u7406 panic recover panic:\u629b\u51fa\u5f02\u5e38 recover:\u6355\u83b7\u5f02\u5e38 \u53ea\u5bf9\u8fd0\u884c\u65f6\u5f02\u5e38\u8fdb\u884c\u6355\u83b7\uff0c\u7f16\u8bd1\u5f02\u5e38\u4e0d\u4f1a\u6355\u83b7 recover\uff1a\u4e00\u822c\u7528\u4e8e\u6355\u83b7\u4e00\u4e2a\u534f\u7a0b\u7684packing\u884c\u4e3a\uff0c\u6355\u83b7panic\uff0c \u5982\u679c\u540c\u65f6\u6709\u591a\u4e2a\u90a3\u4e48\u53ea\u5bf9\u6700\u540e\u4e00\u4e2a\u5f02\u5e38\u8fdb\u884c\u6355\u83b7 recover\u53ea\u6709\u5728\u5ef6\u8fdf(defer)\u8c03\u7528\u624d\u6709\u6548\uff0c\u4e0d\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 \u63a8\u8350recover\u5199\u5728panic\u4e4b\u524d func main() { //t1() // \u53ea\u5bf9\u8fd0\u884c\u65f6\u5f02\u5e38\u8fdb\u884c\u6355\u83b7 defer func() { if err := recover(); err != nil { fmt.Println(err) } }() var ch chan int = make(chan int, 10) close(ch) ch <- 1 fmt.Println(\"hello word\") } error \u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56deerror package main import ( \"errors\" \"fmt\" ) func t4(i int) error { if i == 0 { return errors.New(\"this is \u81ea\u5b9a\u4e49\u9519\u8bef\") } return nil } func t5() error { return fmt.Errorf(\"this is \u81ea\u5b9a\u4e49\u9519\u8bef\") } func main() { i := 1 fmt.Scanf(\"%d\", &i) err := t4(i) fmt.Println(err) } this is \u81ea\u5b9a\u4e49\u9519\u8bef package main import \"fmt\" type AError struct { name string } func (e *AError) Error(str string) string { e.name = str return e.name } func main() { var i int fmt.Scanf(\"%d\", &i) if i < 0 { e := &AError{} fmt.Println(e.Error(\"aaaa\")) } } \u81ea\u5b9a\u4e49error package main import \"fmt\" type MyError struct { Name string Id int } // \u5199 Error \u65b9\u6cd5 func (p *MyError) Error() string { return fmt.Sprintf(\"name=%s, id=%d\", p.Name, p.Id) } func s1(i int) error { if i > 0 { return nil } return &MyError{ Name: \"e1\", Id: 11, } } func main() { i := 1 fmt.Scanf(\"%d\", &i) fmt.Println(s1(i)) }","title":"\u9519\u8bef"},{"location":"base/go/0base/7error/#_1","text":"","title":"\u5f02\u5e38\u5904\u7406"},{"location":"base/go/0base/7error/#panic-recover","text":"panic:\u629b\u51fa\u5f02\u5e38 recover:\u6355\u83b7\u5f02\u5e38 \u53ea\u5bf9\u8fd0\u884c\u65f6\u5f02\u5e38\u8fdb\u884c\u6355\u83b7\uff0c\u7f16\u8bd1\u5f02\u5e38\u4e0d\u4f1a\u6355\u83b7 recover\uff1a\u4e00\u822c\u7528\u4e8e\u6355\u83b7\u4e00\u4e2a\u534f\u7a0b\u7684packing\u884c\u4e3a\uff0c\u6355\u83b7panic\uff0c \u5982\u679c\u540c\u65f6\u6709\u591a\u4e2a\u90a3\u4e48\u53ea\u5bf9\u6700\u540e\u4e00\u4e2a\u5f02\u5e38\u8fdb\u884c\u6355\u83b7 recover\u53ea\u6709\u5728\u5ef6\u8fdf(defer)\u8c03\u7528\u624d\u6709\u6548\uff0c\u4e0d\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 \u63a8\u8350recover\u5199\u5728panic\u4e4b\u524d func main() { //t1() // \u53ea\u5bf9\u8fd0\u884c\u65f6\u5f02\u5e38\u8fdb\u884c\u6355\u83b7 defer func() { if err := recover(); err != nil { fmt.Println(err) } }() var ch chan int = make(chan int, 10) close(ch) ch <- 1 fmt.Println(\"hello word\") }","title":"panic recover"},{"location":"base/go/0base/7error/#error","text":"\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56deerror package main import ( \"errors\" \"fmt\" ) func t4(i int) error { if i == 0 { return errors.New(\"this is \u81ea\u5b9a\u4e49\u9519\u8bef\") } return nil } func t5() error { return fmt.Errorf(\"this is \u81ea\u5b9a\u4e49\u9519\u8bef\") } func main() { i := 1 fmt.Scanf(\"%d\", &i) err := t4(i) fmt.Println(err) } this is \u81ea\u5b9a\u4e49\u9519\u8bef package main import \"fmt\" type AError struct { name string } func (e *AError) Error(str string) string { e.name = str return e.name } func main() { var i int fmt.Scanf(\"%d\", &i) if i < 0 { e := &AError{} fmt.Println(e.Error(\"aaaa\")) } }","title":"error"},{"location":"base/go/0base/7error/#error_1","text":"package main import \"fmt\" type MyError struct { Name string Id int } // \u5199 Error \u65b9\u6cd5 func (p *MyError) Error() string { return fmt.Sprintf(\"name=%s, id=%d\", p.Name, p.Id) } func s1(i int) error { if i > 0 { return nil } return &MyError{ Name: \"e1\", Id: 11, } } func main() { i := 1 fmt.Scanf(\"%d\", &i) fmt.Println(s1(i)) }","title":"\u81ea\u5b9a\u4e49error"},{"location":"base/go/1concurrent/0groutine/","text":"groutinue TODO\uff1a \u200b \u8fdb\u7a0b\u7ebf\u7a0b\u534f\u7a0b\u533a\u522b \u5206\u522b\u662f\u5565 \u200b \u5e95\u5c42\u539f\u7406 \u7ebf\u7a0b\uff1a\u9700\u8981\u7ef4\u62a4\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u7684\u8c03\u5ea6\u53bb\u6267\u884c\u4efb\u52a1 \u534f\u7a0b\uff1ago\u8bed\u8a00\u5df2\u7ecf\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u5b9a\u4e49\u4efb\u52a1\u5373\u53ef,\u8ba9\u7cfb\u7edf\u5c06\u6211\u4eec\u7684\u4efb\u52a1\u5206\u914d\u7ed9cpu\u6267\u884c go \u51fd\u6570() main \u534f\u7a0b\u7ed3\u675f \u6574\u4f53\u7a0b\u5e8f\u5c31\u4f1a\u7ed3\u675f \u4e0d\u4f1a\u7b49\u5f85\u5176\u4ed6\u534f\u7a0b time.Sleep package main import ( \"fmt\" \"time\" ) func main() { go func() { fmt.Println(\"start...\") time.Sleep(time.Second * 10) fmt.Println(\"end...\") }() fmt.Println(\"main start...\") time.Sleep(time.Second * 5) fmt.Println(\"main end...\") } wg package main import ( \"fmt\" \"sync\" ) var wg sync.WaitGroup func w1() { defer wg.Done() fmt.Println(\"wg1\") } func main() { for i := 0; i < 10; i++ { wg.Add(1) go w1() } wg.Wait() fmt.Println(\"main\") }","title":"groutine"},{"location":"base/go/1concurrent/0groutine/#groutinue","text":"TODO\uff1a \u200b \u8fdb\u7a0b\u7ebf\u7a0b\u534f\u7a0b\u533a\u522b \u5206\u522b\u662f\u5565 \u200b \u5e95\u5c42\u539f\u7406 \u7ebf\u7a0b\uff1a\u9700\u8981\u7ef4\u62a4\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u7684\u8c03\u5ea6\u53bb\u6267\u884c\u4efb\u52a1 \u534f\u7a0b\uff1ago\u8bed\u8a00\u5df2\u7ecf\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u5b9a\u4e49\u4efb\u52a1\u5373\u53ef,\u8ba9\u7cfb\u7edf\u5c06\u6211\u4eec\u7684\u4efb\u52a1\u5206\u914d\u7ed9cpu\u6267\u884c go \u51fd\u6570() main \u534f\u7a0b\u7ed3\u675f \u6574\u4f53\u7a0b\u5e8f\u5c31\u4f1a\u7ed3\u675f \u4e0d\u4f1a\u7b49\u5f85\u5176\u4ed6\u534f\u7a0b","title":"groutinue"},{"location":"base/go/1concurrent/0groutine/#timesleep","text":"package main import ( \"fmt\" \"time\" ) func main() { go func() { fmt.Println(\"start...\") time.Sleep(time.Second * 10) fmt.Println(\"end...\") }() fmt.Println(\"main start...\") time.Sleep(time.Second * 5) fmt.Println(\"main end...\") }","title":"time.Sleep"},{"location":"base/go/1concurrent/0groutine/#wg","text":"package main import ( \"fmt\" \"sync\" ) var wg sync.WaitGroup func w1() { defer wg.Done() fmt.Println(\"wg1\") } func main() { for i := 0; i < 10; i++ { wg.Add(1) go w1() } wg.Wait() fmt.Println(\"main\") }","title":"wg"},{"location":"base/go/1concurrent/1runtime/","text":"runtime runtime.Gosched() runtime.Goexit() runtime.GOMAXPROCS(1) package main import ( \"fmt\" \"runtime\" ) func main() { // 1.15 \u9ed8\u8ba4\u662fcpu\u6838\u5fc3\u6570 \u65e0\u9700\u914d\u7f6e runtime.GOMAXPROCS(1) go func() { for i := 0; i < 10; i++ { if i == 5 { // \u9000\u51fa\u5f53\u524d\u534f\u7a0b runtime.Goexit() } fmt.Println(\"son...\") } }() for i := 0; i < 2; i++ { // \u8ba9\u51faCPU\u65f6\u95f4\u7247\uff0c\u91cd\u65b0\u7b49\u5f85\u5b89\u6392\u4efb\u52a1 runtime.Gosched() fmt.Println(\"main...\") } }","title":"runtime"},{"location":"base/go/1concurrent/1runtime/#runtime","text":"runtime.Gosched() runtime.Goexit() runtime.GOMAXPROCS(1) package main import ( \"fmt\" \"runtime\" ) func main() { // 1.15 \u9ed8\u8ba4\u662fcpu\u6838\u5fc3\u6570 \u65e0\u9700\u914d\u7f6e runtime.GOMAXPROCS(1) go func() { for i := 0; i < 10; i++ { if i == 5 { // \u9000\u51fa\u5f53\u524d\u534f\u7a0b runtime.Goexit() } fmt.Println(\"son...\") } }() for i := 0; i < 2; i++ { // \u8ba9\u51faCPU\u65f6\u95f4\u7247\uff0c\u91cd\u65b0\u7b49\u5f85\u5b89\u6392\u4efb\u52a1 runtime.Gosched() fmt.Println(\"main...\") } }","title":"runtime"},{"location":"base/go/1concurrent/2channel/","text":"channel \u58f0\u660e+\u521d\u59cb\u5316 package main import \"fmt\" func main() { // \u9700\u8981make 5\uff1a\u5bb9\u91cf var t1 chan int = make(chan int, 5) // var t1 = make(chan int, 5) // \u5199\u5165 t1 <- 11 // \u8bfb\u53d6 fmt.Println(<-t1) // \u5173\u95ed close(t1) t2 := make(chan int) go func() { fmt.Println(len(t2)) fmt.Println(cap(t2)) <- t2 }() } \u6ce8\u610f 1.\u5bf9\u4e00\u4e2a\u5173\u95ed\u7684\u901a\u9053\u518d\u53d1\u9001\u503c\u5c31\u4f1a\u5bfc\u81f4panic\u3002 2.\u5bf9\u4e00\u4e2a\u5173\u95ed\u7684\u901a\u9053\u8fdb\u884c\u63a5\u6536\u4f1a\u4e00\u76f4\u83b7\u53d6\u503c\u76f4\u5230\u901a\u9053\u4e3a\u7a7a\u3002 3.\u5bf9\u4e00\u4e2a\u5173\u95ed\u7684\u5e76\u4e14\u6ca1\u6709\u503c\u7684\u901a\u9053\u6267\u884c\u63a5\u6536\u64cd\u4f5c\u4f1a\u5f97\u5230\u5bf9\u5e94\u7c7b\u578b\u7684\u96f6\u503c\u3002 4.\u5173\u95ed\u4e00\u4e2a\u5df2\u7ecf\u5173\u95ed\u7684\u901a\u9053\u4f1a\u5bfc\u81f4panic\u3002 \u65e0\u7f13\u51b2\u7ba1\u9053 \u4e0d\u4f7f\u7528\u534f\u7a0b\u5c31\u4f1a\u62a5\u9519\uff0c\u4f7f\u7528\u534f\u7a0b\u4e0d\u4f1a\u62a5\u9519 \u62a5\u9519 package main func main() { c1 := make(chan int) c1 <- 1 <-c1 } \u963b\u585e \u4f7f\u7528\u534f\u7a0b package main import \"fmt\" func main() { //c1 := make(chan int) //c1 <- 1 //<-c1 c2 := make(chan int) go func() { c2 <- 1 }() fmt.Println(<-c2) } \u6709\u7f13\u51b2\u7ba1\u9053 package main import \"fmt\" func main() { //c1 := make(chan int) //c1 <- 1 //<-c1 c2 := make(chan int) go func() { c2 <- 1 }() fmt.Println(<-c2) c3 := make(chan int, 10) c3 <- 11 fmt.Println(len(c3), cap(c3)) } \u8bfb\u53d6 \u4fe9\u79cd\u8bfb\u53d6 package main import ( \"fmt\" ) func main() { t3 := make(chan int, 100) for i := 0; i < 1; i++ { t3 <- i } // close(t3) <-t3 _, ok := <-t3 fmt.Println(ok) v, ok := <-t3 fmt.Println(ok, v) close(t3) // range \u9700\u8981\u5148\u5173\u95ed\uff0c \u4f7f\u7528\u534f\u7a0b\u5c31\u4e0d\u7528close for v := range t3 { fmt.Println(v) } // ok \u5224\u65ad\uff1a\u5b83\u4f1a\u4e0d\u65ad\u4ece\u7ba1\u9053\u8bfb\u53d6\u6570\u636e\uff0c \u7ba1\u9053\u4e3a\u7a7a\u5c31\u4f1a\u62a5\u9519\uff0c \u5982\u679c\u5173\u95ed\u5c31\u4e0d\u4f1a\u62a5\u9519 for { v, ok := <-t3 fmt.Println(ok) if ok { fmt.Println(v) } else { break } } } package main import ( \"fmt\" \"time\" ) func main() { c1 := make(chan int, 3) for i := 0; i < 3; i++ { c1 <- i } go func() { for v := range c1 { fmt.Println(v) } }() fmt.Println(\"hello word\") time.Sleep(time.Second*1) } \u5355\u5411\u7ba1\u9053 \u53ef\u4ee5\u628a\u53cc\u5411\u7ba1\u9053\u8d4b\u503c\u7ed9\u5355\u5411\u7ba1\u9053\uff0c\u6bd4\u5982\u51fd\u6570\u7684\u53c2\u6570\u662f\u5355\u5411\u7ba1\u9053 package main func main() { t1 := make(chan<- int, 5) t1 <- 1 // \u62a5\u9519 //fmt.Println(<-t1) } \u5f02\u5e38 channel nil \u975e\u7a7a \u7a7a \u6ee1 \u975e\u6ee1 \u63a5\u6536 \u963b\u585e \u63a5\u6536\u503c \u963b\u585e \u63a5\u6536\u503c \u63a5\u6536\u503c \u53d1\u9001 \u963b\u585e \u53d1\u9001\u503c \u53d1\u9001\u503c \u963b\u585e \u53d1\u9001\u503c \u5173\u95ed panic \u5173\u95ed\u6210\u529f\uff0c\u8bfb\u5b8c\u6570\u636e\u8fd4\u56de\u96f6\u503c \u5173\u95ed\u6210\u529f\uff0c\u8bfb\u5b8c\u6570\u636e\u8fd4\u56de\u96f6\u503c \u5173\u95ed\u6210\u529f\uff0c\u8bfb\u5b8c\u6570\u636e\u8fd4\u56de\u96f6\u503c \u5173\u95ed\u6210\u529f\uff0c\u8bfb\u5b8c\u6570\u636e\u8fd4\u56de\u96f6\u503c","title":"channel"},{"location":"base/go/1concurrent/2channel/#channel","text":"","title":"channel"},{"location":"base/go/1concurrent/2channel/#_1","text":"package main import \"fmt\" func main() { // \u9700\u8981make 5\uff1a\u5bb9\u91cf var t1 chan int = make(chan int, 5) // var t1 = make(chan int, 5) // \u5199\u5165 t1 <- 11 // \u8bfb\u53d6 fmt.Println(<-t1) // \u5173\u95ed close(t1) t2 := make(chan int) go func() { fmt.Println(len(t2)) fmt.Println(cap(t2)) <- t2 }() }","title":"\u58f0\u660e+\u521d\u59cb\u5316"},{"location":"base/go/1concurrent/2channel/#_2","text":"1.\u5bf9\u4e00\u4e2a\u5173\u95ed\u7684\u901a\u9053\u518d\u53d1\u9001\u503c\u5c31\u4f1a\u5bfc\u81f4panic\u3002 2.\u5bf9\u4e00\u4e2a\u5173\u95ed\u7684\u901a\u9053\u8fdb\u884c\u63a5\u6536\u4f1a\u4e00\u76f4\u83b7\u53d6\u503c\u76f4\u5230\u901a\u9053\u4e3a\u7a7a\u3002 3.\u5bf9\u4e00\u4e2a\u5173\u95ed\u7684\u5e76\u4e14\u6ca1\u6709\u503c\u7684\u901a\u9053\u6267\u884c\u63a5\u6536\u64cd\u4f5c\u4f1a\u5f97\u5230\u5bf9\u5e94\u7c7b\u578b\u7684\u96f6\u503c\u3002 4.\u5173\u95ed\u4e00\u4e2a\u5df2\u7ecf\u5173\u95ed\u7684\u901a\u9053\u4f1a\u5bfc\u81f4panic\u3002","title":"\u6ce8\u610f"},{"location":"base/go/1concurrent/2channel/#_3","text":"\u4e0d\u4f7f\u7528\u534f\u7a0b\u5c31\u4f1a\u62a5\u9519\uff0c\u4f7f\u7528\u534f\u7a0b\u4e0d\u4f1a\u62a5\u9519 \u62a5\u9519 package main func main() { c1 := make(chan int) c1 <- 1 <-c1 } \u963b\u585e \u4f7f\u7528\u534f\u7a0b package main import \"fmt\" func main() { //c1 := make(chan int) //c1 <- 1 //<-c1 c2 := make(chan int) go func() { c2 <- 1 }() fmt.Println(<-c2) }","title":"\u65e0\u7f13\u51b2\u7ba1\u9053"},{"location":"base/go/1concurrent/2channel/#_4","text":"package main import \"fmt\" func main() { //c1 := make(chan int) //c1 <- 1 //<-c1 c2 := make(chan int) go func() { c2 <- 1 }() fmt.Println(<-c2) c3 := make(chan int, 10) c3 <- 11 fmt.Println(len(c3), cap(c3)) }","title":"\u6709\u7f13\u51b2\u7ba1\u9053"},{"location":"base/go/1concurrent/2channel/#_5","text":"\u4fe9\u79cd\u8bfb\u53d6 package main import ( \"fmt\" ) func main() { t3 := make(chan int, 100) for i := 0; i < 1; i++ { t3 <- i } // close(t3) <-t3 _, ok := <-t3 fmt.Println(ok) v, ok := <-t3 fmt.Println(ok, v) close(t3) // range \u9700\u8981\u5148\u5173\u95ed\uff0c \u4f7f\u7528\u534f\u7a0b\u5c31\u4e0d\u7528close for v := range t3 { fmt.Println(v) } // ok \u5224\u65ad\uff1a\u5b83\u4f1a\u4e0d\u65ad\u4ece\u7ba1\u9053\u8bfb\u53d6\u6570\u636e\uff0c \u7ba1\u9053\u4e3a\u7a7a\u5c31\u4f1a\u62a5\u9519\uff0c \u5982\u679c\u5173\u95ed\u5c31\u4e0d\u4f1a\u62a5\u9519 for { v, ok := <-t3 fmt.Println(ok) if ok { fmt.Println(v) } else { break } } } package main import ( \"fmt\" \"time\" ) func main() { c1 := make(chan int, 3) for i := 0; i < 3; i++ { c1 <- i } go func() { for v := range c1 { fmt.Println(v) } }() fmt.Println(\"hello word\") time.Sleep(time.Second*1) }","title":"\u8bfb\u53d6"},{"location":"base/go/1concurrent/2channel/#_6","text":"\u53ef\u4ee5\u628a\u53cc\u5411\u7ba1\u9053\u8d4b\u503c\u7ed9\u5355\u5411\u7ba1\u9053\uff0c\u6bd4\u5982\u51fd\u6570\u7684\u53c2\u6570\u662f\u5355\u5411\u7ba1\u9053 package main func main() { t1 := make(chan<- int, 5) t1 <- 1 // \u62a5\u9519 //fmt.Println(<-t1) }","title":"\u5355\u5411\u7ba1\u9053"},{"location":"base/go/1concurrent/2channel/#_7","text":"channel nil \u975e\u7a7a \u7a7a \u6ee1 \u975e\u6ee1 \u63a5\u6536 \u963b\u585e \u63a5\u6536\u503c \u963b\u585e \u63a5\u6536\u503c \u63a5\u6536\u503c \u53d1\u9001 \u963b\u585e \u53d1\u9001\u503c \u53d1\u9001\u503c \u963b\u585e \u53d1\u9001\u503c \u5173\u95ed panic \u5173\u95ed\u6210\u529f\uff0c\u8bfb\u5b8c\u6570\u636e\u8fd4\u56de\u96f6\u503c \u5173\u95ed\u6210\u529f\uff0c\u8bfb\u5b8c\u6570\u636e\u8fd4\u56de\u96f6\u503c \u5173\u95ed\u6210\u529f\uff0c\u8bfb\u5b8c\u6570\u636e\u8fd4\u56de\u96f6\u503c \u5173\u95ed\u6210\u529f\uff0c\u8bfb\u5b8c\u6570\u636e\u8fd4\u56de\u96f6\u503c","title":"\u5f02\u5e38"},{"location":"base/go/1concurrent/3%E5%AE%9A%E6%97%B6%E5%99%A8/","text":"\u5b9a\u65f6\u5668 \u53ea\u6267\u884c\u4e00\u6b21 package main import ( \"fmt\" \"time\" ) func main() { // \u53ea\u6267\u884c\u4e00\u6b21 fmt.Println(time.Now(), \"begin\") timer := time.NewTimer(time.Second * 2) fmt.Println(<-timer.C, \"\u65f6\u95f4\u5230\") fmt.Println(time.Now(), \"end....\") } \u6267\u884c\u591a\u6b21 package main import ( \"fmt\" \"time\" ) func main() { // \u5b9a\u65f6\u5668\u6267\u884c\u591a\u6b21 ticker := time.NewTicker(time.Second * 2) for { <-ticker.C fmt.Println(\"\u65f6\u95f4\u5230\") } }","title":"\u5b9a\u65f6\u5668"},{"location":"base/go/1concurrent/3%E5%AE%9A%E6%97%B6%E5%99%A8/#_1","text":"","title":"\u5b9a\u65f6\u5668"},{"location":"base/go/1concurrent/3%E5%AE%9A%E6%97%B6%E5%99%A8/#_2","text":"package main import ( \"fmt\" \"time\" ) func main() { // \u53ea\u6267\u884c\u4e00\u6b21 fmt.Println(time.Now(), \"begin\") timer := time.NewTimer(time.Second * 2) fmt.Println(<-timer.C, \"\u65f6\u95f4\u5230\") fmt.Println(time.Now(), \"end....\") }","title":"\u53ea\u6267\u884c\u4e00\u6b21"},{"location":"base/go/1concurrent/3%E5%AE%9A%E6%97%B6%E5%99%A8/#_3","text":"package main import ( \"fmt\" \"time\" ) func main() { // \u5b9a\u65f6\u5668\u6267\u884c\u591a\u6b21 ticker := time.NewTicker(time.Second * 2) for { <-ticker.C fmt.Println(\"\u65f6\u95f4\u5230\") } }","title":"\u6267\u884c\u591a\u6b21"},{"location":"base/go/1concurrent/4select/","text":"select \u57fa\u7840 \u53ef\u4ee5\u540c\u65f6\u5224\u65ad\u591a\u4e2a\u7ba1\u9053\u662f\u5426\u53ef\u4ee5\u53d1\u9001\u3001\u63a5\u6536 \u5982\u679c\u540c\u65f6\u6709\u591a\u4e2a\u7ba1\u9053\u53ef\u4ee5\u6267\u884c\uff0c\u90a3\u4e48\u968f\u673a\u9009\u62e9\u4e00\u4e2a \u5982\u679c\u90fd\u6709\u51c6\u5907\u597d\uff0c\u90a3\u4e48\u6267\u884cdefault \u4e5f\u53ef\u4ee5\u5224\u65ad\u7ba1\u9053\u662f\u5426\u5b58\u6ee1 package main import ( \"fmt\" \"math/rand\" ) func main() { t1 := make(chan int, 10) t2 := make(chan int, 10) for i := 0; i < 10; i++ { t1 <- i t2 <- rand.Int() } b1: for { select { case v := <-t1: fmt.Println(v) case v := <-t2: fmt.Println(\"t2:\", v) default: fmt.Println(\"else\") break b1 } } }","title":"select"},{"location":"base/go/1concurrent/4select/#select","text":"","title":"select"},{"location":"base/go/1concurrent/4select/#_1","text":"\u53ef\u4ee5\u540c\u65f6\u5224\u65ad\u591a\u4e2a\u7ba1\u9053\u662f\u5426\u53ef\u4ee5\u53d1\u9001\u3001\u63a5\u6536 \u5982\u679c\u540c\u65f6\u6709\u591a\u4e2a\u7ba1\u9053\u53ef\u4ee5\u6267\u884c\uff0c\u90a3\u4e48\u968f\u673a\u9009\u62e9\u4e00\u4e2a \u5982\u679c\u90fd\u6709\u51c6\u5907\u597d\uff0c\u90a3\u4e48\u6267\u884cdefault \u4e5f\u53ef\u4ee5\u5224\u65ad\u7ba1\u9053\u662f\u5426\u5b58\u6ee1 package main import ( \"fmt\" \"math/rand\" ) func main() { t1 := make(chan int, 10) t2 := make(chan int, 10) for i := 0; i < 10; i++ { t1 <- i t2 <- rand.Int() } b1: for { select { case v := <-t1: fmt.Println(v) case v := <-t2: fmt.Println(\"t2:\", v) default: fmt.Println(\"else\") break b1 } } }","title":"\u57fa\u7840"},{"location":"base/go/1concurrent/5lock/","text":"\u95ee\u9898 \u540c\u65f6\u6709\u591a\u4e2a\u534f\u7a0b\u5bf9\u5171\u4eab\u6570\u636e\u4fee\u6539\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u95ee\u9898 \u4e92\u65a5\u9501\u3001\u8bfb\u5199\u9501 package main import ( \"fmt\" \"sync\" ) var ( cnt int // \u4e92\u65a5\u9501 lock sync.Mutex // \u8bfb\u5199\u9501 rwLock sync.RWMutex w sync.WaitGroup ) func add() { // \u4e92\u65a5\u9501 for i:= 0; i < 1000; i++ { lock.Lock() cnt++ lock.Unlock() } w.Done() } func get() { // \u8bfb\u9501 rwLock.RLock() rwLock.RUnlock() // \u5199\u9501 rwLock.Lock() rwLock.Unlock() } func main() { // \u52a0\u9501 2000 \u4e0d\u52a0\u9501 1220 w.Add(2) go add() go add() w.Wait() fmt.Println(cnt) } \u4e92\u65a5\u9501\uff1a\u5982\u679c\u4e00\u4e2a\u534f\u7a0b\u83b7\u5f97\u4e92\u65a5\u9501\uff0c\u5176\u4ed6\u534f\u7a0b\u53ea\u80fd\u7b49\u5f85\uff0c\u5982\u679c\u8be5\u534f\u7a0b\u91ca\u653e\u9501\uff0c\u90a3\u4e48\u4f1a\u968f\u673a\u73af\u5f62\u7b49\u5f85\u8be5\u9501\u7684\u4e00\u4e2a\u534f\u7a0b \u8bfb\u5199\u9501\uff1a\u5982\u679c\u6709\u4e00\u4e2a\u534f\u7a0b\u83b7\u53d6\u8bfb\u9501\uff0c\u5176\u4ed6\u534f\u7a0b\u4ecd\u7136\u53ef\u4ee5\u83b7\u53d6\u8bfb\u9501\uff0c\u4f46\u662f\u4e0d\u80fd\u83b7\u53d6\u5199\u9501\uff0c\u53ea\u80fd\u7b49\u5f85\uff1b \u5982\u679c\u6709\u4e00\u4e2a\u534f\u7a0b\u83b7\u53d6\u5199\u9501\uff0c\u5176\u4ed6\u534f\u7a0b\u53ea\u80fd\u7b49\u5f85","title":"lock"},{"location":"base/go/1concurrent/5lock/#_1","text":"\u540c\u65f6\u6709\u591a\u4e2a\u534f\u7a0b\u5bf9\u5171\u4eab\u6570\u636e\u4fee\u6539\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u95ee\u9898","title":"\u95ee\u9898"},{"location":"base/go/1concurrent/5lock/#_2","text":"package main import ( \"fmt\" \"sync\" ) var ( cnt int // \u4e92\u65a5\u9501 lock sync.Mutex // \u8bfb\u5199\u9501 rwLock sync.RWMutex w sync.WaitGroup ) func add() { // \u4e92\u65a5\u9501 for i:= 0; i < 1000; i++ { lock.Lock() cnt++ lock.Unlock() } w.Done() } func get() { // \u8bfb\u9501 rwLock.RLock() rwLock.RUnlock() // \u5199\u9501 rwLock.Lock() rwLock.Unlock() } func main() { // \u52a0\u9501 2000 \u4e0d\u52a0\u9501 1220 w.Add(2) go add() go add() w.Wait() fmt.Println(cnt) } \u4e92\u65a5\u9501\uff1a\u5982\u679c\u4e00\u4e2a\u534f\u7a0b\u83b7\u5f97\u4e92\u65a5\u9501\uff0c\u5176\u4ed6\u534f\u7a0b\u53ea\u80fd\u7b49\u5f85\uff0c\u5982\u679c\u8be5\u534f\u7a0b\u91ca\u653e\u9501\uff0c\u90a3\u4e48\u4f1a\u968f\u673a\u73af\u5f62\u7b49\u5f85\u8be5\u9501\u7684\u4e00\u4e2a\u534f\u7a0b \u8bfb\u5199\u9501\uff1a\u5982\u679c\u6709\u4e00\u4e2a\u534f\u7a0b\u83b7\u53d6\u8bfb\u9501\uff0c\u5176\u4ed6\u534f\u7a0b\u4ecd\u7136\u53ef\u4ee5\u83b7\u53d6\u8bfb\u9501\uff0c\u4f46\u662f\u4e0d\u80fd\u83b7\u53d6\u5199\u9501\uff0c\u53ea\u80fd\u7b49\u5f85\uff1b \u5982\u679c\u6709\u4e00\u4e2a\u534f\u7a0b\u83b7\u53d6\u5199\u9501\uff0c\u5176\u4ed6\u534f\u7a0b\u53ea\u80fd\u7b49\u5f85","title":"\u4e92\u65a5\u9501\u3001\u8bfb\u5199\u9501"},{"location":"base/go/1concurrent/6sync/","text":"sync sync.WaitGroup sync.WaitGroup\u5185\u90e8\u7ef4\u62a4\u7740\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u8ba1\u6570\u5668\u7684\u503c\u53ef\u4ee5\u589e\u52a0\u548c\u51cf\u5c11\u3002 Add(n):+n Done:-1 Wait:\u7b49\u5f85\u8ba1\u6570\u5668\u4e3a0 \u6ce8\u610fsync.WaitGroup\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u4f20\u9012\u7684\u65f6\u5019\u8981\u4f20\u9012\u6307\u9488\u3002 package main import ( \"fmt\" \"sync\" ) var ( wg1 sync.WaitGroup ) func t1() { fmt.Println(\"t1...\") // \u8ba1\u6570\u5668-2 defer wg1.Done() } func main() { // \u8ba1\u6570\u5668+2 wg1.Add(2) go add() go add() // \u8ba9main\u534f\u7a0b\u7b49\u5f85wg\u8ba1\u6570\u5668\u4e3a0\u5728\u6267\u884c wg1.Wait() } sync.Once \u53ea\u6267\u884c\u4e00\u6b21 sync.Once\u5176\u5b9e\u5185\u90e8\u5305\u542b\u4e00\u4e2a\u4e92\u65a5\u9501\u548c\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u4e92\u65a5\u9501\u4fdd\u8bc1\u5e03\u5c14\u503c\u548c\u6570\u636e\u7684\u5b89\u5168\uff0c\u800c\u5e03\u5c14\u503c\u7528\u6765\u8bb0\u5f55\u521d\u59cb\u5316\u662f\u5426\u5b8c\u6210\u3002\u8fd9\u6837\u8bbe\u8ba1\u5c31\u80fd\u4fdd\u8bc1\u521d\u59cb\u5316\u64cd\u4f5c\u7684\u65f6\u5019\u662f\u5e76\u53d1\u5b89\u5168\u7684\u5e76\u4e14\u521d\u59cb\u5316\u64cd\u4f5c\u4e5f\u4e0d\u4f1a\u88ab\u6267\u884c\u591a\u6b21\u3002 package main import ( \"fmt\" \"sync\" ) var ( so sync.Once m map[int]string ) func a2() { m = make(map[int]string) } func a1() { // \u4e0d\u4f7f\u7528 so \u901a\u8fc7\u5224\u65ad m != nil \u53ef\u80fd\u6ca1\u6709\u521d\u59cb\u5316\u5b8c\u6210\u4f46\u662f != nil // \u4f7f\u7528\u534f\u7a0b\u53c8\u4f1a\u6709\u5b89\u5168\u95ee\u9898 so.Do(a2) fmt.Println(\"this is good\") } func main() { go a1() go a1() } sync.Map \u7cfb\u7edf\u5185\u7f6e\u7684map\u4e0d\u5b89\u5168 package main import ( \"fmt\" \"sync\" ) func main() { m1 := sync.Map{} // \u6dfb\u52a0 m1.Store(\"name\", \"matt\") m1.Store(\"age\", 22) // \u83b7\u53d6 fmt.Println(m1.Load(\"name\")) // \u5b58\u50a8\u6216\u8005\u66f4\u65b0 v, ok := m1.LoadOrStore(\"name\", \"matt\") if ok { fmt.Println(v) } // \u5220\u9664 m1.Delete(\"name\") // \u5b58\u5728\u8fd4\u56defalse v, ok = m1.LoadOrStore(\"name\", \"aaa\") if !ok { fmt.Println(v, \"2222load and store\") } //m1.Delete(\"age\") // \u4e0d\u5b58\u5728\u8fd4\u56de false v, ok = m1.Load(\"ccc\") fmt.Println(v, ok) // \u904d\u5386 m1.Range(func(k, v interface{}) bool { fmt.Println(k, v) return true }) }","title":"sync"},{"location":"base/go/1concurrent/6sync/#sync","text":"","title":"sync"},{"location":"base/go/1concurrent/6sync/#syncwaitgroup","text":"sync.WaitGroup\u5185\u90e8\u7ef4\u62a4\u7740\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u8ba1\u6570\u5668\u7684\u503c\u53ef\u4ee5\u589e\u52a0\u548c\u51cf\u5c11\u3002 Add(n):+n Done:-1 Wait:\u7b49\u5f85\u8ba1\u6570\u5668\u4e3a0 \u6ce8\u610fsync.WaitGroup\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u4f20\u9012\u7684\u65f6\u5019\u8981\u4f20\u9012\u6307\u9488\u3002 package main import ( \"fmt\" \"sync\" ) var ( wg1 sync.WaitGroup ) func t1() { fmt.Println(\"t1...\") // \u8ba1\u6570\u5668-2 defer wg1.Done() } func main() { // \u8ba1\u6570\u5668+2 wg1.Add(2) go add() go add() // \u8ba9main\u534f\u7a0b\u7b49\u5f85wg\u8ba1\u6570\u5668\u4e3a0\u5728\u6267\u884c wg1.Wait() }","title":"sync.WaitGroup"},{"location":"base/go/1concurrent/6sync/#synconce","text":"\u53ea\u6267\u884c\u4e00\u6b21 sync.Once\u5176\u5b9e\u5185\u90e8\u5305\u542b\u4e00\u4e2a\u4e92\u65a5\u9501\u548c\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u4e92\u65a5\u9501\u4fdd\u8bc1\u5e03\u5c14\u503c\u548c\u6570\u636e\u7684\u5b89\u5168\uff0c\u800c\u5e03\u5c14\u503c\u7528\u6765\u8bb0\u5f55\u521d\u59cb\u5316\u662f\u5426\u5b8c\u6210\u3002\u8fd9\u6837\u8bbe\u8ba1\u5c31\u80fd\u4fdd\u8bc1\u521d\u59cb\u5316\u64cd\u4f5c\u7684\u65f6\u5019\u662f\u5e76\u53d1\u5b89\u5168\u7684\u5e76\u4e14\u521d\u59cb\u5316\u64cd\u4f5c\u4e5f\u4e0d\u4f1a\u88ab\u6267\u884c\u591a\u6b21\u3002 package main import ( \"fmt\" \"sync\" ) var ( so sync.Once m map[int]string ) func a2() { m = make(map[int]string) } func a1() { // \u4e0d\u4f7f\u7528 so \u901a\u8fc7\u5224\u65ad m != nil \u53ef\u80fd\u6ca1\u6709\u521d\u59cb\u5316\u5b8c\u6210\u4f46\u662f != nil // \u4f7f\u7528\u534f\u7a0b\u53c8\u4f1a\u6709\u5b89\u5168\u95ee\u9898 so.Do(a2) fmt.Println(\"this is good\") } func main() { go a1() go a1() }","title":"sync.Once"},{"location":"base/go/1concurrent/6sync/#syncmap","text":"\u7cfb\u7edf\u5185\u7f6e\u7684map\u4e0d\u5b89\u5168 package main import ( \"fmt\" \"sync\" ) func main() { m1 := sync.Map{} // \u6dfb\u52a0 m1.Store(\"name\", \"matt\") m1.Store(\"age\", 22) // \u83b7\u53d6 fmt.Println(m1.Load(\"name\")) // \u5b58\u50a8\u6216\u8005\u66f4\u65b0 v, ok := m1.LoadOrStore(\"name\", \"matt\") if ok { fmt.Println(v) } // \u5220\u9664 m1.Delete(\"name\") // \u5b58\u5728\u8fd4\u56defalse v, ok = m1.LoadOrStore(\"name\", \"aaa\") if !ok { fmt.Println(v, \"2222load and store\") } //m1.Delete(\"age\") // \u4e0d\u5b58\u5728\u8fd4\u56de false v, ok = m1.Load(\"ccc\") fmt.Println(v, ok) // \u904d\u5386 m1.Range(func(k, v interface{}) bool { fmt.Println(k, v) return true }) }","title":"sync.Map"},{"location":"base/go/1concurrent/7atomic/","text":"atomic \u57fa\u7840\u64cd\u4f5c \u539f\u5b50\u64cd\u4f5c \u65b9\u6cd5 \u89e3\u91ca func LoadInt32(addr *int32) (val int32) func LoadInt64(addr *int64 ) (val int64) func LoadUint32(addr *uint32 ) (val uint32) func LoadUint64(addr *uint64 ) (val uint64) func LoadUintptr(addr *uintptr ) (val uintptr) func LoadPointer(addr *unsafe.Pointer ) (val unsafe.Pointer) \u8bfb\u53d6\u64cd\u4f5c func StoreInt32(addr *int32 , val int32) func StoreInt64(addr *int64 , val int64) func StoreUint32(addr *uint32 , val uint32) func StoreUint64(addr *uint64 , val uint64) func StoreUintptr(addr *uintptr , val uintptr) func StorePointer(addr *unsafe.Pointer , val unsafe.Pointer) \u5199\u5165\u64cd\u4f5c func AddInt32(addr *int32 , delta int32) (new int32) func AddInt64(addr *int64 , delta int64) (new int64) func AddUint32(addr *uint32 , delta uint32) (new uint32) func AddUint64(addr *uint64 , delta uint64) (new uint64) func AddUintptr(addr *uintptr , delta uintptr) (new uintptr) \u4fee\u6539\u64cd\u4f5c func SwapInt32(addr *int32 , new int32) (old int32) func SwapInt64(addr *int64 , new int64) (old int64) func SwapUint32(addr *uint32 , new uint32) (old uint32) func SwapUint64(addr *uint64 , new uint64) (old uint64) func SwapUintptr(addr *uintptr , new uintptr) (old uintptr) func SwapPointer(addr *unsafe.Pointer , new unsafe.Pointer) (old unsafe.Pointer) \u4ea4\u6362\u64cd\u4f5c func CompareAndSwapInt32(addr *int32 , old, new int32) (swapped bool) func CompareAndSwapInt64(addr *int64 , old, new int64) (swapped bool) func CompareAndSwapUint32(addr *uint32 , old, new uint32) (swapped bool) func CompareAndSwapUint64(addr *uint64 , old, new uint64) (swapped bool) func CompareAndSwapUintptr(addr *uintptr , old, new uintptr) (swapped bool) func CompareAndSwapPointer(addr *unsafe.Pointer , old, new unsafe.Pointer) (swapped bool) \u6bd4\u8f83\u5e76\u4ea4\u6362\u64cd\u4f5c package main import ( \"fmt\" \"sync/atomic\" ) func main() { var i int64 = 100 res := atomic.AddInt64(&i, 100) res = atomic.SwapInt64(&i, 3) fmt.Println(res, i) }","title":"atomic"},{"location":"base/go/1concurrent/7atomic/#atomic","text":"","title":"atomic"},{"location":"base/go/1concurrent/7atomic/#_1","text":"\u539f\u5b50\u64cd\u4f5c \u65b9\u6cd5 \u89e3\u91ca func LoadInt32(addr *int32) (val int32) func LoadInt64(addr *int64 ) (val int64) func LoadUint32(addr *uint32 ) (val uint32) func LoadUint64(addr *uint64 ) (val uint64) func LoadUintptr(addr *uintptr ) (val uintptr) func LoadPointer(addr *unsafe.Pointer ) (val unsafe.Pointer) \u8bfb\u53d6\u64cd\u4f5c func StoreInt32(addr *int32 , val int32) func StoreInt64(addr *int64 , val int64) func StoreUint32(addr *uint32 , val uint32) func StoreUint64(addr *uint64 , val uint64) func StoreUintptr(addr *uintptr , val uintptr) func StorePointer(addr *unsafe.Pointer , val unsafe.Pointer) \u5199\u5165\u64cd\u4f5c func AddInt32(addr *int32 , delta int32) (new int32) func AddInt64(addr *int64 , delta int64) (new int64) func AddUint32(addr *uint32 , delta uint32) (new uint32) func AddUint64(addr *uint64 , delta uint64) (new uint64) func AddUintptr(addr *uintptr , delta uintptr) (new uintptr) \u4fee\u6539\u64cd\u4f5c func SwapInt32(addr *int32 , new int32) (old int32) func SwapInt64(addr *int64 , new int64) (old int64) func SwapUint32(addr *uint32 , new uint32) (old uint32) func SwapUint64(addr *uint64 , new uint64) (old uint64) func SwapUintptr(addr *uintptr , new uintptr) (old uintptr) func SwapPointer(addr *unsafe.Pointer , new unsafe.Pointer) (old unsafe.Pointer) \u4ea4\u6362\u64cd\u4f5c func CompareAndSwapInt32(addr *int32 , old, new int32) (swapped bool) func CompareAndSwapInt64(addr *int64 , old, new int64) (swapped bool) func CompareAndSwapUint32(addr *uint32 , old, new uint32) (swapped bool) func CompareAndSwapUint64(addr *uint64 , old, new uint64) (swapped bool) func CompareAndSwapUintptr(addr *uintptr , old, new uintptr) (swapped bool) func CompareAndSwapPointer(addr *unsafe.Pointer , old, new unsafe.Pointer) (swapped bool) \u6bd4\u8f83\u5e76\u4ea4\u6362\u64cd\u4f5c package main import ( \"fmt\" \"sync/atomic\" ) func main() { var i int64 = 100 res := atomic.AddInt64(&i, 100) res = atomic.SwapInt64(&i, 3) fmt.Println(res, i) }","title":"\u57fa\u7840\u64cd\u4f5c"},{"location":"base/go/2lib/0string/","text":"\u5b57\u7b26\u4e32\u5e38\u7528\u7684\u51fd\u6570 1.len():\u7edf\u8ba1\u5b57\u7b26\u4e32\u5b57\u8282\u7684\u957f\u5ea6 \u4e00\u4e2a\u4e2d\u6587\u4e09\u4e2a\u5b57\u8282 var str string = \"hello \u4e2d\u6587\" fmt.Println(len(str)) 2.\u5b57\u7b26\u4e32\u904d\u5386\uff0c\u6839\u636e\u5b57\u7b26\u8fdb\u884c\u904d\u5386 str1 := []rune(str) for i := 0; i < len(str1); i++ { fmt.Printf(\"%c\", str1[i]) } 3.\u5b57\u7b26\u4e32\u8f6c\u6574\u6570 str2 := \"1111111\" var i int64 // bitsize\u6307\u5b9a8\uff0c \u5982\u679c\u662f3333 \u5219\u8fd4\u56de128 i, _ = strconv.ParseInt(str2, 10, 64) fmt.Println(i) str3 := \"123\" //var k int k, err := strconv.Atoi(str3) if err != nil { fmt.Println(\"\u8f6c\u6362\u9519\u8bef\") } else { fmt.Println(k) } 4.\u6574\u6570\u8f6c\u5b57\u7b26\u4e32 var str4 string = strconv.Itoa(11) fmt.Println(str4) 5.\u5b57\u7b26\u4e32 \u8f6c []byte: var bytes = []byte(\"hello go\") var str string = \"hello word\" bytes := []byte(str) fmt.Println(bytes) 6.\u5b57\u8282\u8f6c\u5b57\u7b26\u4e32 fmt.Println(string(bytes)) 7.\u5341\u8fdb\u5236\u8f6c\u4efb\u610f\u8fdb\u5236 // \u5341\u8fdb\u5236\u8f6c\u4e8c\u8fdb\u5236 fmt.Println(strconv.FormatInt(67,2)) 8.\u67e5\u627e\u5b50\u4e32\u662f\u5426\u5728\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u4e2d: strings.Contains(\"seafood\", \"foo\") //true // strings Contains fmt.Println(strings.Contains(\"hello\", \"ele\")) 9.\u7edf\u8ba1\u4e00\u4e2a\u5b57\u7b26\u4e32\u6709\u51e0\u4e2a\u6307\u5b9a\u7684\u5b57\u7b26\u4e32 // strings Count fmt.Println(\"strings Count:\" ,strings.Count(\"hello\", \"e\")) 10.\u5b57\u7b26\u4e32\u6bd4\u8f83 EqualFold:\u5ffd\u7565\u5927\u5c0f\u5199 // strings.EqualFold fmt.Println(strings.EqualFold(\"ab\", \"Ab\")) fmt.Println(\"ab\" == \"Ab\") 11\u8fd4\u56de\u5b50\u4e32\u7b2c\u4e00\u6b21\u5728\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u4f4d\u7f6e fmt.Println(\"Index\") fmt.Println(strings.Index(\"abcdef mcatt\", \"c\")) fmt.Println(strings.LastIndex(\"abcdef mcactt\", \"c\")) 12\u8fd4\u56de\u5b50\u4e32\u6700\u540e\u4e00\u6b21\u5728\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u4f4d\u7f6e fmt.Println(strings.LastIndex(\"abcdef mcactt\", \"c\")) 13\u5c06\u6307\u5b9a\u7684\u5b50\u4e32\u66ff\u6362\u6210 \u53e6\u5916\u4e00\u4e2a\u5b50\u4e32: strings.Replace(\"go go hello\", \"go\", \"go \u8bed\u8a00\", n) n \u53ef\u4ee5\u6307 \u5b9a\u4f60\u5e0c\u671b\u66ff\u6362\u51e0\u4e2a\uff0c\u5982\u679c n=-1 \u8868\u793a\u5168\u90e8\u66ff\u6362 fmt.Println(strings.Replace(\"aa bb ccbc bb bb \", \"bb\", \"BB\", -1)) 14\u5b57\u7b26\u4e32\u5206\u5272 str := \"aabcbebeeee\" strArr := strings.Split(str, \"b\") for i := 0; i < len(strArr); i++ { fmt.Print(strArr[i]) } 15\u5b57\u7b26\u4e32\u5927\u5c0f\u5199\u8f6c\u6362 fmt.Println(strings.ToLower(\"Abc\")) fmt.Println(strings.ToUpper(\"Abc\")) 16\u53bb\u9664\u5b57\u7b26\u4e32\u4fe9\u8fb9\u7684\u7a7a\u683c fmt.Println(strings.TrimSpace(\" aa dfer dfdf \")) 17\u5b57\u7b26\u4e32\u6307\u5b9a\u7684\u5b57\u7b26\u53bb\u9664 fmt.Println(strings.Trim(\"aabbccaa\", \"aa\")) fmt.Println(strings.TrimLeft(\"aabbccaa\", \"aa\")) fmt.Println(strings.TrimRight(\"aabbcccaa\", \"aa\")) 18\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u67d0\u4e2a\u524d\u7f00\u3001\u540e\u7f00 fmt.Println(strings.HasPrefix(\"aabbcc\", \"aa\")) fmt.Println(strings.HasSuffix(\"aabbcc\", \"aa\"))","title":"0string"},{"location":"base/go/2lib/0string/#1len","text":"\u4e00\u4e2a\u4e2d\u6587\u4e09\u4e2a\u5b57\u8282 var str string = \"hello \u4e2d\u6587\" fmt.Println(len(str))","title":"1.len():\u7edf\u8ba1\u5b57\u7b26\u4e32\u5b57\u8282\u7684\u957f\u5ea6"},{"location":"base/go/2lib/0string/#2","text":"str1 := []rune(str) for i := 0; i < len(str1); i++ { fmt.Printf(\"%c\", str1[i]) }","title":"2.\u5b57\u7b26\u4e32\u904d\u5386\uff0c\u6839\u636e\u5b57\u7b26\u8fdb\u884c\u904d\u5386"},{"location":"base/go/2lib/0string/#3","text":"str2 := \"1111111\" var i int64 // bitsize\u6307\u5b9a8\uff0c \u5982\u679c\u662f3333 \u5219\u8fd4\u56de128 i, _ = strconv.ParseInt(str2, 10, 64) fmt.Println(i) str3 := \"123\" //var k int k, err := strconv.Atoi(str3) if err != nil { fmt.Println(\"\u8f6c\u6362\u9519\u8bef\") } else { fmt.Println(k) }","title":"3.\u5b57\u7b26\u4e32\u8f6c\u6574\u6570"},{"location":"base/go/2lib/0string/#4","text":"var str4 string = strconv.Itoa(11) fmt.Println(str4)","title":"4.\u6574\u6570\u8f6c\u5b57\u7b26\u4e32"},{"location":"base/go/2lib/0string/#5-byte-var-bytes-bytehello-go","text":"var str string = \"hello word\" bytes := []byte(str) fmt.Println(bytes)","title":"5.\u5b57\u7b26\u4e32 \u8f6c []byte: var bytes = []byte(\"hello go\")"},{"location":"base/go/2lib/0string/#6","text":"fmt.Println(string(bytes))","title":"6.\u5b57\u8282\u8f6c\u5b57\u7b26\u4e32"},{"location":"base/go/2lib/0string/#7","text":"// \u5341\u8fdb\u5236\u8f6c\u4e8c\u8fdb\u5236 fmt.Println(strconv.FormatInt(67,2))","title":"7.\u5341\u8fdb\u5236\u8f6c\u4efb\u610f\u8fdb\u5236"},{"location":"base/go/2lib/0string/#8-stringscontainsseafood-foo-true","text":"// strings Contains fmt.Println(strings.Contains(\"hello\", \"ele\"))","title":"8.\u67e5\u627e\u5b50\u4e32\u662f\u5426\u5728\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u4e2d: strings.Contains(\"seafood\", \"foo\") //true"},{"location":"base/go/2lib/0string/#9","text":"// strings Count fmt.Println(\"strings Count:\" ,strings.Count(\"hello\", \"e\"))","title":"9.\u7edf\u8ba1\u4e00\u4e2a\u5b57\u7b26\u4e32\u6709\u51e0\u4e2a\u6307\u5b9a\u7684\u5b57\u7b26\u4e32"},{"location":"base/go/2lib/0string/#10","text":"EqualFold:\u5ffd\u7565\u5927\u5c0f\u5199 // strings.EqualFold fmt.Println(strings.EqualFold(\"ab\", \"Ab\")) fmt.Println(\"ab\" == \"Ab\")","title":"10.\u5b57\u7b26\u4e32\u6bd4\u8f83"},{"location":"base/go/2lib/0string/#11","text":"fmt.Println(\"Index\") fmt.Println(strings.Index(\"abcdef mcatt\", \"c\")) fmt.Println(strings.LastIndex(\"abcdef mcactt\", \"c\"))","title":"11\u8fd4\u56de\u5b50\u4e32\u7b2c\u4e00\u6b21\u5728\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u4f4d\u7f6e"},{"location":"base/go/2lib/0string/#12","text":"fmt.Println(strings.LastIndex(\"abcdef mcactt\", \"c\"))","title":"12\u8fd4\u56de\u5b50\u4e32\u6700\u540e\u4e00\u6b21\u5728\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u4f4d\u7f6e"},{"location":"base/go/2lib/0string/#13-stringsreplacego-go-hello-go-go-n-n-n-1","text":"fmt.Println(strings.Replace(\"aa bb ccbc bb bb \", \"bb\", \"BB\", -1))","title":"13\u5c06\u6307\u5b9a\u7684\u5b50\u4e32\u66ff\u6362\u6210 \u53e6\u5916\u4e00\u4e2a\u5b50\u4e32: strings.Replace(\"go go hello\", \"go\", \"go \u8bed\u8a00\", n) n \u53ef\u4ee5\u6307 \u5b9a\u4f60\u5e0c\u671b\u66ff\u6362\u51e0\u4e2a\uff0c\u5982\u679c n=-1 \u8868\u793a\u5168\u90e8\u66ff\u6362"},{"location":"base/go/2lib/0string/#14","text":"str := \"aabcbebeeee\" strArr := strings.Split(str, \"b\") for i := 0; i < len(strArr); i++ { fmt.Print(strArr[i]) }","title":"14\u5b57\u7b26\u4e32\u5206\u5272"},{"location":"base/go/2lib/0string/#15","text":"fmt.Println(strings.ToLower(\"Abc\")) fmt.Println(strings.ToUpper(\"Abc\"))","title":"15\u5b57\u7b26\u4e32\u5927\u5c0f\u5199\u8f6c\u6362"},{"location":"base/go/2lib/0string/#16","text":"fmt.Println(strings.TrimSpace(\" aa dfer dfdf \"))","title":"16\u53bb\u9664\u5b57\u7b26\u4e32\u4fe9\u8fb9\u7684\u7a7a\u683c"},{"location":"base/go/2lib/0string/#17","text":"fmt.Println(strings.Trim(\"aabbccaa\", \"aa\")) fmt.Println(strings.TrimLeft(\"aabbccaa\", \"aa\")) fmt.Println(strings.TrimRight(\"aabbcccaa\", \"aa\"))","title":"17\u5b57\u7b26\u4e32\u6307\u5b9a\u7684\u5b57\u7b26\u53bb\u9664"},{"location":"base/go/2lib/0string/#18","text":"fmt.Println(strings.HasPrefix(\"aabbcc\", \"aa\")) fmt.Println(strings.HasSuffix(\"aabbcc\", \"aa\"))","title":"18\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u67d0\u4e2a\u524d\u7f00\u3001\u540e\u7f00"},{"location":"base/go/2lib/1time/","text":"\u65f6\u95f4 \u65f6\u95f4\u7c7b\u578b time.Time\u7c7b\u578b\u8868\u793a\u65f6\u95f4\u3002 time.Now()\u51fd\u6570\u83b7\u53d6\u5f53\u524d\u7684\u65f6\u95f4\u5bf9\u8c61\uff0c\u7136\u540e\u83b7\u53d6\u65f6\u95f4\u5bf9\u8c61\u7684\u5e74\u6708\u65e5\u65f6\u5206\u79d2\u7b49\u4fe1\u606f package main import ( \"fmt\" \"time\" ) func main() { // 1\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 t := time.Now() fmt.Println(t) year := t.Year() month := t.Month() day := t.Day() hour := t.Hour() minute := t.Minute() second := t.Second() fmt.Println(year, month, day, hour, minute, second) // 2.\u83b7\u53d6\u65f6\u95f4\u6233 // s timestamp1 := t.Unix() // ns timestamp2 := t.UnixNano() fmt.Println(timestamp1, timestamp2) // \u65f6\u95f4\u6233 -> \u65f6\u95f4\u5bf9\u8c61 t1 := time.Unix(timestamp1, 0) fmt.Println(t1) // 3.\u65f6\u95f4\u95f4\u9694 fmt.Println(time.Second, time.Minute) // 4.\u65f6\u95f4\u64cd\u4f5c op := time.Now() opAdd := op.Add(time.Hour) fmt.Println(op, opAdd) fmt.Println(op.Sub(opAdd)) fmt.Println(op.Equal(opAdd), \"equal\") // op \u662f\u5426\u5728opAdd\u4e4b\u524d \u662f\uff1atrue fmt.Println(op.Before(opAdd), \"before\") fmt.Println(op.After(opAdd), \"after\") // \u5b9a\u65f6\u5668 \u53ef\u53c2\u8003\u5e76\u53d1 fmt.Println(\"\u65f6\u95f4\u683c\u5f0f\u5316--------------\") // 5 \u65f6\u95f4\u683c\u5f0f\u5316 ft := time.Now() // \u683c\u5f0f\u5316\u7684\u6a21\u677f\u4e3aGo\u7684\u51fa\u751f\u65f6\u95f42006\u5e741\u67082\u53f715\u70b904\u5206 Mon Jan // 24\u5c0f\u65f6\u5236 fmt.Println(ft.Format(\"2006-01-02 15:04:05.000 Mon Jan\")) // 12\u5c0f\u65f6\u5236 fmt.Println(ft.Format(\"2006-01-02 03:04:05.000 PM Mon Jan\")) fmt.Println(ft.Format(\"2006/01/02 15:04\")) fmt.Println(ft.Format(\"15:04 2006/01/02\")) fmt.Println(ft.Format(\"2006-01-02\")) // \u52a0\u8f7d\u65f6\u533a loc, err := time.LoadLocation(\"Asia/Shanghai\") if err != nil { fmt.Println(err) return } // \u6309\u7167\u6307\u5b9a\u65f6\u533a\u548c\u6307\u5b9a\u683c\u5f0f\u89e3\u6790\u5b57\u7b26\u4e32\u65f6\u95f4 pT, err := time.ParseInLocation(\"2006/01/02 15:04:05\", \"2018/08/04 14:15:20\", loc) if err != nil { fmt.Println(err) return } fmt.Println(pT) } \u65f6\u95f4\u6233 \u65f6\u95f4\u6233\u662f\u81ea1970\u5e741\u67081\u65e5\uff0808:00:00GMT\uff09\u81f3\u5f53\u524d\u65f6\u95f4\u7684\u603b\u79d2\u6570\u3002\u5b83\u4e5f\u88ab\u79f0\u4e3aUnix\u65f6\u95f4\u6233\uff08UnixTimestamp\uff09\u3002 package main import ( \"fmt\" \"time\" ) func main() { // 2.\u83b7\u53d6\u65f6\u95f4\u6233 // s timestamp1 := t.Unix() // ns timestamp2 := t.UnixNano() fmt.Println(timestamp1, timestamp2) // \u65f6\u95f4\u6233 -> \u65f6\u95f4\u5bf9\u8c61 t1 := time.Unix(timestamp1, 0) fmt.Println(t1) } \u65f6\u95f4\u95f4\u9694 \u65f6\u95f4\u95f4\u9694 const ( Nanosecond Duration = 1 Microsecond = 1000 * Nanosecond Millisecond = 1000 * Microsecond Second = 1000 * Millisecond Minute = 60 * Second Hour = 60 * Minute ) \u65f6\u95f4\u64cd\u4f5c add t1.Add(time.Second) sub \u8fd4\u56de\u4e00\u4e2a\u65f6\u95f4\u6bb5t-u\u3002 \u5982\u679c\u7ed3\u679c\u8d85\u51fa\u4e86Duration\u53ef\u4ee5\u8868\u793a\u7684\u6700\u5927\u503c/\u6700\u5c0f\u503c\uff0c\u5c06\u8fd4\u56de\u6700\u5927\u503c/\u6700\u5c0f\u503c\u3002 \u8981\u83b7\u53d6\u65f6\u95f4\u70b9t-d\uff08d\u4e3aDuration\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528t.Add(-d)\u3002 time.Sub(time.Second) Equal \u5224\u65ad\u4fe9\u4e2a\u65f6\u95f4\u662f\u5426\u76f8\u7b49\uff0c \u548ct1 == t2\u4e0d\u540c\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u8fd8\u4f1a\u6bd4\u8f83\u5730\u533a\u548c\u65f6\u95f4 t1.Equal(t2) Before After package main import ( \"fmt\" \"time\" ) func main() { // 4.\u65f6\u95f4\u64cd\u4f5c op := time.Now() opAdd := op.Add(time.Hour) fmt.Println(op, opAdd) fmt.Println(op.Sub(opAdd)) fmt.Println(op.Equal(opAdd), \"equal\") // op \u662f\u5426\u5728opAdd\u4e4b\u524d \u662f\uff1atrue fmt.Println(op.Before(opAdd), \"before\") fmt.Println(op.After(opAdd), \"after\") // \u5b9a\u65f6\u5668 \u53ef\u53c2\u8003\u5e76\u53d1 } \u65f6\u95f4\u683c\u5f0f\u5316 go\u8bde\u751f\u65f6\u95f4\uff1a 2006 0102 15:04 2006 1234 \u5982\u679c\u60f3\u683c\u5f0f\u5316\u4e3a12\u5c0f\u65f6\u65b9\u5f0f\uff0c\u9700\u6307\u5b9aPM\u3002 package main import ( \"fmt\" \"time\" ) func main() { fmt.Println(\"\u65f6\u95f4\u683c\u5f0f\u5316--------------\") // 5 \u65f6\u95f4\u683c\u5f0f\u5316 ft := time.Now() // \u683c\u5f0f\u5316\u7684\u6a21\u677f\u4e3aGo\u7684\u51fa\u751f\u65f6\u95f42006\u5e741\u67082\u53f715\u70b904\u5206 Mon Jan // 24\u5c0f\u65f6\u5236 fmt.Println(ft.Format(\"2006-01-02 15:04:05.000 Mon Jan\")) // 12\u5c0f\u65f6\u5236 fmt.Println(ft.Format(\"2006-01-02 03:04:05.000 PM Mon Jan\")) fmt.Println(ft.Format(\"2006/01/02 15:04\")) fmt.Println(ft.Format(\"15:04 2006/01/02\")) fmt.Println(ft.Format(\"2006-01-02\")) // \u52a0\u8f7d\u65f6\u533a loc, err := time.LoadLocation(\"Asia/Shanghai\") if err != nil { fmt.Println(err) return } // \u6309\u7167\u6307\u5b9a\u65f6\u533a\u548c\u6307\u5b9a\u683c\u5f0f\u89e3\u6790\u5b57\u7b26\u4e32\u65f6\u95f4 pT, err := time.ParseInLocation(\"2006/01/02 15:04:05\", \"2018/08/04 14:15:20\", loc) if err != nil { fmt.Println(err) return } fmt.Println(pT) }","title":"\u65f6\u95f4"},{"location":"base/go/2lib/1time/#_1","text":"","title":"\u65f6\u95f4"},{"location":"base/go/2lib/1time/#_2","text":"time.Time\u7c7b\u578b\u8868\u793a\u65f6\u95f4\u3002 time.Now()\u51fd\u6570\u83b7\u53d6\u5f53\u524d\u7684\u65f6\u95f4\u5bf9\u8c61\uff0c\u7136\u540e\u83b7\u53d6\u65f6\u95f4\u5bf9\u8c61\u7684\u5e74\u6708\u65e5\u65f6\u5206\u79d2\u7b49\u4fe1\u606f package main import ( \"fmt\" \"time\" ) func main() { // 1\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 t := time.Now() fmt.Println(t) year := t.Year() month := t.Month() day := t.Day() hour := t.Hour() minute := t.Minute() second := t.Second() fmt.Println(year, month, day, hour, minute, second) // 2.\u83b7\u53d6\u65f6\u95f4\u6233 // s timestamp1 := t.Unix() // ns timestamp2 := t.UnixNano() fmt.Println(timestamp1, timestamp2) // \u65f6\u95f4\u6233 -> \u65f6\u95f4\u5bf9\u8c61 t1 := time.Unix(timestamp1, 0) fmt.Println(t1) // 3.\u65f6\u95f4\u95f4\u9694 fmt.Println(time.Second, time.Minute) // 4.\u65f6\u95f4\u64cd\u4f5c op := time.Now() opAdd := op.Add(time.Hour) fmt.Println(op, opAdd) fmt.Println(op.Sub(opAdd)) fmt.Println(op.Equal(opAdd), \"equal\") // op \u662f\u5426\u5728opAdd\u4e4b\u524d \u662f\uff1atrue fmt.Println(op.Before(opAdd), \"before\") fmt.Println(op.After(opAdd), \"after\") // \u5b9a\u65f6\u5668 \u53ef\u53c2\u8003\u5e76\u53d1 fmt.Println(\"\u65f6\u95f4\u683c\u5f0f\u5316--------------\") // 5 \u65f6\u95f4\u683c\u5f0f\u5316 ft := time.Now() // \u683c\u5f0f\u5316\u7684\u6a21\u677f\u4e3aGo\u7684\u51fa\u751f\u65f6\u95f42006\u5e741\u67082\u53f715\u70b904\u5206 Mon Jan // 24\u5c0f\u65f6\u5236 fmt.Println(ft.Format(\"2006-01-02 15:04:05.000 Mon Jan\")) // 12\u5c0f\u65f6\u5236 fmt.Println(ft.Format(\"2006-01-02 03:04:05.000 PM Mon Jan\")) fmt.Println(ft.Format(\"2006/01/02 15:04\")) fmt.Println(ft.Format(\"15:04 2006/01/02\")) fmt.Println(ft.Format(\"2006-01-02\")) // \u52a0\u8f7d\u65f6\u533a loc, err := time.LoadLocation(\"Asia/Shanghai\") if err != nil { fmt.Println(err) return } // \u6309\u7167\u6307\u5b9a\u65f6\u533a\u548c\u6307\u5b9a\u683c\u5f0f\u89e3\u6790\u5b57\u7b26\u4e32\u65f6\u95f4 pT, err := time.ParseInLocation(\"2006/01/02 15:04:05\", \"2018/08/04 14:15:20\", loc) if err != nil { fmt.Println(err) return } fmt.Println(pT) }","title":"\u65f6\u95f4\u7c7b\u578b"},{"location":"base/go/2lib/1time/#_3","text":"\u65f6\u95f4\u6233\u662f\u81ea1970\u5e741\u67081\u65e5\uff0808:00:00GMT\uff09\u81f3\u5f53\u524d\u65f6\u95f4\u7684\u603b\u79d2\u6570\u3002\u5b83\u4e5f\u88ab\u79f0\u4e3aUnix\u65f6\u95f4\u6233\uff08UnixTimestamp\uff09\u3002 package main import ( \"fmt\" \"time\" ) func main() { // 2.\u83b7\u53d6\u65f6\u95f4\u6233 // s timestamp1 := t.Unix() // ns timestamp2 := t.UnixNano() fmt.Println(timestamp1, timestamp2) // \u65f6\u95f4\u6233 -> \u65f6\u95f4\u5bf9\u8c61 t1 := time.Unix(timestamp1, 0) fmt.Println(t1) }","title":"\u65f6\u95f4\u6233"},{"location":"base/go/2lib/1time/#_4","text":"\u65f6\u95f4\u95f4\u9694 const ( Nanosecond Duration = 1 Microsecond = 1000 * Nanosecond Millisecond = 1000 * Microsecond Second = 1000 * Millisecond Minute = 60 * Second Hour = 60 * Minute )","title":"\u65f6\u95f4\u95f4\u9694"},{"location":"base/go/2lib/1time/#_5","text":"","title":"\u65f6\u95f4\u64cd\u4f5c"},{"location":"base/go/2lib/1time/#add","text":"t1.Add(time.Second)","title":"add"},{"location":"base/go/2lib/1time/#sub","text":"\u8fd4\u56de\u4e00\u4e2a\u65f6\u95f4\u6bb5t-u\u3002 \u5982\u679c\u7ed3\u679c\u8d85\u51fa\u4e86Duration\u53ef\u4ee5\u8868\u793a\u7684\u6700\u5927\u503c/\u6700\u5c0f\u503c\uff0c\u5c06\u8fd4\u56de\u6700\u5927\u503c/\u6700\u5c0f\u503c\u3002 \u8981\u83b7\u53d6\u65f6\u95f4\u70b9t-d\uff08d\u4e3aDuration\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528t.Add(-d)\u3002 time.Sub(time.Second)","title":"sub"},{"location":"base/go/2lib/1time/#equal","text":"\u5224\u65ad\u4fe9\u4e2a\u65f6\u95f4\u662f\u5426\u76f8\u7b49\uff0c \u548ct1 == t2\u4e0d\u540c\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u8fd8\u4f1a\u6bd4\u8f83\u5730\u533a\u548c\u65f6\u95f4 t1.Equal(t2)","title":"Equal"},{"location":"base/go/2lib/1time/#before","text":"","title":"Before"},{"location":"base/go/2lib/1time/#after","text":"package main import ( \"fmt\" \"time\" ) func main() { // 4.\u65f6\u95f4\u64cd\u4f5c op := time.Now() opAdd := op.Add(time.Hour) fmt.Println(op, opAdd) fmt.Println(op.Sub(opAdd)) fmt.Println(op.Equal(opAdd), \"equal\") // op \u662f\u5426\u5728opAdd\u4e4b\u524d \u662f\uff1atrue fmt.Println(op.Before(opAdd), \"before\") fmt.Println(op.After(opAdd), \"after\") // \u5b9a\u65f6\u5668 \u53ef\u53c2\u8003\u5e76\u53d1 }","title":"After"},{"location":"base/go/2lib/1time/#_6","text":"go\u8bde\u751f\u65f6\u95f4\uff1a 2006 0102 15:04 2006 1234 \u5982\u679c\u60f3\u683c\u5f0f\u5316\u4e3a12\u5c0f\u65f6\u65b9\u5f0f\uff0c\u9700\u6307\u5b9aPM\u3002 package main import ( \"fmt\" \"time\" ) func main() { fmt.Println(\"\u65f6\u95f4\u683c\u5f0f\u5316--------------\") // 5 \u65f6\u95f4\u683c\u5f0f\u5316 ft := time.Now() // \u683c\u5f0f\u5316\u7684\u6a21\u677f\u4e3aGo\u7684\u51fa\u751f\u65f6\u95f42006\u5e741\u67082\u53f715\u70b904\u5206 Mon Jan // 24\u5c0f\u65f6\u5236 fmt.Println(ft.Format(\"2006-01-02 15:04:05.000 Mon Jan\")) // 12\u5c0f\u65f6\u5236 fmt.Println(ft.Format(\"2006-01-02 03:04:05.000 PM Mon Jan\")) fmt.Println(ft.Format(\"2006/01/02 15:04\")) fmt.Println(ft.Format(\"15:04 2006/01/02\")) fmt.Println(ft.Format(\"2006-01-02\")) // \u52a0\u8f7d\u65f6\u533a loc, err := time.LoadLocation(\"Asia/Shanghai\") if err != nil { fmt.Println(err) return } // \u6309\u7167\u6307\u5b9a\u65f6\u533a\u548c\u6307\u5b9a\u683c\u5f0f\u89e3\u6790\u5b57\u7b26\u4e32\u65f6\u95f4 pT, err := time.ParseInLocation(\"2006/01/02 15:04:05\", \"2018/08/04 14:15:20\", loc) if err != nil { fmt.Println(err) return } fmt.Println(pT) }","title":"\u65f6\u95f4\u683c\u5f0f\u5316"},{"location":"base/go/2lib/2flag/","text":"flag os.Args package main import ( \"fmt\" \"os\" ) func main() { if len(os.Args) > 0 { for index, arg := range os.Args { fmt.Println(index, arg) } } } go build -o \"mflag\" mflag.go os.Args\u662f\u4e00\u4e2a\u5b58\u50a8\u547d\u4ee4\u884c\u53c2\u6570\u7684\u5b57\u7b26\u4e32\u5207\u7247\uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u6267\u884c\u6587\u4ef6\u7684\u540d\u79f0\u3002 flag \u652f\u6301\u7684\u7c7b\u578b flag\u5305\u652f\u6301\u7684\u547d\u4ee4\u884c\u53c2\u6570\u7c7b\u578b\u6709bool\u3001int\u3001int64\u3001uint\u3001uint64\u3001float float64\u3001string\u3001duration\u3002 flag\u53c2\u6570 \u6709\u6548\u503c \u5b57\u7b26\u4e32flag \u5408\u6cd5\u5b57\u7b26\u4e32 \u6574\u6570flag 1234\u30010664\u30010x1234\u7b49\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u662f\u8d1f\u6570\u3002 \u6d6e\u70b9\u6570flag \u5408\u6cd5\u6d6e\u70b9\u6570 bool\u7c7b\u578bflag 1, 0, t, f, T, F, true, false, TRUE, FALSE, True, False\u3002 \u65f6\u95f4\u6bb5flag \u4efb\u4f55\u5408\u6cd5\u7684\u65f6\u95f4\u6bb5\u5b57\u7b26\u4e32\u3002\u5982\u201d300ms\u201d\u3001\u201d-1.5h\u201d\u3001\u201d2h45m\u201d\u3002 \u5408\u6cd5\u7684\u5355\u4f4d\u6709\u201dns\u201d\u3001\u201dus\u201d /\u201c\u00b5s\u201d\u3001\u201dms\u201d\u3001\u201ds\u201d\u3001\u201dm\u201d\u3001\u201dh\u201d\u3002 \u5b9a\u4e49 flag.Type() name := flag.StringVar(\"name\", \"jack\", \"\u59d3\u540d\") name:\u5bf9\u5e94\u7c7b\u578b\u7684\u6307\u9488 flag.TypeVar() \u63a8\u8350\u4f7f\u7528 flag.StringVar(&name, \"name\", \"jack\", \"\u59d3\u540d\") flag.IntVar(&age, \"age\", 17, \"\u5e74\u9f84\") flag.BoolVar(&married, \"married\", false, \"\u662f\u5426\u7ed3\u5a5a\") flag.DurationVar(&delay, \"delay\", 0, \"\u65f6\u95f4\u95f4\u9694\") \u89e3\u6790 flag.Parse() -flag xxx \uff08\u4f7f\u7528\u7a7a\u683c\uff0c\u4e00\u4e2a-\u7b26\u53f7\uff09 --flag xxx \uff08\u4f7f\u7528\u7a7a\u683c\uff0c\u4e24\u4e2a-\u7b26\u53f7\uff09 -flag=xxx \uff08\u4f7f\u7528\u7b49\u53f7\uff0c\u4e00\u4e2a-\u7b26\u53f7\uff09 --flag=xxx \uff08\u4f7f\u7528\u7b49\u53f7\uff0c\u4e24\u4e2a-\u7b26\u53f7\uff09 Flag\u89e3\u6790\u5728\u7b2c\u4e00\u4e2a\u975eflag\u53c2\u6570\uff08\u5355\u4e2a\u201d-\u201c\u4e0d\u662fflag\u53c2\u6570\uff09\u4e4b\u524d\u505c\u6b62 \u5176\u4ed6\u51fd\u6570 flag.Args() ////\u8fd4\u56de\u547d\u4ee4\u884c\u53c2\u6570\u540e\u7684\u5176\u4ed6\u53c2\u6570\uff0c\u4ee5[]string\u7c7b\u578b flag.NArg() //\u8fd4\u56de\u547d\u4ee4\u884c\u53c2\u6570\u540e\u7684\u5176\u4ed6\u53c2\u6570\u4e2a\u6570 flag.NFlag() //\u8fd4\u56de\u4f7f\u7528\u7684\u547d\u4ee4\u884c\u53c2\u6570\u4e2a\u6570 \u4f7f\u7528 package main import ( \"flag\" \"fmt\" \"os\" \"time\" ) func main() { if len(os.Args) > 0 { for index, arg := range os.Args { fmt.Println(index, arg) } } var name string var age int var married bool var delay time.Duration flag.StringVar(&name, \"name\", \"jack\", \"\u59d3\u540d\") flag.IntVar(&age, \"age\", 17, \"\u5e74\u9f84\") flag.BoolVar(&married, \"married\", false, \"\u662f\u5426\u7ed3\u5a5a\") flag.DurationVar(&delay, \"delay\", 0, \"\u65f6\u95f4\u95f4\u9694\") // \u89e3\u6790 flag.Parse() fmt.Println(name, age, married, delay) fmt.Println(flag.Args()) fmt.Println(flag.NArg()) fmt.Println(flag.NFlag()) }","title":"flag"},{"location":"base/go/2lib/2flag/#flag","text":"","title":"flag"},{"location":"base/go/2lib/2flag/#osargs","text":"package main import ( \"fmt\" \"os\" ) func main() { if len(os.Args) > 0 { for index, arg := range os.Args { fmt.Println(index, arg) } } } go build -o \"mflag\" mflag.go os.Args\u662f\u4e00\u4e2a\u5b58\u50a8\u547d\u4ee4\u884c\u53c2\u6570\u7684\u5b57\u7b26\u4e32\u5207\u7247\uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u6267\u884c\u6587\u4ef6\u7684\u540d\u79f0\u3002","title":"os.Args"},{"location":"base/go/2lib/2flag/#flag_1","text":"","title":"flag"},{"location":"base/go/2lib/2flag/#_1","text":"flag\u5305\u652f\u6301\u7684\u547d\u4ee4\u884c\u53c2\u6570\u7c7b\u578b\u6709bool\u3001int\u3001int64\u3001uint\u3001uint64\u3001float float64\u3001string\u3001duration\u3002 flag\u53c2\u6570 \u6709\u6548\u503c \u5b57\u7b26\u4e32flag \u5408\u6cd5\u5b57\u7b26\u4e32 \u6574\u6570flag 1234\u30010664\u30010x1234\u7b49\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u662f\u8d1f\u6570\u3002 \u6d6e\u70b9\u6570flag \u5408\u6cd5\u6d6e\u70b9\u6570 bool\u7c7b\u578bflag 1, 0, t, f, T, F, true, false, TRUE, FALSE, True, False\u3002 \u65f6\u95f4\u6bb5flag \u4efb\u4f55\u5408\u6cd5\u7684\u65f6\u95f4\u6bb5\u5b57\u7b26\u4e32\u3002\u5982\u201d300ms\u201d\u3001\u201d-1.5h\u201d\u3001\u201d2h45m\u201d\u3002 \u5408\u6cd5\u7684\u5355\u4f4d\u6709\u201dns\u201d\u3001\u201dus\u201d /\u201c\u00b5s\u201d\u3001\u201dms\u201d\u3001\u201ds\u201d\u3001\u201dm\u201d\u3001\u201dh\u201d\u3002","title":"\u652f\u6301\u7684\u7c7b\u578b"},{"location":"base/go/2lib/2flag/#_2","text":"","title":"\u5b9a\u4e49"},{"location":"base/go/2lib/2flag/#flagtype","text":"name := flag.StringVar(\"name\", \"jack\", \"\u59d3\u540d\") name:\u5bf9\u5e94\u7c7b\u578b\u7684\u6307\u9488","title":"flag.Type()"},{"location":"base/go/2lib/2flag/#flagtypevar","text":"flag.StringVar(&name, \"name\", \"jack\", \"\u59d3\u540d\") flag.IntVar(&age, \"age\", 17, \"\u5e74\u9f84\") flag.BoolVar(&married, \"married\", false, \"\u662f\u5426\u7ed3\u5a5a\") flag.DurationVar(&delay, \"delay\", 0, \"\u65f6\u95f4\u95f4\u9694\")","title":"flag.TypeVar() \u63a8\u8350\u4f7f\u7528"},{"location":"base/go/2lib/2flag/#_3","text":"flag.Parse() -flag xxx \uff08\u4f7f\u7528\u7a7a\u683c\uff0c\u4e00\u4e2a-\u7b26\u53f7\uff09 --flag xxx \uff08\u4f7f\u7528\u7a7a\u683c\uff0c\u4e24\u4e2a-\u7b26\u53f7\uff09 -flag=xxx \uff08\u4f7f\u7528\u7b49\u53f7\uff0c\u4e00\u4e2a-\u7b26\u53f7\uff09 --flag=xxx \uff08\u4f7f\u7528\u7b49\u53f7\uff0c\u4e24\u4e2a-\u7b26\u53f7\uff09 Flag\u89e3\u6790\u5728\u7b2c\u4e00\u4e2a\u975eflag\u53c2\u6570\uff08\u5355\u4e2a\u201d-\u201c\u4e0d\u662fflag\u53c2\u6570\uff09\u4e4b\u524d\u505c\u6b62","title":"\u89e3\u6790"},{"location":"base/go/2lib/2flag/#_4","text":"flag.Args() ////\u8fd4\u56de\u547d\u4ee4\u884c\u53c2\u6570\u540e\u7684\u5176\u4ed6\u53c2\u6570\uff0c\u4ee5[]string\u7c7b\u578b flag.NArg() //\u8fd4\u56de\u547d\u4ee4\u884c\u53c2\u6570\u540e\u7684\u5176\u4ed6\u53c2\u6570\u4e2a\u6570 flag.NFlag() //\u8fd4\u56de\u4f7f\u7528\u7684\u547d\u4ee4\u884c\u53c2\u6570\u4e2a\u6570","title":"\u5176\u4ed6\u51fd\u6570"},{"location":"base/go/2lib/2flag/#_5","text":"package main import ( \"flag\" \"fmt\" \"os\" \"time\" ) func main() { if len(os.Args) > 0 { for index, arg := range os.Args { fmt.Println(index, arg) } } var name string var age int var married bool var delay time.Duration flag.StringVar(&name, \"name\", \"jack\", \"\u59d3\u540d\") flag.IntVar(&age, \"age\", 17, \"\u5e74\u9f84\") flag.BoolVar(&married, \"married\", false, \"\u662f\u5426\u7ed3\u5a5a\") flag.DurationVar(&delay, \"delay\", 0, \"\u65f6\u95f4\u95f4\u9694\") // \u89e3\u6790 flag.Parse() fmt.Println(name, age, married, delay) fmt.Println(flag.Args()) fmt.Println(flag.NArg()) fmt.Println(flag.NFlag()) }","title":"\u4f7f\u7528"},{"location":"base/go/2lib/3log/","text":"log logger \u4f7f\u7528 Print\u7cfb\u5217(Print|Printf|Println\uff09\u3001Fatal\u7cfb\u5217\uff08Fatal|Fatalf|Fatalln\uff09\u3001\u548cPanic\u7cfb\u5217\uff08Panic|Panicf|Panicln\uff09 package main import ( \"fmt\" \"log\" ) func main() { v := \"this is log\" log.Print(v) log.Println(v) log.Printf(\"\u666e\u901a\u65e5\u5fd7%s\", v) // Fatal\u7cfb\u5217\u51fd\u6570\u4f1a\u5728\u5199\u5165\u65e5\u5fd7\u4fe1\u606f\u540e\u8c03\u7528os.Exit(1) log.Fatalln(\"fatal \u65e5\u5fd7\") log.Panicln(\"panic \u65e5\u5fd7\") } \u914d\u7f6e log\u6807\u51c6\u5e93\u4e2d\u7684Flags\u51fd\u6570\u4f1a\u8fd4\u56de\u6807\u51c6logger\u7684\u8f93\u51fa\u914d\u7f6e\uff0c\u800cSetFlags\u51fd\u6570\u7528\u6765\u8bbe\u7f6e\u6807\u51c6logger\u7684\u8f93\u51fa\u914d\u7f6e\u3002 const ( // \u63a7\u5236\u8f93\u51fa\u65e5\u5fd7\u4fe1\u606f\u7684\u7ec6\u8282\uff0c\u4e0d\u80fd\u63a7\u5236\u8f93\u51fa\u7684\u987a\u5e8f\u548c\u683c\u5f0f\u3002 // \u8f93\u51fa\u7684\u65e5\u5fd7\u5728\u6bcf\u4e00\u9879\u540e\u4f1a\u6709\u4e00\u4e2a\u5192\u53f7\u5206\u9694\uff1a\u4f8b\u59822009/01/23 01:23:23.123123 /a/b/c/d.go:23: message Ldate = 1 << iota // \u65e5\u671f\uff1a2009/01/23 Ltime // \u65f6\u95f4\uff1a01:23:23 Lmicroseconds // \u5fae\u79d2\u7ea7\u522b\u7684\u65f6\u95f4\uff1a01:23:23.123123\uff08\u7528\u4e8e\u589e\u5f3aLtime\u4f4d\uff09 Llongfile // \u6587\u4ef6\u5168\u8def\u5f84\u540d+\u884c\u53f7\uff1a /a/b/c/d.go:23 Lshortfile // \u6587\u4ef6\u540d+\u884c\u53f7\uff1ad.go:23\uff08\u4f1a\u8986\u76d6\u6389Llongfile\uff09 LUTC // \u4f7f\u7528UTC\u65f6\u95f4 LstdFlags = Ldate | Ltime // \u6807\u51c6logger\u7684\u521d\u59cb\u503c ) \u57fa\u7840\u914d\u7f6e \u914d\u7f6e\u524d\u7f00 \u914d\u7f6e\u8f93\u51fa\u7684\u4f4d\u7f6e package main import ( \"fmt\" \"log\" \"os\" ) func main() { logFile, err := os.OpenFile(\"./imatt.log\", os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0644) if err != nil { fmt.Println(\"open log file failed, err:\", err) return } log.SetFlags(log.Llongfile | log.Lmicroseconds | log.Ldate) log.SetPrefix(\"[imatt]\") log.SetOutput(logFile) v := \"this is log\" log.Print(v) log.Println(v) log.Printf(\"\u666e\u901a\u65e5\u5fd7%s\", v) // Fatal\u7cfb\u5217\u51fd\u6570\u4f1a\u5728\u5199\u5165\u65e5\u5fd7\u4fe1\u606f\u540e\u8c03\u7528os.Exit(1) log.Fatalln(\"fatal \u65e5\u5fd7\") log.Panicln(\"panic \u65e5\u5fd7\") } \u521b\u5efalogger func New(out io.Writer, prefix string, flag int) *Logger package main import ( \"log\" \"os\" ) func main() { logger := log.New(os.Stdout, \"<matt>\", log.Lshortfile|log.Ldate|log.Ltime) logger.Println(\"this is log\") } \u7b2c\u4e09\u65b9\u65e5\u5fd7\u5e93 logrus\u3001zap","title":"log"},{"location":"base/go/2lib/3log/#log","text":"","title":"log"},{"location":"base/go/2lib/3log/#logger","text":"","title":"logger"},{"location":"base/go/2lib/3log/#_1","text":"Print\u7cfb\u5217(Print|Printf|Println\uff09\u3001Fatal\u7cfb\u5217\uff08Fatal|Fatalf|Fatalln\uff09\u3001\u548cPanic\u7cfb\u5217\uff08Panic|Panicf|Panicln\uff09 package main import ( \"fmt\" \"log\" ) func main() { v := \"this is log\" log.Print(v) log.Println(v) log.Printf(\"\u666e\u901a\u65e5\u5fd7%s\", v) // Fatal\u7cfb\u5217\u51fd\u6570\u4f1a\u5728\u5199\u5165\u65e5\u5fd7\u4fe1\u606f\u540e\u8c03\u7528os.Exit(1) log.Fatalln(\"fatal \u65e5\u5fd7\") log.Panicln(\"panic \u65e5\u5fd7\") }","title":"\u4f7f\u7528"},{"location":"base/go/2lib/3log/#_2","text":"log\u6807\u51c6\u5e93\u4e2d\u7684Flags\u51fd\u6570\u4f1a\u8fd4\u56de\u6807\u51c6logger\u7684\u8f93\u51fa\u914d\u7f6e\uff0c\u800cSetFlags\u51fd\u6570\u7528\u6765\u8bbe\u7f6e\u6807\u51c6logger\u7684\u8f93\u51fa\u914d\u7f6e\u3002 const ( // \u63a7\u5236\u8f93\u51fa\u65e5\u5fd7\u4fe1\u606f\u7684\u7ec6\u8282\uff0c\u4e0d\u80fd\u63a7\u5236\u8f93\u51fa\u7684\u987a\u5e8f\u548c\u683c\u5f0f\u3002 // \u8f93\u51fa\u7684\u65e5\u5fd7\u5728\u6bcf\u4e00\u9879\u540e\u4f1a\u6709\u4e00\u4e2a\u5192\u53f7\u5206\u9694\uff1a\u4f8b\u59822009/01/23 01:23:23.123123 /a/b/c/d.go:23: message Ldate = 1 << iota // \u65e5\u671f\uff1a2009/01/23 Ltime // \u65f6\u95f4\uff1a01:23:23 Lmicroseconds // \u5fae\u79d2\u7ea7\u522b\u7684\u65f6\u95f4\uff1a01:23:23.123123\uff08\u7528\u4e8e\u589e\u5f3aLtime\u4f4d\uff09 Llongfile // \u6587\u4ef6\u5168\u8def\u5f84\u540d+\u884c\u53f7\uff1a /a/b/c/d.go:23 Lshortfile // \u6587\u4ef6\u540d+\u884c\u53f7\uff1ad.go:23\uff08\u4f1a\u8986\u76d6\u6389Llongfile\uff09 LUTC // \u4f7f\u7528UTC\u65f6\u95f4 LstdFlags = Ldate | Ltime // \u6807\u51c6logger\u7684\u521d\u59cb\u503c ) \u57fa\u7840\u914d\u7f6e \u914d\u7f6e\u524d\u7f00 \u914d\u7f6e\u8f93\u51fa\u7684\u4f4d\u7f6e package main import ( \"fmt\" \"log\" \"os\" ) func main() { logFile, err := os.OpenFile(\"./imatt.log\", os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0644) if err != nil { fmt.Println(\"open log file failed, err:\", err) return } log.SetFlags(log.Llongfile | log.Lmicroseconds | log.Ldate) log.SetPrefix(\"[imatt]\") log.SetOutput(logFile) v := \"this is log\" log.Print(v) log.Println(v) log.Printf(\"\u666e\u901a\u65e5\u5fd7%s\", v) // Fatal\u7cfb\u5217\u51fd\u6570\u4f1a\u5728\u5199\u5165\u65e5\u5fd7\u4fe1\u606f\u540e\u8c03\u7528os.Exit(1) log.Fatalln(\"fatal \u65e5\u5fd7\") log.Panicln(\"panic \u65e5\u5fd7\") }","title":"\u914d\u7f6e"},{"location":"base/go/2lib/3log/#logger_1","text":"func New(out io.Writer, prefix string, flag int) *Logger package main import ( \"log\" \"os\" ) func main() { logger := log.New(os.Stdout, \"<matt>\", log.Lshortfile|log.Ldate|log.Ltime) logger.Println(\"this is log\") }","title":"\u521b\u5efalogger"},{"location":"base/go/2lib/3log/#_3","text":"logrus\u3001zap","title":"\u7b2c\u4e09\u65b9\u65e5\u5fd7\u5e93"},{"location":"base/go/2lib/4io/","text":"io os.Stdin \uff1a\u6807\u51c6\u8f93\u5165\u7684\u6587\u4ef6\u5b9e\u4f8b\uff0c\u7c7b\u578b\u4e3a *File os.Stdout \uff1a\u6807\u51c6\u8f93\u51fa\u7684\u6587\u4ef6\u5b9e\u4f8b\uff0c\u7c7b\u578b\u4e3a *File os.Stderr \uff1a\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u7684\u6587\u4ef6\u5b9e\u4f8b\uff0c\u7c7b\u578b\u4e3a *File func Create(name string) (file *File, err Error) \u6839\u636e\u63d0\u4f9b\u7684\u6587\u4ef6\u540d\u521b\u5efa\u65b0\u7684\u6587\u4ef6\uff0c\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u6743\u9650\u662f0666 func NewFile(fd uintptr, name string) *File \u6839\u636e\u6587\u4ef6\u63cf\u8ff0\u7b26\u521b\u5efa\u76f8\u5e94\u7684\u6587\u4ef6\uff0c\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61 func Open(name string) (file *File, err Error) \u53ea\u8bfb\u65b9\u5f0f\u6253\u5f00\u4e00\u4e2a\u540d\u79f0\u4e3aname\u7684\u6587\u4ef6 func OpenFile(name string, flag int, perm uint32) (file *File, err Error) \u6253\u5f00\u540d\u79f0\u4e3aname\u7684\u6587\u4ef6\uff0cflag\u662f\u6253\u5f00\u7684\u65b9\u5f0f\uff0c\u53ea\u8bfb\u3001\u8bfb\u5199\u7b49\uff0cperm\u662f\u6743\u9650 func (file *File) Write(b []byte) (n int, err Error) \u5199\u5165byte\u7c7b\u578b\u7684\u4fe1\u606f\u5230\u6587\u4ef6 func (file *File) WriteAt(b []byte, off int64) (n int, err Error) \u5728\u6307\u5b9a\u4f4d\u7f6e\u5f00\u59cb\u5199\u5165byte\u7c7b\u578b\u7684\u4fe1\u606f func (file *File) WriteString(s string) (ret int, err Error) \u5199\u5165string\u4fe1\u606f\u5230\u6587\u4ef6 func (file *File) Read(b []byte) (n int, err Error) \u8bfb\u53d6\u6570\u636e\u5230b\u4e2d func (file *File) ReadAt(b []byte, off int64) (n int, err Error) \u4eceoff\u5f00\u59cb\u8bfb\u53d6\u6570\u636e\u5230b\u4e2d func Remove(name string) Error \u5220\u9664\u6587\u4ef6\u540d\u4e3aname\u7684\u6587\u4ef6 \u6253\u5f00\u5173\u95ed\u6587\u4ef6 package main import ( \"fmt\" \"os\" ) func main() { f, err := os.Open(\"./f.go\") if err != nil { fmt.Println(\"open file failed! err:\", err) return } defer f.Close() } \u5199\u6587\u4ef6 package main import ( \"fmt\" \"os\" ) func main() { f, err := os.Create(\"./a.txt\") if err != nil { fmt.Println(\"create file failed, err = \", err) return } defer f.Close() for i := 0; i < 100; i++ { f.WriteString(\"matt\") f.Write([]byte(\"abcd\")) } } \u8bfb\u6587\u4ef6 package main import ( \"fmt\" \"io\" \"os\" ) func main() { //var a1 [10]int = [10]int{1, 2, 3, 4} //var a2 []int //// \u7528\u4e8e\u4e00\u6b21\u6dfb\u52a0\u591a\u4e2a //a2 = append(a2, a1[:10]...) //fmt.Println(a2) f, err := os.Open(\"./m.txt\") if err != nil { fmt.Println(err) return } defer f.Close() var buf [128]byte var content []byte for { n, err := f.Read(buf[:]) if err == io.EOF { break } if err != nil { fmt.Println(\"read file err \", err) return } content = append(content, buf[:n]...) } fmt.Println(string(content)) } \u62f7\u8d1d\u6587\u4ef6 package main import ( \"fmt\" \"io\" \"os\" ) // \u62f7\u8d1d\u6587\u4ef6 func main() { srcF, err := os.Open(\"./m.txt\") if err != nil { fmt.Println(err) return } dstF, err := os.Create(\"./m1.txt\") if err != nil { fmt.Println(err) return } buf := make([]byte, 1024) for { n, err := srcF.Read(buf) if err == io.EOF { break } if err != nil { fmt.Println(err) return } dstF.Write(buf[:n]) } srcF.Close() dstF.Close() } bufio \u6a21\u5f0f \u542b\u4e49 os.O_WRONLY \u53ea\u5199 os.O_CREATE \u521b\u5efa\u6587\u4ef6 os.O_RDONLY \u53ea\u8bfb os.O_RDWR \u8bfb\u5199 os.O_TRUNC \u6e05\u7a7a os.O_APPEND \u8ffd\u52a0 package main import ( \"bufio\" \"fmt\" \"io\" \"os\" ) func w() { f, err := os.OpenFile(\"./m.txt\", os.O_CREATE|os.O_WRONLY, 0777) if err != nil { return } defer f.Close() writer := bufio.NewWriter(f) for i := 0; i < 100; i++ { writer.WriteString(\"matt\\n\") } writer.Flush() } func r() { f, err := os.Open(\"./m.txt\") if err != nil { fmt.Println(err) return } defer f.Close() reader := bufio.NewReaderSize(f, 100) for { line, prefix, err := reader.ReadLine() if err == io.EOF { break } if err != nil { return } fmt.Println(string(line), prefix) } } func main() { //w() r() } ioutil package main import ( \"fmt\" \"io/ioutil\" ) func iw() { err := ioutil.WriteFile(\"m.txt\", []byte(\"www.baidu.com\"), 0777) if err != nil { fmt.Println(err) return } } func ir() { content, err := ioutil.ReadFile(\"m.txt\") if err != nil { return } fmt.Println(string(content)) } func main() { //iw() ir() }","title":"io"},{"location":"base/go/2lib/4io/#io","text":"os.Stdin \uff1a\u6807\u51c6\u8f93\u5165\u7684\u6587\u4ef6\u5b9e\u4f8b\uff0c\u7c7b\u578b\u4e3a *File os.Stdout \uff1a\u6807\u51c6\u8f93\u51fa\u7684\u6587\u4ef6\u5b9e\u4f8b\uff0c\u7c7b\u578b\u4e3a *File os.Stderr \uff1a\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u7684\u6587\u4ef6\u5b9e\u4f8b\uff0c\u7c7b\u578b\u4e3a *File func Create(name string) (file *File, err Error) \u6839\u636e\u63d0\u4f9b\u7684\u6587\u4ef6\u540d\u521b\u5efa\u65b0\u7684\u6587\u4ef6\uff0c\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u6743\u9650\u662f0666 func NewFile(fd uintptr, name string) *File \u6839\u636e\u6587\u4ef6\u63cf\u8ff0\u7b26\u521b\u5efa\u76f8\u5e94\u7684\u6587\u4ef6\uff0c\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61 func Open(name string) (file *File, err Error) \u53ea\u8bfb\u65b9\u5f0f\u6253\u5f00\u4e00\u4e2a\u540d\u79f0\u4e3aname\u7684\u6587\u4ef6 func OpenFile(name string, flag int, perm uint32) (file *File, err Error) \u6253\u5f00\u540d\u79f0\u4e3aname\u7684\u6587\u4ef6\uff0cflag\u662f\u6253\u5f00\u7684\u65b9\u5f0f\uff0c\u53ea\u8bfb\u3001\u8bfb\u5199\u7b49\uff0cperm\u662f\u6743\u9650 func (file *File) Write(b []byte) (n int, err Error) \u5199\u5165byte\u7c7b\u578b\u7684\u4fe1\u606f\u5230\u6587\u4ef6 func (file *File) WriteAt(b []byte, off int64) (n int, err Error) \u5728\u6307\u5b9a\u4f4d\u7f6e\u5f00\u59cb\u5199\u5165byte\u7c7b\u578b\u7684\u4fe1\u606f func (file *File) WriteString(s string) (ret int, err Error) \u5199\u5165string\u4fe1\u606f\u5230\u6587\u4ef6 func (file *File) Read(b []byte) (n int, err Error) \u8bfb\u53d6\u6570\u636e\u5230b\u4e2d func (file *File) ReadAt(b []byte, off int64) (n int, err Error) \u4eceoff\u5f00\u59cb\u8bfb\u53d6\u6570\u636e\u5230b\u4e2d func Remove(name string) Error \u5220\u9664\u6587\u4ef6\u540d\u4e3aname\u7684\u6587\u4ef6","title":"io"},{"location":"base/go/2lib/4io/#_1","text":"package main import ( \"fmt\" \"os\" ) func main() { f, err := os.Open(\"./f.go\") if err != nil { fmt.Println(\"open file failed! err:\", err) return } defer f.Close() }","title":"\u6253\u5f00\u5173\u95ed\u6587\u4ef6"},{"location":"base/go/2lib/4io/#_2","text":"package main import ( \"fmt\" \"os\" ) func main() { f, err := os.Create(\"./a.txt\") if err != nil { fmt.Println(\"create file failed, err = \", err) return } defer f.Close() for i := 0; i < 100; i++ { f.WriteString(\"matt\") f.Write([]byte(\"abcd\")) } }","title":"\u5199\u6587\u4ef6"},{"location":"base/go/2lib/4io/#_3","text":"package main import ( \"fmt\" \"io\" \"os\" ) func main() { //var a1 [10]int = [10]int{1, 2, 3, 4} //var a2 []int //// \u7528\u4e8e\u4e00\u6b21\u6dfb\u52a0\u591a\u4e2a //a2 = append(a2, a1[:10]...) //fmt.Println(a2) f, err := os.Open(\"./m.txt\") if err != nil { fmt.Println(err) return } defer f.Close() var buf [128]byte var content []byte for { n, err := f.Read(buf[:]) if err == io.EOF { break } if err != nil { fmt.Println(\"read file err \", err) return } content = append(content, buf[:n]...) } fmt.Println(string(content)) }","title":"\u8bfb\u6587\u4ef6"},{"location":"base/go/2lib/4io/#_4","text":"package main import ( \"fmt\" \"io\" \"os\" ) // \u62f7\u8d1d\u6587\u4ef6 func main() { srcF, err := os.Open(\"./m.txt\") if err != nil { fmt.Println(err) return } dstF, err := os.Create(\"./m1.txt\") if err != nil { fmt.Println(err) return } buf := make([]byte, 1024) for { n, err := srcF.Read(buf) if err == io.EOF { break } if err != nil { fmt.Println(err) return } dstF.Write(buf[:n]) } srcF.Close() dstF.Close() }","title":"\u62f7\u8d1d\u6587\u4ef6"},{"location":"base/go/2lib/4io/#bufio","text":"\u6a21\u5f0f \u542b\u4e49 os.O_WRONLY \u53ea\u5199 os.O_CREATE \u521b\u5efa\u6587\u4ef6 os.O_RDONLY \u53ea\u8bfb os.O_RDWR \u8bfb\u5199 os.O_TRUNC \u6e05\u7a7a os.O_APPEND \u8ffd\u52a0 package main import ( \"bufio\" \"fmt\" \"io\" \"os\" ) func w() { f, err := os.OpenFile(\"./m.txt\", os.O_CREATE|os.O_WRONLY, 0777) if err != nil { return } defer f.Close() writer := bufio.NewWriter(f) for i := 0; i < 100; i++ { writer.WriteString(\"matt\\n\") } writer.Flush() } func r() { f, err := os.Open(\"./m.txt\") if err != nil { fmt.Println(err) return } defer f.Close() reader := bufio.NewReaderSize(f, 100) for { line, prefix, err := reader.ReadLine() if err == io.EOF { break } if err != nil { return } fmt.Println(string(line), prefix) } } func main() { //w() r() }","title":"bufio"},{"location":"base/go/2lib/4io/#ioutil","text":"package main import ( \"fmt\" \"io/ioutil\" ) func iw() { err := ioutil.WriteFile(\"m.txt\", []byte(\"www.baidu.com\"), 0777) if err != nil { fmt.Println(err) return } } func ir() { content, err := ioutil.ReadFile(\"m.txt\") if err != nil { return } fmt.Println(string(content)) } func main() { //iw() ir() }","title":"ioutil"},{"location":"base/go/2lib/9%E5%8F%8D%E5%B0%84/","text":"\u53cd\u5c04 \u6982\u5ff5 \u53cd\u5c04\uff1a\u662f\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5bf9\u7a0b\u5e8f\u672c\u8eab\u8fdb\u884c\u8bbf\u95ee\u548c\u4fee\u6539 var i int = 100 i\u7684\u7c7b\u578b\u4fe1\u606f\u662fint \u503c\u4fe1\u606f\u662f100 \u7c7b\u578b\u4fe1\u606f\uff1a\u662f\u9759\u6001\u7684\u5143\u4fe1\u606f\uff0c\u662f\u9884\u5148\u5b9a\u4e49\u597d\u7684 \u503c\u4fe1\u606f\uff1a\u662f\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u52a8\u6001\u6539\u53d8\u7684 \u63a5\u53e3 \u63a5\u53e3\u76f8\u5173\u53cd\u5c04 package main import ( \"fmt\" \"log\" \"reflect\" ) // \u83b7\u53d6\u7c7b\u578b func reflect_type(a interface{}) { t := reflect.TypeOf(a) fmt.Println(t) // \u5177\u4f53\u7c7b\u578b k := t.Kind() log.Println(k) switch k { case reflect.String: log.Println(\"string\") case reflect.Int: log.Println(\"int\") default: log.Println(\"nooo\") } } // \u83b7\u53d6\u503c func reflectValue(i interface{}) { v := reflect.ValueOf(i) log.Println(v) k := v.Kind() log.Println(k) switch k { case reflect.Int: log.Println(\"int\") } } // \u4fee\u6539\u503c func reflectSetValue(i interface{}) { v := reflect.ValueOf(i) log.Println(v) k := v.Kind() log.Println(k) switch k { case reflect.Int: v.SetInt(17) fmt.Println(\"set\", v.Int()) case reflect.Ptr: v.Elem().SetInt(200) // Elem \u83b7\u53d6\u5730\u5740\u6307\u5411\u7684\u53d8\u91cf fmt.Println(\"set\", v.Elem().Int()) fmt.Println(v.Pointer()) } } func main() { var i = 100 //reflect_type(i) //log.Println(\"-----\") //reflectValue(1000) reflectSetValue(&i) reflectSetValue(\"mattt\") } \u7ed3\u6784\u4f53 \u83b7\u53d6\u5b57\u6bb5\u65b9\u6cd5 package main import ( \"fmt\" \"reflect\" ) type A struct { Id int Name string Sex bool } type B struct { A T1 int } func (a A) t1() { fmt.Println(a.Sex, a.Name, a.Id) } func r(a interface{}) { t := reflect.TypeOf(a) fmt.Println(t) fmt.Println(t.Name()) v := reflect.ValueOf(a) fmt.Println(v) for i := 0; i < v.NumField(); i++ { f := t.Field(i) // \u5b57\u6bb5\u540d \u5b57\u6bb5\u7c7b\u578b fmt.Println(f.Name, f.Type) v := v.Field(i).Interface() fmt.Println(v) } fmt.Println(\"method\") for i:= 0; i < v.NumMethod(); i++ { m := t.Method(i) fmt.Println(m.Name, m.Type, \"method\") } } func main() { a := A{} r(a) } \u67e5\u770b\u533f\u540d\u5b57\u6bb5 package main import ( \"fmt\" \"reflect\" ) type A struct { Id int Name string Sex bool } type B struct { A T1 int } func (a A) t1() { fmt.Println(a.Sex, a.Name, a.Id) } func main() { b := B{ A: A{ Id: 1, Name: \"matt\", Sex: false, }, T1: 11, } t := reflect.TypeOf(b) fmt.Println(t, t.Field(0)) fmt.Println(reflect.ValueOf(b).Field(0)) } \u4fee\u6539\u7ed3\u6784\u4f53\u7684\u503c \u9700\u8981\u4f7f\u7528\u6307\u9488 package main import ( \"fmt\" \"reflect\" ) type S3 struct { Name string Id int } func (s S3) S3M(str string, i int) { fmt.Println(str, i) } func setValue(s interface{}) { v := reflect.ValueOf(s) v = v.Elem() nameF := v.FieldByName(\"Name\") if nameF.Kind() == reflect.String { nameF.SetString(\"matt\") } } // \u5c5e\u6027\u65b9\u6cd5 \u79c1\u6709\u83b7\u53d6\u4e0d\u5230 func main() { s := S3{} //setValue(&s) //fmt.Println(s) } \u8c03\u7528\u65b9\u6cd5 package main import ( \"fmt\" \"reflect\" ) type S3 struct { Name string Id int } func (s S3) S3M(str string, i int) { fmt.Println(str, i) } // \u5c5e\u6027\u65b9\u6cd5 \u79c1\u6709\u83b7\u53d6\u4e0d\u5230 func main() { s := S3{} v := reflect.ValueOf(s) m := v.MethodByName(\"S3M\") args := []reflect.Value{reflect.ValueOf(\"matt\"), reflect.ValueOf(111)} m.Call(args) } \u83b7\u53d6\u5b57\u6bb5\u7684 tag package main import ( \"fmt\" \"reflect\" ) type S4 struct { Id int `json:\"id\" db:\"idd\"` } func main() { s := S4{} v := reflect.ValueOf(s) t := v.Type() f := t.Field(0) j := f.Tag.Get(\"json\") fmt.Println(j) }","title":"\u53cd\u5c04"},{"location":"base/go/2lib/9%E5%8F%8D%E5%B0%84/#_1","text":"","title":"\u53cd\u5c04"},{"location":"base/go/2lib/9%E5%8F%8D%E5%B0%84/#_2","text":"\u53cd\u5c04\uff1a\u662f\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5bf9\u7a0b\u5e8f\u672c\u8eab\u8fdb\u884c\u8bbf\u95ee\u548c\u4fee\u6539 var i int = 100 i\u7684\u7c7b\u578b\u4fe1\u606f\u662fint \u503c\u4fe1\u606f\u662f100 \u7c7b\u578b\u4fe1\u606f\uff1a\u662f\u9759\u6001\u7684\u5143\u4fe1\u606f\uff0c\u662f\u9884\u5148\u5b9a\u4e49\u597d\u7684 \u503c\u4fe1\u606f\uff1a\u662f\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u52a8\u6001\u6539\u53d8\u7684","title":"\u6982\u5ff5"},{"location":"base/go/2lib/9%E5%8F%8D%E5%B0%84/#_3","text":"","title":"\u63a5\u53e3"},{"location":"base/go/2lib/9%E5%8F%8D%E5%B0%84/#_4","text":"package main import ( \"fmt\" \"log\" \"reflect\" ) // \u83b7\u53d6\u7c7b\u578b func reflect_type(a interface{}) { t := reflect.TypeOf(a) fmt.Println(t) // \u5177\u4f53\u7c7b\u578b k := t.Kind() log.Println(k) switch k { case reflect.String: log.Println(\"string\") case reflect.Int: log.Println(\"int\") default: log.Println(\"nooo\") } } // \u83b7\u53d6\u503c func reflectValue(i interface{}) { v := reflect.ValueOf(i) log.Println(v) k := v.Kind() log.Println(k) switch k { case reflect.Int: log.Println(\"int\") } } // \u4fee\u6539\u503c func reflectSetValue(i interface{}) { v := reflect.ValueOf(i) log.Println(v) k := v.Kind() log.Println(k) switch k { case reflect.Int: v.SetInt(17) fmt.Println(\"set\", v.Int()) case reflect.Ptr: v.Elem().SetInt(200) // Elem \u83b7\u53d6\u5730\u5740\u6307\u5411\u7684\u53d8\u91cf fmt.Println(\"set\", v.Elem().Int()) fmt.Println(v.Pointer()) } } func main() { var i = 100 //reflect_type(i) //log.Println(\"-----\") //reflectValue(1000) reflectSetValue(&i) reflectSetValue(\"mattt\") }","title":"\u63a5\u53e3\u76f8\u5173\u53cd\u5c04"},{"location":"base/go/2lib/9%E5%8F%8D%E5%B0%84/#_5","text":"","title":"\u7ed3\u6784\u4f53"},{"location":"base/go/2lib/9%E5%8F%8D%E5%B0%84/#_6","text":"package main import ( \"fmt\" \"reflect\" ) type A struct { Id int Name string Sex bool } type B struct { A T1 int } func (a A) t1() { fmt.Println(a.Sex, a.Name, a.Id) } func r(a interface{}) { t := reflect.TypeOf(a) fmt.Println(t) fmt.Println(t.Name()) v := reflect.ValueOf(a) fmt.Println(v) for i := 0; i < v.NumField(); i++ { f := t.Field(i) // \u5b57\u6bb5\u540d \u5b57\u6bb5\u7c7b\u578b fmt.Println(f.Name, f.Type) v := v.Field(i).Interface() fmt.Println(v) } fmt.Println(\"method\") for i:= 0; i < v.NumMethod(); i++ { m := t.Method(i) fmt.Println(m.Name, m.Type, \"method\") } } func main() { a := A{} r(a) }","title":"\u83b7\u53d6\u5b57\u6bb5\u65b9\u6cd5"},{"location":"base/go/2lib/9%E5%8F%8D%E5%B0%84/#_7","text":"package main import ( \"fmt\" \"reflect\" ) type A struct { Id int Name string Sex bool } type B struct { A T1 int } func (a A) t1() { fmt.Println(a.Sex, a.Name, a.Id) } func main() { b := B{ A: A{ Id: 1, Name: \"matt\", Sex: false, }, T1: 11, } t := reflect.TypeOf(b) fmt.Println(t, t.Field(0)) fmt.Println(reflect.ValueOf(b).Field(0)) }","title":"\u67e5\u770b\u533f\u540d\u5b57\u6bb5"},{"location":"base/go/2lib/9%E5%8F%8D%E5%B0%84/#_8","text":"\u9700\u8981\u4f7f\u7528\u6307\u9488 package main import ( \"fmt\" \"reflect\" ) type S3 struct { Name string Id int } func (s S3) S3M(str string, i int) { fmt.Println(str, i) } func setValue(s interface{}) { v := reflect.ValueOf(s) v = v.Elem() nameF := v.FieldByName(\"Name\") if nameF.Kind() == reflect.String { nameF.SetString(\"matt\") } } // \u5c5e\u6027\u65b9\u6cd5 \u79c1\u6709\u83b7\u53d6\u4e0d\u5230 func main() { s := S3{} //setValue(&s) //fmt.Println(s) }","title":"\u4fee\u6539\u7ed3\u6784\u4f53\u7684\u503c"},{"location":"base/go/2lib/9%E5%8F%8D%E5%B0%84/#_9","text":"package main import ( \"fmt\" \"reflect\" ) type S3 struct { Name string Id int } func (s S3) S3M(str string, i int) { fmt.Println(str, i) } // \u5c5e\u6027\u65b9\u6cd5 \u79c1\u6709\u83b7\u53d6\u4e0d\u5230 func main() { s := S3{} v := reflect.ValueOf(s) m := v.MethodByName(\"S3M\") args := []reflect.Value{reflect.ValueOf(\"matt\"), reflect.ValueOf(111)} m.Call(args) }","title":"\u8c03\u7528\u65b9\u6cd5"},{"location":"base/go/2lib/9%E5%8F%8D%E5%B0%84/#tag","text":"package main import ( \"fmt\" \"reflect\" ) type S4 struct { Id int `json:\"id\" db:\"idd\"` } func main() { s := S4{} v := reflect.ValueOf(s) t := v.Type() f := t.Field(0) j := f.Tag.Get(\"json\") fmt.Println(j) }","title":"\u83b7\u53d6\u5b57\u6bb5\u7684 tag"},{"location":"base/java/java%E5%AE%89%E8%A3%85/","text":"jdk \u5b89\u88c5 \u4e0b\u8f7d\u5730\u5740\uff1ahttps://www.oracle.com/java/technologies/downloads/#java8-mac \u4e00\u6b65\u4e00\u6b65\u5b89\u88c5\u5373\u53ef\uff08\u90fd\u662f\u9ed8\u8ba4\u65e0\u9700\u66f4\u6539\uff09 \u914d\u7f6e # if shell vim .bash_profile # if zsh vim .zshrc JAVA_HOME=/Library/java/JavaVirtualMachines/jdk1.8.0_321.jdk/Contents/Home PATH=$JAVA_HOME/bin:$PATH:. CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:. export JAVA_HOME export PATH export CLASSPATH source .bash_profile \u9a8c\u8bc1 java -version java javac","title":"Java\u5b89\u88c5"},{"location":"base/java/java%E5%AE%89%E8%A3%85/#jdk","text":"","title":"jdk"},{"location":"base/java/java%E5%AE%89%E8%A3%85/#_1","text":"\u4e0b\u8f7d\u5730\u5740\uff1ahttps://www.oracle.com/java/technologies/downloads/#java8-mac \u4e00\u6b65\u4e00\u6b65\u5b89\u88c5\u5373\u53ef\uff08\u90fd\u662f\u9ed8\u8ba4\u65e0\u9700\u66f4\u6539\uff09","title":"\u5b89\u88c5"},{"location":"base/java/java%E5%AE%89%E8%A3%85/#_2","text":"# if shell vim .bash_profile # if zsh vim .zshrc JAVA_HOME=/Library/java/JavaVirtualMachines/jdk1.8.0_321.jdk/Contents/Home PATH=$JAVA_HOME/bin:$PATH:. CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:. export JAVA_HOME export PATH export CLASSPATH source .bash_profile","title":"\u914d\u7f6e"},{"location":"base/java/java%E5%AE%89%E8%A3%85/#_3","text":"java -version java javac","title":"\u9a8c\u8bc1"},{"location":"base/java/maven/","text":"maven\u5b89\u88c5\u4e0e\u914d\u7f6e mac \u5b89\u88c5 \u4e0b\u8f7d\u5730\u5740\uff1ahttps://maven.apache.org/download.cgi \u89e3\u538b\u91cd\u547d\u540d\u4e3a ApacheMaven\uff0c\u79fb\u52a8\u5230/usr/local\u4e0b \u91cd\u547d\u540d mv apache-maven-3.8.4 ApacheMaven \u79fb\u52a8 mv ./ApacheMaven /usr/local/ \u914d\u7f6e vi ~/.bash_profile export M=\"/usr/local/ApacheMaven\" export PATH=\"$M/bin:$PATH\" source ~/.bash_profile mvn -v Windows 1.\u68c0\u67e5JAVA_HOME\u73af\u5883\u53d8\u91cf\u3002 Maven\u662f\u4f7f\u7528Java\u5f00\u53d1\u7684\uff0c\u6240\u4ee5\u5fc5\u987b\u77e5\u9053\u5f53\u524d\u7cfb\u7edf\u73af\u5883\u4e2dJDK\u7684\u5b89\u88c5\u76ee\u5f55\u3002 C:\\Users\\matt>echo %JAVA_HOME% D:\\develop\\env\\jdk-8u201-windows-x64 2.\u89e3\u538bMaven\u7684\u6838\u5fc3\u7a0b\u5e8f\u3002 \u5c06apache-maven-3.5.0-bin.zip\u89e3\u538b\u5230\u4e00\u4e2a \u975e\u4e2d\u6587\u65e0\u7a7a\u683c \u7684\u76ee\u5f55\u4e0b\u3002\u4f8b\u5982 3.\u914d\u7f6e\u73af\u5883\u53d8\u91cf \u90fd\u53ef\u4ee5\u5199\u5728\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d M2_HOME D:\\develop\\env\\apache-maven-3.5.0 path %M2_HOME%\\bin \u9a8c\u8bc1 \u67e5\u770bMaven\u7248\u672c\u4fe1\u606f\u9a8c\u8bc1\u5b89\u88c5\u662f\u5426\u6b63\u786e \u914d\u7f6e\u4f9d\u8d56\u4e0b\u8f7d\u4f4d\u7f6e\u3001aliyun\u4ed3\u5e93\u3001 jdk [1]Maven\u9ed8\u8ba4\u7684\u672c\u5730\u4ed3\u5e93\uff1a~.m2\\repository\u76ee\u5f55\u3002 Tips\uff1a~\u8868\u793a\u5f53\u524d\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u3002 [2]Maven\u7684\u6838\u5fc3\u7a0b\u5e8f\u5e76\u4e0d\u5305\u542b\u5177\u4f53\u529f\u80fd\uff0c\u4ec5\u8d1f\u8d23\u5b8f\u89c2\u8c03\u5ea6\u3002\u5177\u4f53\u529f\u80fd\u7531\u63d2\u4ef6\u6765\u5b8c\u6210\u3002Maven\u6838\u5fc3\u7a0b\u5e8f\u4f1a\u5230\u672c\u5730\u4ed3\u5e93\u4e2d\u67e5\u627e\u63d2\u4ef6\u3002\u5982\u679c\u672c\u5730\u4ed3\u5e93\u4e2d\u6ca1\u6709\u5c31\u4f1a\u4ece\u8fdc\u7a0b\u4e2d\u592e\u4ed3\u5e93\u4e0b\u8f7d\u3002\u6b64\u65f6\u5982\u679c\u4e0d\u80fd\u4e0a\u7f51\u5219\u65e0\u6cd5\u6267\u884cMaven\u7684\u5177\u4f53\u529f\u80fd\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06Maven\u7684\u672c\u5730\u4ed3\u5e93\u6307\u5411\u4e00\u4e2a\u5728\u8054\u7f51\u60c5\u51b5\u4e0b\u4e0b\u8f7d\u597d\u7684\u76ee\u5f55\u3002 [3]Maven\u7684\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e\uff1a \u89e3\u538b\u76ee\u5f55\\ D:\\Server\\ apache-maven-3.5.0\\conf\\settings.xml [4]\u8bbe\u7f6e\u65b9\u5f0f <localRepository>D:/develop/env/mavenRepository</localRepository> \u6307\u5b9aaliyun\u4ed3\u5e93 <mirrors> <mirror> <id>alimaven</id> <name>aliyun maven</name> <url>http://maven.aliyun.com/nexus/content/groups/public/</url> <mirrorOf>central</mirrorOf> </mirror> </mirrors> \u6307\u5b9ajdk\u7248\u672c <profiles> <profile> <id>jdk-1.8</id> <activation> <activeByDefault>true</activeByDefault> <jdk>1.8</jdk> </activation> <properties> <maven.compiler.source>1.8</maven.compiler.source> <maven.compiler.target>1.8</maven.compiler.target> <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion> </properties> </profile> </profiles>","title":"Maven"},{"location":"base/java/maven/#maven","text":"","title":"maven\u5b89\u88c5\u4e0e\u914d\u7f6e"},{"location":"base/java/maven/#mac","text":"","title":"mac"},{"location":"base/java/maven/#_1","text":"\u4e0b\u8f7d\u5730\u5740\uff1ahttps://maven.apache.org/download.cgi \u89e3\u538b\u91cd\u547d\u540d\u4e3a ApacheMaven\uff0c\u79fb\u52a8\u5230/usr/local\u4e0b \u91cd\u547d\u540d mv apache-maven-3.8.4 ApacheMaven \u79fb\u52a8 mv ./ApacheMaven /usr/local/","title":"\u5b89\u88c5"},{"location":"base/java/maven/#_2","text":"vi ~/.bash_profile export M=\"/usr/local/ApacheMaven\" export PATH=\"$M/bin:$PATH\" source ~/.bash_profile mvn -v","title":"\u914d\u7f6e"},{"location":"base/java/maven/#windows","text":"","title":"Windows"},{"location":"base/java/maven/#1java_home","text":"Maven\u662f\u4f7f\u7528Java\u5f00\u53d1\u7684\uff0c\u6240\u4ee5\u5fc5\u987b\u77e5\u9053\u5f53\u524d\u7cfb\u7edf\u73af\u5883\u4e2dJDK\u7684\u5b89\u88c5\u76ee\u5f55\u3002 C:\\Users\\matt>echo %JAVA_HOME% D:\\develop\\env\\jdk-8u201-windows-x64","title":"1.\u68c0\u67e5JAVA_HOME\u73af\u5883\u53d8\u91cf\u3002"},{"location":"base/java/maven/#2maven","text":"\u5c06apache-maven-3.5.0-bin.zip\u89e3\u538b\u5230\u4e00\u4e2a \u975e\u4e2d\u6587\u65e0\u7a7a\u683c \u7684\u76ee\u5f55\u4e0b\u3002\u4f8b\u5982","title":"2.\u89e3\u538bMaven\u7684\u6838\u5fc3\u7a0b\u5e8f\u3002"},{"location":"base/java/maven/#3","text":"\u90fd\u53ef\u4ee5\u5199\u5728\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d M2_HOME D:\\develop\\env\\apache-maven-3.5.0 path %M2_HOME%\\bin","title":"3.\u914d\u7f6e\u73af\u5883\u53d8\u91cf"},{"location":"base/java/maven/#_3","text":"","title":"\u9a8c\u8bc1"},{"location":"base/java/maven/#maven_1","text":"","title":"\u67e5\u770bMaven\u7248\u672c\u4fe1\u606f\u9a8c\u8bc1\u5b89\u88c5\u662f\u5426\u6b63\u786e"},{"location":"base/java/maven/#aliyun-jdk","text":"[1]Maven\u9ed8\u8ba4\u7684\u672c\u5730\u4ed3\u5e93\uff1a~.m2\\repository\u76ee\u5f55\u3002 Tips\uff1a~\u8868\u793a\u5f53\u524d\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u3002 [2]Maven\u7684\u6838\u5fc3\u7a0b\u5e8f\u5e76\u4e0d\u5305\u542b\u5177\u4f53\u529f\u80fd\uff0c\u4ec5\u8d1f\u8d23\u5b8f\u89c2\u8c03\u5ea6\u3002\u5177\u4f53\u529f\u80fd\u7531\u63d2\u4ef6\u6765\u5b8c\u6210\u3002Maven\u6838\u5fc3\u7a0b\u5e8f\u4f1a\u5230\u672c\u5730\u4ed3\u5e93\u4e2d\u67e5\u627e\u63d2\u4ef6\u3002\u5982\u679c\u672c\u5730\u4ed3\u5e93\u4e2d\u6ca1\u6709\u5c31\u4f1a\u4ece\u8fdc\u7a0b\u4e2d\u592e\u4ed3\u5e93\u4e0b\u8f7d\u3002\u6b64\u65f6\u5982\u679c\u4e0d\u80fd\u4e0a\u7f51\u5219\u65e0\u6cd5\u6267\u884cMaven\u7684\u5177\u4f53\u529f\u80fd\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06Maven\u7684\u672c\u5730\u4ed3\u5e93\u6307\u5411\u4e00\u4e2a\u5728\u8054\u7f51\u60c5\u51b5\u4e0b\u4e0b\u8f7d\u597d\u7684\u76ee\u5f55\u3002 [3]Maven\u7684\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e\uff1a \u89e3\u538b\u76ee\u5f55\\ D:\\Server\\ apache-maven-3.5.0\\conf\\settings.xml [4]\u8bbe\u7f6e\u65b9\u5f0f <localRepository>D:/develop/env/mavenRepository</localRepository> \u6307\u5b9aaliyun\u4ed3\u5e93 <mirrors> <mirror> <id>alimaven</id> <name>aliyun maven</name> <url>http://maven.aliyun.com/nexus/content/groups/public/</url> <mirrorOf>central</mirrorOf> </mirror> </mirrors> \u6307\u5b9ajdk\u7248\u672c <profiles> <profile> <id>jdk-1.8</id> <activation> <activeByDefault>true</activeByDefault> <jdk>1.8</jdk> </activation> <properties> <maven.compiler.source>1.8</maven.compiler.source> <maven.compiler.target>1.8</maven.compiler.target> <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion> </properties> </profile> </profiles>","title":"\u914d\u7f6e\u4f9d\u8d56\u4e0b\u8f7d\u4f4d\u7f6e\u3001aliyun\u4ed3\u5e93\u3001 jdk"},{"location":"base/java/%E6%B3%9B%E5%9E%8B/","text":"\u6cdb\u578b\u64e6\u9664 ava\u662f\u5728Java5\u7684\u65f6\u5019\u5f15\u5165\u7684\u6cdb\u578b\uff0c\u4e3a\u4e86\u652f\u6301\u6cdb\u578b\uff0cJVM\u7684class\u6587\u4ef6\u4e5f\u505a\u4e86\u76f8\u5e94\u7684\u4fee\u6539\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u5c31\u662f\u65b0\u589e\u4e86Signature\u5c5e\u6027\u8868\uff0cjava\u7f16\u8bd1\u4e3a\u5b57\u8282\u7801\u540e\uff0c\u5176\u7533\u660e\u4fa7\u6cdb\u578b\u4fe1\u606f\u90fd\u5b58\u50a8\u5728Signature\u4e2d\uff0c\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u7684\u6cdb\u578b\u4fe1\u606f\u90fd\u6765\u6e90\u4e8e\u8fd9\u91cc\u3002 \u800cSignature\u5c5e\u6027\u8868\u53ef\u4ee5\u88abclass\u6587\u4ef6\uff0c\u5b57\u6bb5\u8868\uff0c\u65b9\u6cd5\u8868\u643a\u5e26\uff0c\u8fd9\u5c31\u4f7f\u5f97\uff1a\u7c7b\u58f0\u660e\uff0c\u5b57\u6bb5\u58f0\u660e\uff0c\u65b9\u6cd5\u58f0\u660e\u4e2d\u7684\u6cdb\u578b\u4fe1\u606f\u5f97\u4ee5\u4fdd\u7559\u3002 \u4e0a\u9762\u4ee3\u7801\u4e2d \u9664\u4e86method2\u65b9\u6cd5\u5185\u90e8\u7684\u6cdb\u578b\u4fe1\u606f \u5747\u53ef\u4ee5\u4fdd\u7559\u5230\u5b57\u8282\u7801\u4e2d\uff0c\u6cdb\u578b\u64e6\u9664\u7684\u4ec5\u4ec5\u662f Code \u5c5e\u6027\u8868\u91cc\u9762\u7684\u5185\u5bb9\uff0c\u800c\u65b9\u6cd5\u4f53\u5728\u5b57\u8282\u7801\u4e2d\u6b63\u662f\u5b58\u653e\u5728 Code \u5c5e\u6027\u8868\u7684\u3002\u901a\u8fc7\u4e0a\u9762\u7684\u56de\u7b54\u5927\u5bb6\u5e94\u8be5\u5f88\u6e05\u695a\u4e86\uff0c\u6240\u8c13\u7684java\u6cdb\u578b\u64e6\u9664\u53ef\u4ee5\u7406\u89e3\u4e3a\u53ea\u662f\u64e6\u9664\u4e86 \u65b9\u6cd5\u4f53 \u7684\u6cdb\u578b\u4fe1\u606f\u3002 *\u58f0\u660e\u4fa7\u6cdb\u578b\u4fe1\u606f\u4fdd\u7559* \u4f8b\u5982\u58f0\u660e\u6cdb\u578b\u63a5\u53e3\uff0c \u6cdb\u578b\u7c7b \uff0c\u6cdb\u578b\u65b9\u6cd5\u65f6\u7684\u6cdb\u578b\u4fe1\u606f \u4f7f\u7528\u4fa7\u6cdb\u578b\u4fe1\u606f\u64e6\u9664 \u4f8b\u5982\u65b9\u6cd5\u7684\u5c40\u90e8\u53d8\u91cf\u7b49\u3002","title":"\u6cdb\u578b"},{"location":"base/python/0-%E5%AE%89%E8%A3%85/","text":"brew install python \u5728\u7ec8\u7aef\u4e2d\u8fd0\u884ccd\u547d\u4ee4\u4f1a\u51fa\u73b0\u3002env: python: No such file or directory ln -s /Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/bin/python3 /usr/local/bin/python3 ln -s /Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/bin/python3 /usr/local/bin/python3 \u9694\u79bb\u73af\u5883\u5b89\u88c5 pipenv pip3 install pipenv # \u8fdb\u5165\u73af\u5883 pipenv shell # \u9000\u51fa exit # \u6839\u636eprofile\u6587\u4ef6\u8fdb\u884c\u5b89\u88c5 pipenv install # \u5b89\u88c5\u547d\u4ee4 pipenv install beautifulsoup4 #\u5728\u9879\u76ee\u6240\u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5beautifulsoup4 pipenv install parsel==1.3.1 #\u5b89\u88c5parsel\u5e76\u6307\u5b9a\u5176\u7248\u672c pipenv install --dev nose2 #\u5b89\u88c5nose2\u5305\u5e76\u5c06\u5176\u5173\u8054\u4e3a\u53ea\u5728\u5f00\u53d1\u73af\u5883\u4e2d\u9700\u8981\u7684\u5305 # \u5378\u8f7d pipenv uninstall beautifulsoup4 #\u5728\u9879\u76ee\u6240\u5728\u865a\u62df\u73af\u5883\u4e2d\u5378\u8f7dbeautifulsoup4 pipenv uninstall --all #\u4ece\u865a\u62df\u73af\u5883\u4e2d\u79fb\u9664\u6240\u6709\u5df2\u5b89\u88c5\u7684\u5305\uff0c\u4f46Pipfile.lock\u6587\u4ef6\u4e0d\u53d7\u5f71\u54cd pipenv uninstall --all--dev #\u4ece\u865a\u62df\u73af\u5883\u4e2d\u5378\u8f7d\u6240\u6709\u5f00\u53d1\u5305\uff0c\u5e76\u4ecePipfile\u6587\u4ef6\u4e2d\u79fb\u9664\u8fd9\u4e9b\u5305 # \u66f4\u65b0\u547d\u4ee4 pipenv update requests #\u5728\u9879\u76ee\u4e2d\u66f4\u65b0requests\u5305 pipenv update #\u66f4\u65b0\u9879\u76ee\u4e2d\u6240\u6709\u7684\u5305 pipenv update --outdated #\u67e5\u770b\u73b0\u6709\u5305\u54ea\u4e9b\u5df2\u7ecf\u8fc7\u671f #\u67e5\u770b\u547d\u4ee4 pipenv grash #\u663e\u793a\u73b0\u6709\u7684\u4f9d\u8d56\u5305 pipenv lock #\u66f4\u65b0Pipfile.lock\u6587\u4ef6\u9501\u5b9a\u5f53\u524d\u73af\u5883\u7684\u4f9d\u8d56\u7248\u672c pipenv --rm requirements.txt \u65b9\u6cd51\uff1apipenv run pip freeze > requirements.txt \u65b9\u6cd52\uff1apipenv lock -r --dev > requirements.txt \u865a\u62df\u73af\u5883\u4e2d\u5bfc\u5165requirements.txt pipenv install -r requirements.txt 243","title":"0 \u5b89\u88c5"},{"location":"base/python/0-%E5%AE%89%E8%A3%85/#_1","text":"","title":"\u9694\u79bb\u73af\u5883\u5b89\u88c5"},{"location":"base/python/0-%E5%AE%89%E8%A3%85/#pipenv","text":"pip3 install pipenv # \u8fdb\u5165\u73af\u5883 pipenv shell # \u9000\u51fa exit # \u6839\u636eprofile\u6587\u4ef6\u8fdb\u884c\u5b89\u88c5 pipenv install # \u5b89\u88c5\u547d\u4ee4 pipenv install beautifulsoup4 #\u5728\u9879\u76ee\u6240\u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5beautifulsoup4 pipenv install parsel==1.3.1 #\u5b89\u88c5parsel\u5e76\u6307\u5b9a\u5176\u7248\u672c pipenv install --dev nose2 #\u5b89\u88c5nose2\u5305\u5e76\u5c06\u5176\u5173\u8054\u4e3a\u53ea\u5728\u5f00\u53d1\u73af\u5883\u4e2d\u9700\u8981\u7684\u5305 # \u5378\u8f7d pipenv uninstall beautifulsoup4 #\u5728\u9879\u76ee\u6240\u5728\u865a\u62df\u73af\u5883\u4e2d\u5378\u8f7dbeautifulsoup4 pipenv uninstall --all #\u4ece\u865a\u62df\u73af\u5883\u4e2d\u79fb\u9664\u6240\u6709\u5df2\u5b89\u88c5\u7684\u5305\uff0c\u4f46Pipfile.lock\u6587\u4ef6\u4e0d\u53d7\u5f71\u54cd pipenv uninstall --all--dev #\u4ece\u865a\u62df\u73af\u5883\u4e2d\u5378\u8f7d\u6240\u6709\u5f00\u53d1\u5305\uff0c\u5e76\u4ecePipfile\u6587\u4ef6\u4e2d\u79fb\u9664\u8fd9\u4e9b\u5305 # \u66f4\u65b0\u547d\u4ee4 pipenv update requests #\u5728\u9879\u76ee\u4e2d\u66f4\u65b0requests\u5305 pipenv update #\u66f4\u65b0\u9879\u76ee\u4e2d\u6240\u6709\u7684\u5305 pipenv update --outdated #\u67e5\u770b\u73b0\u6709\u5305\u54ea\u4e9b\u5df2\u7ecf\u8fc7\u671f #\u67e5\u770b\u547d\u4ee4 pipenv grash #\u663e\u793a\u73b0\u6709\u7684\u4f9d\u8d56\u5305 pipenv lock #\u66f4\u65b0Pipfile.lock\u6587\u4ef6\u9501\u5b9a\u5f53\u524d\u73af\u5883\u7684\u4f9d\u8d56\u7248\u672c pipenv --rm requirements.txt \u65b9\u6cd51\uff1apipenv run pip freeze > requirements.txt \u65b9\u6cd52\uff1apipenv lock -r --dev > requirements.txt \u865a\u62df\u73af\u5883\u4e2d\u5bfc\u5165requirements.txt pipenv install -r requirements.txt 243","title":"pipenv"},{"location":"base/python/11/","text":"brew search python brew install python@3.10","title":"11"},{"location":"base/python/flask/","text":"\u57fa\u7840\u4f7f\u7528 \u4ecb\u7ecd Python Web \u5b9e\u73b0\u7684\u5f00\u53d1\u6846\u67b6 \u5c0f\u800c\u7f8e\uff0c\u4e30\u5bcc\u7684\u5468\u8fb9\u6269\u5c55 \u5b89\u88c5 pip install flask \u9a8c\u8bc1\u5b89\u88c5\u6210\u529f \u9a8c\u8bc1 >>> import flask >>> flask.__version__ '1.1.2' \u4f7f\u7528 from flask import Flask app = Flask(__name__) @app.route('/') def test_matt(): return 'hello' \u53c2\u6570name \u8868\u793a\u5e94\u7528\u7684\u4e3b\u6a21\u5757\u6216\u5305\u7684\u540d\u79f0\u3002\u4f7f\u7528\u8be5\u53c2\u6570FlaskFlask\u786e\u5b9a\u5e94\u7528\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u627e\u5230\u5e94\u7528\u4e2d\u5176\u4ed6\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u5982\u7f51\u9875\u4e2d\u7684\u56fe\u7247\u76ee\u5f55\uff0c\u6a21\u677f\u76ee\u5f55 \u88c5\u9970\u5668app.route() \u8868\u793a\u4e00\u4e2a\u8def\u7531\u914d\u7f6e\uff0c\u5373\uff1a\u7528\u6237\u5728\u6d4f\u89c8\u5668\u8f93\u5165URL\uff0c\u4f7f\u7528\u5bf9\u5e94\u7684\u51fd\u6570\u5904\u7406\u5176\u4e2d\u7684\u4e1a\u52a1\u903b\u8f91\uff08\u53ef\u5199\u591a\u4e2a\uff09 \u542f\u52a8 \u542f\u52a8\u670d\u52a1\u5668 1.\u6b65\u9aa41\uff1a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf Windows set FLASK_APP=app.py Linux export FLASK_APP=app.py\u3001 2.\u6b65\u9aa42flask run web\uff1a\u542f\u52a8\u5185\u7f6e\u670d\u52a1\u5668 \u6307\u5b9aIP\u53ca\u7aef\u53e3\uff1a flask run host=0.0.0.0 port=8001 \u6216\uff1a flask run -h 127.0.0.1 -p 8001 \u5f00\u542f\u8c03\u8bd5\u6a21\u5f0f Windows set FLASK_ENV=development Linux export FLASK_ENV=development \u200b MVT\u6a21\u578b\uff1a\u5f85\u8865\u5145 \u89c6\u56fe\uff1apy\u4e2d\u7684\u51fd\u6570 \u6a21\u578b\uff1amysql\u67e5\u8be2\u51fa\u6765\u7684 \u6a21\u677f\uff1a\u9875\u9762 \u8def\u7531 \u57fa\u672c\u4f7f\u7528 \u4f7f\u7528\u88c5\u9970\u5668:\u63a8\u8350\u4f7f\u7528 @app.route(url_name, methods) # urlURL: \u5339\u914d\u7684\u5730\u5740 # methods: ['GET', 'POST']\u6240\u652f\u6301\u7684\u8bf7\u6c42\u65b9\u5f0f\uff08\uff09 \u5b9e\u4f8b\uff1a @app.route('/login', methods=['GET', 'POST']) \u4f7f\u7528API app.add_url_rule(url,url_name view_name) url : \u5339\u914d\u7684URL\u5730\u5740 url_nameURL: \u7ed9\u7684\u547d\u540d view_name: \u89c6\u56fe\u51fd\u6570 \u5339\u914d\u89c4\u5219 \uf075 \u5339\u914d\u6574\u4e2a\u6587\u5b57 @app.route('/hello') \uf075 \u4f20\u9012\u53c2\u6570 @app.route('/user/ ') username\u9700\u8981\u5728\u51fd\u6570\u4e2d\u5199 @app.route('/matt/<username>', methods=['GET', 'POST']) def test_route_1(username): return 'matt' + username \uf075 \u6307\u5b9a\u53c2\u6570\u7c7b\u578b @app.route('/post/ ') URL\u914d\u7f6e\u53ca\u8def\u7531 \uf075 \u67e5\u770bURL\u89c4\u5219\u5217\u8868 app.url_map \uf075 URL\u9006\u5411\u89e3\u6790\uff08\u6839\u636e\u540d\u79f0\u89e3\u6790\u6210\u5b57\u7b26\u4e32\uff09URL <1>url_for(url_name, **kwargs) <2>\u9759\u6001\u6587\u4ef6\u56fe\u7247(/css/js)\u5f15\u7528 url_for('static', filename='style.css') URL\u4e2d\u7684\u503c @app.route('/page/ ') def list_user(page): URL\u4e2d\u7684\u503c\u4e3a\u53ef\u9009 \u6682\u65f6\u4e0d\u662f\u7279\u522b\u7406\u89e3 @app.route('/page/<page>') def list_user(page=None): \u5e94\u7528\u4e0a\u4e0b\u6587\u5bf9\u8c61 1 current_app \u5f53\u524d\u5e94\u7528\u7684\u5b9e\u4f8b 2 g \u5904\u7406\u8bf7\u6c42\u65f6\u7684\u4e34\u65f6\u5b58\u50a8\u5bf9\u8c61\uff0c\u6bcf\u6b21\u8bf7\u6c42\u90fd\u4f1a\u91cd\u8bbe\u8fd9\u4e2a\u53d8\u91cf \u8bf7\u6c42\u4e0a\u4e0b\u6587 1 request \u8bf7\u6c42\u5bf9\u8c61\uff0c\u5c01\u88c5\u4e86\u5ba2\u6237\u7aef\u53d1\u51fa\u7684\u8bf7\u6c42\u4e2d\u7684\u5185\u5bb9HTTP 2 session \u7528\u6237\u4f1a\u8bdd(dict)\uff0c\u5404\u8bf7\u6c42\u4e4b\u95f4\u7684\u6570\u636e\u5171\u4eab @app.route('/test/req') def test_request(): # print('hello test_request') test_args = request.args print(request.args.get('name', 'dmx')) #\u4e0d\u5b58\u5728\u5c31dmx # \u4e3b\u673a\u5730\u5740 print(request.headers) headers = request.headers print(headers.get('Host')) print(request.remote_addr) return {'name': 'matt'} \u8bf7\u6c42\u94a9\u5b50 1.before_first_request \u670d\u52a1\u5668\u521d\u59cb\u5316\u540e\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u5230\u8fbe\u524d\u6267\u884c 2.before_request \u6bcf\u4e00\u4e2a\u8bf7\u6c42\u5230\u8fbe\u524d\u6267\u884c 3.fter_request \u6bcf\u6b21\u8bf7\u6c42\u5904\u7406\u5b8c\u6210\u540e\u6267\u884c\uff0c\u5982\u679c\u8bf7\u6c42\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u4e86\u5f02\u5e38\uff0c\u5219\u4e0d\u6267\u884c 4.teardown_request \u6bcf\u6b21\u8bf7\u6c42\u5904\u7406\u5b8c\u6210\u4e4b\u540e\u6267\u884c\uff0c\u5982\u679c\u8bf7\u6c42\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u4e86\u5f02\u5e38\u4e5f\u6267\u884c @app.before_first_request def first_request(): print('\u670d\u52a1\u5668\u542f\u52a8') @app.before_request def pre_request(): # \u94a9\u5b50\u51fd\u6570 print('request\u3002\u3002\u3002\u3002') \u54cd\u5e94 1.\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32 2.\u53ef\u4ee5\u662f\u5143\u7ec4\uff08\uff09tuple (response, status, headers) \u6216(response, headers) <1>response\u2014\u2014\u54cd\u5e94\u5185\u5bb9 <2>status\u2014\u2014\u54cd\u5e94\u72b6\u6001\u7801 <3>headers\u2014\u2014\u54cd\u5e94\u5934\u4fe1\u606f @app.route('/test/resp') def test_response(): # return 'test resp', 201, {'name': 'ddd'} print() resp = make_response({'name': 'matt', 'age': 19}, 300) resp.headers['name'] = 'matt3343' resp.status_code = 200 return resp @app.route('/resp') def test_resp(): resp = make_response('hello resp', 200, {'name': 'matt'}) return resp HTML @app.route('/test/html') def test_html(): html = render_template('index.html') return html \u91cd\u5b9a\u5411 @app.route('/') def test_matt(): return 'hello' @app.route('/index') def helloword(): print(current_app) print('222') return redirect('/') return 'hello' \u65b9\u6cd5\u9700\u8981\u6709\u8fd4\u56de\u8bed\u53e5 @app.route('/from') def test_from(): redirect('/to') return 'from' @app.route('/to') def test_to(): return 'i am to' \u9519\u8bef \u9700\u8981\u6307\u5b9a err @app.route('/test/abort') def test_abort(): # \u7ed9\u5b9a\u9519\u8bef abort(403) @app.errorhandler(403) def forbidden(err): print(err) return 'xx' from app import db db.create_all() \u6570\u636e\u5e93 pip install flask pip install -U Flask-SQLAlchemy pip install mysqlclient \u57fa\u672c\u4f7f\u7528 from flask import Flask, render_template from flask_sqlalchemy import SQLAlchemy app = Flask(__name__) # \u914d\u7f6e\u6570\u636e\u5e93\u7684\u8fde\u63a5\u53c2\u6570 app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql://root:root@127.0.0.1/test_flask' # \u7ed1\u5b9a\u5230flask\u5bf9\u8c61 db = SQLAlchemy(app) class User(db.Model): '''\u8868\u540d''' __tablename__ = 'weibo_user' '''\u5217\u540d''' id = db.Column(db.Integer, primary_key=True) username = db.Column(db.String(64), nullable=False) password = db.Column(db.String(256), nullable=False) age = db.Column(db.Integer, default=0) def __init__(self, username, password, age): self.username = username self.password = password self.age = age class UserAddress(db.Model): \"\"\" \u7528\u6237\u7684\u5730\u5740 \"\"\" __tablename__ = 'weibo_user_addr' id = db.Column(db.Integer, primary_key=True) addr = db.Column(db.String(256), nullable=False) user_id = db.Column(db.Integer, db.ForeignKey('weibo_user.id'), nullable=False) user = db.relationship('User', backref=db.backref('address', lazy=True)) def __init__(self, addr, user_id): self.addr = addr self.user_id = user_id @app.route('/') def index(): return render_template('index.html') \u521b\u5efa\u57fa\u672c\u8868 class User(db.Model): '''\u8868\u540d''' __tablename__ = 'weibo_user' '''\u5217\u540d''' id = db.Column(db.Integer, primary_key=True) username = db.Column(db.String(64), nullable=False) password = db.Column(db.String(256), nullable=False) age = db.Column(db.Integer, default=0) def __init__(self, username, password, age): self.username = username self.password = password self.age = age \u8bbe\u7f6e\u5916\u952e user_id = db.Column(db.Integer, db.ForeignKey('weibo_user.id'), nullable=False) user = db.relationship('User', backref=db.backref('address', lazy=True)) user\u4e2d\u4f1a\u6709address\u5c5e\u6027 address\u4e2d\u4f1a\u6709user\u5c5e\u6027 from app import db \u521b\u5efa\u8868 db.create_all() \u5220\u9664\u8868 db.drop_all() crud \u6dfb\u52a0\u3001\u66f4\u65b0 addr = UserAddress('11', 1) db.session.add(addr) db.session.commit() \u5220\u9664 addr = UserAddress.query.filter_by(addr='\u4e0a\u6d77').first() db.session.delete(addr) db.session.commit() \u67e5\u627e \u67e5\u627e\u6240\u6709\u6570\u636e user = User.query.all() \u6dfb\u52a0\u8fc7\u6ee4\u6761\u4ef6 User.query.filter_by(username='zhangsan').all() \u7edf\u8ba1\u4e2a\u6570 User.query.filter_by(username='zhangsan').count() pip install flask pip install flask_sqlalchemy # \u6570\u636e\u5e93 pip install Flask-WTF # \u8868\u5355 pip install --upgrade 'SQLAlchemy<1.4'","title":"flask"},{"location":"base/python/flask/#_1","text":"","title":"\u57fa\u7840\u4f7f\u7528"},{"location":"base/python/flask/#_2","text":"Python Web \u5b9e\u73b0\u7684\u5f00\u53d1\u6846\u67b6 \u5c0f\u800c\u7f8e\uff0c\u4e30\u5bcc\u7684\u5468\u8fb9\u6269\u5c55","title":"\u4ecb\u7ecd"},{"location":"base/python/flask/#_3","text":"pip install flask \u9a8c\u8bc1\u5b89\u88c5\u6210\u529f \u9a8c\u8bc1 >>> import flask >>> flask.__version__ '1.1.2'","title":"\u5b89\u88c5"},{"location":"base/python/flask/#_4","text":"from flask import Flask app = Flask(__name__) @app.route('/') def test_matt(): return 'hello' \u53c2\u6570name \u8868\u793a\u5e94\u7528\u7684\u4e3b\u6a21\u5757\u6216\u5305\u7684\u540d\u79f0\u3002\u4f7f\u7528\u8be5\u53c2\u6570FlaskFlask\u786e\u5b9a\u5e94\u7528\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u627e\u5230\u5e94\u7528\u4e2d\u5176\u4ed6\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u5982\u7f51\u9875\u4e2d\u7684\u56fe\u7247\u76ee\u5f55\uff0c\u6a21\u677f\u76ee\u5f55 \u88c5\u9970\u5668app.route() \u8868\u793a\u4e00\u4e2a\u8def\u7531\u914d\u7f6e\uff0c\u5373\uff1a\u7528\u6237\u5728\u6d4f\u89c8\u5668\u8f93\u5165URL\uff0c\u4f7f\u7528\u5bf9\u5e94\u7684\u51fd\u6570\u5904\u7406\u5176\u4e2d\u7684\u4e1a\u52a1\u903b\u8f91\uff08\u53ef\u5199\u591a\u4e2a\uff09","title":"\u4f7f\u7528"},{"location":"base/python/flask/#_5","text":"\u542f\u52a8\u670d\u52a1\u5668 1.\u6b65\u9aa41\uff1a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf Windows set FLASK_APP=app.py Linux export FLASK_APP=app.py\u3001 2.\u6b65\u9aa42flask run web\uff1a\u542f\u52a8\u5185\u7f6e\u670d\u52a1\u5668 \u6307\u5b9aIP\u53ca\u7aef\u53e3\uff1a flask run host=0.0.0.0 port=8001 \u6216\uff1a flask run -h 127.0.0.1 -p 8001 \u5f00\u542f\u8c03\u8bd5\u6a21\u5f0f Windows set FLASK_ENV=development Linux export FLASK_ENV=development \u200b","title":"\u542f\u52a8"},{"location":"base/python/flask/#mvt","text":"\u89c6\u56fe\uff1apy\u4e2d\u7684\u51fd\u6570 \u6a21\u578b\uff1amysql\u67e5\u8be2\u51fa\u6765\u7684 \u6a21\u677f\uff1a\u9875\u9762","title":"MVT\u6a21\u578b\uff1a\u5f85\u8865\u5145"},{"location":"base/python/flask/#_6","text":"","title":"\u8def\u7531"},{"location":"base/python/flask/#_7","text":"\u4f7f\u7528\u88c5\u9970\u5668:\u63a8\u8350\u4f7f\u7528 @app.route(url_name, methods) # urlURL: \u5339\u914d\u7684\u5730\u5740 # methods: ['GET', 'POST']\u6240\u652f\u6301\u7684\u8bf7\u6c42\u65b9\u5f0f\uff08\uff09 \u5b9e\u4f8b\uff1a @app.route('/login', methods=['GET', 'POST']) \u4f7f\u7528API app.add_url_rule(url,url_name view_name) url : \u5339\u914d\u7684URL\u5730\u5740 url_nameURL: \u7ed9\u7684\u547d\u540d view_name: \u89c6\u56fe\u51fd\u6570","title":"\u57fa\u672c\u4f7f\u7528"},{"location":"base/python/flask/#_8","text":"\uf075 \u5339\u914d\u6574\u4e2a\u6587\u5b57 @app.route('/hello') \uf075 \u4f20\u9012\u53c2\u6570 @app.route('/user/ ') username\u9700\u8981\u5728\u51fd\u6570\u4e2d\u5199 @app.route('/matt/<username>', methods=['GET', 'POST']) def test_route_1(username): return 'matt' + username \uf075 \u6307\u5b9a\u53c2\u6570\u7c7b\u578b @app.route('/post/ ') URL\u914d\u7f6e\u53ca\u8def\u7531 \uf075 \u67e5\u770bURL\u89c4\u5219\u5217\u8868 app.url_map \uf075 URL\u9006\u5411\u89e3\u6790\uff08\u6839\u636e\u540d\u79f0\u89e3\u6790\u6210\u5b57\u7b26\u4e32\uff09URL <1>url_for(url_name, **kwargs) <2>\u9759\u6001\u6587\u4ef6\u56fe\u7247(/css/js)\u5f15\u7528 url_for('static', filename='style.css') URL\u4e2d\u7684\u503c @app.route('/page/ ') def list_user(page): URL\u4e2d\u7684\u503c\u4e3a\u53ef\u9009 \u6682\u65f6\u4e0d\u662f\u7279\u522b\u7406\u89e3 @app.route('/page/<page>') def list_user(page=None):","title":"\u5339\u914d\u89c4\u5219"},{"location":"base/python/flask/#_9","text":"1 current_app \u5f53\u524d\u5e94\u7528\u7684\u5b9e\u4f8b 2 g \u5904\u7406\u8bf7\u6c42\u65f6\u7684\u4e34\u65f6\u5b58\u50a8\u5bf9\u8c61\uff0c\u6bcf\u6b21\u8bf7\u6c42\u90fd\u4f1a\u91cd\u8bbe\u8fd9\u4e2a\u53d8\u91cf","title":"\u5e94\u7528\u4e0a\u4e0b\u6587\u5bf9\u8c61"},{"location":"base/python/flask/#_10","text":"1 request \u8bf7\u6c42\u5bf9\u8c61\uff0c\u5c01\u88c5\u4e86\u5ba2\u6237\u7aef\u53d1\u51fa\u7684\u8bf7\u6c42\u4e2d\u7684\u5185\u5bb9HTTP 2 session \u7528\u6237\u4f1a\u8bdd(dict)\uff0c\u5404\u8bf7\u6c42\u4e4b\u95f4\u7684\u6570\u636e\u5171\u4eab @app.route('/test/req') def test_request(): # print('hello test_request') test_args = request.args print(request.args.get('name', 'dmx')) #\u4e0d\u5b58\u5728\u5c31dmx # \u4e3b\u673a\u5730\u5740 print(request.headers) headers = request.headers print(headers.get('Host')) print(request.remote_addr) return {'name': 'matt'}","title":"\u8bf7\u6c42\u4e0a\u4e0b\u6587"},{"location":"base/python/flask/#_11","text":"1.before_first_request \u670d\u52a1\u5668\u521d\u59cb\u5316\u540e\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u5230\u8fbe\u524d\u6267\u884c 2.before_request \u6bcf\u4e00\u4e2a\u8bf7\u6c42\u5230\u8fbe\u524d\u6267\u884c 3.fter_request \u6bcf\u6b21\u8bf7\u6c42\u5904\u7406\u5b8c\u6210\u540e\u6267\u884c\uff0c\u5982\u679c\u8bf7\u6c42\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u4e86\u5f02\u5e38\uff0c\u5219\u4e0d\u6267\u884c 4.teardown_request \u6bcf\u6b21\u8bf7\u6c42\u5904\u7406\u5b8c\u6210\u4e4b\u540e\u6267\u884c\uff0c\u5982\u679c\u8bf7\u6c42\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u4e86\u5f02\u5e38\u4e5f\u6267\u884c @app.before_first_request def first_request(): print('\u670d\u52a1\u5668\u542f\u52a8') @app.before_request def pre_request(): # \u94a9\u5b50\u51fd\u6570 print('request\u3002\u3002\u3002\u3002')","title":"\u8bf7\u6c42\u94a9\u5b50"},{"location":"base/python/flask/#_12","text":"1.\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32 2.\u53ef\u4ee5\u662f\u5143\u7ec4\uff08\uff09tuple (response, status, headers) \u6216(response, headers) <1>response\u2014\u2014\u54cd\u5e94\u5185\u5bb9 <2>status\u2014\u2014\u54cd\u5e94\u72b6\u6001\u7801 <3>headers\u2014\u2014\u54cd\u5e94\u5934\u4fe1\u606f @app.route('/test/resp') def test_response(): # return 'test resp', 201, {'name': 'ddd'} print() resp = make_response({'name': 'matt', 'age': 19}, 300) resp.headers['name'] = 'matt3343' resp.status_code = 200 return resp @app.route('/resp') def test_resp(): resp = make_response('hello resp', 200, {'name': 'matt'}) return resp HTML @app.route('/test/html') def test_html(): html = render_template('index.html') return html","title":"\u54cd\u5e94"},{"location":"base/python/flask/#_13","text":"@app.route('/') def test_matt(): return 'hello' @app.route('/index') def helloword(): print(current_app) print('222') return redirect('/') return 'hello' \u65b9\u6cd5\u9700\u8981\u6709\u8fd4\u56de\u8bed\u53e5 @app.route('/from') def test_from(): redirect('/to') return 'from' @app.route('/to') def test_to(): return 'i am to'","title":"\u91cd\u5b9a\u5411"},{"location":"base/python/flask/#_14","text":"\u9700\u8981\u6307\u5b9a err @app.route('/test/abort') def test_abort(): # \u7ed9\u5b9a\u9519\u8bef abort(403) @app.errorhandler(403) def forbidden(err): print(err) return 'xx' from app import db db.create_all()","title":"\u9519\u8bef"},{"location":"base/python/flask/#_15","text":"pip install flask pip install -U Flask-SQLAlchemy pip install mysqlclient \u57fa\u672c\u4f7f\u7528 from flask import Flask, render_template from flask_sqlalchemy import SQLAlchemy app = Flask(__name__) # \u914d\u7f6e\u6570\u636e\u5e93\u7684\u8fde\u63a5\u53c2\u6570 app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql://root:root@127.0.0.1/test_flask' # \u7ed1\u5b9a\u5230flask\u5bf9\u8c61 db = SQLAlchemy(app) class User(db.Model): '''\u8868\u540d''' __tablename__ = 'weibo_user' '''\u5217\u540d''' id = db.Column(db.Integer, primary_key=True) username = db.Column(db.String(64), nullable=False) password = db.Column(db.String(256), nullable=False) age = db.Column(db.Integer, default=0) def __init__(self, username, password, age): self.username = username self.password = password self.age = age class UserAddress(db.Model): \"\"\" \u7528\u6237\u7684\u5730\u5740 \"\"\" __tablename__ = 'weibo_user_addr' id = db.Column(db.Integer, primary_key=True) addr = db.Column(db.String(256), nullable=False) user_id = db.Column(db.Integer, db.ForeignKey('weibo_user.id'), nullable=False) user = db.relationship('User', backref=db.backref('address', lazy=True)) def __init__(self, addr, user_id): self.addr = addr self.user_id = user_id @app.route('/') def index(): return render_template('index.html') \u521b\u5efa\u57fa\u672c\u8868 class User(db.Model): '''\u8868\u540d''' __tablename__ = 'weibo_user' '''\u5217\u540d''' id = db.Column(db.Integer, primary_key=True) username = db.Column(db.String(64), nullable=False) password = db.Column(db.String(256), nullable=False) age = db.Column(db.Integer, default=0) def __init__(self, username, password, age): self.username = username self.password = password self.age = age \u8bbe\u7f6e\u5916\u952e user_id = db.Column(db.Integer, db.ForeignKey('weibo_user.id'), nullable=False) user = db.relationship('User', backref=db.backref('address', lazy=True)) user\u4e2d\u4f1a\u6709address\u5c5e\u6027 address\u4e2d\u4f1a\u6709user\u5c5e\u6027 from app import db \u521b\u5efa\u8868 db.create_all() \u5220\u9664\u8868 db.drop_all()","title":"\u6570\u636e\u5e93"},{"location":"base/python/flask/#crud","text":"\u6dfb\u52a0\u3001\u66f4\u65b0 addr = UserAddress('11', 1) db.session.add(addr) db.session.commit() \u5220\u9664 addr = UserAddress.query.filter_by(addr='\u4e0a\u6d77').first() db.session.delete(addr) db.session.commit() \u67e5\u627e \u67e5\u627e\u6240\u6709\u6570\u636e user = User.query.all() \u6dfb\u52a0\u8fc7\u6ee4\u6761\u4ef6 User.query.filter_by(username='zhangsan').all() \u7edf\u8ba1\u4e2a\u6570 User.query.filter_by(username='zhangsan').count() pip install flask pip install flask_sqlalchemy # \u6570\u636e\u5e93 pip install Flask-WTF # \u8868\u5355 pip install --upgrade 'SQLAlchemy<1.4'","title":"crud"},{"location":"base/python/python/","text":"\u5b89\u88c5 mac-\u5b89\u88c5 \u76f4\u63a5\u5b98\u7f51\u4e0b\u8f7d\u5373\u53ef \u5b98\u7f51 /usr/local/bin /Library/Frameworks/Python.framework/Versions/3.10/bin/python3 ln -s -f /usr/local/bin/python3 /usr/local/bin/python \u4e0d\u8981\u4f7f\u7528brew\u5b89\u88c5 1 \u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u8fdb\u884c\u914d\u7f6e\u73af\u5883\u53d8\u91cf 2..pycharm\u4f1a\u65e0\u6cd5\u8bc6\u522b \u5b89\u88c5 \u5b89\u88c5\u73af\u5883 https://www.python.org/ 1\u3001 web-based installer\u3001executable installer\u3001embeddable zip file \u2013 web-based installer \uff1a\u5728\u7ebf\u5b89\u88c5\u3002\u4e0b\u8f7d\u7684\u662f\u4e00\u4e2aexe\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u53cc\u51fb\u540e\uff0c\u8be5\u7a0b\u5e8f\u81ea\u52a8\u4e0b\u8f7d\u5b89\u88c5\u6587\u4ef6\uff08\u6240\u4ee5\u9700\u8981\u6709\u7f51\u7edc\uff09\u8fdb\u884c\u5b89\u88c5\u3002 \u2013 executable installer \uff1a\u7a0b\u5e8f\u5b89\u88c5\u3002\u4e0b\u8f7d\u7684\u662f\u4e00\u4e2aexe\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u53cc\u51fb\u8fdb\u884c\u5b89\u88c5\u3002 \u2013 embeddable zip file \uff1a\u89e3\u538b\u5b89\u88c5\u3002\u4e0b\u8f7d\u7684\u662f\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6\uff0c\u89e3\u538b\u540e\u5373\u8868\u793a\u5b89\u88c5\u5b8c\u6210\u3002 2\u3001 x86\u3001x86-64 \u2013 Windows x86 \uff1a\u9002\u752832\u4f4dwindows\u64cd\u4f5c\u7cfb\u7edf\u3002 \u2013 Windows x86-64 \uff1a\u9002\u752864\u4f4dwindows\u64cd\u4f5c\u7cfb\u7edf\u3002 \u4e0b\u56fe\u4e0d\u8981\u9009\u62e9all user \u9009\u62e9\u5bf9\u5e94\u7248\u672c\u70b9\u51fb\u5373\u53ef2.7.17\uff0c\u6700\u597d\u9009\u62e932\u4f4d\u7684\uff0c\u56e0\u4e3a\u5b83\u7684\u517c\u5bb9\u6027\u66f4\u597d \u914d\u7f6ePath \u5b89\u88c5\u8def\u5f84\u6dfb\u52a0\u5230path\u73af\u5883\u53d8\u91cf\u5373\u53ef\u3002\u57283.7\u53ef\u4ee5\u5728\u5b89\u88c5\u65f6\u9009\u62e9\u914d\u7f6epath \u6ce8\u610f\uff1apython3.81\u5b89\u88c5\u7684\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5b89\u88c5pip \u5b89\u88c5pip \u5b89\u88c5setuptools \u7b2c\u4e00\u6b65\uff1a\u4e0b\u8f7d\u5b89\u88c5\u5305\uff08\u5730\u5740\uff1ahttps://pypi.io/packages/source/s/setuptools/setuptools-33.1.1.zip\uff09 \u7b2c\u4e8c\u6b65\uff1a\u89e3\u538b \u7b2c\u4e09\u6b65\uff1aCMD\u5207\u6362\u5230\u8be5\u76ee\u5f55\uff0c\u5207\u6362\u7684\u65b9\u6cd5\u81ea\u5df1\u767e\u5ea6\uff0c\u8fd0\u884c\u547d\u4ee4\u201dpython setup.py install\" \u5b89\u88c5pip \u7b2c\u4e00\u6b65\uff1a\u4e0b\u8f7dpip\u538b\u7f29\u5305\uff08\u5730\u5740\uff1ahttps://pypi.org/project/pip/#files\uff09 \u7b2c\u4e8c\u6b65\uff1a\u89e3\u538b \u7b2c\u4e09\u6b65\uff1aCMD\u5207\u6362\u5230\u8be5\u76ee\u5f55\uff0c\u8fd0\u884c\u547d\u4ee4\u201dpython setup.py install\" pip\u73af\u5883\u53d8\u91cf\u914d\u7f6e \u8fd9\u662f\u4f60\u6253\u5f00python\u7684\u5b89\u88c5\u76ee\u5f55\uff0c\u53d1\u73b0Scripts\u7684\u6587\u4ef6\u5939\u4e0b\u5c31\u5df2\u7ecf\u6709\u4e86pip\u7684\u6587\u4ef6\uff0c\u5c06\u6b64\u6587\u4ef6\u5939\u4e0b\u7684\u76ee\u5f55\u4f5c\u4e3a\u73af\u5883\u53d8\u91cf\u914d\u7f6e\uff0c\u518d\u518d\u5728cmd\u4e0b\u8f93\u5165pip\uff0c\u5b8c\u7f8e\u5b8c\u6210\uff01\u6dfb\u52a0\u5728path\u76ee\u5f55\u4e0b \u68c0\u67e5 \u5728CMD\u8f93\u5165pip,\u6210\u529f\u5982\u4e0b \u5b89\u88c5requests \u9996\u5148\u9700\u8981\u5b89\u88c5pip 2020.1205\u5b89\u88c5\u65f6\u7531\u4e8e\u6302vpn\u6240\u4ee5\u5bfc\u81f4\u9519\u8bef\uff0c\u4e4b\u540e\u5173\u95ed\u5373\u89e3\u51b3\u95ee\u9898\u3002 pip install requests VSCode\u5f00\u53d1python Pyright Python \u5b89\u88c5\u4ee5\u4e0a\u4fe9\u4e2a\u63d2\u4ef6 \u4f7f\u7528python\u89e3\u91ca\u5668 python // \u5728\u7ec8\u7aef\u8f93\u5165\u5373\u53ef\u4f7f\u7528 exit() // \u9000\u51fa \u6982\u8ff0 demo.py demo:\u811a\u672c\u540d py:\u811a\u672c\u683c\u5f0f \u7a0b\u5e8f\u7ec4\u6210 # coding:utf-8 # \u811a\u672c\u5934 import os # \u5f15\u7528\u90e8\u5206 if __name__ == '__main__': # \u4e1a\u52a1\u4ee3\u7801 print('hello word ' + os.getcwd()) print('end') \u811a\u672c\u5934\u6ce8\u91ca\uff1a\u544a\u8bc9\u89e3\u91ca\u5668\u4f7f\u7528\u7684\u7f16\u7801\u683c\u5f0f \u6ce8\u91ca # coding:utf-8 import os ''' \u8fd9\u662f\u5757\u6ce8\u91ca ''' \"\"\" \u8fd9\u4e5f\u662f\u5757\u6ce8\u91ca \"\"\" print(os.getcwd()) print('hello word by matt') # \u8fd9\u662f\u884c\u6ce8\u91ca \u00b7\u884c\u6ce8\u91ca\u4e4b\u524d\u4fe9\u4e2a\u7a7a\u683c \u53d8\u91cf \u5b9a\u4e49 \u5fc5\u987b\u662f\u6570\u5b57\uff0c\u5b57\u6bcd\uff0c\u4e0b\u5212\u7ebf\u7ec4\u6210 \u4efb\u610f\u957f\u5ea6\uff0c\u4f46\u4e0d\u5efa\u8bae\u592a\u957f\uff0c20\u5b57\u7b26\u4ee5\u5185 \u5f00\u5934\u5fc5\u987b\u662f\u5b57\u6bcd \u533a\u5206\u5927\u5c0f\u5199 \u4e00\u822c\u4e0d\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5\u4f7f\u7528\u4e0b\u5212\u7ebf\uff0cmax_age \u7c7b\u578b \u6570\u5b57 \u6574\u6570 age = 11 # \u63a8\u8350\u4f7f\u7528\u8fd9\u79cd age = int(11) \u6d6e\u70b9\u6570 average = 1.1 average = float(1.1) \u5b57\u7b26\u4e32 str1 = 'hello word' str2 = \"hello word\" str3 = str('hello word') \u5b57\u7b26\u4e32\u4f7f\u7528+\u5373\u53ef\u76f8\u52a0\uff0c\u4f7f\u7528*\u53ef\u4ee5\u590d\u5236\u51e0\u6b21 \u5b9a\u4e49\u4e00\u4e2a\u957f\u7684\u5b57\u7b26\u4e32 \uff08'hello' 'word'\uff09 ''' this is good hello hey ''' \u5e03\u5c14\u7c7b\u578b bool1 = True bool1 = bool('hello') \u7a7a\u7c7b\u578b None \u5173\u952e\u5b57 \u53d8\u91cf\u540d\u7528\u4e8e\u7ed9\u53d8\u91cf\u8d4b\u503c\u4f7f\u7528\uff0c\u800c\u5173\u952e\u5b57\u7528\u4e8e\u4e1a\u52a1\u903b\u8f91\u5904\u7406 \u5e38\u89c1\u5173\u952e\u5b57 \u8fd0\u7b97\u7b26 \u6bd4\u8f83 0-255\u4f1a\u4f7f\u7528\u7f13\u5b58 \u51fd\u6570 \u4e3b\u51fd\u6570\uff0c\u5165\u53e3 if __name__ == '__main__': print('hello word ' + os.getcwd()) # \u4e3b\u51fd\u6570\u9000\u51fa\u5c31\u662f\u4e0d\u5728\u6709\u7f29\u8fdb print('end') \u4e3b\u51fd\u6570\u9000\u51fa\u5c31\u662f\u4e0d\u5728\u6709\u7f29\u8fdb \uff084\u4e2a\u7a7a\u683c/tab\uff09 \u5e38\u7528\u7684\u5185\u7f6e\u51fd\u6570 input:\u4ece\u952e\u76d8\u8f93\u5165 name = input(\"\u4f60\u7684\u59d3\u540d\") print('name: %s' % (name)) \u683c\u5f0f\u5316\u8f93\u51fa print('name: %s' % (name)) type:\u5224\u65ad\u6570\u636e\u7684\u7c7b\u578b type(age) id:\u8fd4\u56de\u53d8\u91cf\u7684\u5185\u5b58\u5730\u5740 id(age) is :\u5224\u65ad\u4fe9\u4e2a\u5bf9\u8c61\u5185\u5b58\u5730\u5740\u662f\u5426\u76f8\u7b49 print(str is str_1) len:\u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 len(str1) in \u548c not in 'hello' in 'hello word' # hello\u662f\u5426\u5728hello word\u4e2d 'hello' not in 'hello word' max:\u5224\u65ad\u6570\u636e\u4e2d\u6700\u5927\u7684\u6210\u5458 max(list2) min\uff1a\u5224\u65ad\u6570\u636e\u4e2d\u6700\u5c0f\u7684\u6210\u5458 min(list1) \u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784 list \u5217\u8868\uff1a\u7528\u6765\u5b58\u50a8\u6709\u5e8f\u7684\u6570\u636e\u7684\u961f\u5217 int_list = [1, 2, 3] int_list1 = list([1, 2, 3]) list = ['1', '2', '3'] list = list * 2 // \u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u94fe\u8868 tuple \u5143\u7ec4\uff1a\u7528\u6765\u5b58\u50a8\u6709\u5e8f\u7684\u6570\u636e\u7684\u961f\u5217\uff0c\u76f8\u5bf9\u4e8elist,\u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\uff0clist\u662f\u53ef\u4ee5\u6539\u53d8\u7684 # coding:utf-8 tuple_1 = (1, 2, 3,) tuple_2 = tuple((1, 2, 3, 4,)) print(tuple_1) print(tuple_2) \u5982\u679c\u5143\u7ec4\u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u4e00\u5b9a\u8981\u6dfb\u52a0, res = (1,) dict \u5b57\u5178\uff1a\u7528\u6765\u5b58\u50a8key \u548c value\u7684\u6620\u5c04 key \u652f\u6301 \u5b57\u7b26\u4e32\uff0c\u6570\u5b57\u548c\u5143\u7ec4\u7c7b\u578b\uff0c\u4f46\u5217\u8868\u662f\u4e0d\u652f\u6301\u7684 value \u652f\u6301\u6240\u6709python\u7684\u6570\u636e\u7c7b\u578b # coding:utf-8 dict_01 = {'name': 'matt', 'age': 12} dict_02 = dict({'name': 'mike', 'age': 19}) print(dict_01) print(dict_02) \u5b57\u7b26\u4e32 str1.capitalize() # \u5b57\u7b26\u4e32\u9996\u5b57\u6bcd\u5927\u5199 str1.lower() # \u5b57\u7b26\u4e32\u5c0f\u5199 str1.upper() # \u5b57\u7b26\u4e32\u5927\u5199 str1.swapcase() # \u5b57\u7b26\u4e32\u5927\u5c0f\u5199\u8f6c\u6362 str2.zfill(10) # \u5de6\u8fb9\u75280\u586b\u5145 str2.count('h') # \u8fd4\u56de\u5b57\u7b26\u4e32\u6210\u5458\u7684\u4e2a\u6570 print(str2.startswith('he')) # str2\u662f\u5426\u662f\u2018he\u2019\u5f00\u5934 print(str2.endswith('he')) # str2\u662f\u5426\u4ee5\u2018he\u2019\u7ed3\u5c3e find \u548c index \u67e5\u627e\u6210\u5458\u5f00\u59cb\u7684\u4f4d\u7f6e \u533a\u522b\uff1afind\u627e\u4e0d\u5230\u8fd4\u56de-1,\u800cindex\u4f1a\u62a5\u9519 print(str2.find('hell')) print(str2.index('hell')) strip\u53bb\u9664\u5b57\u7b26\u4e32\u9996\u5c3e\u6307\u5b9a\u7684\u6210\u5458\u9ed8\u8ba4\u662f\u7a7a\u683c str3 = ' hello ' print(str3.strip()) print(str3.strip('h')) # hellhoh -> ellho replace():\u5b57\u7b26\u4e32\u66ff\u6362 str4 = 'hello' print(str4.replace('e', 'a', 3)) # old,new,\u6b21\u6570\uff1a\u9ed8\u8ba4\u662f\u5168\u90e8\u66ff\u6362 str_1 = ' ' print(str_1.isspace()) # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u6709\u7a7a\u683c\u7ec4\u6210 str_1 = 'hello' print(str_1.istitle()) # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u6807\u9898\uff0c\u5373\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199 print(str_1.isupper()) # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u5168\u90e8\u5927\u5199 print(str_1.islower()) # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u5168\u90e8\u5c0f\u5199 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 str1 = 'hello word' # 1 print('%s python' % (str1)) # 2 print(f'hello {str1}') # 3 print('abc{}'.format('ag')) print('hello {0} -{1}-{0}'.format(1,2)) print('hello {name}'.format(name='age')) print('hello num {:10.2f}'.format(3.134343)) print('{:d}'.format(34)) print('hello %30.e' % (10000000)) %d # \u5341\u8fdb\u5236 %b # \u4e8c\u8fdb\u5236 %o # \u516b\u8fdb\u5236 %x # \u5341\u516d\u8fdb\u5236 \u8f6c\u4e49\u5b57\u7b26 \u5217\u8868 list len:\u5224\u65ad\u5217\u8868\u4e2d\u5143\u7d20\u7684\u4e2a\u6570 str = 'hello' list1= [1, 3, 3] print(len(list1)) # 3 in :\u5224\u65ad\u67d0\u4e2a\u5143\u7d20\u662f\u5426\u5728\u8be5\u5217\u8868\u4e2d\uff0c\u6216\u8005\u5224\u65ad\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u7684\u957f\u5ea6,\u800cnot in \u529f\u80fd\u521a\u597d\u76f8\u53cd str = 'hello' list_1= [1, 3, 3] print(len(list_1)) print(1 in list_1) append():\u5217\u8868\u6dfb\u52a0\u5143\u7d20 list_1.append('5') print(list_1) # [1, 3, 3, '5'] insert:\u5217\u8868\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u6dfb\u52a0\u5143\u7d20 list_1 = [1, 2, 3] list_1.insert(0, 'a') print(list_1) # ['a', 1, 2, 3] count:\u5728\u5217\u8868\u4e2d\u7edf\u8ba1\u67d0\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570 print(list_1.count(1)) # 1 remove:\u5220\u9664\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u62a5\u9519\uff0c\u5982\u679c\u6709\u591a\u4e2a\u5219\u5220\u9664\u7b2c\u4e00\u4e2a list_1.remove(1) print(list_1) del:\u5c06\u53d8\u91cf\u5b8c\u5168\u5220\u9664\uff0c\u5728\u4f7f\u7528\u5c31\u4f1a\u62a5\u9519 del list_1 print(list_1) # \u76f4\u63a5\u62a5\u9519 reverse():\u5217\u8868\u7684\u5143\u7d20\u8fdb\u884c\u53cd\u8f6c list_1 = list([1, 2, 3]) list_1.reverse() print(list_1) # [3, 2, 1] sort():\u6392\u5e8f,reverse=False(\u9ed8\u8ba4)\u5347\u5e8f\uff0c\u5982\u679cTrue\u5219\u964d\u5e8f\uff0ckey=\u6839\u636e\u4ec0\u4e48\u8fdb\u884c\u6392\u5e8f\uff0c \u6210\u5458\u5fc5\u987b\u662f\u540c\u4e00\u6570\u636e\u7c7b\u578b\uff0c\u5426\u5219\u65e0\u6cd5\u8fdb\u884c\u6392\u5e8f list_1.sort(reverse=False) # key= reverse= print(list_1) # [1, 2, 3] clear():\u5217\u8868\u6e05\u7a7a list_1.clear() print(list_1) # [] copy\u548cdeepcopy\u90fd\u662f\u5217\u8868\u62f7\u8d1d\u4e00\u4efd \u5982\u679c\u5217\u8868\u8fd8\u6709\u5217\u8868\u4f7f\u7528copy\u5219\u5b83\u4eec\u4f1a\u5171\u4eab\u4e00\u4e2a\u5217\u8868\uff0c\u800cdeepcopy\u4f1a\u91cd\u65b0\u5f00\u8f9f\u4e00\u4e2a\u5217\u8868 print('copy') list_1 = [1, 2, 3] list_2 = list_1.copy() list_1.append('a') print(list_1,list_2) # [1, 2, 3, 'a'] [1, 2, 3] print(list_1 is list_2) print('deepcopy----') list_1 = [[1,2],[3,4]] list_2 = copy.deepcopy(list_1) list_2[1].append('a') print(list_1, list_2) extend:\u5217\u8868\u4e2d\u6dfb\u52a0\u5217\u8868 print('extend') list_1 = [1, 2, 3] list_2 = ['a', 'b'] list_1.extend(list_2) print(list_1) # [1, 2, 3, 'a', 'b'] \u7d22\u5f15\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f0 \u5207\u7247\uff1a\u6bd4\u5982\u5b57\u7b26\u4e32\u7684\u622a\u53d6\uff0c\u5de6\u542b\u53f3\u4e0d\u542b pop():\u6839\u636e\u7d22\u5f15\u83b7\u5220\u9664\u503c list_1 = list([1, 2, 3]) list_1.pop(1) print(list_1) \u4e5f\u53ef\u4ee5\u4fee\u6539\u503c\uff0c\u4e0d\u8fc7\u5b57\u7b26\u4e32\u65e0\u6cd5\u4fee\u6539 del list_1[0] print(list_1) set \u96c6\u5408\u7684\u4f7f\u7528 \u96c6\u5408\u7684\u521b\u5efa set_1 = {1, 2, 3} # 1 print(type(set_1)) set_1 = set() # 2 set([2, 3, 3]) # {}\uff1a\u4e0d\u53ef\u4ee5\u4f7f\u7528{}\u521b\u5efa\u7a7a\u7684\u96c6\u5408 add:\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 update:\u6dfb\u52a0\u4e00\u4e2a\u96c6\u5408\uff0c\u5982\u679c\u5143\u7d20\u5df2\u7ecf\u5728\u96c6\u5408\u4e2d\u5219\u5ffd\u7565\u8be5\u5143\u7d20 remove:\u79fb\u9664\u4e00\u4e2a\u5143\u7d20 clear:\u6e05\u7a7a\u96c6\u5408 # coding:utf-8 set_1 = set((1, 2, 3, 4)) print(set_1) set_1.add('helo') # {1, 2, 3, 4, 'helo'} print(set_1) # set_1.update([1, 3, 3, 'matt']) # \u5982\u679c\u5143\u7d20\u5df2\u7ecf\u5728\u96c6\u5408\u4e2d\u5219\u5ffd\u7565\u8be5\u5143\u7d20 print(set_1) # {1, 2, 3, 4, 'matt', 'helo'} set_1.remove('matt') print('remove', set_1) # remove {1, 2, 3, 4, 'helo'} set_1.clear() print(set_1) # del set_1 print(set_1) difference:\u5dee\u96c6 intersection\uff1a\u4ea4\u96c6 union\uff1a\u5e76\u96c6 isdisjoint\uff1a\u5224\u65ad\u4fe9\u4e2a\u96c6\u5408\u4e2d\u662f\u5426\u6709\u4ea4\u96c6,\u6ca1\u6709\u8fd4\u56deTrue # coding:utf-8 set_1 = {1, 2, 3, 4} set_2 = {1, 2, 'a', 'b'} diff = set_1.difference(set_2) # \u4e5f\u53ef\u4ee5\u4f7f\u7528- print(diff) # print(set_1 - set_2) intersection_res = set_1.intersection(set_2) print('\u4ea4\u96c6', intersection_res) union_res = set_1.union(set_2) print('union_res', union_res) isdisjoint_res = set_1.isdisjoint(set_2) # \u5224\u65ad\u4fe9\u4e2a\u96c6\u5408\u662f\u5426\u5305\u542b\u76f8\u540c\u7684\u5143\u7d20\uff0c\u6ca1\u6709\u5219True print(isdisjoint_res) \u5b57\u5178\u4f7f\u7528 \u5b9a\u4e49 dict_01 = {'name': 'matt', 'age': 12} dict_02 = dict({'name': 'mike', 'age': 19}) \u548c update() update()\u4e2d\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684\u5b57\u5178\uff0c\u5e76\u4f1a\u5df2\u6709\u7684\u5b57\u5178\u8fdb\u884c\u8986\u76d6\u9664\u5176\u4e2d\u4fe9\u4e2a\u5b57\u5178\u76f8\u540c\u7684key\u4f1a\u8fdb\u884c\u8986\u76d6 dict['age'] = 11 dict_1 = {'name': 'matt'} dict.update(dict_1) # {'age': 11, 'name': 'matt'} setdefault:key\u4e0d\u5b58\u5728\u624d\u4f1a\u8bbe\u7f6e dict.setdefault('a', 1) dict.setdefault('name', 1) print(dict) keys \u548c values keys:\u83b7\u53d6\u5b57\u5178\u4e2d\u6240\u6709\u7684key values:\u83b7\u53d6\u5b57\u5178\u4e2d\u6240\u6709\u7684\u503c \u4e8c\u8005\u8fd4\u56de\u7684\u90fd\u662f\u4f2a\u5217\u8868\uff0c\u4e0d\u5177\u6709\u5217\u8868\u7684\u6240\u6709\u529f\u80fd print(dict.keys()) print('values:', dict.values()) \u548c get \u4e8c\u8005\u7528\u4e8e\u5b57\u5178\u6839\u636ekey\u83b7\u53d6\u5c5e\u6027\u7684\u503c\uff0c print(dict['a']) print(dict.get('v')) clear:\u6e05\u7a7a\u5b57\u5178 dict.clear() pop():\u6839\u636ekey\u5220\u9664\u503c\uff0c\u82e5key\u4e0d\u5b58\u5728\u5219\u62a5\u9519 dict.pop('a') del\u4f7f\u7528 del dict['b'] # \u5220\u9664key\u9b4f'b' del dict # \u5728\u5185\u5b58\u4e2d\u5220\u9664\u5b57\u5178\uff0c\u5728\u4f7f\u7528\u5219\u62a5\u9519 print(dict) copy:\u5b57\u5178\u7684\u590d\u5236\uff0c\u5185\u5b58\u5730\u5740\u4f1a\u53d1\u751f\u6539\u53d8 dict_01 = dict.copy() print(id(dict) == id(dict_01)) print(dict_01 is dict) in \u548c not in dict = {'a': 1, 'b': 2} print('a' not in dict) popitem():\u5220\u9664\u5b57\u5178\u672b\u5c3e\u7684key-value,\u5b57\u5178\u4e3a\u7a7a\u76f4\u63a5\u62a5\u9519 res = dict.popitem() # \u5b57\u5178\u4e3a\u7a7a\u76f4\u63a5\u62a5\u9519 \u200b \u6d41\u7a0b\u63a7\u5236 if # coding:utf-8 i = 1 if i < 10: print('\u4e2a\u4f4d\u6570') elif i >= 10 and i < 100: print('\u5341\u4f4d\u6570') else: print('\u5176\u4ed6') for # coding:utf-8 list_0 = [1, 2, 3, 4] for i in list_0: print(i) dict_0 = {'name': 'matt', 'age': 10} for i in dict_0.values(): print(i) while # coding:utf-8 count = 100 while count > 0: count -= 1 print(count) print('end') \u51fd\u6570\u7684\u4f7f\u7528 # coding:utf-8 \u200b``` a\uff1a\u5fc5\u987b\u8981\u4f20\uff0cb\u6709\u9ed8\u8ba4\u503c\u53ef\u4ee5\u4e0d\u4f20 \u200b``` def incr(a, b = 1): return a + 1 sum = incr(a = 1) print(sum) # \u53ef\u53d8\u53c2\u6570\uff0c\u5176\u4e2dargs\u5c01\u88c5\u4e3a\u5143\u7ec4\uff0c\u800ckwargs\u5c01\u88c5\u4e3a\u5b57\u5178 def test(*args, **kwargs): print('hello word') print(args) print(kwargs) test(1, 2, 3,name = 'age', age = 17) # (1, 2, 3) # {'name': 'age', 'age': 17} \u51fd\u6570\u4e2d\u4f7f\u7528\u7c7b\u578b # python\u4e0d\u4f1a\u5bf9\u53c2\u6570\u7c7b\u578b\u8fdb\u884c\u9a8c\u8bc1 def test(i:int, j:str = 'hello word'): print(i) lambda\u4f7f\u7528 f = lambda : print('test lambda') f() t = lambda x, y : x + y print(t(1, 2)) print('hello' + '11') \u7c7b\u4e0e\u5bf9\u8c61 # coding:utf-8 class Person(object): name = 'matt' __sex = '\u5973' # \u6784\u9020\u51fd\u6570\uff0cself\u4ee3\u8868\u5f53\u524d\u5bf9\u8c61 def __init__(self): print(self) self.age = 17 def __init__(self, name): print('hello word') person = Person('11') print(person.name) # print(person.sex) \u88c5\u9970\u5668\u7684\u4f7f\u7528 def a(f): def inter(*args, **kwargs): return f(*args, **kwargs) return inter @a def test(i): print(i) test(1) class T(object): __name = 'matt' # \u76f4\u63a5\u53ef\u4ee5\u4f7f\u7528\u7c7b\u8c03\u7528 @classmethod def a(cls, t): print(t) # \u76f4\u63a5\u53ef\u4ee5\u4f7f\u7528\u7c7b\u8c03\u7528\uff0c\u4e0d\u9700\u8981\u4f7f\u7528cls,self @staticmethod def b(): print('staticmethod') # \u53ef\u4ee5\u4f7f\u7528\u5bf9\u8c61.name @property def name(self): return self.__name T.a('11') T.b() t = T() print(t.name) \u591a\u7ee7\u627f # coding:utf-8 class A(object): def info(self): print('a') class B(object): def info(self): print('b') class C(B, A): def test(self): super(C, self).info() print('test') c = C() c.test() super: super(\u5f53\u524d\u7c7b\uff0cself).\u7236\u7c7b\u7684\u5c5e\u6027\u6216\u8005\u65b9\u6cd5 # coding:utf-8 class Parent(object): def __init__(self, name): self.name = name def info(self,name): print(name) p = Parent('p') p.info('aaa') class Son(Parent): def __init__(self): super(Son, self).__init__('aaa') def test(self): super(Son, self).info('hello word') s = Son() s.test() \u7c7b\u7684\u9ad8\u7ea7\u51fd\u6570 # coding:utf-8 class Person(object): # \u7c7b\u7684\u63cf\u8ff0\u4fe1\u606f,\u76f8\u5f53\u4e8etoString()\u65b9\u6cd5 def __str__(self): print('this is person') return '1' # \u5728key\u4e0d\u5b58\u5728\u65f6\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u51fd\u6570 def __getattr__(self, item): print('%s \u4e0d\u5b58\u5728' % (item)) # \u5728\u5c5e\u6027\u4e0d\u5b58\u5728\u8bbe\u7f6e\u65f6\u89e6\u53d1\u8fd9\u4e2a\u51fd\u6570 def __setattr__(self, key, value): if key not in self.__dict__: return # \u5bf9\u8c61(\u53c2\u6570) def __call__(self, *args, **kwargs): print(*args) person = Person() print(person.a) print(person) person.age = 18 print(person.age) person(12222) print(person.__dict__) \u5f02\u5e38 \u5f02\u5e38\u7684\u6355\u83b7 try: i = 10 / 0 except Exception as e: print(e) finally: print('end...') \u6355\u83b7\u591a\u4e2a\u5f02\u5e38 try: res = 1 / 0 except ZeroDivisionError as e: print(e) except Exception as e: print(e) finally: print('end') try: res = 1 / 0 except (ZeroDivisionError, Exception) as e: print(e) \u81ea\u5b9a\u4e49\u629b\u51fa\u5f02\u5e38 i = 100 if i == 100: raise Exception('i \u4e0d\u53ef\u4ee5\u4e3a100') \u81ea\u5b9a\u4e49\u5f02\u5e38 # coding:utf-8 class MyException(Exception): def __init__(self, message): self.message = message i = 100 if i == 100: raise MyException('hhhah') \u5e38\u89c1\u7684\u5f02\u5e38 StopIteration\uff1a\u7531\u5185\u7f6e\u51fd\u6570 next() \u548c iterator \u7684 next () \u65b9\u6cd5\u6240\u5f15\u53d1\uff0c\u7528\u6765\u8868\u793a\u8be5\u8fed \u4ee3\u5668\u4e0d\u80fd\u4ea7\u751f\u4e0b\u4e00\u9879\uff1b ZeroDivisionError\uff1a\u5f53\u9664\u6cd5\u6216\u53d6\u4f59\u8fd0\u7b97\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u96f6\u65f6\u5c06\u88ab\u5f15\u53d1 AttributeError\uff1a\u5f53\u5c5e\u6027\u5f15\u7528\u6216\u8d4b\u503c\u5931\u8d25\u65f6\u5c06\u88ab\u5f15\u53d1 EOFError\uff1a\u5f53 input() \u51fd\u6570\u672a\u8bfb\u53d6\u4efb\u4f55\u6570\u636e\u5373\u8fbe\u5230\u6587\u4ef6\u7ed3\u675f\u6761\u4ef6 (EOF) \u65f6\u5c06\u88ab\u5f15\u53d1 ImportError\uff1a\u5f53 import \u8bed\u53e5\u5c1d\u8bd5\u52a0\u8f7d\u6a21\u5757\u9047\u5230\u9ebb\u70e6\u65f6\u5c06\u88ab\u5f15\u53d1 ModuleNotFoundError\uff1a\u5f53\u4e00\u4e2a\u6a21\u5757\u65e0\u6cd5\u88ab\u5b9a\u4f4d\u65f6\u5c06\u7531 import \u5f15\u53d1 LookupError\uff1a\u6b64\u57fa\u7c7b\u7528\u4e8e\u6d3e\u751f\u5f53\u6620\u5c04\u6216\u5e8f\u5217\u6240\u4f7f\u7528\u7684\u952e\u6216\u7d22\u5f15\u65e0\u6548\u65f6\u5f15\u53d1\u7684\u5f02\u5e38 IndexError\uff1a\u5f53\u5e8f\u5217\u62bd\u53d6\u8d85\u51fa\u8303\u56f4\u65f6\u5c06\u88ab\u5f15\u53d1 KeyError\uff1a\u5f53\u5728\u73b0\u6709\u952e\u96c6\u5408\u4e2d\u627e\u4e0d\u5230\u6307\u5b9a\u7684\u6620\u5c04\uff08\u5b57\u5178\uff09\u952e\u65f6\u5c06\u88ab\u5f15\u53d1 NameError\uff1a\u5f53\u67d0\u4e2a\u5c40\u90e8\u6216\u5168\u5c40\u540d\u79f0\u672a\u627e\u5230\u65f6\u5c06\u88ab\u5f15\u53d1 UnboundLocalError\uff1a\u5f53\u5728\u51fd\u6570\u6216\u65b9\u6cd5\u4e2d\u5bf9\u67d0\u4e2a\u5c40\u90e8\u53d8\u91cf\u8fdb\u884c\u5f15\u7528\uff0c\u4f46\u8be5\u53d8\u91cf\u5e76\u672a\u7ed1\u5b9a\u4efb \u4f55\u503c\u65f6\u5c06\u88ab\u5f15\u53d1 OSError\uff1a\u6b64\u5f02\u5e38\u5728\u4e00\u4e2a\u7cfb\u7edf\u51fd\u6570\u8fd4\u56de\u7cfb\u7edf\u76f8\u5173\u7684\u9519\u8bef\u65f6\u5c06\u88ab\u5f15\u53d1\uff0c\u6b64\u7c7b\u9519\u8bef\u5305\u62ec I/O \u64cd \u4f5c\u5931\u8d25\u4f8b\u5982 \u201c\u6587\u4ef6\u672a\u627e\u5230\u201d \u6216 \u201c\u78c1\u76d8\u5df2\u6ee1\u201d \u7b49\uff08\u4e0d\u5305\u62ec\u975e\u6cd5\u53c2\u6570\u7c7b\u578b\u6216\u5176\u4ed6\u5076\u7136\u6027\u9519\u8bef\uff09 BlockingIOError\uff1a\u5f53\u4e00\u4e2a\u64cd\u4f5c\u4f1a\u88ab\u67d0\u4e2a\u8bbe\u7f6e\u4e3a\u975e\u963b\u585e\u64cd\u4f5c\u7684\u5bf9\u8c61\uff08\u4f8b\u5982\u5957\u63a5\u5b57\uff09\u6240\u963b\u585e\u65f6 \u5c06\u88ab\u5f15\u53d1 ChildProcessError\uff1a\u5f53\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u4e0a\u7684\u64cd\u4f5c\u5931\u8d25\u65f6\u5c06\u88ab\u5f15\u53d1 ConnectionError\uff1a\u4e0e\u8fde\u63a5\u76f8\u5173\u95ee\u9898\u7684\u57fa\u7c7b BrokenPipeError\uff1a\u5f53\u8bd5\u56fe\u5199\u5165\u53e6\u4e00\u7aef\u5df2\u88ab\u5173\u95ed\u7684\u7ba1\u9053\uff0c\u6216\u662f\u8bd5\u56fe\u5199\u5165\u5df2\u5173\u95ed\u5199\u5165\u7684\u5957\u63a5\u5b57 \u65f6\u5c06\u88ab\u5f15\u53d1 ConnectionAbortedError\uff1a\u5f53\u8fde\u63a5\u5c1d\u8bd5\u88ab\u5bf9\u7aef\u4e2d\u6b62\u65f6\u5c06\u88ab\u5f15\u53d1ConnectionRefusedError\uff1a \u5f53\u8fde\u63a5\u5c1d\u8bd5\u88ab\u5bf9\u7aef\u62d2\u7edd\u65f6\u5c06\u88ab\u5f15\u53d1 ConnectionResetError\uff1a\u5f53\u8fde\u63a5\u88ab\u5bf9\u7aef\u91cd\u7f6e\u65f6\u5c06\u88ab\u5f15\u53d1 FileExistsError\uff1a\u5f53\u8bd5\u56fe\u521b\u5efa\u4e00\u4e2a\u5df2\u5b58\u5728\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u65f6\u5c06\u88ab\u5f15\u53d1 FileNotFoundError\uff1a\u5f53\u6240\u8bf7\u6c42\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u4e0d\u5b58\u5728\u65f6\u5c06\u88ab\u5f15\u53d1 InterruptedError\uff1a\u5f53\u7cfb\u7edf\u8c03\u7528\u88ab\u8f93\u5165\u4fe1\u53f7\u4e2d\u65ad\u65f6\u5c06\u88ab\u5f15\u53d1 IsADirectoryError\uff1a\u5f53\u8bf7\u6c42\u5bf9\u4e00\u4e2a\u76ee\u5f55\u6267\u884c\u6587\u4ef6\u64cd\u4f5c\u5c06\u88ab\u5f15\u53d1 NotADirectoryError\uff1a\u5f53\u8bf7\u6c42\u5bf9\u4e00\u4e2a\u975e\u76ee\u5f55\u5bf9\u8c61\u6267\u884c\u76ee\u5f55\u64cd\u4f5c\u65f6\u5c06\u88ab\u5f15\u53d1 PermissionError\uff1a \u5f53\u5728\u6ca1\u6709\u8db3\u591f\u64cd\u4f5c\u6743\u9650\u7684\u60c5\u51b5\u4e0b\u8bd5\u56fe\u6267\u884c\u67d0\u4e2a\u64cd\u4f5c\u65f6\u5c06\u88ab\u5f15\u53d1 ProcessLookupError\uff1a\u5f53\u7ed9 \u5b9a\u7684\u8fdb\u7a0b\u4e0d\u5b58\u5728\u65f6\u5c06\u88ab\u5f15\u53d1 TimeoutError\uff1a\u5f53\u4e00\u4e2a\u7cfb\u7edf\u51fd\u6570\u53d1\u751f\u7cfb\u7edf\u7ea7\u8d85\u65f6\u7684\u60c5\u51b5\u4e0b\u5c06\u88ab\u5f15\u53d1 ReferenceError\uff1a\u6b64\u5f02\u5e38\u5c06\u5728\u4f7f\u7528 weakref.proxy() \u51fd\u6570\u6240\u521b\u5efa\u7684\u5f31\u5f15\u7528\u6765\u8bbf\u95ee\u8be5\u5f15\u7528\u7684 \u67d0\u4e2a\u5df2\u88ab\u4f5c\u4e3a\u5783\u573e\u56de\u6536\u7684\u5c5e\u6027\u65f6\u88ab\u5f15\u53d1 RuntimeError\uff1a\u5f53\u68c0\u6d4b\u5230\u4e00\u4e2a\u4e0d\u5f52\u5c5e\u4e8e\u4efb\u4f55\u5176\u4ed6\u7c7b\u522b\u7684\u9519\u8bef\u65f6\u5c06\u88ab\u5f15\u53d1 NotImplementedError\uff1a\u5728\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u57fa\u7c7b\u4e2d\uff0c\u62bd\u8c61\u65b9\u6cd5\u5e94\u5f53\u5728\u5176\u8981\u6c42\u6240\u6d3e\u751f\u7c7b\u91cd\u8f7d\u8be5 \u65b9\u6cd5\uff0c\u6216\u662f\u5728\u5176\u8981\u6c42\u6240\u5f00\u53d1\u7684\u7c7b\u63d0\u793a\u5177\u4f53\u5b9e\u73b0\u5c1a\u5f85\u6dfb\u52a0\u65f6\u5f15\u53d1\u6b64\u5f02\u5e38 RecursionError\uff1a\u5b83\u4f1a\u5728\u89e3\u91ca\u5668\u68c0\u6d4b\u53d1\u73b0\u8d85\u8fc7\u6700\u5927\u9012\u5f52\u6df1\u5ea6\u65f6\u88ab\u5f15\u53d1 SyntaxError\uff1a\u5f53\u89e3\u6790\u5668\u9047\u5230\u8bed\u6cd5\u9519\u8bef\u65f6\u5c06\u88ab\u5f15\u53d1 IndentationError\uff1a\u4e0e\u4e0d\u6b63\u786e\u7684\u7f29\u8fdb\u76f8\u5173\u7684\u8bed\u6cd5\u9519\u8bef\u7684\u57fa\u7c7b TabError\uff1a\u5f53\u7f29\u8fdb\u5305\u542b\u5bf9\u5236\u8868\u7b26\u548c\u7a7a\u683c\u7b26\u4e0d\u4e00\u81f4\u7684\u4f7f\u7528\u65f6\u5c06\u88ab\u5f15\u53d1 SystemError\uff1a\u5f53\u89e3\u91ca\u5668\u53d1\u73b0\u5185\u90e8\u9519\u8bef\uff0c\u4f46\u60c5\u51b5\u770b\u8d77\u6765\u5c1a\u672a\u4e25\u91cd\u5230\u8981\u653e\u5f03\u6240\u6709\u5e0c\u671b\u65f6\u5c06\u88ab\u5f15 \u53d1 TypeError\uff1a\u5f53\u4e00\u4e2a\u64cd\u4f5c\u6216\u51fd\u6570\u88ab\u5e94\u7528\u4e8e\u7c7b\u578b\u4e0d\u9002\u5f53\u7684\u5bf9\u8c61\u65f6\u5c06\u88ab\u5f15\u53d1 ValueError\uff1a\u5f53\u64cd\u4f5c\u6216\u51fd\u6570\u63a5\u6536\u5230\u5177\u6709\u6b63\u786e\u7c7b\u578b\u4f46\u503c\u4e0d\u9002\u5408\u7684\u53c2\u6570\uff0c\u5e76\u4e14\u60c5\u51b5\u4e0d\u80fd\u7528\u66f4\u7cbe\u786e \u7684\u5f02\u5e38\u6765\u63cf\u8ff0\u65f6\u5c06\u88ab\u5f15\u53d1 UnicodeError\uff1a\u5f53\u53d1\u751f\u4e0e Unicode \u76f8\u5173\u7684\u7f16\u7801\u6216\u89e3\u7801\u9519\u8bef\u65f6\u5c06\u88ab\u5f15\u53d1 UnicodeDecodeError\uff1a\u5f53\u5728\u89e3\u7801\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e0e Unicode \u76f8\u5173\u7684\u9519\u8bef\u65f6\u5c06\u88ab\u5f15\u53d1 UnicodeEncodeError\uff1a\u5f53\u5728\u7f16\u7801\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e0e Unicode \u76f8\u5173\u7684\u9519\u8bef\u65f6\u5c06\u88ab\u5f15\u53d1 UnicodeTranslateError\uff1a\u5728\u8f6c\u5199\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e0e Unicode \u76f8\u5173\u7684\u9519\u8bef\u65f6\u5c06\u88ab\u5f15\u53d1 Warning\uff1a \u8b66\u544a\u7c7b\u522b\u7684\u57fa\u7c7b DeprecationWarning\uff1a\u5982\u679c\u6240\u53d1\u51fa\u7684\u8b66\u544a\u662f\u9488\u5bf9\u5176\u4ed6 Python \u5f00\u53d1\u8005\u7684\uff0c\u5219\u4ee5\u6b64\u4f5c\u4e3a\u4e0e \u5df2\u5f03\u7528\u7279\u6027\u76f8\u5173\u8b66\u544a\u7684\u57fa\u7c7b PendingDeprecationWarning\uff1a\u5bf9\u4e8e\u5df2\u8fc7\u65f6\u5e76\u9884\u8ba1\u5728\u672a\u6765\u5f03\u7528\uff0c\u4f46\u76ee\u524d\u5c1a\u672a\u5f03\u7528\u7684\u7279\u6027\u76f8 \u5173\u8b66\u544a\u7684\u57fa\u7c7b RuntimeWarning\uff1a\u4e0e\u6a21\u7cca\u7684\u8fd0\u884c\u65f6\u884c\u4e3a\u76f8\u5173\u7684\u8b66\u544a\u7684\u57fa\u7c7b SyntaxWarning\uff1a\u4e0e\u6a21\u7cca\u7684\u8bed\u6cd5\u76f8\u5173\u7684\u8b66\u544a\u7684\u57fa\u7c7b UserWarning\uff1a\u7528\u6237\u4ee3\u7801\u6240\u4ea7\u751f\u8b66\u544a\u7684\u57fa\u7c7b FutureWarning\uff1a\u5982\u679c\u6240\u53d1\u51fa\u7684\u8b66\u544a\u662f\u9488\u5bf9\u4ee5 Python \u6240\u7f16\u5199\u5e94\u7528\u7684\u6700\u7ec8\u7528\u6237\u7684\uff0c\u5219\u4ee5\u6b64 \u4f5c\u4e3a\u4e0e\u5df2\u5f03\u7528\u7279\u6027\u76f8\u5173\u8b66\u544a\u7684\u57fa\u7c7b ImportWarning\uff1a\u4e0e\u5728\u6a21\u5757\u5bfc\u5165\u4e2d\u53ef\u80fd\u7684\u9519\u8bef\u76f8\u5173\u7684\u8b66\u544a\u7684\u57fa\u7c7b UnicodeWarning\uff1a\u4e0e Unicode \u76f8\u5173\u7684\u8b66\u544a\u7684\u57fa\u7c7b BytesWarning\uff1a\u4e0e bytes \u548c bytearray \u76f8\u5173\u7684\u8b66\u544a\u7684\u57fa\u7c7b ResourceWarning\uff1a\u4e0e\u8d44\u6e90\u4f7f\u7528\u76f8\u5173\u7684\u8b66\u544a\u7684\u57fa\u7c7b \u5305\u4e0e\u6a21\u5757 \u5305\uff1a\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u6709__init__.py\u548c\u5176\u4ed6python\u6587\u4ef6\uff0c\u5176\u4e2d__init__.py\u662f\u5305\u7684\u8eab\u4efd\u8bc1\uff0c\u5176\u4ed6py\u6587\u4ef6\u662f\u6a21\u5757\uff0c\u5305\u4e2d\u4e5f\u53ef\u4ee5\u6709 \u5bfc\u5165\u5305 import animal.dog \u5bfc\u5165\u6a21\u5757 from animal.dog import aciton action.jump() \u5bfc\u5165\u6a21\u5757\u4e2d\u7684\u51fd\u6570 from animal.dog.action import run as dog_run # as\u662f\u8d77\u522b\u540d dog_run() pip\u4f7f\u7528 pip install \u5305\u540d pip uninstall \u5305\u540d pip -V pip\u66f4\u6539\u955c\u50cf \u53c2\u8003 pip\u56fd\u5185\u7684\u4e00\u4e9b\u955c\u50cf \u963f\u91cc\u4e91 http://mirrors.aliyun.com/pypi/simple/ \u4e2d\u56fd\u79d1\u6280\u5927\u5b66 https://pypi.mirrors.ustc.edu.cn/simple/ \u8c46\u74e3(douban) http://pypi.douban.com/simple/ \u6e05\u534e\u5927\u5b66 https://pypi.tuna.tsinghua.edu.cn/simple/ \u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66 http://pypi.mirrors.ustc.edu.cn/simple/ \u63d0\u793a\uff1a\u82e5\u62c5\u5fc3\u5b89\u5168\u95ee\u9898\u8bf7\u4f7f\u7528HTTPS\u52a0\u5bc6\u6e90 \u4fee\u6539\u6e90\u65b9\u6cd5\uff1a \u4e34\u65f6\u4f7f\u7528\uff1a Linux Mac Windows \u901a\u7528\u547d\u4ee4 \u53ef\u4ee5\u5728\u4f7f\u7528pip\u7684\u65f6\u5019\u5728\u540e\u9762\u52a0\u4e0a-i\u53c2\u6570\uff0c\u6307\u5b9apip\u6e90 pip install scrapy -i https://pypi.tuna.tsinghua.edu.cn/simple \u6c38\u4e45\u4fee\u6539\uff1a Linux: \u4fee\u6539 pip.conf \u6587\u4ef6 (\u6ca1\u6709\u5c31\u521b\u5efa\u4e00\u4e2a) $HOME/.config/pip/pip.conf \u4fee\u6539\u5185\u5bb9\u5982\u4e0b\uff1a [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple12 Mac: \u4fee\u6539 pip.conf \u6587\u4ef6 $HOME/Library/Application Support/pip/pip.conf \u5982\u679c\u6ca1\u6709\u4e0a\u9762\u7684\u76ee\u5f55,\u5728\u5982\u4e0b\u76ee\u5f55\u521b\u5efa pip.conf $HOME/.config/pip/pip.conf \u4fee\u6539\u5185\u5bb9\u5982\u4e0b\uff1a [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple Windows: \u4fee\u6539 pip.conf \u6587\u4ef6 (\u6ca1\u6709\u5c31\u521b\u5efa\u4e00\u4e2a) %APPDATA%\\pip\\pip.ini \u4fee\u6539\u5185\u5bb9\u5982\u4e0b\uff1a [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple \u4fee\u6539\u6587\u4ef6\u540e\uff0c\u6267\u884c\u547d\u4ee4\u53d1\u751f\u9519\u8bef \u4f7f\u7528\u975eHTTPS\u52a0\u5bc6\u6e90\uff08\u5982\u8c46\u74e3\u6e90\uff09\uff0c\u5728\u6267\u884c\u547d\u4ee4\u53d1\u751f\u9519\u8bef\uff0c\u5728\u547d\u4ee4\u6700\u540e\u52a0\u4e0a --trusted-host pypi.douban.com pip install django -i http://pypi.douban.com/simple --trusted-host pypi.douban.com %APPDATA%\\pip\\pip.ini [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple \u65f6\u95f4 python \u4e2d\u65f6\u95f4\u65e5\u671f\u683c\u5f0f\u5316\u7b26\u53f7 %y\uff1a\u4e24\u4f4d\u6570\u7684\u5e74\u4efd\u8868\u793a\uff0800-99\uff09 %Y\uff1a\u56db\u4f4d\u6570\u7684\u5e74\u4efd\u8868\u793a\uff08000-9999\uff09 %m\uff1a\u6708\u4efd\uff0801-12\uff09 %d\uff1a\u6708\u5185\u4e2d\u7684\u4e00\u5929\uff080-31\uff09 %H\uff1a24 \u5c0f\u65f6\u5236\u5c0f\u65f6\u6570\uff080-23\uff09 %I\uff1a12 \u5c0f\u65f6\u5236\u5c0f\u65f6\u6570\uff0801-12\uff09 %M\uff1a\u5206\u949f\u6570\uff0800=59\uff09 %S\uff1a\u79d2\uff0800-59\uff09 %a\uff1a\u672c\u5730\u7b80\u5316\u661f\u671f\u540d\u79f0 %A\uff1a\u672c\u5730\u5b8c\u6574\u661f\u671f\u540d\u79f0 %b\uff1a\u672c\u5730\u7b80\u5316\u7684\u6708\u4efd\u540d\u79f0 %B\uff1a\u672c\u5730\u5b8c\u6574\u7684\u6708\u4efd\u540d\u79f0 %c\uff1a\u672c\u5730\u76f8\u5e94\u7684\u65e5\u671f\u8868\u793a\u548c\u65f6\u95f4\u8868\u793a %j\uff1a\u5e74\u5185\u7684\u4e00\u5929\uff08001-366\uff09 %p \u672c\u5730 A.M.\u6216 P.M.\u7684\u7b49\u4ef7\u7b26 %U\uff1a\u4e00\u5e74\u4e2d\u7684\u661f\u671f\u6570\uff0800-53\uff09\u661f\u671f\u5929\u4e3a\u661f\u671f\u7684\u5f00\u59cb %w\uff1a\u661f\u671f\uff080-6\uff09\uff0c\u661f\u671f\u5929\u4e3a\u661f\u671f\u7684\u5f00\u59cb %W\uff1a\u4e00\u5e74\u4e2d\u7684\u661f\u671f\u6570\uff0800-53\uff09\u661f\u671f\u4e00\u4e3a\u661f\u671f\u7684\u5f00\u59cb %x\uff1a\u672c\u5730\u76f8\u5e94\u7684\u65e5\u671f\u8868\u793a %X\uff1a\u672c\u5730\u76f8\u5e94\u7684\u65f6\u95f4\u8868\u793a %Z\uff1a\u5f53\u524d\u65f6\u533a\u7684\u540d\u79f0 %%\uff1a %\u53f7\u672c\u8eab # coding:utf-8 from datetime import datetime from datetime import timedelta res = datetime.now() # \u5f53\u524d\u65f6\u95f4\u65e5\u671f\u5bf9\u8c61 print(res) one_day = timedelta(days=1) # \u5f97\u5230\u65f6\u95f4\u95f4\u9694\u5bf9\u8c61 print(res - one_day) # \u4f7f\u7528 res = datetime.now() # \u65f6\u95f4\u65e5\u671f\u5bf9\u8c61\u8f6c\u5b57\u7b26\u4e32 \u4ee5\u53ca\u89e3\u6790 print(res.strftime('%Y/%m/%d %H:%M:%S')) # \u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u5c31\u4e0d\u9700\u8981\u540d time_str = res.strftime('%Y/%m/%d %H:%M:%S') time_obj = datetime.strptime(time_str, '%Y/%m/%d %H:%M:%S') print(time_obj) # coding:utf-8 import time from datetime import datetime print(time.time()) # \u65f6\u95f4\u6233 print('localtime', time.localtime()) # \u83b7\u53d6\u672c\u5730\u65f6\u95f4 # time.sleep(10) print('this is end') # \u65f6\u95f4\u65e5\u671f\u5bf9\u8c61 \u548c\u65f6\u95f4\u6233\u8f6c\u6362 timestamp_1 = datetime.timestamp(datetime.now()) # \u83b7\u53d6\u65f6\u95f4\u6233 print(timestamp_1) print(datetime.fromtimestamp(timestamp_1)) \u6587\u4ef6 \u6253\u5f00\u6587\u4ef6\u7684\u4e09\u6b65\uff1a\u6253\u5f00->\u64cd\u4f5c->\u5173\u95ed \u6ce8\u610f\uff1a 1.\u6700\u5927\u53ef\u4ee5\u6253\u5f00\u7684\u6587\u4ef6\u7684\u6570\u91cf 2.\u6253\u5f00\u540e\u5173\u95ed\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u8fd9\u6837\u4e0d\u4f1a\u6d6a\u8d39\u6587\u5b57\u63cf\u8ff0\u7b26 \u8bfb\u53d6\u6587\u672c\u6587\u4ef6\uff1a r r+ w w+ a a+ \u8bfb\u53d6\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a rb rb+ wb wb+ ab ab+ r:(\u9ed8\u8ba4) -\u53ea\u80fd\u8bfb\uff0c\u4e0d\u80fd\u5199 -\u8bfb\u53d6\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4f1a\u62a5\u9519 r+: -\u53ef\u8bfb\u5199 -\u8bfb\u53d6\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4f1a\u62a5\u9519 w: -write only -\u4f1a\u6e05\u7a7a\u6587\u4ef6\u4e4b\u524d\u7684\u5185\u5bb9 -\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f1a\u521b\u5efa\u65b0\u7684\u6587\u4ef6\u5e76\u5199\u5165 w+: -rw -\u4f1a\u6e05\u7a7a\u6587\u4ef6\u5185\u5bb9 -\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4e0d\u62a5\u9519\uff0c\u4f1a\u521b\u5efa\u65b0\u7684\u6587\u4ef6 a: -write only -\u4e0d\u4f1a\u6e05\u7a7a\u6587\u4ef6\u5185\u5bb9 -\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f1a\u521b\u5efa\u65b0\u7684\u6587\u4ef6\u5e76\u5199\u5165 a+: -rw -\u6587\u4ef6\u4e0d\u5b58\u5728\u4e0d\u62a5\u9519 -\u4e0d\u4f1a\u6e05\u7a7a\u6587\u4ef6\u5185\u5bb9 \u8bfb\u53d6\u6587\u672c\u6587\u4ef6\uff1a r r+ w w+ a a+ \u8bfb\u53d6\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a rb rb+ wb wb+ ab ab+ open():\u6253\u5f00\u6587\u4ef6 write():\u5199\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u5230\u6587\u4ef6\u4e2d writelines():\u5199\u5165\u4e00\u4e2alist # coding:utf-8 try: f = open('D:/var/hello.txt', 'a',encoding='utf-8') # f.write('\u4e2d\u53e4\u54df\u4eba') list_0 = list(['hello word', 'matt']) f.writelines(list_0) except Exception as e: print('\u5199\u6587\u4ef6\u51fa\u9519') finally: f.close() read():\u6574\u4e2a\u6587\u4ef6\u8bfb\u53d6\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32 readlines():\u6587\u4ef6\u8bfb\u5230\u4e00\u4e2alist\u4e2d readline():\u8bfb\u53d6\u5230\u4e00\u884c closed:\u5224\u65ad\u6587\u4ef6\u662f\u5426\u5173\u95ed,\u662f\u5c5e\u6027 # coding:utf-8 try: f = open(file='D:/var/hello.txt', mode='r', encoding='utf-8') # print(f.read()) # print(f.readlines()) print(f.readline()) except Exception as e: print('\u8bfb\u53d6\u6587\u4ef6\u51fa\u9519') finally: if f.closed: pass else: f.close() \u5b57\u5178\u7684\u5e8f\u5217\u5316 \u9700\u8981\u5bfc\u5165json # coding:utf-8 import json user_str = json.dumps({'name': '\u5bf9\u67d0\u4e9b'}) print(json.loads(user_str)) f = open(file='D:/var/json.txt',mode='w',encoding='utf-8') f.writelines(user_str) \u52a0\u5bc6 hashlib:\u4e0d\u53ef\u9006 hashobj = hashlib.md5(b\u2019hello\u2019) result = hashobj. hexdigest() # \u751f\u621016\u8fdb\u5236\u5b57\u7b26\u4e32 print(result) base64\uff1a\u53ef\u89e3\u5bc6\uff0c\u9700\u8981\u81ea\u5df1\u5bfc\u5165base64\u6a21\u5757 # coding:utf-8 import hashlib import base64 res = hashlib.md5(b'hehllo ') print(res.hexdigest()) # \u8fd4\u56de16\u8fdb\u5236\u5b57\u7b26\u4e32\u7684\u503c str = '\u4e2d\u56fd\u4eba' res = str.encode(encoding='utf-8') print(res.decode(encoding='utf-8')) print(base64.encodebytes(str.encode(encoding='utf-8'))) \u65e5\u5fd7 logging \u65e5\u5fd7\u7684\u7b49\u7ea7 \uf075debug \uf075info \uf075warnning \uf075error \uf075critical \u65e5\u5fd7\u7684\u4f7f\u7528 # coding:utf-8 import logging logging.basicConfig( level=logging.INFO, format='%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s', filename='my.log', filemode='w' ) logging.info('hello word') \u200b logging.basicConfig level \u65e5\u5fd7\u8f93\u51fa\u7b49\u7ea7level=logging.DEBUG filename \u5b58\u50a8\u4f4d\u7f6efilename=\u2018d://back.log\u2019 format \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f filemode \u8f93\u5165\u6a21\u5f0ffilemode='w' \u200b \u200b format\u5177\u4f53\u683c\u5f0f \u683c\u5f0f\u7b26\u542b\u4e49 %(levelname)s \u65e5\u5fd7\u7ea7\u522b\u540d\u79f0 %(pathname)s \u6267\u884c\u7a0b\u5e8f\u7684\u8def\u5f84 %(filename)s \u6267\u884c\u7a0b\u5e8f\u540d %(lineno)d \u65e5\u5fd7\u7684\u5f53\u524d\u884c\u53f7 %(asctime)s \u6253\u5370\u65e5\u5fd7\u7684\u65f6\u95f4 %(message)s \u65e5\u5fd7\u4fe1\u606f \u5e38\u7528\u7684\u5185\u7f6e\u51fd\u6570 abs all any type isinstance help var dir hasattr input enumerate # coding:utf-8 print(abs(-100)) # \u8fd4\u56de\u6b63\u6570 print(all([1, 1, 1])) # \u5224\u65ad\u5217\u8868\u5185\u5bb9\u662f\u5426\u5168\u662ftrue class User(object): def __init__(self): print('\u521b\u5efaUser\u5bf9\u8c61') user = User() print(help(user)) # help \u6253\u5370\u5bf9\u8c61\u7684\u5168\u90e8\u7528\u6cd5 name = input('\u8bf7\u8f93\u5165\u59d3\u540d\uff1a') print(name) list_1 = [1, 3, 3] for index,i in enumerate(list_1): # \u8bb0\u5f55\u7d22\u5f15 print(index, i) print(isinstance(1, int)) # \u5224\u65ad\u67d0\u4e2a\u53d8\u91cf\u662f\u5426\u662f\u67d0\u4e2a\u7c7b\u578b print(type('hello word')) user.name = 'hello' print(vars(user)) # \u8fd4\u56de\u5bf9\u8c61\u5b9e\u4f8b\u5316\u5b57\u5178\u4fe1\u606f print(dir(user)) # \u8fd4\u56de\u5bf9\u8c61\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5 print(hasattr('hello', 'aaa')) # \u5224\u65ad\u5bf9\u8c61\u662f\u5426\u6709\u67d0\u4e2a\u5c5e\u6027 user.__setattr__('age', 10) print(user.__getattribute__('age')) list_1 = [1, 2, 3] print(any((None,))) # \u5224\u65ad\u5bf9\u8c61\u4e2d\u662f\u5426\u6709true\u503c random \u6a21\u5757 # coding:utf-8 import random # \u53f3\u8fb9\u4e0d\u53ef\u4ee5\u53d6\u5230 def test(): for i in range(10000): i = random.random() # \u8fd4\u56de0-1\u7684\u6d6e\u70b9\u6570 if i == 1: print(i) return i; print('\u6ca1\u67091') test() print(random.uniform(1, 2)) # \u8fd4\u56de\u8303\u56f4\u7684\u6d6e\u70b9\u6570 def test_uniform(): for i in range(10000): i = random.uniform(1, 2) if i == 1: print(i) return i; test_uniform() print('randint') print(random.randint(1, 1000)) # \u8fd4\u56de\u6574\u6570 print('choice', random.choice([1, 2, 3, 4, 5])) # \u8fd4\u56delist\u4e2d\u7684\u4e00\u4e2a\u503c print('sample', random.sample([1, 2, 3, 4, 5],2))# \u8fd4\u56delist\u4e2d\u7684\u51e0\u4e2a\u503c # \u6b65\u957f for i in range(10): print(random.randrange(1, 100, 100)) # \u8fd4\u56de\u6307\u5b9a\u7684\u4e00\u4e2a\u503c\uff0c\u53ef\u4ee5\u6307\u5b9a\u6b65\u957f \u8fed\u4ee3\u5668 # coding:utf-8 iter_obj = iter([1, 2, 3]) print(iter_obj.__next__()) iter_obj = (i for i in range(10)) print(iter_obj.__next__()) def get_iter_obj(): for i in range(13): yield i iter_obj = get_iter_obj() print(iter_obj.__next__()) \u9ad8\u7ea7\u51fd\u6570 # coding:utf-8 from functools import reduce def _filter(x): if x <= 0: return False; return True; res = list(filter(lambda x: x > 0, [-1, 2, 3])) print(res) res = list(map(_filter, [-1, -2, 100])) # \u8fd4\u56deTrue False list print('map', res) print('----reduce----') res = reduce(lambda x, y: x + y, (1, 2, 3)) # \u9700\u8981\u5bfc\u5165reduce print(res) \u6b63\u5219\u8868\u8fbe\u5f0f \u51e0\u4e2a\u5e38\u7528\u7684\u51fd\u6570 \u4f7f\u7528\u524d\u9996\u5148\u9700\u8981\u5bfc\u5165re import re findall:\u5c06\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u5b58\u50a8\u5728list\u4e2d str = 'my name is hash' res = re.findall('\\sis*', str) # \u8fd4\u56de\u7b26\u5408\u7684list [' is'] print(res) match:\u4ece\u5b57\u7b26\u4e32\u5f00\u59cb\u67e5\u627e str = 'hedd ' print(re.match('\\w*', str).group()) # \u4ece\u5f00\u59cb\u5b57\u7b26\u5f00\u59cb\u67e5\u627e split:\u6839\u636e\u5339\u914d\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u5206\u5272 str = 'my name is hello word' res = re.split('\\s+', str) # \u627e\u5230\u7684\u5c31\u662f\u7a7a\u683c\u7b26\u53f7 print(res) # ['my', 'name', 'is', 'hello', 'word'] search:\u53ea\u5339\u914d\u4e00\u6b21 str = 'my email is 1718905040@qq.com 171890@qq.com' res = re.search('(\\d*.qq.com)', str) # \u53ea\u4f1a\u67e5\u627e\u4e00\u6b21 print(res.groups()) print(res.group(1)) # \u7d22\u5f15\u4ece1\u5f00\u59cb compile:\u5f97\u5230\u4e00\u4e2a\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u5bf9\u8c61 str = 'my email is 1718905040@qq.com 1234343@qq.com' re_obj = re.compile('\\d+.\\w{2}.com') res = re_obj.findall(str) print(res)","title":"python"},{"location":"base/python/python/#_1","text":"","title":"\u5b89\u88c5"},{"location":"base/python/python/#mac-","text":"\u76f4\u63a5\u5b98\u7f51\u4e0b\u8f7d\u5373\u53ef \u5b98\u7f51 /usr/local/bin /Library/Frameworks/Python.framework/Versions/3.10/bin/python3 ln -s -f /usr/local/bin/python3 /usr/local/bin/python \u4e0d\u8981\u4f7f\u7528brew\u5b89\u88c5 1 \u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u8fdb\u884c\u914d\u7f6e\u73af\u5883\u53d8\u91cf 2..pycharm\u4f1a\u65e0\u6cd5\u8bc6\u522b","title":"mac-\u5b89\u88c5"},{"location":"base/python/python/#_2","text":"","title":"\u5b89\u88c5"},{"location":"base/python/python/#_3","text":"https://www.python.org/ 1\u3001 web-based installer\u3001executable installer\u3001embeddable zip file \u2013 web-based installer \uff1a\u5728\u7ebf\u5b89\u88c5\u3002\u4e0b\u8f7d\u7684\u662f\u4e00\u4e2aexe\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u53cc\u51fb\u540e\uff0c\u8be5\u7a0b\u5e8f\u81ea\u52a8\u4e0b\u8f7d\u5b89\u88c5\u6587\u4ef6\uff08\u6240\u4ee5\u9700\u8981\u6709\u7f51\u7edc\uff09\u8fdb\u884c\u5b89\u88c5\u3002 \u2013 executable installer \uff1a\u7a0b\u5e8f\u5b89\u88c5\u3002\u4e0b\u8f7d\u7684\u662f\u4e00\u4e2aexe\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u53cc\u51fb\u8fdb\u884c\u5b89\u88c5\u3002 \u2013 embeddable zip file \uff1a\u89e3\u538b\u5b89\u88c5\u3002\u4e0b\u8f7d\u7684\u662f\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6\uff0c\u89e3\u538b\u540e\u5373\u8868\u793a\u5b89\u88c5\u5b8c\u6210\u3002 2\u3001 x86\u3001x86-64 \u2013 Windows x86 \uff1a\u9002\u752832\u4f4dwindows\u64cd\u4f5c\u7cfb\u7edf\u3002 \u2013 Windows x86-64 \uff1a\u9002\u752864\u4f4dwindows\u64cd\u4f5c\u7cfb\u7edf\u3002 \u4e0b\u56fe\u4e0d\u8981\u9009\u62e9all user \u9009\u62e9\u5bf9\u5e94\u7248\u672c\u70b9\u51fb\u5373\u53ef2.7.17\uff0c\u6700\u597d\u9009\u62e932\u4f4d\u7684\uff0c\u56e0\u4e3a\u5b83\u7684\u517c\u5bb9\u6027\u66f4\u597d","title":"\u5b89\u88c5\u73af\u5883"},{"location":"base/python/python/#path","text":"\u5b89\u88c5\u8def\u5f84\u6dfb\u52a0\u5230path\u73af\u5883\u53d8\u91cf\u5373\u53ef\u3002\u57283.7\u53ef\u4ee5\u5728\u5b89\u88c5\u65f6\u9009\u62e9\u914d\u7f6epath","title":"\u914d\u7f6ePath"},{"location":"base/python/python/#python381pip","text":"","title":"\u6ce8\u610f\uff1apython3.81\u5b89\u88c5\u7684\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5b89\u88c5pip"},{"location":"base/python/python/#pip","text":"\u5b89\u88c5setuptools \u7b2c\u4e00\u6b65\uff1a\u4e0b\u8f7d\u5b89\u88c5\u5305\uff08\u5730\u5740\uff1ahttps://pypi.io/packages/source/s/setuptools/setuptools-33.1.1.zip\uff09 \u7b2c\u4e8c\u6b65\uff1a\u89e3\u538b \u7b2c\u4e09\u6b65\uff1aCMD\u5207\u6362\u5230\u8be5\u76ee\u5f55\uff0c\u5207\u6362\u7684\u65b9\u6cd5\u81ea\u5df1\u767e\u5ea6\uff0c\u8fd0\u884c\u547d\u4ee4\u201dpython setup.py install\" \u5b89\u88c5pip \u7b2c\u4e00\u6b65\uff1a\u4e0b\u8f7dpip\u538b\u7f29\u5305\uff08\u5730\u5740\uff1ahttps://pypi.org/project/pip/#files\uff09 \u7b2c\u4e8c\u6b65\uff1a\u89e3\u538b \u7b2c\u4e09\u6b65\uff1aCMD\u5207\u6362\u5230\u8be5\u76ee\u5f55\uff0c\u8fd0\u884c\u547d\u4ee4\u201dpython setup.py install\" pip\u73af\u5883\u53d8\u91cf\u914d\u7f6e \u8fd9\u662f\u4f60\u6253\u5f00python\u7684\u5b89\u88c5\u76ee\u5f55\uff0c\u53d1\u73b0Scripts\u7684\u6587\u4ef6\u5939\u4e0b\u5c31\u5df2\u7ecf\u6709\u4e86pip\u7684\u6587\u4ef6\uff0c\u5c06\u6b64\u6587\u4ef6\u5939\u4e0b\u7684\u76ee\u5f55\u4f5c\u4e3a\u73af\u5883\u53d8\u91cf\u914d\u7f6e\uff0c\u518d\u518d\u5728cmd\u4e0b\u8f93\u5165pip\uff0c\u5b8c\u7f8e\u5b8c\u6210\uff01\u6dfb\u52a0\u5728path\u76ee\u5f55\u4e0b \u68c0\u67e5 \u5728CMD\u8f93\u5165pip,\u6210\u529f\u5982\u4e0b","title":"\u5b89\u88c5pip"},{"location":"base/python/python/#requests","text":"\u9996\u5148\u9700\u8981\u5b89\u88c5pip 2020.1205\u5b89\u88c5\u65f6\u7531\u4e8e\u6302vpn\u6240\u4ee5\u5bfc\u81f4\u9519\u8bef\uff0c\u4e4b\u540e\u5173\u95ed\u5373\u89e3\u51b3\u95ee\u9898\u3002 pip install requests","title":"\u5b89\u88c5requests"},{"location":"base/python/python/#vscodepython","text":"Pyright Python \u5b89\u88c5\u4ee5\u4e0a\u4fe9\u4e2a\u63d2\u4ef6","title":"VSCode\u5f00\u53d1python"},{"location":"base/python/python/#python","text":"python // \u5728\u7ec8\u7aef\u8f93\u5165\u5373\u53ef\u4f7f\u7528 exit() // \u9000\u51fa","title":"\u4f7f\u7528python\u89e3\u91ca\u5668"},{"location":"base/python/python/#_4","text":"demo.py demo:\u811a\u672c\u540d py:\u811a\u672c\u683c\u5f0f","title":"\u6982\u8ff0"},{"location":"base/python/python/#_5","text":"# coding:utf-8 # \u811a\u672c\u5934 import os # \u5f15\u7528\u90e8\u5206 if __name__ == '__main__': # \u4e1a\u52a1\u4ee3\u7801 print('hello word ' + os.getcwd()) print('end') \u811a\u672c\u5934\u6ce8\u91ca\uff1a\u544a\u8bc9\u89e3\u91ca\u5668\u4f7f\u7528\u7684\u7f16\u7801\u683c\u5f0f","title":"\u7a0b\u5e8f\u7ec4\u6210"},{"location":"base/python/python/#_6","text":"# coding:utf-8 import os ''' \u8fd9\u662f\u5757\u6ce8\u91ca ''' \"\"\" \u8fd9\u4e5f\u662f\u5757\u6ce8\u91ca \"\"\" print(os.getcwd()) print('hello word by matt') # \u8fd9\u662f\u884c\u6ce8\u91ca \u00b7\u884c\u6ce8\u91ca\u4e4b\u524d\u4fe9\u4e2a\u7a7a\u683c","title":"\u6ce8\u91ca"},{"location":"base/python/python/#_7","text":"","title":"\u53d8\u91cf"},{"location":"base/python/python/#_8","text":"\u5fc5\u987b\u662f\u6570\u5b57\uff0c\u5b57\u6bcd\uff0c\u4e0b\u5212\u7ebf\u7ec4\u6210 \u4efb\u610f\u957f\u5ea6\uff0c\u4f46\u4e0d\u5efa\u8bae\u592a\u957f\uff0c20\u5b57\u7b26\u4ee5\u5185 \u5f00\u5934\u5fc5\u987b\u662f\u5b57\u6bcd \u533a\u5206\u5927\u5c0f\u5199 \u4e00\u822c\u4e0d\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5\u4f7f\u7528\u4e0b\u5212\u7ebf\uff0cmax_age","title":"\u5b9a\u4e49"},{"location":"base/python/python/#_9","text":"","title":"\u7c7b\u578b"},{"location":"base/python/python/#_10","text":"\u6574\u6570 age = 11 # \u63a8\u8350\u4f7f\u7528\u8fd9\u79cd age = int(11) \u6d6e\u70b9\u6570 average = 1.1 average = float(1.1)","title":"\u6570\u5b57"},{"location":"base/python/python/#_11","text":"str1 = 'hello word' str2 = \"hello word\" str3 = str('hello word') \u5b57\u7b26\u4e32\u4f7f\u7528+\u5373\u53ef\u76f8\u52a0\uff0c\u4f7f\u7528*\u53ef\u4ee5\u590d\u5236\u51e0\u6b21 \u5b9a\u4e49\u4e00\u4e2a\u957f\u7684\u5b57\u7b26\u4e32 \uff08'hello' 'word'\uff09 ''' this is good hello hey '''","title":"\u5b57\u7b26\u4e32"},{"location":"base/python/python/#_12","text":"bool1 = True bool1 = bool('hello')","title":"\u5e03\u5c14\u7c7b\u578b"},{"location":"base/python/python/#_13","text":"None","title":"\u7a7a\u7c7b\u578b"},{"location":"base/python/python/#_14","text":"\u53d8\u91cf\u540d\u7528\u4e8e\u7ed9\u53d8\u91cf\u8d4b\u503c\u4f7f\u7528\uff0c\u800c\u5173\u952e\u5b57\u7528\u4e8e\u4e1a\u52a1\u903b\u8f91\u5904\u7406 \u5e38\u89c1\u5173\u952e\u5b57","title":"\u5173\u952e\u5b57"},{"location":"base/python/python/#_15","text":"\u6bd4\u8f83 0-255\u4f1a\u4f7f\u7528\u7f13\u5b58","title":"\u8fd0\u7b97\u7b26"},{"location":"base/python/python/#_16","text":"","title":"\u51fd\u6570"},{"location":"base/python/python/#_17","text":"if __name__ == '__main__': print('hello word ' + os.getcwd()) # \u4e3b\u51fd\u6570\u9000\u51fa\u5c31\u662f\u4e0d\u5728\u6709\u7f29\u8fdb print('end') \u4e3b\u51fd\u6570\u9000\u51fa\u5c31\u662f\u4e0d\u5728\u6709\u7f29\u8fdb \uff084\u4e2a\u7a7a\u683c/tab\uff09","title":"\u4e3b\u51fd\u6570\uff0c\u5165\u53e3"},{"location":"base/python/python/#_18","text":"input:\u4ece\u952e\u76d8\u8f93\u5165 name = input(\"\u4f60\u7684\u59d3\u540d\") print('name: %s' % (name)) \u683c\u5f0f\u5316\u8f93\u51fa print('name: %s' % (name)) type:\u5224\u65ad\u6570\u636e\u7684\u7c7b\u578b type(age) id:\u8fd4\u56de\u53d8\u91cf\u7684\u5185\u5b58\u5730\u5740 id(age) is :\u5224\u65ad\u4fe9\u4e2a\u5bf9\u8c61\u5185\u5b58\u5730\u5740\u662f\u5426\u76f8\u7b49 print(str is str_1) len:\u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 len(str1) in \u548c not in 'hello' in 'hello word' # hello\u662f\u5426\u5728hello word\u4e2d 'hello' not in 'hello word' max:\u5224\u65ad\u6570\u636e\u4e2d\u6700\u5927\u7684\u6210\u5458 max(list2) min\uff1a\u5224\u65ad\u6570\u636e\u4e2d\u6700\u5c0f\u7684\u6210\u5458 min(list1)","title":"\u5e38\u7528\u7684\u5185\u7f6e\u51fd\u6570"},{"location":"base/python/python/#_19","text":"","title":"\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784"},{"location":"base/python/python/#list","text":"\u5217\u8868\uff1a\u7528\u6765\u5b58\u50a8\u6709\u5e8f\u7684\u6570\u636e\u7684\u961f\u5217 int_list = [1, 2, 3] int_list1 = list([1, 2, 3]) list = ['1', '2', '3'] list = list * 2 // \u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u94fe\u8868","title":"list"},{"location":"base/python/python/#tuple","text":"\u5143\u7ec4\uff1a\u7528\u6765\u5b58\u50a8\u6709\u5e8f\u7684\u6570\u636e\u7684\u961f\u5217\uff0c\u76f8\u5bf9\u4e8elist,\u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\uff0clist\u662f\u53ef\u4ee5\u6539\u53d8\u7684 # coding:utf-8 tuple_1 = (1, 2, 3,) tuple_2 = tuple((1, 2, 3, 4,)) print(tuple_1) print(tuple_2) \u5982\u679c\u5143\u7ec4\u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u4e00\u5b9a\u8981\u6dfb\u52a0, res = (1,)","title":"tuple"},{"location":"base/python/python/#dict","text":"\u5b57\u5178\uff1a\u7528\u6765\u5b58\u50a8key \u548c value\u7684\u6620\u5c04 key \u652f\u6301 \u5b57\u7b26\u4e32\uff0c\u6570\u5b57\u548c\u5143\u7ec4\u7c7b\u578b\uff0c\u4f46\u5217\u8868\u662f\u4e0d\u652f\u6301\u7684 value \u652f\u6301\u6240\u6709python\u7684\u6570\u636e\u7c7b\u578b # coding:utf-8 dict_01 = {'name': 'matt', 'age': 12} dict_02 = dict({'name': 'mike', 'age': 19}) print(dict_01) print(dict_02)","title":"dict"},{"location":"base/python/python/#_20","text":"str1.capitalize() # \u5b57\u7b26\u4e32\u9996\u5b57\u6bcd\u5927\u5199 str1.lower() # \u5b57\u7b26\u4e32\u5c0f\u5199 str1.upper() # \u5b57\u7b26\u4e32\u5927\u5199 str1.swapcase() # \u5b57\u7b26\u4e32\u5927\u5c0f\u5199\u8f6c\u6362 str2.zfill(10) # \u5de6\u8fb9\u75280\u586b\u5145 str2.count('h') # \u8fd4\u56de\u5b57\u7b26\u4e32\u6210\u5458\u7684\u4e2a\u6570 print(str2.startswith('he')) # str2\u662f\u5426\u662f\u2018he\u2019\u5f00\u5934 print(str2.endswith('he')) # str2\u662f\u5426\u4ee5\u2018he\u2019\u7ed3\u5c3e find \u548c index \u67e5\u627e\u6210\u5458\u5f00\u59cb\u7684\u4f4d\u7f6e \u533a\u522b\uff1afind\u627e\u4e0d\u5230\u8fd4\u56de-1,\u800cindex\u4f1a\u62a5\u9519 print(str2.find('hell')) print(str2.index('hell')) strip\u53bb\u9664\u5b57\u7b26\u4e32\u9996\u5c3e\u6307\u5b9a\u7684\u6210\u5458\u9ed8\u8ba4\u662f\u7a7a\u683c str3 = ' hello ' print(str3.strip()) print(str3.strip('h')) # hellhoh -> ellho replace():\u5b57\u7b26\u4e32\u66ff\u6362 str4 = 'hello' print(str4.replace('e', 'a', 3)) # old,new,\u6b21\u6570\uff1a\u9ed8\u8ba4\u662f\u5168\u90e8\u66ff\u6362 str_1 = ' ' print(str_1.isspace()) # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u6709\u7a7a\u683c\u7ec4\u6210 str_1 = 'hello' print(str_1.istitle()) # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u6807\u9898\uff0c\u5373\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199 print(str_1.isupper()) # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u5168\u90e8\u5927\u5199 print(str_1.islower()) # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u5168\u90e8\u5c0f\u5199 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 str1 = 'hello word' # 1 print('%s python' % (str1)) # 2 print(f'hello {str1}') # 3 print('abc{}'.format('ag')) print('hello {0} -{1}-{0}'.format(1,2)) print('hello {name}'.format(name='age')) print('hello num {:10.2f}'.format(3.134343)) print('{:d}'.format(34)) print('hello %30.e' % (10000000)) %d # \u5341\u8fdb\u5236 %b # \u4e8c\u8fdb\u5236 %o # \u516b\u8fdb\u5236 %x # \u5341\u516d\u8fdb\u5236 \u8f6c\u4e49\u5b57\u7b26","title":"\u5b57\u7b26\u4e32"},{"location":"base/python/python/#list_1","text":"len:\u5224\u65ad\u5217\u8868\u4e2d\u5143\u7d20\u7684\u4e2a\u6570 str = 'hello' list1= [1, 3, 3] print(len(list1)) # 3 in :\u5224\u65ad\u67d0\u4e2a\u5143\u7d20\u662f\u5426\u5728\u8be5\u5217\u8868\u4e2d\uff0c\u6216\u8005\u5224\u65ad\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u7684\u957f\u5ea6,\u800cnot in \u529f\u80fd\u521a\u597d\u76f8\u53cd str = 'hello' list_1= [1, 3, 3] print(len(list_1)) print(1 in list_1) append():\u5217\u8868\u6dfb\u52a0\u5143\u7d20 list_1.append('5') print(list_1) # [1, 3, 3, '5'] insert:\u5217\u8868\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u6dfb\u52a0\u5143\u7d20 list_1 = [1, 2, 3] list_1.insert(0, 'a') print(list_1) # ['a', 1, 2, 3] count:\u5728\u5217\u8868\u4e2d\u7edf\u8ba1\u67d0\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570 print(list_1.count(1)) # 1 remove:\u5220\u9664\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u62a5\u9519\uff0c\u5982\u679c\u6709\u591a\u4e2a\u5219\u5220\u9664\u7b2c\u4e00\u4e2a list_1.remove(1) print(list_1) del:\u5c06\u53d8\u91cf\u5b8c\u5168\u5220\u9664\uff0c\u5728\u4f7f\u7528\u5c31\u4f1a\u62a5\u9519 del list_1 print(list_1) # \u76f4\u63a5\u62a5\u9519 reverse():\u5217\u8868\u7684\u5143\u7d20\u8fdb\u884c\u53cd\u8f6c list_1 = list([1, 2, 3]) list_1.reverse() print(list_1) # [3, 2, 1] sort():\u6392\u5e8f,reverse=False(\u9ed8\u8ba4)\u5347\u5e8f\uff0c\u5982\u679cTrue\u5219\u964d\u5e8f\uff0ckey=\u6839\u636e\u4ec0\u4e48\u8fdb\u884c\u6392\u5e8f\uff0c \u6210\u5458\u5fc5\u987b\u662f\u540c\u4e00\u6570\u636e\u7c7b\u578b\uff0c\u5426\u5219\u65e0\u6cd5\u8fdb\u884c\u6392\u5e8f list_1.sort(reverse=False) # key= reverse= print(list_1) # [1, 2, 3] clear():\u5217\u8868\u6e05\u7a7a list_1.clear() print(list_1) # [] copy\u548cdeepcopy\u90fd\u662f\u5217\u8868\u62f7\u8d1d\u4e00\u4efd \u5982\u679c\u5217\u8868\u8fd8\u6709\u5217\u8868\u4f7f\u7528copy\u5219\u5b83\u4eec\u4f1a\u5171\u4eab\u4e00\u4e2a\u5217\u8868\uff0c\u800cdeepcopy\u4f1a\u91cd\u65b0\u5f00\u8f9f\u4e00\u4e2a\u5217\u8868 print('copy') list_1 = [1, 2, 3] list_2 = list_1.copy() list_1.append('a') print(list_1,list_2) # [1, 2, 3, 'a'] [1, 2, 3] print(list_1 is list_2) print('deepcopy----') list_1 = [[1,2],[3,4]] list_2 = copy.deepcopy(list_1) list_2[1].append('a') print(list_1, list_2) extend:\u5217\u8868\u4e2d\u6dfb\u52a0\u5217\u8868 print('extend') list_1 = [1, 2, 3] list_2 = ['a', 'b'] list_1.extend(list_2) print(list_1) # [1, 2, 3, 'a', 'b'] \u7d22\u5f15\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f0 \u5207\u7247\uff1a\u6bd4\u5982\u5b57\u7b26\u4e32\u7684\u622a\u53d6\uff0c\u5de6\u542b\u53f3\u4e0d\u542b pop():\u6839\u636e\u7d22\u5f15\u83b7\u5220\u9664\u503c list_1 = list([1, 2, 3]) list_1.pop(1) print(list_1) \u4e5f\u53ef\u4ee5\u4fee\u6539\u503c\uff0c\u4e0d\u8fc7\u5b57\u7b26\u4e32\u65e0\u6cd5\u4fee\u6539 del list_1[0] print(list_1)","title":"\u5217\u8868 list"},{"location":"base/python/python/#set","text":"\u96c6\u5408\u7684\u521b\u5efa set_1 = {1, 2, 3} # 1 print(type(set_1)) set_1 = set() # 2 set([2, 3, 3]) # {}\uff1a\u4e0d\u53ef\u4ee5\u4f7f\u7528{}\u521b\u5efa\u7a7a\u7684\u96c6\u5408 add:\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 update:\u6dfb\u52a0\u4e00\u4e2a\u96c6\u5408\uff0c\u5982\u679c\u5143\u7d20\u5df2\u7ecf\u5728\u96c6\u5408\u4e2d\u5219\u5ffd\u7565\u8be5\u5143\u7d20 remove:\u79fb\u9664\u4e00\u4e2a\u5143\u7d20 clear:\u6e05\u7a7a\u96c6\u5408 # coding:utf-8 set_1 = set((1, 2, 3, 4)) print(set_1) set_1.add('helo') # {1, 2, 3, 4, 'helo'} print(set_1) # set_1.update([1, 3, 3, 'matt']) # \u5982\u679c\u5143\u7d20\u5df2\u7ecf\u5728\u96c6\u5408\u4e2d\u5219\u5ffd\u7565\u8be5\u5143\u7d20 print(set_1) # {1, 2, 3, 4, 'matt', 'helo'} set_1.remove('matt') print('remove', set_1) # remove {1, 2, 3, 4, 'helo'} set_1.clear() print(set_1) # del set_1 print(set_1) difference:\u5dee\u96c6 intersection\uff1a\u4ea4\u96c6 union\uff1a\u5e76\u96c6 isdisjoint\uff1a\u5224\u65ad\u4fe9\u4e2a\u96c6\u5408\u4e2d\u662f\u5426\u6709\u4ea4\u96c6,\u6ca1\u6709\u8fd4\u56deTrue # coding:utf-8 set_1 = {1, 2, 3, 4} set_2 = {1, 2, 'a', 'b'} diff = set_1.difference(set_2) # \u4e5f\u53ef\u4ee5\u4f7f\u7528- print(diff) # print(set_1 - set_2) intersection_res = set_1.intersection(set_2) print('\u4ea4\u96c6', intersection_res) union_res = set_1.union(set_2) print('union_res', union_res) isdisjoint_res = set_1.isdisjoint(set_2) # \u5224\u65ad\u4fe9\u4e2a\u96c6\u5408\u662f\u5426\u5305\u542b\u76f8\u540c\u7684\u5143\u7d20\uff0c\u6ca1\u6709\u5219True print(isdisjoint_res)","title":"set \u96c6\u5408\u7684\u4f7f\u7528"},{"location":"base/python/python/#_21","text":"\u5b9a\u4e49 dict_01 = {'name': 'matt', 'age': 12} dict_02 = dict({'name': 'mike', 'age': 19}) \u548c update() update()\u4e2d\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684\u5b57\u5178\uff0c\u5e76\u4f1a\u5df2\u6709\u7684\u5b57\u5178\u8fdb\u884c\u8986\u76d6\u9664\u5176\u4e2d\u4fe9\u4e2a\u5b57\u5178\u76f8\u540c\u7684key\u4f1a\u8fdb\u884c\u8986\u76d6 dict['age'] = 11 dict_1 = {'name': 'matt'} dict.update(dict_1) # {'age': 11, 'name': 'matt'} setdefault:key\u4e0d\u5b58\u5728\u624d\u4f1a\u8bbe\u7f6e dict.setdefault('a', 1) dict.setdefault('name', 1) print(dict) keys \u548c values keys:\u83b7\u53d6\u5b57\u5178\u4e2d\u6240\u6709\u7684key values:\u83b7\u53d6\u5b57\u5178\u4e2d\u6240\u6709\u7684\u503c \u4e8c\u8005\u8fd4\u56de\u7684\u90fd\u662f\u4f2a\u5217\u8868\uff0c\u4e0d\u5177\u6709\u5217\u8868\u7684\u6240\u6709\u529f\u80fd print(dict.keys()) print('values:', dict.values()) \u548c get \u4e8c\u8005\u7528\u4e8e\u5b57\u5178\u6839\u636ekey\u83b7\u53d6\u5c5e\u6027\u7684\u503c\uff0c print(dict['a']) print(dict.get('v')) clear:\u6e05\u7a7a\u5b57\u5178 dict.clear() pop():\u6839\u636ekey\u5220\u9664\u503c\uff0c\u82e5key\u4e0d\u5b58\u5728\u5219\u62a5\u9519 dict.pop('a') del\u4f7f\u7528 del dict['b'] # \u5220\u9664key\u9b4f'b' del dict # \u5728\u5185\u5b58\u4e2d\u5220\u9664\u5b57\u5178\uff0c\u5728\u4f7f\u7528\u5219\u62a5\u9519 print(dict) copy:\u5b57\u5178\u7684\u590d\u5236\uff0c\u5185\u5b58\u5730\u5740\u4f1a\u53d1\u751f\u6539\u53d8 dict_01 = dict.copy() print(id(dict) == id(dict_01)) print(dict_01 is dict) in \u548c not in dict = {'a': 1, 'b': 2} print('a' not in dict) popitem():\u5220\u9664\u5b57\u5178\u672b\u5c3e\u7684key-value,\u5b57\u5178\u4e3a\u7a7a\u76f4\u63a5\u62a5\u9519 res = dict.popitem() # \u5b57\u5178\u4e3a\u7a7a\u76f4\u63a5\u62a5\u9519 \u200b","title":"\u5b57\u5178\u4f7f\u7528"},{"location":"base/python/python/#_22","text":"if # coding:utf-8 i = 1 if i < 10: print('\u4e2a\u4f4d\u6570') elif i >= 10 and i < 100: print('\u5341\u4f4d\u6570') else: print('\u5176\u4ed6') for # coding:utf-8 list_0 = [1, 2, 3, 4] for i in list_0: print(i) dict_0 = {'name': 'matt', 'age': 10} for i in dict_0.values(): print(i) while # coding:utf-8 count = 100 while count > 0: count -= 1 print(count) print('end')","title":"\u6d41\u7a0b\u63a7\u5236"},{"location":"base/python/python/#_23","text":"# coding:utf-8 \u200b``` a\uff1a\u5fc5\u987b\u8981\u4f20\uff0cb\u6709\u9ed8\u8ba4\u503c\u53ef\u4ee5\u4e0d\u4f20 \u200b``` def incr(a, b = 1): return a + 1 sum = incr(a = 1) print(sum) # \u53ef\u53d8\u53c2\u6570\uff0c\u5176\u4e2dargs\u5c01\u88c5\u4e3a\u5143\u7ec4\uff0c\u800ckwargs\u5c01\u88c5\u4e3a\u5b57\u5178 def test(*args, **kwargs): print('hello word') print(args) print(kwargs) test(1, 2, 3,name = 'age', age = 17) # (1, 2, 3) # {'name': 'age', 'age': 17} \u51fd\u6570\u4e2d\u4f7f\u7528\u7c7b\u578b # python\u4e0d\u4f1a\u5bf9\u53c2\u6570\u7c7b\u578b\u8fdb\u884c\u9a8c\u8bc1 def test(i:int, j:str = 'hello word'): print(i) lambda\u4f7f\u7528 f = lambda : print('test lambda') f() t = lambda x, y : x + y print(t(1, 2)) print('hello' + '11')","title":"\u51fd\u6570\u7684\u4f7f\u7528"},{"location":"base/python/python/#_24","text":"# coding:utf-8 class Person(object): name = 'matt' __sex = '\u5973' # \u6784\u9020\u51fd\u6570\uff0cself\u4ee3\u8868\u5f53\u524d\u5bf9\u8c61 def __init__(self): print(self) self.age = 17 def __init__(self, name): print('hello word') person = Person('11') print(person.name) # print(person.sex) \u88c5\u9970\u5668\u7684\u4f7f\u7528 def a(f): def inter(*args, **kwargs): return f(*args, **kwargs) return inter @a def test(i): print(i) test(1) class T(object): __name = 'matt' # \u76f4\u63a5\u53ef\u4ee5\u4f7f\u7528\u7c7b\u8c03\u7528 @classmethod def a(cls, t): print(t) # \u76f4\u63a5\u53ef\u4ee5\u4f7f\u7528\u7c7b\u8c03\u7528\uff0c\u4e0d\u9700\u8981\u4f7f\u7528cls,self @staticmethod def b(): print('staticmethod') # \u53ef\u4ee5\u4f7f\u7528\u5bf9\u8c61.name @property def name(self): return self.__name T.a('11') T.b() t = T() print(t.name) \u591a\u7ee7\u627f # coding:utf-8 class A(object): def info(self): print('a') class B(object): def info(self): print('b') class C(B, A): def test(self): super(C, self).info() print('test') c = C() c.test() super: super(\u5f53\u524d\u7c7b\uff0cself).\u7236\u7c7b\u7684\u5c5e\u6027\u6216\u8005\u65b9\u6cd5 # coding:utf-8 class Parent(object): def __init__(self, name): self.name = name def info(self,name): print(name) p = Parent('p') p.info('aaa') class Son(Parent): def __init__(self): super(Son, self).__init__('aaa') def test(self): super(Son, self).info('hello word') s = Son() s.test() \u7c7b\u7684\u9ad8\u7ea7\u51fd\u6570 # coding:utf-8 class Person(object): # \u7c7b\u7684\u63cf\u8ff0\u4fe1\u606f,\u76f8\u5f53\u4e8etoString()\u65b9\u6cd5 def __str__(self): print('this is person') return '1' # \u5728key\u4e0d\u5b58\u5728\u65f6\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u51fd\u6570 def __getattr__(self, item): print('%s \u4e0d\u5b58\u5728' % (item)) # \u5728\u5c5e\u6027\u4e0d\u5b58\u5728\u8bbe\u7f6e\u65f6\u89e6\u53d1\u8fd9\u4e2a\u51fd\u6570 def __setattr__(self, key, value): if key not in self.__dict__: return # \u5bf9\u8c61(\u53c2\u6570) def __call__(self, *args, **kwargs): print(*args) person = Person() print(person.a) print(person) person.age = 18 print(person.age) person(12222) print(person.__dict__)","title":"\u7c7b\u4e0e\u5bf9\u8c61"},{"location":"base/python/python/#_25","text":"\u5f02\u5e38\u7684\u6355\u83b7 try: i = 10 / 0 except Exception as e: print(e) finally: print('end...') \u6355\u83b7\u591a\u4e2a\u5f02\u5e38 try: res = 1 / 0 except ZeroDivisionError as e: print(e) except Exception as e: print(e) finally: print('end') try: res = 1 / 0 except (ZeroDivisionError, Exception) as e: print(e) \u81ea\u5b9a\u4e49\u629b\u51fa\u5f02\u5e38 i = 100 if i == 100: raise Exception('i \u4e0d\u53ef\u4ee5\u4e3a100') \u81ea\u5b9a\u4e49\u5f02\u5e38 # coding:utf-8 class MyException(Exception): def __init__(self, message): self.message = message i = 100 if i == 100: raise MyException('hhhah') \u5e38\u89c1\u7684\u5f02\u5e38 StopIteration\uff1a\u7531\u5185\u7f6e\u51fd\u6570 next() \u548c iterator \u7684 next () \u65b9\u6cd5\u6240\u5f15\u53d1\uff0c\u7528\u6765\u8868\u793a\u8be5\u8fed \u4ee3\u5668\u4e0d\u80fd\u4ea7\u751f\u4e0b\u4e00\u9879\uff1b ZeroDivisionError\uff1a\u5f53\u9664\u6cd5\u6216\u53d6\u4f59\u8fd0\u7b97\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u96f6\u65f6\u5c06\u88ab\u5f15\u53d1 AttributeError\uff1a\u5f53\u5c5e\u6027\u5f15\u7528\u6216\u8d4b\u503c\u5931\u8d25\u65f6\u5c06\u88ab\u5f15\u53d1 EOFError\uff1a\u5f53 input() \u51fd\u6570\u672a\u8bfb\u53d6\u4efb\u4f55\u6570\u636e\u5373\u8fbe\u5230\u6587\u4ef6\u7ed3\u675f\u6761\u4ef6 (EOF) \u65f6\u5c06\u88ab\u5f15\u53d1 ImportError\uff1a\u5f53 import \u8bed\u53e5\u5c1d\u8bd5\u52a0\u8f7d\u6a21\u5757\u9047\u5230\u9ebb\u70e6\u65f6\u5c06\u88ab\u5f15\u53d1 ModuleNotFoundError\uff1a\u5f53\u4e00\u4e2a\u6a21\u5757\u65e0\u6cd5\u88ab\u5b9a\u4f4d\u65f6\u5c06\u7531 import \u5f15\u53d1 LookupError\uff1a\u6b64\u57fa\u7c7b\u7528\u4e8e\u6d3e\u751f\u5f53\u6620\u5c04\u6216\u5e8f\u5217\u6240\u4f7f\u7528\u7684\u952e\u6216\u7d22\u5f15\u65e0\u6548\u65f6\u5f15\u53d1\u7684\u5f02\u5e38 IndexError\uff1a\u5f53\u5e8f\u5217\u62bd\u53d6\u8d85\u51fa\u8303\u56f4\u65f6\u5c06\u88ab\u5f15\u53d1 KeyError\uff1a\u5f53\u5728\u73b0\u6709\u952e\u96c6\u5408\u4e2d\u627e\u4e0d\u5230\u6307\u5b9a\u7684\u6620\u5c04\uff08\u5b57\u5178\uff09\u952e\u65f6\u5c06\u88ab\u5f15\u53d1 NameError\uff1a\u5f53\u67d0\u4e2a\u5c40\u90e8\u6216\u5168\u5c40\u540d\u79f0\u672a\u627e\u5230\u65f6\u5c06\u88ab\u5f15\u53d1 UnboundLocalError\uff1a\u5f53\u5728\u51fd\u6570\u6216\u65b9\u6cd5\u4e2d\u5bf9\u67d0\u4e2a\u5c40\u90e8\u53d8\u91cf\u8fdb\u884c\u5f15\u7528\uff0c\u4f46\u8be5\u53d8\u91cf\u5e76\u672a\u7ed1\u5b9a\u4efb \u4f55\u503c\u65f6\u5c06\u88ab\u5f15\u53d1 OSError\uff1a\u6b64\u5f02\u5e38\u5728\u4e00\u4e2a\u7cfb\u7edf\u51fd\u6570\u8fd4\u56de\u7cfb\u7edf\u76f8\u5173\u7684\u9519\u8bef\u65f6\u5c06\u88ab\u5f15\u53d1\uff0c\u6b64\u7c7b\u9519\u8bef\u5305\u62ec I/O \u64cd \u4f5c\u5931\u8d25\u4f8b\u5982 \u201c\u6587\u4ef6\u672a\u627e\u5230\u201d \u6216 \u201c\u78c1\u76d8\u5df2\u6ee1\u201d \u7b49\uff08\u4e0d\u5305\u62ec\u975e\u6cd5\u53c2\u6570\u7c7b\u578b\u6216\u5176\u4ed6\u5076\u7136\u6027\u9519\u8bef\uff09 BlockingIOError\uff1a\u5f53\u4e00\u4e2a\u64cd\u4f5c\u4f1a\u88ab\u67d0\u4e2a\u8bbe\u7f6e\u4e3a\u975e\u963b\u585e\u64cd\u4f5c\u7684\u5bf9\u8c61\uff08\u4f8b\u5982\u5957\u63a5\u5b57\uff09\u6240\u963b\u585e\u65f6 \u5c06\u88ab\u5f15\u53d1 ChildProcessError\uff1a\u5f53\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u4e0a\u7684\u64cd\u4f5c\u5931\u8d25\u65f6\u5c06\u88ab\u5f15\u53d1 ConnectionError\uff1a\u4e0e\u8fde\u63a5\u76f8\u5173\u95ee\u9898\u7684\u57fa\u7c7b BrokenPipeError\uff1a\u5f53\u8bd5\u56fe\u5199\u5165\u53e6\u4e00\u7aef\u5df2\u88ab\u5173\u95ed\u7684\u7ba1\u9053\uff0c\u6216\u662f\u8bd5\u56fe\u5199\u5165\u5df2\u5173\u95ed\u5199\u5165\u7684\u5957\u63a5\u5b57 \u65f6\u5c06\u88ab\u5f15\u53d1 ConnectionAbortedError\uff1a\u5f53\u8fde\u63a5\u5c1d\u8bd5\u88ab\u5bf9\u7aef\u4e2d\u6b62\u65f6\u5c06\u88ab\u5f15\u53d1ConnectionRefusedError\uff1a \u5f53\u8fde\u63a5\u5c1d\u8bd5\u88ab\u5bf9\u7aef\u62d2\u7edd\u65f6\u5c06\u88ab\u5f15\u53d1 ConnectionResetError\uff1a\u5f53\u8fde\u63a5\u88ab\u5bf9\u7aef\u91cd\u7f6e\u65f6\u5c06\u88ab\u5f15\u53d1 FileExistsError\uff1a\u5f53\u8bd5\u56fe\u521b\u5efa\u4e00\u4e2a\u5df2\u5b58\u5728\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u65f6\u5c06\u88ab\u5f15\u53d1 FileNotFoundError\uff1a\u5f53\u6240\u8bf7\u6c42\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u4e0d\u5b58\u5728\u65f6\u5c06\u88ab\u5f15\u53d1 InterruptedError\uff1a\u5f53\u7cfb\u7edf\u8c03\u7528\u88ab\u8f93\u5165\u4fe1\u53f7\u4e2d\u65ad\u65f6\u5c06\u88ab\u5f15\u53d1 IsADirectoryError\uff1a\u5f53\u8bf7\u6c42\u5bf9\u4e00\u4e2a\u76ee\u5f55\u6267\u884c\u6587\u4ef6\u64cd\u4f5c\u5c06\u88ab\u5f15\u53d1 NotADirectoryError\uff1a\u5f53\u8bf7\u6c42\u5bf9\u4e00\u4e2a\u975e\u76ee\u5f55\u5bf9\u8c61\u6267\u884c\u76ee\u5f55\u64cd\u4f5c\u65f6\u5c06\u88ab\u5f15\u53d1 PermissionError\uff1a \u5f53\u5728\u6ca1\u6709\u8db3\u591f\u64cd\u4f5c\u6743\u9650\u7684\u60c5\u51b5\u4e0b\u8bd5\u56fe\u6267\u884c\u67d0\u4e2a\u64cd\u4f5c\u65f6\u5c06\u88ab\u5f15\u53d1 ProcessLookupError\uff1a\u5f53\u7ed9 \u5b9a\u7684\u8fdb\u7a0b\u4e0d\u5b58\u5728\u65f6\u5c06\u88ab\u5f15\u53d1 TimeoutError\uff1a\u5f53\u4e00\u4e2a\u7cfb\u7edf\u51fd\u6570\u53d1\u751f\u7cfb\u7edf\u7ea7\u8d85\u65f6\u7684\u60c5\u51b5\u4e0b\u5c06\u88ab\u5f15\u53d1 ReferenceError\uff1a\u6b64\u5f02\u5e38\u5c06\u5728\u4f7f\u7528 weakref.proxy() \u51fd\u6570\u6240\u521b\u5efa\u7684\u5f31\u5f15\u7528\u6765\u8bbf\u95ee\u8be5\u5f15\u7528\u7684 \u67d0\u4e2a\u5df2\u88ab\u4f5c\u4e3a\u5783\u573e\u56de\u6536\u7684\u5c5e\u6027\u65f6\u88ab\u5f15\u53d1 RuntimeError\uff1a\u5f53\u68c0\u6d4b\u5230\u4e00\u4e2a\u4e0d\u5f52\u5c5e\u4e8e\u4efb\u4f55\u5176\u4ed6\u7c7b\u522b\u7684\u9519\u8bef\u65f6\u5c06\u88ab\u5f15\u53d1 NotImplementedError\uff1a\u5728\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u57fa\u7c7b\u4e2d\uff0c\u62bd\u8c61\u65b9\u6cd5\u5e94\u5f53\u5728\u5176\u8981\u6c42\u6240\u6d3e\u751f\u7c7b\u91cd\u8f7d\u8be5 \u65b9\u6cd5\uff0c\u6216\u662f\u5728\u5176\u8981\u6c42\u6240\u5f00\u53d1\u7684\u7c7b\u63d0\u793a\u5177\u4f53\u5b9e\u73b0\u5c1a\u5f85\u6dfb\u52a0\u65f6\u5f15\u53d1\u6b64\u5f02\u5e38 RecursionError\uff1a\u5b83\u4f1a\u5728\u89e3\u91ca\u5668\u68c0\u6d4b\u53d1\u73b0\u8d85\u8fc7\u6700\u5927\u9012\u5f52\u6df1\u5ea6\u65f6\u88ab\u5f15\u53d1 SyntaxError\uff1a\u5f53\u89e3\u6790\u5668\u9047\u5230\u8bed\u6cd5\u9519\u8bef\u65f6\u5c06\u88ab\u5f15\u53d1 IndentationError\uff1a\u4e0e\u4e0d\u6b63\u786e\u7684\u7f29\u8fdb\u76f8\u5173\u7684\u8bed\u6cd5\u9519\u8bef\u7684\u57fa\u7c7b TabError\uff1a\u5f53\u7f29\u8fdb\u5305\u542b\u5bf9\u5236\u8868\u7b26\u548c\u7a7a\u683c\u7b26\u4e0d\u4e00\u81f4\u7684\u4f7f\u7528\u65f6\u5c06\u88ab\u5f15\u53d1 SystemError\uff1a\u5f53\u89e3\u91ca\u5668\u53d1\u73b0\u5185\u90e8\u9519\u8bef\uff0c\u4f46\u60c5\u51b5\u770b\u8d77\u6765\u5c1a\u672a\u4e25\u91cd\u5230\u8981\u653e\u5f03\u6240\u6709\u5e0c\u671b\u65f6\u5c06\u88ab\u5f15 \u53d1 TypeError\uff1a\u5f53\u4e00\u4e2a\u64cd\u4f5c\u6216\u51fd\u6570\u88ab\u5e94\u7528\u4e8e\u7c7b\u578b\u4e0d\u9002\u5f53\u7684\u5bf9\u8c61\u65f6\u5c06\u88ab\u5f15\u53d1 ValueError\uff1a\u5f53\u64cd\u4f5c\u6216\u51fd\u6570\u63a5\u6536\u5230\u5177\u6709\u6b63\u786e\u7c7b\u578b\u4f46\u503c\u4e0d\u9002\u5408\u7684\u53c2\u6570\uff0c\u5e76\u4e14\u60c5\u51b5\u4e0d\u80fd\u7528\u66f4\u7cbe\u786e \u7684\u5f02\u5e38\u6765\u63cf\u8ff0\u65f6\u5c06\u88ab\u5f15\u53d1 UnicodeError\uff1a\u5f53\u53d1\u751f\u4e0e Unicode \u76f8\u5173\u7684\u7f16\u7801\u6216\u89e3\u7801\u9519\u8bef\u65f6\u5c06\u88ab\u5f15\u53d1 UnicodeDecodeError\uff1a\u5f53\u5728\u89e3\u7801\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e0e Unicode \u76f8\u5173\u7684\u9519\u8bef\u65f6\u5c06\u88ab\u5f15\u53d1 UnicodeEncodeError\uff1a\u5f53\u5728\u7f16\u7801\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e0e Unicode \u76f8\u5173\u7684\u9519\u8bef\u65f6\u5c06\u88ab\u5f15\u53d1 UnicodeTranslateError\uff1a\u5728\u8f6c\u5199\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e0e Unicode \u76f8\u5173\u7684\u9519\u8bef\u65f6\u5c06\u88ab\u5f15\u53d1 Warning\uff1a \u8b66\u544a\u7c7b\u522b\u7684\u57fa\u7c7b DeprecationWarning\uff1a\u5982\u679c\u6240\u53d1\u51fa\u7684\u8b66\u544a\u662f\u9488\u5bf9\u5176\u4ed6 Python \u5f00\u53d1\u8005\u7684\uff0c\u5219\u4ee5\u6b64\u4f5c\u4e3a\u4e0e \u5df2\u5f03\u7528\u7279\u6027\u76f8\u5173\u8b66\u544a\u7684\u57fa\u7c7b PendingDeprecationWarning\uff1a\u5bf9\u4e8e\u5df2\u8fc7\u65f6\u5e76\u9884\u8ba1\u5728\u672a\u6765\u5f03\u7528\uff0c\u4f46\u76ee\u524d\u5c1a\u672a\u5f03\u7528\u7684\u7279\u6027\u76f8 \u5173\u8b66\u544a\u7684\u57fa\u7c7b RuntimeWarning\uff1a\u4e0e\u6a21\u7cca\u7684\u8fd0\u884c\u65f6\u884c\u4e3a\u76f8\u5173\u7684\u8b66\u544a\u7684\u57fa\u7c7b SyntaxWarning\uff1a\u4e0e\u6a21\u7cca\u7684\u8bed\u6cd5\u76f8\u5173\u7684\u8b66\u544a\u7684\u57fa\u7c7b UserWarning\uff1a\u7528\u6237\u4ee3\u7801\u6240\u4ea7\u751f\u8b66\u544a\u7684\u57fa\u7c7b FutureWarning\uff1a\u5982\u679c\u6240\u53d1\u51fa\u7684\u8b66\u544a\u662f\u9488\u5bf9\u4ee5 Python \u6240\u7f16\u5199\u5e94\u7528\u7684\u6700\u7ec8\u7528\u6237\u7684\uff0c\u5219\u4ee5\u6b64 \u4f5c\u4e3a\u4e0e\u5df2\u5f03\u7528\u7279\u6027\u76f8\u5173\u8b66\u544a\u7684\u57fa\u7c7b ImportWarning\uff1a\u4e0e\u5728\u6a21\u5757\u5bfc\u5165\u4e2d\u53ef\u80fd\u7684\u9519\u8bef\u76f8\u5173\u7684\u8b66\u544a\u7684\u57fa\u7c7b UnicodeWarning\uff1a\u4e0e Unicode \u76f8\u5173\u7684\u8b66\u544a\u7684\u57fa\u7c7b BytesWarning\uff1a\u4e0e bytes \u548c bytearray \u76f8\u5173\u7684\u8b66\u544a\u7684\u57fa\u7c7b ResourceWarning\uff1a\u4e0e\u8d44\u6e90\u4f7f\u7528\u76f8\u5173\u7684\u8b66\u544a\u7684\u57fa\u7c7b","title":"\u5f02\u5e38"},{"location":"base/python/python/#_26","text":"\u5305\uff1a\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u6709__init__.py\u548c\u5176\u4ed6python\u6587\u4ef6\uff0c\u5176\u4e2d__init__.py\u662f\u5305\u7684\u8eab\u4efd\u8bc1\uff0c\u5176\u4ed6py\u6587\u4ef6\u662f\u6a21\u5757\uff0c\u5305\u4e2d\u4e5f\u53ef\u4ee5\u6709 \u5bfc\u5165\u5305 import animal.dog \u5bfc\u5165\u6a21\u5757 from animal.dog import aciton action.jump() \u5bfc\u5165\u6a21\u5757\u4e2d\u7684\u51fd\u6570 from animal.dog.action import run as dog_run # as\u662f\u8d77\u522b\u540d dog_run()","title":"\u5305\u4e0e\u6a21\u5757"},{"location":"base/python/python/#pip_1","text":"pip install \u5305\u540d pip uninstall \u5305\u540d pip -V pip\u66f4\u6539\u955c\u50cf \u53c2\u8003 pip\u56fd\u5185\u7684\u4e00\u4e9b\u955c\u50cf \u963f\u91cc\u4e91 http://mirrors.aliyun.com/pypi/simple/ \u4e2d\u56fd\u79d1\u6280\u5927\u5b66 https://pypi.mirrors.ustc.edu.cn/simple/ \u8c46\u74e3(douban) http://pypi.douban.com/simple/ \u6e05\u534e\u5927\u5b66 https://pypi.tuna.tsinghua.edu.cn/simple/ \u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66 http://pypi.mirrors.ustc.edu.cn/simple/ \u63d0\u793a\uff1a\u82e5\u62c5\u5fc3\u5b89\u5168\u95ee\u9898\u8bf7\u4f7f\u7528HTTPS\u52a0\u5bc6\u6e90 \u4fee\u6539\u6e90\u65b9\u6cd5\uff1a \u4e34\u65f6\u4f7f\u7528\uff1a Linux Mac Windows \u901a\u7528\u547d\u4ee4 \u53ef\u4ee5\u5728\u4f7f\u7528pip\u7684\u65f6\u5019\u5728\u540e\u9762\u52a0\u4e0a-i\u53c2\u6570\uff0c\u6307\u5b9apip\u6e90 pip install scrapy -i https://pypi.tuna.tsinghua.edu.cn/simple \u6c38\u4e45\u4fee\u6539\uff1a Linux: \u4fee\u6539 pip.conf \u6587\u4ef6 (\u6ca1\u6709\u5c31\u521b\u5efa\u4e00\u4e2a) $HOME/.config/pip/pip.conf \u4fee\u6539\u5185\u5bb9\u5982\u4e0b\uff1a [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple12 Mac: \u4fee\u6539 pip.conf \u6587\u4ef6 $HOME/Library/Application Support/pip/pip.conf \u5982\u679c\u6ca1\u6709\u4e0a\u9762\u7684\u76ee\u5f55,\u5728\u5982\u4e0b\u76ee\u5f55\u521b\u5efa pip.conf $HOME/.config/pip/pip.conf \u4fee\u6539\u5185\u5bb9\u5982\u4e0b\uff1a [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple Windows: \u4fee\u6539 pip.conf \u6587\u4ef6 (\u6ca1\u6709\u5c31\u521b\u5efa\u4e00\u4e2a) %APPDATA%\\pip\\pip.ini \u4fee\u6539\u5185\u5bb9\u5982\u4e0b\uff1a [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple \u4fee\u6539\u6587\u4ef6\u540e\uff0c\u6267\u884c\u547d\u4ee4\u53d1\u751f\u9519\u8bef \u4f7f\u7528\u975eHTTPS\u52a0\u5bc6\u6e90\uff08\u5982\u8c46\u74e3\u6e90\uff09\uff0c\u5728\u6267\u884c\u547d\u4ee4\u53d1\u751f\u9519\u8bef\uff0c\u5728\u547d\u4ee4\u6700\u540e\u52a0\u4e0a --trusted-host pypi.douban.com pip install django -i http://pypi.douban.com/simple --trusted-host pypi.douban.com %APPDATA%\\pip\\pip.ini [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple","title":"pip\u4f7f\u7528"},{"location":"base/python/python/#_27","text":"python \u4e2d\u65f6\u95f4\u65e5\u671f\u683c\u5f0f\u5316\u7b26\u53f7 %y\uff1a\u4e24\u4f4d\u6570\u7684\u5e74\u4efd\u8868\u793a\uff0800-99\uff09 %Y\uff1a\u56db\u4f4d\u6570\u7684\u5e74\u4efd\u8868\u793a\uff08000-9999\uff09 %m\uff1a\u6708\u4efd\uff0801-12\uff09 %d\uff1a\u6708\u5185\u4e2d\u7684\u4e00\u5929\uff080-31\uff09 %H\uff1a24 \u5c0f\u65f6\u5236\u5c0f\u65f6\u6570\uff080-23\uff09 %I\uff1a12 \u5c0f\u65f6\u5236\u5c0f\u65f6\u6570\uff0801-12\uff09 %M\uff1a\u5206\u949f\u6570\uff0800=59\uff09 %S\uff1a\u79d2\uff0800-59\uff09 %a\uff1a\u672c\u5730\u7b80\u5316\u661f\u671f\u540d\u79f0 %A\uff1a\u672c\u5730\u5b8c\u6574\u661f\u671f\u540d\u79f0 %b\uff1a\u672c\u5730\u7b80\u5316\u7684\u6708\u4efd\u540d\u79f0 %B\uff1a\u672c\u5730\u5b8c\u6574\u7684\u6708\u4efd\u540d\u79f0 %c\uff1a\u672c\u5730\u76f8\u5e94\u7684\u65e5\u671f\u8868\u793a\u548c\u65f6\u95f4\u8868\u793a %j\uff1a\u5e74\u5185\u7684\u4e00\u5929\uff08001-366\uff09 %p \u672c\u5730 A.M.\u6216 P.M.\u7684\u7b49\u4ef7\u7b26 %U\uff1a\u4e00\u5e74\u4e2d\u7684\u661f\u671f\u6570\uff0800-53\uff09\u661f\u671f\u5929\u4e3a\u661f\u671f\u7684\u5f00\u59cb %w\uff1a\u661f\u671f\uff080-6\uff09\uff0c\u661f\u671f\u5929\u4e3a\u661f\u671f\u7684\u5f00\u59cb %W\uff1a\u4e00\u5e74\u4e2d\u7684\u661f\u671f\u6570\uff0800-53\uff09\u661f\u671f\u4e00\u4e3a\u661f\u671f\u7684\u5f00\u59cb %x\uff1a\u672c\u5730\u76f8\u5e94\u7684\u65e5\u671f\u8868\u793a %X\uff1a\u672c\u5730\u76f8\u5e94\u7684\u65f6\u95f4\u8868\u793a %Z\uff1a\u5f53\u524d\u65f6\u533a\u7684\u540d\u79f0 %%\uff1a %\u53f7\u672c\u8eab # coding:utf-8 from datetime import datetime from datetime import timedelta res = datetime.now() # \u5f53\u524d\u65f6\u95f4\u65e5\u671f\u5bf9\u8c61 print(res) one_day = timedelta(days=1) # \u5f97\u5230\u65f6\u95f4\u95f4\u9694\u5bf9\u8c61 print(res - one_day) # \u4f7f\u7528 res = datetime.now() # \u65f6\u95f4\u65e5\u671f\u5bf9\u8c61\u8f6c\u5b57\u7b26\u4e32 \u4ee5\u53ca\u89e3\u6790 print(res.strftime('%Y/%m/%d %H:%M:%S')) # \u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u5c31\u4e0d\u9700\u8981\u540d time_str = res.strftime('%Y/%m/%d %H:%M:%S') time_obj = datetime.strptime(time_str, '%Y/%m/%d %H:%M:%S') print(time_obj) # coding:utf-8 import time from datetime import datetime print(time.time()) # \u65f6\u95f4\u6233 print('localtime', time.localtime()) # \u83b7\u53d6\u672c\u5730\u65f6\u95f4 # time.sleep(10) print('this is end') # \u65f6\u95f4\u65e5\u671f\u5bf9\u8c61 \u548c\u65f6\u95f4\u6233\u8f6c\u6362 timestamp_1 = datetime.timestamp(datetime.now()) # \u83b7\u53d6\u65f6\u95f4\u6233 print(timestamp_1) print(datetime.fromtimestamp(timestamp_1))","title":"\u65f6\u95f4"},{"location":"base/python/python/#_28","text":"\u6253\u5f00\u6587\u4ef6\u7684\u4e09\u6b65\uff1a\u6253\u5f00->\u64cd\u4f5c->\u5173\u95ed \u6ce8\u610f\uff1a 1.\u6700\u5927\u53ef\u4ee5\u6253\u5f00\u7684\u6587\u4ef6\u7684\u6570\u91cf 2.\u6253\u5f00\u540e\u5173\u95ed\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u8fd9\u6837\u4e0d\u4f1a\u6d6a\u8d39\u6587\u5b57\u63cf\u8ff0\u7b26 \u8bfb\u53d6\u6587\u672c\u6587\u4ef6\uff1a r r+ w w+ a a+ \u8bfb\u53d6\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a rb rb+ wb wb+ ab ab+ r:(\u9ed8\u8ba4) -\u53ea\u80fd\u8bfb\uff0c\u4e0d\u80fd\u5199 -\u8bfb\u53d6\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4f1a\u62a5\u9519 r+: -\u53ef\u8bfb\u5199 -\u8bfb\u53d6\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4f1a\u62a5\u9519 w: -write only -\u4f1a\u6e05\u7a7a\u6587\u4ef6\u4e4b\u524d\u7684\u5185\u5bb9 -\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f1a\u521b\u5efa\u65b0\u7684\u6587\u4ef6\u5e76\u5199\u5165 w+: -rw -\u4f1a\u6e05\u7a7a\u6587\u4ef6\u5185\u5bb9 -\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4e0d\u62a5\u9519\uff0c\u4f1a\u521b\u5efa\u65b0\u7684\u6587\u4ef6 a: -write only -\u4e0d\u4f1a\u6e05\u7a7a\u6587\u4ef6\u5185\u5bb9 -\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f1a\u521b\u5efa\u65b0\u7684\u6587\u4ef6\u5e76\u5199\u5165 a+: -rw -\u6587\u4ef6\u4e0d\u5b58\u5728\u4e0d\u62a5\u9519 -\u4e0d\u4f1a\u6e05\u7a7a\u6587\u4ef6\u5185\u5bb9 \u8bfb\u53d6\u6587\u672c\u6587\u4ef6\uff1a r r+ w w+ a a+ \u8bfb\u53d6\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a rb rb+ wb wb+ ab ab+ open():\u6253\u5f00\u6587\u4ef6 write():\u5199\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u5230\u6587\u4ef6\u4e2d writelines():\u5199\u5165\u4e00\u4e2alist # coding:utf-8 try: f = open('D:/var/hello.txt', 'a',encoding='utf-8') # f.write('\u4e2d\u53e4\u54df\u4eba') list_0 = list(['hello word', 'matt']) f.writelines(list_0) except Exception as e: print('\u5199\u6587\u4ef6\u51fa\u9519') finally: f.close() read():\u6574\u4e2a\u6587\u4ef6\u8bfb\u53d6\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32 readlines():\u6587\u4ef6\u8bfb\u5230\u4e00\u4e2alist\u4e2d readline():\u8bfb\u53d6\u5230\u4e00\u884c closed:\u5224\u65ad\u6587\u4ef6\u662f\u5426\u5173\u95ed,\u662f\u5c5e\u6027 # coding:utf-8 try: f = open(file='D:/var/hello.txt', mode='r', encoding='utf-8') # print(f.read()) # print(f.readlines()) print(f.readline()) except Exception as e: print('\u8bfb\u53d6\u6587\u4ef6\u51fa\u9519') finally: if f.closed: pass else: f.close() \u5b57\u5178\u7684\u5e8f\u5217\u5316 \u9700\u8981\u5bfc\u5165json # coding:utf-8 import json user_str = json.dumps({'name': '\u5bf9\u67d0\u4e9b'}) print(json.loads(user_str)) f = open(file='D:/var/json.txt',mode='w',encoding='utf-8') f.writelines(user_str)","title":"\u6587\u4ef6"},{"location":"base/python/python/#_29","text":"","title":"\u52a0\u5bc6"},{"location":"base/python/python/#hashlib","text":"hashobj = hashlib.md5(b\u2019hello\u2019) result = hashobj. hexdigest() # \u751f\u621016\u8fdb\u5236\u5b57\u7b26\u4e32 print(result) base64\uff1a\u53ef\u89e3\u5bc6\uff0c\u9700\u8981\u81ea\u5df1\u5bfc\u5165base64\u6a21\u5757 # coding:utf-8 import hashlib import base64 res = hashlib.md5(b'hehllo ') print(res.hexdigest()) # \u8fd4\u56de16\u8fdb\u5236\u5b57\u7b26\u4e32\u7684\u503c str = '\u4e2d\u56fd\u4eba' res = str.encode(encoding='utf-8') print(res.decode(encoding='utf-8')) print(base64.encodebytes(str.encode(encoding='utf-8')))","title":"hashlib:\u4e0d\u53ef\u9006"},{"location":"base/python/python/#logging","text":"\u65e5\u5fd7\u7684\u7b49\u7ea7 \uf075debug \uf075info \uf075warnning \uf075error \uf075critical \u65e5\u5fd7\u7684\u4f7f\u7528 # coding:utf-8 import logging logging.basicConfig( level=logging.INFO, format='%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s', filename='my.log', filemode='w' ) logging.info('hello word') \u200b logging.basicConfig level \u65e5\u5fd7\u8f93\u51fa\u7b49\u7ea7level=logging.DEBUG filename \u5b58\u50a8\u4f4d\u7f6efilename=\u2018d://back.log\u2019 format \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f filemode \u8f93\u5165\u6a21\u5f0ffilemode='w' \u200b \u200b format\u5177\u4f53\u683c\u5f0f \u683c\u5f0f\u7b26\u542b\u4e49 %(levelname)s \u65e5\u5fd7\u7ea7\u522b\u540d\u79f0 %(pathname)s \u6267\u884c\u7a0b\u5e8f\u7684\u8def\u5f84 %(filename)s \u6267\u884c\u7a0b\u5e8f\u540d %(lineno)d \u65e5\u5fd7\u7684\u5f53\u524d\u884c\u53f7 %(asctime)s \u6253\u5370\u65e5\u5fd7\u7684\u65f6\u95f4 %(message)s \u65e5\u5fd7\u4fe1\u606f","title":"\u65e5\u5fd7 logging"},{"location":"base/python/python/#_30","text":"abs all any type isinstance help var dir hasattr input enumerate # coding:utf-8 print(abs(-100)) # \u8fd4\u56de\u6b63\u6570 print(all([1, 1, 1])) # \u5224\u65ad\u5217\u8868\u5185\u5bb9\u662f\u5426\u5168\u662ftrue class User(object): def __init__(self): print('\u521b\u5efaUser\u5bf9\u8c61') user = User() print(help(user)) # help \u6253\u5370\u5bf9\u8c61\u7684\u5168\u90e8\u7528\u6cd5 name = input('\u8bf7\u8f93\u5165\u59d3\u540d\uff1a') print(name) list_1 = [1, 3, 3] for index,i in enumerate(list_1): # \u8bb0\u5f55\u7d22\u5f15 print(index, i) print(isinstance(1, int)) # \u5224\u65ad\u67d0\u4e2a\u53d8\u91cf\u662f\u5426\u662f\u67d0\u4e2a\u7c7b\u578b print(type('hello word')) user.name = 'hello' print(vars(user)) # \u8fd4\u56de\u5bf9\u8c61\u5b9e\u4f8b\u5316\u5b57\u5178\u4fe1\u606f print(dir(user)) # \u8fd4\u56de\u5bf9\u8c61\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5 print(hasattr('hello', 'aaa')) # \u5224\u65ad\u5bf9\u8c61\u662f\u5426\u6709\u67d0\u4e2a\u5c5e\u6027 user.__setattr__('age', 10) print(user.__getattribute__('age')) list_1 = [1, 2, 3] print(any((None,))) # \u5224\u65ad\u5bf9\u8c61\u4e2d\u662f\u5426\u6709true\u503c","title":"\u5e38\u7528\u7684\u5185\u7f6e\u51fd\u6570"},{"location":"base/python/python/#random","text":"# coding:utf-8 import random # \u53f3\u8fb9\u4e0d\u53ef\u4ee5\u53d6\u5230 def test(): for i in range(10000): i = random.random() # \u8fd4\u56de0-1\u7684\u6d6e\u70b9\u6570 if i == 1: print(i) return i; print('\u6ca1\u67091') test() print(random.uniform(1, 2)) # \u8fd4\u56de\u8303\u56f4\u7684\u6d6e\u70b9\u6570 def test_uniform(): for i in range(10000): i = random.uniform(1, 2) if i == 1: print(i) return i; test_uniform() print('randint') print(random.randint(1, 1000)) # \u8fd4\u56de\u6574\u6570 print('choice', random.choice([1, 2, 3, 4, 5])) # \u8fd4\u56delist\u4e2d\u7684\u4e00\u4e2a\u503c print('sample', random.sample([1, 2, 3, 4, 5],2))# \u8fd4\u56delist\u4e2d\u7684\u51e0\u4e2a\u503c # \u6b65\u957f for i in range(10): print(random.randrange(1, 100, 100)) # \u8fd4\u56de\u6307\u5b9a\u7684\u4e00\u4e2a\u503c\uff0c\u53ef\u4ee5\u6307\u5b9a\u6b65\u957f","title":"random \u6a21\u5757"},{"location":"base/python/python/#_31","text":"# coding:utf-8 iter_obj = iter([1, 2, 3]) print(iter_obj.__next__()) iter_obj = (i for i in range(10)) print(iter_obj.__next__()) def get_iter_obj(): for i in range(13): yield i iter_obj = get_iter_obj() print(iter_obj.__next__())","title":"\u8fed\u4ee3\u5668"},{"location":"base/python/python/#_32","text":"# coding:utf-8 from functools import reduce def _filter(x): if x <= 0: return False; return True; res = list(filter(lambda x: x > 0, [-1, 2, 3])) print(res) res = list(map(_filter, [-1, -2, 100])) # \u8fd4\u56deTrue False list print('map', res) print('----reduce----') res = reduce(lambda x, y: x + y, (1, 2, 3)) # \u9700\u8981\u5bfc\u5165reduce print(res)","title":"\u9ad8\u7ea7\u51fd\u6570"},{"location":"base/python/python/#_33","text":"\u51e0\u4e2a\u5e38\u7528\u7684\u51fd\u6570 \u4f7f\u7528\u524d\u9996\u5148\u9700\u8981\u5bfc\u5165re import re findall:\u5c06\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u5b58\u50a8\u5728list\u4e2d str = 'my name is hash' res = re.findall('\\sis*', str) # \u8fd4\u56de\u7b26\u5408\u7684list [' is'] print(res) match:\u4ece\u5b57\u7b26\u4e32\u5f00\u59cb\u67e5\u627e str = 'hedd ' print(re.match('\\w*', str).group()) # \u4ece\u5f00\u59cb\u5b57\u7b26\u5f00\u59cb\u67e5\u627e split:\u6839\u636e\u5339\u914d\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u5206\u5272 str = 'my name is hello word' res = re.split('\\s+', str) # \u627e\u5230\u7684\u5c31\u662f\u7a7a\u683c\u7b26\u53f7 print(res) # ['my', 'name', 'is', 'hello', 'word'] search:\u53ea\u5339\u914d\u4e00\u6b21 str = 'my email is 1718905040@qq.com 171890@qq.com' res = re.search('(\\d*.qq.com)', str) # \u53ea\u4f1a\u67e5\u627e\u4e00\u6b21 print(res.groups()) print(res.group(1)) # \u7d22\u5f15\u4ece1\u5f00\u59cb compile:\u5f97\u5230\u4e00\u4e2a\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u5bf9\u8c61 str = 'my email is 1718905040@qq.com 1234343@qq.com' re_obj = re.compile('\\d+.\\w{2}.com') res = re_obj.findall(str) print(res)","title":"\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"bigdata/flink/datastreamAPI/","text":"\u6982\u8ff0 \u6d41\u7a0b \u83b7\u53d6\u6267\u884c\u73af\u5883get environment \u8bfb\u53d6\u6570\u636e\u6e90 source \u6570\u636e\u7684\u8f6c\u6362 tansfrom \u6570\u636e\u7684\u8f93\u51fa sink \u7a0b\u5e8f\u6267\u884c execute \u6267\u884c\u73af\u5883 \u521b\u5efa\u6267\u884c\u73af\u5883 1.\u53ea\u80fd\u5224\u65ad \u5982\u679c\u662f\u672c\u5730\u5219\u4f7f\u7528\u672c\u5730 \u96c6\u7fa4\u5219\u4f7f\u7528\u96c6\u7fa4\u73af\u5883 StreamExecutionEnvironment env =StreamExecutionEnvironment.getExecutionEnvironment(); 2.\u6307\u5b9a createLocalEnvironment \u6307\u5b9a\u672c\u5730\u73af\u5883\uff0c \u9ed8\u8ba4\u5e76\u884c\u5ea6cpu\u6838\u6570 StreamExecutionEnvironment localEnv = StreamExecutionEnvironment.createLocalEnvironment(); createRemoteEnvironment \u4f7f\u7528\u96c6\u7fa4\u6267\u884c\u73af\u5883 StreamExecutionEnvironment remoteEnv = StreamExecutionEnvironment.createRemoteEnvironment(\"host\", // JobManager \u4e3b\u673a\u540d 1234, // JobManager \u8fdb\u7a0b\u7aef\u53e3\u53f7 \"path/to/jarFile.jar\" // \u63d0\u4ea4\u7ed9 JobManager \u7684 JAR \u5305 ); \u6267\u884c\u6a21\u5f0f execution mode // \u6279\u5904\u7406\u73af\u5883 ExecutionEnvironment batchEnv = ExecutionEnvironment.getExecutionEnvironment(); // \u6d41\u5904\u7406\u73af\u5883 StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); 1.12 \u6279\u6d41\u7edf\u4e00, \u81ea\u5b9a\u4e49\u8bbe\u7f6e\u5373\u53ef\u6279\u6d41\u5207\u6362 \u6267\u884c\u6a21\u5f0f\u5206\u7c7b \u6d41\u6267\u884c\u6a21\u5f0f(STREAMING)\uff0c\u9ed8\u8ba4\u4f7f\u7528\u6d41\u6a21\u5f0f \u6279\u6267\u884c\u6a21\u5f0f(BATCH)\uff0c \u4e0d\u4f1a\u6301\u7eed\u8ba1\u7b97\u7684\u6709\u754c\u6570\u636e \u81ea\u52a8\u6a21\u5f0f\uff0c automatic , \u7a0b\u5e8f\u6839\u636e\u8f93\u5165\u6570\u636e\u7684\u6570\u636e\u6e90\u662f\u5426\u6709\u754c\uff0c \u6765\u81ea\u52a8\u9009\u62e9\u6267\u884c\u6a21\u5f0f \u6a21\u5f0f\u914d\u7f6e Batch\u6a21\u5f0f\u914d\u7f6e bin/flink run -Dexecution.runtime-mode=BATCH ... StreamExecutionEnvironment env =StreamExecutionEnvironment.getExecutionEnvironment(); env.setRuntimeMode(RuntimeExecutionMode.BATCH); \u89e6\u53d1\u6267\u884c env.execute(); \u6e90\u7b97\u5b50 \u4f7f\u7528nc \u83b7\u53d6\u6570\u636e\u6e90 \u5e76\u884c\u5ea6\u8bbe\u7f6e\u4e3a1 DataStream<String> stream = env.socketTextStream(\"localhost\", 7777); \u524d\u63d0 \u6709\u4e00\u4e2a\u5982\u4e0b\u7684\u5b9e\u4f53\u7c7b package com.matt.apitest.model; import java.sql.Timestamp; public class UrlCntBO { public String url; public Long cnt; public Long winStart; public Long winEnd; public UrlCntBO(String url, Long cnt, Long winStart, Long winEnd) { this.url = url; this.cnt = cnt; this.winStart = winStart; this.winEnd = winEnd; } public UrlCntBO() { } @Override public String toString() { return \"UrlCntBO{\" + \"url='\" + url + '\\'' + \", cnt=\" + cnt + \", winStart=\" + new Timestamp(winStart) + \", winEnd=\" + new Timestamp(winEnd) + '}'; } } \u7c7b\u662f\u516c\u6709\u7684 public \u6709\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5 \u6240\u6709\u5c5e\u6027\u662f\u516c\u6709\u7684 \u6216\u8005\u63d0\u4f9bget,set \u65b9\u6cd5 \u6240\u6709\u5c5e\u6027\u53ef\u5e8f\u5217\u5316 \u63d0\u4f9b\u4e00\u4e2a toString \u65b9\u6cd5 \u53ef\u9009 \u96c6\u5408 package com.matt.apitest.source; import com.matt.apitest.beans.Event; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import java.util.Arrays; /** * @author matt * @create 2022-01-16 14:36 */ public class SourceTest1_Collection { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(5); DataStream<Event> events = env.fromCollection(Arrays.asList( new Event(\"m1\", \"a1\", 1672472280000L), new Event(\"m2\", \"a2\", 1672472279514L) )); events.print(\"collection\"); env.execute(\"my\"); } } \u4e5f\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5 DataStreamSource<Event> stream2 = env.fromElements( new Event(\"Mary\", \"./home\", 1000L), new Event(\"Bob\", \"./cart\", 2000L) ); \u6587\u4ef6 package com.matt.apitest.source; import com.matt.apitest.beans.SensorReading; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import java.util.Arrays; /** * @author matt * @create 2022-01-16 14:54 */ public class SourceTest2_File { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(10); // /Users/matt/workspace/java/stu/stu-flink/src/main/resources DataStream<String> dataStream = env.readTextFile(\"/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt\"); dataStream.print(\"file\"); // job name env.execute(\"f_source\"); } } \u5982\u679c\u662fhdfs \u53ef\u6dfb\u52a0\u5982\u4e0b\u4f9d\u8d56 <dependency> <groupId>org.apache.hadoop</groupId> <artifactId>hadoop-client</artifactId> <version>2.7.5</version> <scope>provided</scope> </dependency> socket \u9700\u8981\u5c06\u5e76\u884c\u5ea6\u8bbe\u7f6e\u4e3a1 DataStream<String> stream = env.socketTextStream(\"localhost\", 7777); kafka \u6dfb\u52a0\u4f9d\u8d56 kafka\u7248\u672c>=0.10.0 <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-kafka_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> package com.matt.apitest.source; import org.apache.flink.api.common.serialization.SimpleStringSchema; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumer; import java.util.Properties; /** * @author matt * @create 2022-01-16 15:05 */ public class SourceTest3_Kafka { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); Properties properties = new Properties(); properties.setProperty(\"bootstrap.servers\", \"localhost:9092\"); properties.setProperty(\"group.id\", \"consumer-group\"); properties.setProperty(\"key.deserializer\", \"org.apache.kafka.common.serialization.StringDeserializer\"); properties.setProperty(\"value.deserializer\", \"org.apache.kafka.common.serialization.StringDeserializer\"); // properties.setProperty(\"auto.offset.reset\", \"latest\"); DataStream<String> dataStream = env.addSource( new FlinkKafkaConsumer<String>(\"first\", new SimpleStringSchema(), properties)); dataStream.print(\"kafka\"); env.execute(\"kafka_job\"); } } auto.offset.reset=latest \uff1a \u4ece\u4e0a\u4e00\u4e2a\u6d88\u8d39\u8005\u63d0\u4ea4\u7684offset \u5f00\u59cb\u6d88\u8d39 auto.offset.reset=earliest : \u4ece\u5934\u5f00\u59cb\u6d88\u8d39 \u81ea\u5b9a\u4e49\u6570\u636e\u6e90 package com.matt.apitest.source; import com.matt.apitest.beans.Event; import org.apache.flink.api.common.time.Time; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.source.ParallelSourceFunction; import org.apache.flink.streaming.api.functions.source.SourceFunction; import java.util.Arrays; import java.util.HashMap; import java.util.List; import java.util.Random; /** * \u81ea\u5b9a\u4e49\u6570\u636e\u6e90 * * @author matt * @create 2022-01-16 15:50 */ public class SourceTest4_UDF { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); //env.setParallelism(1); DataStream<Event> dataStream = env.addSource(new ParallelCustomSource()).setParallelism(2); dataStream.print(\"kafka\"); // job name env.execute(\"cu\"); } public static class ParallelCustomSource implements ParallelSourceFunction<Event> { // \u6807\u5fd7\u4f4d \u63a7\u5236\u6570\u636e\u7684\u4ea7\u751f private boolean running = true; /** * \u529f\u80fd\uff1a * * @param ctx 1 * @author matt * @date 2022/1/16 */ @Override public void run(SourceContext<Event> ctx) throws InterruptedException { // \u968f\u673a\u6570\u53d1\u751f\u5668 Random random = new Random(); List<String> userList = Arrays.asList(\"matt\", \"jack\", \"lisi\", \"lb\", \"df\"); List<String> urlList = Arrays.asList(\"/save\", \"/remove\", \"/update\", \"/list\", \"/detail\"); while (running) { for (int i = 0; i < 5; i++) { int randV = random.nextInt(5); ctx.collect(new Event(userList.get(randV), urlList.get(randV), System.currentTimeMillis())); Thread.sleep(1000L); } } } @Override public void cancel() { running = false; } } } \u652f\u6301\u7684\u6570\u636e\u7c7b\u578b 1.\u57fa\u672c\u6570\u636e\u7c7b\u578b Java \u57fa\u672c\u7c7b\u578b\u53ca\u5176\u5305\u88c5\u7c7b\uff0c\u518d\u52a0\u4e0a Void\u3001String\u3001Date\u3001BigDecimal \u548c BigInteger\u3002 2.\u6570\u7ec4\u7c7b\u578b \u5305\u62ec\u57fa\u672c\u7c7b\u578b\u6570\u7ec4(PRIMITIVE_ARRAY)\u548c\u5bf9\u8c61\u6570\u7ec4(OBJECT_ARRAY) 3.\u590d\u5408\u6570\u636e\u7c7b\u578b Java \u5143\u7ec4\u7c7b\u578b(TUPLE):\u8fd9\u662f Flink \u5185\u7f6e\u7684\u5143\u7ec4\u7c7b\u578b\uff0c\u662f Java API \u7684\u4e00\u90e8\u5206\u3002\u6700\u591a25 \u4e2a\u5b57\u6bb5\uff0c\u4e5f\u5c31\u662f\u4ece Tuple0~Tuple25\uff0c\u4e0d\u652f\u6301\u7a7a\u5b57\u6bb5 Scala \u6837\u4f8b\u7c7b\u53ca Scala \u5143\u7ec4:\u4e0d\u652f\u6301\u7a7a\u5b57\u6bb5 \u884c\u7c7b\u578b(ROW):\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5177\u6709\u4efb\u610f\u4e2a\u5b57\u6bb5\u7684\u5143\u7ec4,\u5e76\u652f\u6301\u7a7a\u5b57\u6bb5 POJO:Flink \u81ea\u5b9a\u4e49\u7684\u7c7b\u4f3c\u4e8e Java bean \u6a21\u5f0f\u7684\u7c7b 4.\u8f85\u52a9\u7c7b\u578b Option\u3001Either\u3001List\u3001Map \u7b49 5.\u6cdb\u578b\u7c7b\u578b \u4e0d\u8fc7\u5982\u679c\u6ca1\u6709\u6309\u7167\u4e0a\u9762 POJO \u7c7b\u578b\u7684\u8981\u6c42\u6765\u5b9a\u4e49\uff0c \u5c31\u4f1a\u88ab Flink \u5f53\u4f5c\u6cdb\u578b\u7c7b\u6765\u5904\u7406\u3002Flink \u4f1a\u628a\u6cdb\u578b\u7c7b\u578b\u5f53\u4f5c\u9ed1\u76d2\uff0c\u65e0\u6cd5\u83b7\u53d6\u5b83\u4eec\u5185\u90e8\u7684\u5c5e\u6027;\u5b83 \u4eec\u4e5f\u4e0d\u662f\u7531 Flink \u672c\u8eab\u5e8f\u5217\u5316\u7684\uff0c\u800c\u662f\u7531 Kryo \u5e8f\u5217\u5316\u7684 pojo\u8981\u6c42 \u7c7b\u662f\u516c\u5171\u7684(public)\u548c\u72ec\u7acb\u7684(standalone\uff0c\u4e5f\u5c31\u662f\u8bf4\u6ca1\u6709\u975e\u9759\u6001\u7684\u5185\u90e8\u7c7b); \u7c7b\u6709\u4e00\u4e2a\u516c\u5171\u7684\u65e0\u53c2\u6784\u9020\u65b9\u6cd5; \u7c7b\u4e2d\u7684\u6240\u6709\u5b57\u6bb5\u662fpublic\u4e14\u975efinal\u7684;\u6216\u8005\u6709\u4e00\u4e2a\u516c\u5171\u7684getter\u548csetter\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u9700\u8981\u7b26\u5408 Java bean \u7684\u547d\u540d\u89c4\u8303\u3002 \u7c7b\u578b\u63d0\u793a \u9632\u6b62\u6cdb\u578b\u67e5\u9664 .map(word -> Tuple2.of(word, 1L)) .returns(Types.TUPLE(Types.STRING, Types.LONG)); returns(new TypeHint<Tuple2<Integer, SomeType>>(){}) \u8f6c\u6362\u7b97\u5b50 transform \u57fa\u672c\u8f6c\u6362\u7b97\u5b50 package com.matt.apitest.transform; import org.apache.flink.api.common.functions.FilterFunction; import org.apache.flink.api.common.functions.FlatMapFunction; import org.apache.flink.api.common.functions.MapFunction; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.util.Collector; /** * @author matt * @create 2022-01-16 17:16 * map flatmap filter */ public class Base { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(16); DataStream<String> source = env.readTextFile(\"/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt\"); // 1 map string -> len(string) 1:1 // \u65b9-\u300b\u56ed DataStream<Integer> mapStream = source.map(new MapFunction<String, Integer>() { @Override public Integer map(String s) throws Exception { return s.length(); } }); DataStream<Integer> lMapStream = source.map(data -> data.length()); // flatMap \u6309\u9017\u53f7\u5207\u5206\u5b57\u7aef 1:n DataStream<String> flatMapStream = source.flatMap(new FlatMapFunction<String, String>() { @Override public void flatMap(String s, Collector<String> collector) throws Exception { String[] fields = s.split(\",\"); for (String field : fields) { collector.collect(field); } } }); // 3.filter \u8fc7\u6ee4 \u7b5b\u9009\u67d0\u4e2a\u6570\u636e 1:[0,1] DataStream<String> filterStream = source.filter(new FilterFunction<String>() { @Override public boolean filter(String s) throws Exception { // true \u8981 false \u4e0d\u8981\u8fd9\u4e2a\u6570\u636e return s.startsWith(\"sensor_1\"); } }); mapStream.print(\"map\"); flatMapStream.print(\"flatMap\"); filterStream.print(\"filter\"); // job name env.execute(\"trans-form\"); } } \u805a\u5408\u7b97\u5b50 aggregation \u6309\u952e\u5206\u533a package com.matt.apitest.transform; import com.matt.apitest.beans.Event; import org.apache.flink.api.java.functions.KeySelector; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.datastream.KeyedStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; /** * @author matt * @create 2022-01-17 22:14 */ public class Aggr { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(16); DataStream<Event> stream = env.fromElements(new Event(\"a1\", \"/1\", 1L), new Event(\"a1\", \"/2\", 2L), new Event(\"a2\", \"/1\", 3L), new Event(\"a2\", \"/2\", 2L)); KeyedStream<Event, String> keyedSteam = stream.keyBy(new KeySelector<Event, String>() { @Override public String getKey(Event event) throws Exception { return event.user; } }); keyedSteam.max(\"timestamp\").print(\"1\"); // max \u53ea\u66f4\u65b0\u7edf\u8ba1\u7684\u5b57\u6bb5\uff0c\u5176\u4ed6\u5b57\u6bb5\u90fd\u662f\u7b2c\u4e00\u4e2a\u6570\u636e\u7684\u503c maxBy \u6240\u6709\u5b57\u6bb5\u5747\u66f4\u65b0 stream.keyBy(e -> e.user).maxBy(\"timestamp\") .print(\"maxBy\"); env.execute(); } } stream.keyBy \u5f97\u5230\u7684\u662f\u4e00\u4e2a\u72b6\u6001 \u4e0d\u662f\u4e00\u4e2a\u7b97\u5b50 \u7b80\u5355\u805a\u5408 sum min max minBy: min()\u53ea\u8ba1\u7b97\u6307\u5b9a\u5b57\u6bb5\u7684\u6700\u5c0f\u503c\uff0c\u5176\u4ed6\u5b57\u6bb5\u4f1a\u4fdd\u7559\u6700\u521d\u7b2c\u4e00\u4e2a\u6570\u636e\u7684\u503c;\u800c minBy()\u5219\u4f1a\u8fd4\u56de\u5305\u542b\u5b57\u6bb5\u6700\u5c0f\u503c\u7684\u6574\u6761\u6570\u636e maxBy: \u548cminBy\u7c7b\u4f3c \u89c4\u7ea6\u805a\u5408 \u66f4\u52a0\u901a\u7528\u5316 \u5bf9\u5df2\u6709\u6570\u636e\u4e0d\u65ad\u505a\u89c4\u7ea6 package com.matt.apitest.transform; import com.matt.apitest.beans.Event; import com.matt.apitest.beans.SensorReading; import org.apache.flink.api.common.functions.FlatMapFunction; import org.apache.flink.api.common.functions.MapFunction; import org.apache.flink.api.common.functions.ReduceFunction; import org.apache.flink.api.java.tuple.Tuple; import org.apache.flink.api.java.tuple.Tuple2; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.datastream.KeyedStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.util.Collector; /** * @author matt * @create 2022-01-17 22:48 * \u9ad8\u7ea7\u805a\u5408 */ public class Reduce { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(16); DataStream<Event> stream = env.fromElements(new Event(\"a1\", \"/1\", 1L), new Event(\"a1\", \"/2\", 2L), new Event(\"a2\", \"/3\", 3L), new Event(\"a2\", \"/2\", 3L), new Event(\"a3\", \"/1\", 3L), new Event(\"a2\", \"/3\", 3L), new Event(\"a3\", \"/1\", 3L), new Event(\"a2\", \"/2\", 2L)); // 2. \u7528\u6237\u70b9\u51fb\u6b21\u6570 DataStream<Tuple2<String, Long>> userClickCntStream = stream.map(new MapFunction<Event, Tuple2<String, Long>>() { @Override public Tuple2<String, Long> map(Event event) throws Exception { return Tuple2.of(event.user, 1L); } }).keyBy(d -> d.f0).reduce(new ReduceFunction<Tuple2<String, Long>>() { @Override public Tuple2<String, Long> reduce(Tuple2<String, Long> a, Tuple2<String, Long> b) throws Exception { return Tuple2.of(a.f0, a.f1 + b.f1); } }); // 3.\u5f53\u524d\u6700\u6d3b\u8dc3\u7684\u7528\u6237 userClickCntStream.keyBy(d -> \"xx\").reduce((x, y) -> x.f1 >= y.f1 ? x : y ).print(\"maxActiveUser\"); // job name env.execute(\"reduce\"); } } \u4f46\u662f\u5bf9\u4e8e\u50cf flatMap() \u8fd9\u6837\u7684\u51fd\u6570\uff0c\u5b83\u7684\u51fd\u6570\u7b7e\u540d void flatMap(IN value, Collector out) \u88ab Java \u7f16\u8bd1\u5668\u7f16\u8bd1\u6210\u4e86 void flatMap(IN value, Collector out)\uff0c\u4e5f\u5c31\u662f\u8bf4\u5c06 Collector \u7684\u6cdb \u578b\u4fe1\u606f\u64e6\u9664\u6389\u4e86\u3002\u8fd9\u6837 Flink \u5c31\u65e0\u6cd5\u81ea\u52a8\u63a8\u65ad\u8f93\u51fa\u7684\u7c7b\u578b\u4fe1\u606f\u4e86\u3002 \u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570 \u4e0a\u8ff0\u57fa\u672c\u8f6c\u6362\u7b97\u5b50&\u805a\u5408\u51fd\u6570 \u90fd\u6709\u5bf9\u5e94\u7684\u62bd\u8c61\u7c7b \u53ef\u4ee5\u5199 \u533f\u540d\u533f\u540d\u5185\u90e8\u7c7b or lambda\u8868\u8fbe\u5f0f \u5bcc\u51fd\u6570 \u4ecb\u7ecd map,filter,reduce \u90fd\u6709\u5bf9\u5e94\u7684\u5bcc\u51fd\u6570\u7248\u672c RichMapFunction\u3001RichFilterFunction\u3001 RichReduceFunction \u5bcc\u51fd\u6570\u7c7b\u53ef\u4ee5\u83b7\u53d6\u8fd0\u884c\u73af\u5883\u7684\u4e0a\u4e0b\u6587\uff0c\u5e76\u62e5\u6709\u4e00\u4e9b\u751f\u547d\u5468\u671f\u65b9\u6cd5\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b9e\u73b0 \u66f4\u590d\u6742\u7684\u529f\u80fd\u3002 \u65b9\u6cd5\uff1a open()\u65b9\u6cd5\uff0c\u662fRichFunction\u7684\u521d\u59cb\u5316\u65b9\u6cd5\u3002\u6240\u4ee5\u50cf\u6587\u4ef6 IO \u7684\u521b\u5efa\uff0c\u6570\u636e\u5e93\u8fde\u63a5\u7684\u521b\u5efa\uff0c\u914d\u7f6e\u6587\u4ef6\u7684\u8bfb\u53d6\u7b49\u7b49\u8fd9\u6837\u4e00\u6b21\u6027\u7684\u5de5\u4f5c\uff0c\u90fd\u9002\u5408\u5728 open()\u65b9\u6cd5\u4e2d\u5b8c\u6210\u3002 close()\u65b9\u6cd5\uff0c\u662f\u751f\u547d\u5468\u671f\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u4e00\u822c\u7528\u6765\u505a\u4e00 \u4e9b\u6e05\u7406\u5de5\u4f5c code package com.matt.apitest.transform; import com.matt.apitest.beans.SensorReading; import org.apache.flink.api.common.functions.RichMapFunction; import org.apache.flink.api.java.tuple.Tuple2; import org.apache.flink.configuration.Configuration; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; /** * @author matt * @create 2022-01-24 23:55 */ public class RichFunction { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(4); DataStream<String> inputStream = env.readTextFile(\"/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt\"); DataStream<SensorReading> dataStream = inputStream.map(s -> { String[] fields = s.split(\",\"); return new SensorReading(fields[0], new Long(fields[1]), new Double(fields[2])); }); DataStream<Tuple2<String, Integer>> resStream = dataStream.map( new MyMapper() ); resStream.print(); // job name env.execute(\"trans-form\"); } public static class MyMapper extends RichMapFunction<SensorReading, Tuple2<String, Integer>> { @Override public Tuple2<String, Integer> map(SensorReading v) throws Exception { return new Tuple2<>(v.getId(), getRuntimeContext().getIndexOfThisSubtask()); } public MyMapper() { super(); } @Override public void open(Configuration parameters) throws Exception { System.out.println(\"init....\"); } @Override public void close() throws Exception { System.out.println(\"clear...\"); } } } \u7269\u7406\u5206\u533a \u5206\u533a\u79cd\u7c7b 1.\u968f\u673a\u5206\u533a shuffle \u628a\u6d41\u4e2d\u7684\u6570\u636e\u968f\u673a\u6253\u4e71 \u5747\u5300\u4f20\u9012\u5230\u4e0b\u6e38\u5206\u533a 2.\u8f6e\u8be2\u5206\u533a round-robin \u6bd4\u5982\u6765\u4e86 a,b,c,d,e,f 6\u6761\u6570\u636e \u6709\u5206\u533a p1, p2, p3 \u5219 a,d \u8fdb\u5230p1 b,e \u8fdb\u5230p2 c,f\u8fdb\u5230p3 3.\u91cd\u7f29\u653e\u5206\u533a rescale \u6bd4\u5982\u4e0a\u6e38\u67092\u5206\u533app1,pp2 \u4e0b\u6e38\u67096\u4e2a\u5206\u533acp1, cp2 ...cp6 pp1 \u4f1a\u53d1\u5230cp1-cp3 \u7136\u540e\u518dcp1-cp3 \u505a\u8f6e\u8be2\u5206\u533a pp2 -> cp4-cp6 4.\u5e7f\u64ad broadcast \u5c06\u6570\u636e\u5e7f\u64ad\u5230\u4e0b\u6e38\u6240\u6709\u5206\u533a\u4e2d 5.\u5168\u5c40\u5206\u533a global \u5c06\u4e0a\u6e38\u591a\u4e2a\u5206\u533a \u4f20\u9012\u5230\u4e0b\u6e381\u4e2a\u5206\u533a\uff0c \u628a\u5e76\u884c\u5ea6\u8bbe\u7f6e\u4e3a1 6.\u81ea\u5b9a\u4e49\u5206\u533a package com.matt.apitest.transform; import com.matt.apitest.beans.Event; import org.apache.flink.api.common.functions.MapFunction; import org.apache.flink.api.common.functions.Partitioner; import org.apache.flink.api.common.functions.ReduceFunction; import org.apache.flink.api.java.functions.KeySelector; import org.apache.flink.api.java.tuple.Tuple2; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.source.ParallelSourceFunction; import org.apache.flink.streaming.api.functions.source.RichParallelSourceFunction; public class Partition { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(16); DataStream<Event> stream = env.fromElements(new Event(\"a1\", \"/1\", 1L), new Event(\"a1\", \"/2\", 2L), new Event(\"a2\", \"/3\", 3L), new Event(\"a2\", \"/2\", 3L), new Event(\"a3\", \"/1\", 3L), new Event(\"a2\", \"/3\", 3L), new Event(\"a3\", \"/1\", 3L), new Event(\"a2\", \"/2\", 2L)); // 2.1 keyBy \u903b\u8f91\u5206\u533a shuffle \u968f\u673a\u5206\u533a //stream.shuffle().print().setParallelism(4); // 2.2\u8f6e\u8be2\u5206\u533a 2 3 1 4 # 2 3 1 4 //stream.rebalance().print(\"rebalance\").setParallelism(4); // 2.3 rescale \u91cd\u7f29\u653e\u5206\u533a \u5206\u7ec4\uff0c\u7ec4\u5185\u8f6e\u8be2 \u4e0a\u6e38\u5206\u533a2 2 \u4e2a\u5206\u533a\u5185\u5185\u90e8\u8f6e\u8be2 DataStream<Integer> rescaleStream = env.addSource(new RichParallelSourceFunction<Integer>() { @Override public void run(SourceContext<Integer> ctx) throws Exception { for (int i = 1; i <= 8; i++) { if (i % 2 == getRuntimeContext().getIndexOfThisSubtask()) { ctx.collect(i); } } } @Override public void cancel() { } }).setParallelism(2); // \u4e0a\u6e38\u5206\u533aa \u53d1\u5230\u4e0b\u6e38a1 a2 a1,a2 \u8f6e\u8be2 b -> b1, b2 b1,b2\u6240\u6709\u5206\u533a\u8f6e\u8be2 // 3,4 \u5747\u662f\u5947\u4e66 1,2 \u5747\u662f\u5076\u6570 //rescaleStream.rescale().print(\"rescale\").setParallelism(4); // 2.4 \u5e7f\u64ad \u4e00\u4efd\u6570\u636e\u5411\u6bcf\u4e2a\u5206\u533a\u90fd\u53d1\u9001 //stream.broadcast().print(\"broadcast\").setParallelism(4); //2.5 \u5168\u5c40\u5206\u533a \u7b49\u4ef7\u5e76\u884c\u5ea6\u4e3a1 //stream.global().print(\"global\").setParallelism(4); // 2.6 \u81ea\u5b9a\u4e49\u91cd\u5206\u533a env.fromElements(1, 2, 3, 4, 5).partitionCustom(new Partitioner<Integer>() { @Override public int partition(Integer k, int cnt) { return k % 2; } }, new KeySelector<Integer, Integer>() { @Override public Integer getKey(Integer v) throws Exception { return v; } }).print(\"custom\").setParallelism(4); // job name env.execute(\"partition\"); } } \u8f93\u51fa\u7b97\u5b50 \u6587\u4ef6 \u884c\u7f16\u7801:StreamingFileSink.forRowFormat(basePath\uff0crowEncoder)\u3002 \u8def\u5f84&\u6570\u636e\u7f16\u7801\u683c\u5f0f \u6279\u91cf\u7f16\u7801:StreamingFileSink.forBulkFormat(basePath\uff0cbulkWriterFactory)\u3002 package com.matt.apitest.sink; import com.matt.apitest.beans.Event; import org.apache.flink.api.common.serialization.SimpleStringEncoder; import org.apache.flink.core.fs.Path; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.sink.filesystem.StreamingFileSink; import org.apache.flink.streaming.api.functions.sink.filesystem.rollingpolicies.DefaultRollingPolicy; import java.util.concurrent.TimeUnit; public class Sink2File { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); DataStream<Event> stream = env.fromElements(new Event(\"a1\", \"/1\", 1L), new Event(\"a1\", \"/2\", 2L), new Event(\"a2\", \"/3\", 3L), new Event(\"a2\", \"/2\", 3L), new Event(\"a3\", \"/1\", 3L), new Event(\"a2\", \"/3\", 3L), new Event(\"a3\", \"/1\", 3L), new Event(\"a2\", \"/2\", 2L)); StreamingFileSink<String> streamingFileSink = StreamingFileSink.<String>forRowFormat(new Path(\"./output\"), new SimpleStringEncoder<>(\"UTF-8\")) // \u6eda\u52a8\u7b56\u7565 .withRollingPolicy(DefaultRollingPolicy.builder() .withMaxPartSize(1024 * 1024 * 1024) // ms .withRolloverInterval(TimeUnit.MINUTES.toMillis(15)) // \u6ca1\u6709\u6570\u636e\u6765 .withInactivityInterval(TimeUnit.MINUTES.toMillis(5)) .build()) .build(); stream.map(data -> data.toString()).addSink(streamingFileSink); env.execute(); } } \u5206\u533a\u6587\u4ef6 \u81f3\u5c11\u5305\u542b15\u5206\u949f\u7684\u6570\u636e \u6700\u8fd15\u5206\u949f\u6ca1\u6709\u6536\u5230\u65b0\u7684\u6570\u636e \u6587\u4ef6\u5927\u5c0f\u5df2\u8fbe\u5230 1 GB kafka FlinkKafkaProducer \u7ee7\u627f\u4e86\u62bd\u8c61\u7c7b TwoPhaseCommitSinkFunction\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b9e\u73b0\u4e86\u201c\u4e24\u9636\u6bb5\u63d0\u4ea4\u201d\u7684 RichSinkFunction\u3002\u4e24\u9636\u6bb5\u63d0\u4ea4\u63d0\u4f9b\u4e86 Flink \u5411 Kafka \u5199\u5165\u6570\u636e\u7684\u4e8b\u52a1\u6027\u4fdd\u8bc1\uff0c\u80fd\u591f\u771f\u6b63\u505a\u5230\u7cbe\u786e\u4e00\u6b21(exactly once)\u7684\u72b6\u6001\u4e00\u81f4\u6027 package com.matt.apitest.sink; import com.matt.apitest.beans.Event; import org.apache.flink.api.common.functions.MapFunction; import org.apache.flink.api.common.serialization.SimpleStringSchema; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumer; import org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer; import java.util.Properties; /** * @author matt * @create 2022-01-25 23:33 */ public class Sink2Kafka { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); Properties properties = new Properties(); properties.setProperty(\"bootstrap.servers\", \"localhost:9092\"); properties.setProperty(\"group.id\", \"consumer-group\"); properties.setProperty(\"key.deserializer\", \"org.apache.kafka.common.serialization.StringDeserializer\"); properties.setProperty(\"value.deserializer\", \"org.apache.kafka.common.serialization.StringDeserializer\"); properties.setProperty(\"auto.offset.reset\", \"latest\"); DataStream<String> kafkaStream = env.addSource( new FlinkKafkaConsumer<String>(\"first\", new SimpleStringSchema(), properties)); // SingleOutputStreamOperator<String> res = kafkaStream.map(new MapFunction<String, String>() { @Override public String map(String s) throws Exception { String[] fileds = s.split(\",\"); return new Event(fileds[0], fileds[1], Long.valueOf(fileds[2])).toString(); } }); res.addSink(new FlinkKafkaProducer<String>(\"localhost:9092\", \"test\", new SimpleStringSchema())); // job name env.execute(\"SINK_KAFKA\"); } } redis \u5bfc\u5165\u4f9d\u8d56 <dependency> <groupId>org.apache.bahir</groupId> <artifactId>flink-connector-redis_2.11</artifactId> <version>1.0</version> </dependency> package com.matt.apitest.sink; import com.matt.apitest.beans.Event; import com.matt.apitest.beans.SensorReading; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.connectors.redis.RedisSink; import org.apache.flink.streaming.connectors.redis.common.config.FlinkJedisPoolConfig; import org.apache.flink.streaming.connectors.redis.common.mapper.RedisCommand; import org.apache.flink.streaming.connectors.redis.common.mapper.RedisCommandDescription; import org.apache.flink.streaming.connectors.redis.common.mapper.RedisMapper; /** * @author matt * @create 2022-01-25 23:57 */ public class Sink2Redis { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); DataStream<Event> dataStream = env.fromElements( new Event(\"a1\", \"1\", 1L), new Event(\"a2\", \"2\", 1L), new Event(\"a3\", \"3\", 1L), new Event(\"a4\", \"4\", 1L)); FlinkJedisPoolConfig config = new FlinkJedisPoolConfig.Builder() .setHost(\"127.0.0.1\") .setPort(6379) .build(); dataStream.addSink(new RedisSink<>(config, new MyRedisMapper())); env.execute(\"redis\"); } public static class MyRedisMapper implements RedisMapper<Event> { // \u4fdd\u5b58\u5230 redis \u7684\u547d\u4ee4\uff0c\u5b58\u6210\u54c8\u5e0c\u8868 public RedisCommandDescription getCommandDescription() { return new RedisCommandDescription(RedisCommand.HSET, \"test\"); } // key public String getKeyFromData(Event data) { return data.user; } // v public String getValueFromData(Event data) { return data.url; } } } redisSink \u63d0\u4f9b2\u4e2a\u53c2\u6570 jedis\u7684\u8fde\u63a5\u914d\u7f6e \u5b9e\u73b0RedisMapper, \u63d0\u4f9badd, getK getV \u5b9e\u73b0 es flink1.13 \u652f\u6301es7 \u6dfb\u52a0\u4f9d\u8d56 <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-elasticsearch7_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> package com.matt.apitest.sink; import com.matt.apitest.beans.Event; import com.matt.apitest.beans.SensorReading; import org.apache.flink.api.common.functions.RuntimeContext; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.connectors.elasticsearch.ElasticsearchSinkFunction; import org.apache.flink.streaming.connectors.elasticsearch.RequestIndexer; import org.apache.flink.streaming.connectors.elasticsearch6.ElasticsearchSink; import org.apache.http.HttpHost; import org.elasticsearch.action.index.IndexRequest; import org.elasticsearch.client.Requests; import java.util.ArrayList; import java.util.HashMap; import java.util.Objects; /** * @author matt * @create 2022-01-26 0:21 */ public class Sink2ES { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); DataStream<Event> dataStream = env.fromElements( new Event(\"a1\", \"1\", 1L), new Event(\"a2\", \"2\", 1L), new Event(\"a3\", \"3\", 1L), new Event(\"a4\", \"4\", 1L)); ArrayList<HttpHost> httpHosts = new ArrayList<>(); httpHosts.add(new HttpHost(\"localhost\", 9200)); dataStream.addSink(new ElasticsearchSink.Builder<Event>(httpHosts,new MyEsSinkFunction()).build()); // job name env.execute(\"sink_es\"); } public static class MyEsSinkFunction implements ElasticsearchSinkFunction<Event> { @Override public void process(Event element, RuntimeContext ctx, RequestIndexer indexer) { HashMap<String, String> dataSource = new HashMap<>(); dataSource.put(\"user\", element.user); dataSource.put(\"url\", element.url); dataSource.put(\"ts\", String.valueOf(element.timestamp)); IndexRequest indexRequest = Requests.indexRequest() .index(\"tt4\") .type(\"tt\") .source(dataSource); indexer.add(indexRequest); } } } mysql <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --> <!--\u7248\u672c\u592a\u4f4e\u53ef\u80fd\u4f1a\u5931\u8d25--> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <version>8.0.28</version> </dependency> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-jdbc_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> package com.matt.apitest.sink; import com.matt.apitest.beans.Event; import com.matt.apitest.beans.SensorReading; import org.apache.flink.configuration.Configuration; import org.apache.flink.connector.jdbc.JdbcConnectionOptions; import org.apache.flink.connector.jdbc.JdbcExecutionOptions; import org.apache.flink.connector.jdbc.JdbcSink; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.sink.RichSinkFunction; import java.sql.DriverManager; import java.sql.Connection; import java.sql.PreparedStatement; /** * @author matt * @create 2022-01-26 1:41 */ public class Sink2MySQL { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); DataStream<Event> dataStream = env.fromElements( new Event(\"a1\", \"1\", 1L), new Event(\"a2\", \"2\", 1L), new Event(\"a3\", \"3\", 1L), new Event(\"a4\", \"4\", 1L)); String sql = \"INSERT INTO `event` (user, url) VALUES(?, ?)\"; dataStream.addSink(JdbcSink.sink(sql, ((statement, event) -> { statement.setString(1, event.user); statement.setString(2, event.url); }), //JdbcExecutionOptions.builder() // .withBatchSize(1000) // .withBatchIntervalMs(200) // .withMaxRetries(5) // .build(), new JdbcConnectionOptions.JdbcConnectionOptionsBuilder() .withUrl(\"jdbc:mysql://localhost:3306/stu_go?characterEncoding=utf8&useSSL=false\") .withDriverName(\"com.mysql.cj.jdbc.Driver\") .withUsername(\"root\") .withPassword(\"rootroot\") .build() )); // job name env.execute(); } public static class MyJdbcSink extends RichSinkFunction<SensorReading> { Connection conn = null; PreparedStatement insertStmt = null; PreparedStatement updateStmt = null; // open \u4e3b\u8981\u662f\u521b\u5efa\u8fde\u63a5 @Override public void open(Configuration parameters) throws Exception { conn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/stu_flink\", \"root\", \"root\"); // \u521b\u5efa\u9884\u7f16\u8bd1\u5668\uff0c\u6709\u5360\u4f4d\u7b26\uff0c\u53ef\u4f20\u5165\u53c2\u6570 insertStmt = conn.prepareStatement(\"INSERT INTO sensor_temp (id, temp) VALUES ( ?, ?)\"); updateStmt = conn.prepareStatement(\"UPDATE sensor_temp SET temp = ? WHERE id = ? \"); } // \u8c03\u7528\u8fde\u63a5\uff0c\u6267\u884c sql @Override public void invoke(SensorReading value, Context context) throws Exception { // \u6267\u884c\u66f4\u65b0\u8bed\u53e5\uff0c\u6ce8\u610f\u4e0d\u8981\u7559 super updateStmt.setDouble(1, value.getTemperatrue()); updateStmt.setString(2, value.getId()); updateStmt.execute(); // \u5982\u679c\u521a\u624d update \u8bed\u53e5\u6ca1\u6709\u66f4\u65b0\uff0c\u90a3\u4e48\u63d2\u5165 if (updateStmt.getUpdateCount() == 0) { insertStmt.setString(1, value.getId()); insertStmt.setDouble(2, value.getTemperatrue()); insertStmt.execute(); } } @Override public void close() throws Exception { insertStmt.close(); updateStmt.close(); conn.close(); } } }","title":"datastreamAPI"},{"location":"bigdata/flink/datastreamAPI/#_1","text":"","title":"\u6982\u8ff0"},{"location":"bigdata/flink/datastreamAPI/#_2","text":"\u83b7\u53d6\u6267\u884c\u73af\u5883get environment \u8bfb\u53d6\u6570\u636e\u6e90 source \u6570\u636e\u7684\u8f6c\u6362 tansfrom \u6570\u636e\u7684\u8f93\u51fa sink \u7a0b\u5e8f\u6267\u884c execute","title":"\u6d41\u7a0b"},{"location":"bigdata/flink/datastreamAPI/#_3","text":"","title":"\u6267\u884c\u73af\u5883"},{"location":"bigdata/flink/datastreamAPI/#_4","text":"1.\u53ea\u80fd\u5224\u65ad \u5982\u679c\u662f\u672c\u5730\u5219\u4f7f\u7528\u672c\u5730 \u96c6\u7fa4\u5219\u4f7f\u7528\u96c6\u7fa4\u73af\u5883 StreamExecutionEnvironment env =StreamExecutionEnvironment.getExecutionEnvironment(); 2.\u6307\u5b9a createLocalEnvironment \u6307\u5b9a\u672c\u5730\u73af\u5883\uff0c \u9ed8\u8ba4\u5e76\u884c\u5ea6cpu\u6838\u6570 StreamExecutionEnvironment localEnv = StreamExecutionEnvironment.createLocalEnvironment(); createRemoteEnvironment \u4f7f\u7528\u96c6\u7fa4\u6267\u884c\u73af\u5883 StreamExecutionEnvironment remoteEnv = StreamExecutionEnvironment.createRemoteEnvironment(\"host\", // JobManager \u4e3b\u673a\u540d 1234, // JobManager \u8fdb\u7a0b\u7aef\u53e3\u53f7 \"path/to/jarFile.jar\" // \u63d0\u4ea4\u7ed9 JobManager \u7684 JAR \u5305 );","title":"\u521b\u5efa\u6267\u884c\u73af\u5883"},{"location":"bigdata/flink/datastreamAPI/#execution-mode","text":"// \u6279\u5904\u7406\u73af\u5883 ExecutionEnvironment batchEnv = ExecutionEnvironment.getExecutionEnvironment(); // \u6d41\u5904\u7406\u73af\u5883 StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); 1.12 \u6279\u6d41\u7edf\u4e00, \u81ea\u5b9a\u4e49\u8bbe\u7f6e\u5373\u53ef\u6279\u6d41\u5207\u6362","title":"\u6267\u884c\u6a21\u5f0f execution mode"},{"location":"bigdata/flink/datastreamAPI/#_5","text":"\u6d41\u6267\u884c\u6a21\u5f0f(STREAMING)\uff0c\u9ed8\u8ba4\u4f7f\u7528\u6d41\u6a21\u5f0f \u6279\u6267\u884c\u6a21\u5f0f(BATCH)\uff0c \u4e0d\u4f1a\u6301\u7eed\u8ba1\u7b97\u7684\u6709\u754c\u6570\u636e \u81ea\u52a8\u6a21\u5f0f\uff0c automatic , \u7a0b\u5e8f\u6839\u636e\u8f93\u5165\u6570\u636e\u7684\u6570\u636e\u6e90\u662f\u5426\u6709\u754c\uff0c \u6765\u81ea\u52a8\u9009\u62e9\u6267\u884c\u6a21\u5f0f","title":"\u6267\u884c\u6a21\u5f0f\u5206\u7c7b"},{"location":"bigdata/flink/datastreamAPI/#_6","text":"Batch\u6a21\u5f0f\u914d\u7f6e bin/flink run -Dexecution.runtime-mode=BATCH ... StreamExecutionEnvironment env =StreamExecutionEnvironment.getExecutionEnvironment(); env.setRuntimeMode(RuntimeExecutionMode.BATCH);","title":"\u6a21\u5f0f\u914d\u7f6e"},{"location":"bigdata/flink/datastreamAPI/#_7","text":"env.execute();","title":"\u89e6\u53d1\u6267\u884c"},{"location":"bigdata/flink/datastreamAPI/#_8","text":"\u4f7f\u7528nc \u83b7\u53d6\u6570\u636e\u6e90 \u5e76\u884c\u5ea6\u8bbe\u7f6e\u4e3a1 DataStream<String> stream = env.socketTextStream(\"localhost\", 7777);","title":"\u6e90\u7b97\u5b50"},{"location":"bigdata/flink/datastreamAPI/#_9","text":"\u6709\u4e00\u4e2a\u5982\u4e0b\u7684\u5b9e\u4f53\u7c7b package com.matt.apitest.model; import java.sql.Timestamp; public class UrlCntBO { public String url; public Long cnt; public Long winStart; public Long winEnd; public UrlCntBO(String url, Long cnt, Long winStart, Long winEnd) { this.url = url; this.cnt = cnt; this.winStart = winStart; this.winEnd = winEnd; } public UrlCntBO() { } @Override public String toString() { return \"UrlCntBO{\" + \"url='\" + url + '\\'' + \", cnt=\" + cnt + \", winStart=\" + new Timestamp(winStart) + \", winEnd=\" + new Timestamp(winEnd) + '}'; } } \u7c7b\u662f\u516c\u6709\u7684 public \u6709\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5 \u6240\u6709\u5c5e\u6027\u662f\u516c\u6709\u7684 \u6216\u8005\u63d0\u4f9bget,set \u65b9\u6cd5 \u6240\u6709\u5c5e\u6027\u53ef\u5e8f\u5217\u5316 \u63d0\u4f9b\u4e00\u4e2a toString \u65b9\u6cd5 \u53ef\u9009","title":"\u524d\u63d0"},{"location":"bigdata/flink/datastreamAPI/#_10","text":"package com.matt.apitest.source; import com.matt.apitest.beans.Event; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import java.util.Arrays; /** * @author matt * @create 2022-01-16 14:36 */ public class SourceTest1_Collection { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(5); DataStream<Event> events = env.fromCollection(Arrays.asList( new Event(\"m1\", \"a1\", 1672472280000L), new Event(\"m2\", \"a2\", 1672472279514L) )); events.print(\"collection\"); env.execute(\"my\"); } } \u4e5f\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5 DataStreamSource<Event> stream2 = env.fromElements( new Event(\"Mary\", \"./home\", 1000L), new Event(\"Bob\", \"./cart\", 2000L) );","title":"\u96c6\u5408"},{"location":"bigdata/flink/datastreamAPI/#_11","text":"package com.matt.apitest.source; import com.matt.apitest.beans.SensorReading; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import java.util.Arrays; /** * @author matt * @create 2022-01-16 14:54 */ public class SourceTest2_File { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(10); // /Users/matt/workspace/java/stu/stu-flink/src/main/resources DataStream<String> dataStream = env.readTextFile(\"/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt\"); dataStream.print(\"file\"); // job name env.execute(\"f_source\"); } } \u5982\u679c\u662fhdfs \u53ef\u6dfb\u52a0\u5982\u4e0b\u4f9d\u8d56 <dependency> <groupId>org.apache.hadoop</groupId> <artifactId>hadoop-client</artifactId> <version>2.7.5</version> <scope>provided</scope> </dependency>","title":"\u6587\u4ef6"},{"location":"bigdata/flink/datastreamAPI/#socket","text":"\u9700\u8981\u5c06\u5e76\u884c\u5ea6\u8bbe\u7f6e\u4e3a1 DataStream<String> stream = env.socketTextStream(\"localhost\", 7777);","title":"socket"},{"location":"bigdata/flink/datastreamAPI/#kafka","text":"\u6dfb\u52a0\u4f9d\u8d56 kafka\u7248\u672c>=0.10.0 <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-kafka_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> package com.matt.apitest.source; import org.apache.flink.api.common.serialization.SimpleStringSchema; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumer; import java.util.Properties; /** * @author matt * @create 2022-01-16 15:05 */ public class SourceTest3_Kafka { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); Properties properties = new Properties(); properties.setProperty(\"bootstrap.servers\", \"localhost:9092\"); properties.setProperty(\"group.id\", \"consumer-group\"); properties.setProperty(\"key.deserializer\", \"org.apache.kafka.common.serialization.StringDeserializer\"); properties.setProperty(\"value.deserializer\", \"org.apache.kafka.common.serialization.StringDeserializer\"); // properties.setProperty(\"auto.offset.reset\", \"latest\"); DataStream<String> dataStream = env.addSource( new FlinkKafkaConsumer<String>(\"first\", new SimpleStringSchema(), properties)); dataStream.print(\"kafka\"); env.execute(\"kafka_job\"); } } auto.offset.reset=latest \uff1a \u4ece\u4e0a\u4e00\u4e2a\u6d88\u8d39\u8005\u63d0\u4ea4\u7684offset \u5f00\u59cb\u6d88\u8d39 auto.offset.reset=earliest : \u4ece\u5934\u5f00\u59cb\u6d88\u8d39","title":"kafka"},{"location":"bigdata/flink/datastreamAPI/#_12","text":"package com.matt.apitest.source; import com.matt.apitest.beans.Event; import org.apache.flink.api.common.time.Time; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.source.ParallelSourceFunction; import org.apache.flink.streaming.api.functions.source.SourceFunction; import java.util.Arrays; import java.util.HashMap; import java.util.List; import java.util.Random; /** * \u81ea\u5b9a\u4e49\u6570\u636e\u6e90 * * @author matt * @create 2022-01-16 15:50 */ public class SourceTest4_UDF { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); //env.setParallelism(1); DataStream<Event> dataStream = env.addSource(new ParallelCustomSource()).setParallelism(2); dataStream.print(\"kafka\"); // job name env.execute(\"cu\"); } public static class ParallelCustomSource implements ParallelSourceFunction<Event> { // \u6807\u5fd7\u4f4d \u63a7\u5236\u6570\u636e\u7684\u4ea7\u751f private boolean running = true; /** * \u529f\u80fd\uff1a * * @param ctx 1 * @author matt * @date 2022/1/16 */ @Override public void run(SourceContext<Event> ctx) throws InterruptedException { // \u968f\u673a\u6570\u53d1\u751f\u5668 Random random = new Random(); List<String> userList = Arrays.asList(\"matt\", \"jack\", \"lisi\", \"lb\", \"df\"); List<String> urlList = Arrays.asList(\"/save\", \"/remove\", \"/update\", \"/list\", \"/detail\"); while (running) { for (int i = 0; i < 5; i++) { int randV = random.nextInt(5); ctx.collect(new Event(userList.get(randV), urlList.get(randV), System.currentTimeMillis())); Thread.sleep(1000L); } } } @Override public void cancel() { running = false; } } }","title":"\u81ea\u5b9a\u4e49\u6570\u636e\u6e90"},{"location":"bigdata/flink/datastreamAPI/#_13","text":"","title":"\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b"},{"location":"bigdata/flink/datastreamAPI/#1","text":"Java \u57fa\u672c\u7c7b\u578b\u53ca\u5176\u5305\u88c5\u7c7b\uff0c\u518d\u52a0\u4e0a Void\u3001String\u3001Date\u3001BigDecimal \u548c BigInteger\u3002","title":"1.\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"bigdata/flink/datastreamAPI/#2","text":"\u5305\u62ec\u57fa\u672c\u7c7b\u578b\u6570\u7ec4(PRIMITIVE_ARRAY)\u548c\u5bf9\u8c61\u6570\u7ec4(OBJECT_ARRAY)","title":"2.\u6570\u7ec4\u7c7b\u578b"},{"location":"bigdata/flink/datastreamAPI/#3","text":"Java \u5143\u7ec4\u7c7b\u578b(TUPLE):\u8fd9\u662f Flink \u5185\u7f6e\u7684\u5143\u7ec4\u7c7b\u578b\uff0c\u662f Java API \u7684\u4e00\u90e8\u5206\u3002\u6700\u591a25 \u4e2a\u5b57\u6bb5\uff0c\u4e5f\u5c31\u662f\u4ece Tuple0~Tuple25\uff0c\u4e0d\u652f\u6301\u7a7a\u5b57\u6bb5 Scala \u6837\u4f8b\u7c7b\u53ca Scala \u5143\u7ec4:\u4e0d\u652f\u6301\u7a7a\u5b57\u6bb5 \u884c\u7c7b\u578b(ROW):\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5177\u6709\u4efb\u610f\u4e2a\u5b57\u6bb5\u7684\u5143\u7ec4,\u5e76\u652f\u6301\u7a7a\u5b57\u6bb5 POJO:Flink \u81ea\u5b9a\u4e49\u7684\u7c7b\u4f3c\u4e8e Java bean \u6a21\u5f0f\u7684\u7c7b","title":"3.\u590d\u5408\u6570\u636e\u7c7b\u578b"},{"location":"bigdata/flink/datastreamAPI/#4","text":"Option\u3001Either\u3001List\u3001Map \u7b49","title":"4.\u8f85\u52a9\u7c7b\u578b"},{"location":"bigdata/flink/datastreamAPI/#5","text":"\u4e0d\u8fc7\u5982\u679c\u6ca1\u6709\u6309\u7167\u4e0a\u9762 POJO \u7c7b\u578b\u7684\u8981\u6c42\u6765\u5b9a\u4e49\uff0c \u5c31\u4f1a\u88ab Flink \u5f53\u4f5c\u6cdb\u578b\u7c7b\u6765\u5904\u7406\u3002Flink \u4f1a\u628a\u6cdb\u578b\u7c7b\u578b\u5f53\u4f5c\u9ed1\u76d2\uff0c\u65e0\u6cd5\u83b7\u53d6\u5b83\u4eec\u5185\u90e8\u7684\u5c5e\u6027;\u5b83 \u4eec\u4e5f\u4e0d\u662f\u7531 Flink \u672c\u8eab\u5e8f\u5217\u5316\u7684\uff0c\u800c\u662f\u7531 Kryo \u5e8f\u5217\u5316\u7684 pojo\u8981\u6c42 \u7c7b\u662f\u516c\u5171\u7684(public)\u548c\u72ec\u7acb\u7684(standalone\uff0c\u4e5f\u5c31\u662f\u8bf4\u6ca1\u6709\u975e\u9759\u6001\u7684\u5185\u90e8\u7c7b); \u7c7b\u6709\u4e00\u4e2a\u516c\u5171\u7684\u65e0\u53c2\u6784\u9020\u65b9\u6cd5; \u7c7b\u4e2d\u7684\u6240\u6709\u5b57\u6bb5\u662fpublic\u4e14\u975efinal\u7684;\u6216\u8005\u6709\u4e00\u4e2a\u516c\u5171\u7684getter\u548csetter\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u9700\u8981\u7b26\u5408 Java bean \u7684\u547d\u540d\u89c4\u8303\u3002 \u7c7b\u578b\u63d0\u793a \u9632\u6b62\u6cdb\u578b\u67e5\u9664 .map(word -> Tuple2.of(word, 1L)) .returns(Types.TUPLE(Types.STRING, Types.LONG)); returns(new TypeHint<Tuple2<Integer, SomeType>>(){})","title":"5.\u6cdb\u578b\u7c7b\u578b"},{"location":"bigdata/flink/datastreamAPI/#transform","text":"","title":"\u8f6c\u6362\u7b97\u5b50 transform"},{"location":"bigdata/flink/datastreamAPI/#_14","text":"package com.matt.apitest.transform; import org.apache.flink.api.common.functions.FilterFunction; import org.apache.flink.api.common.functions.FlatMapFunction; import org.apache.flink.api.common.functions.MapFunction; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.util.Collector; /** * @author matt * @create 2022-01-16 17:16 * map flatmap filter */ public class Base { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(16); DataStream<String> source = env.readTextFile(\"/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt\"); // 1 map string -> len(string) 1:1 // \u65b9-\u300b\u56ed DataStream<Integer> mapStream = source.map(new MapFunction<String, Integer>() { @Override public Integer map(String s) throws Exception { return s.length(); } }); DataStream<Integer> lMapStream = source.map(data -> data.length()); // flatMap \u6309\u9017\u53f7\u5207\u5206\u5b57\u7aef 1:n DataStream<String> flatMapStream = source.flatMap(new FlatMapFunction<String, String>() { @Override public void flatMap(String s, Collector<String> collector) throws Exception { String[] fields = s.split(\",\"); for (String field : fields) { collector.collect(field); } } }); // 3.filter \u8fc7\u6ee4 \u7b5b\u9009\u67d0\u4e2a\u6570\u636e 1:[0,1] DataStream<String> filterStream = source.filter(new FilterFunction<String>() { @Override public boolean filter(String s) throws Exception { // true \u8981 false \u4e0d\u8981\u8fd9\u4e2a\u6570\u636e return s.startsWith(\"sensor_1\"); } }); mapStream.print(\"map\"); flatMapStream.print(\"flatMap\"); filterStream.print(\"filter\"); // job name env.execute(\"trans-form\"); } }","title":"\u57fa\u672c\u8f6c\u6362\u7b97\u5b50"},{"location":"bigdata/flink/datastreamAPI/#aggregation","text":"","title":"\u805a\u5408\u7b97\u5b50 aggregation"},{"location":"bigdata/flink/datastreamAPI/#_15","text":"package com.matt.apitest.transform; import com.matt.apitest.beans.Event; import org.apache.flink.api.java.functions.KeySelector; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.datastream.KeyedStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; /** * @author matt * @create 2022-01-17 22:14 */ public class Aggr { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(16); DataStream<Event> stream = env.fromElements(new Event(\"a1\", \"/1\", 1L), new Event(\"a1\", \"/2\", 2L), new Event(\"a2\", \"/1\", 3L), new Event(\"a2\", \"/2\", 2L)); KeyedStream<Event, String> keyedSteam = stream.keyBy(new KeySelector<Event, String>() { @Override public String getKey(Event event) throws Exception { return event.user; } }); keyedSteam.max(\"timestamp\").print(\"1\"); // max \u53ea\u66f4\u65b0\u7edf\u8ba1\u7684\u5b57\u6bb5\uff0c\u5176\u4ed6\u5b57\u6bb5\u90fd\u662f\u7b2c\u4e00\u4e2a\u6570\u636e\u7684\u503c maxBy \u6240\u6709\u5b57\u6bb5\u5747\u66f4\u65b0 stream.keyBy(e -> e.user).maxBy(\"timestamp\") .print(\"maxBy\"); env.execute(); } } stream.keyBy \u5f97\u5230\u7684\u662f\u4e00\u4e2a\u72b6\u6001 \u4e0d\u662f\u4e00\u4e2a\u7b97\u5b50","title":"\u6309\u952e\u5206\u533a"},{"location":"bigdata/flink/datastreamAPI/#_16","text":"sum min max minBy: min()\u53ea\u8ba1\u7b97\u6307\u5b9a\u5b57\u6bb5\u7684\u6700\u5c0f\u503c\uff0c\u5176\u4ed6\u5b57\u6bb5\u4f1a\u4fdd\u7559\u6700\u521d\u7b2c\u4e00\u4e2a\u6570\u636e\u7684\u503c;\u800c minBy()\u5219\u4f1a\u8fd4\u56de\u5305\u542b\u5b57\u6bb5\u6700\u5c0f\u503c\u7684\u6574\u6761\u6570\u636e maxBy: \u548cminBy\u7c7b\u4f3c","title":"\u7b80\u5355\u805a\u5408"},{"location":"bigdata/flink/datastreamAPI/#_17","text":"\u66f4\u52a0\u901a\u7528\u5316 \u5bf9\u5df2\u6709\u6570\u636e\u4e0d\u65ad\u505a\u89c4\u7ea6 package com.matt.apitest.transform; import com.matt.apitest.beans.Event; import com.matt.apitest.beans.SensorReading; import org.apache.flink.api.common.functions.FlatMapFunction; import org.apache.flink.api.common.functions.MapFunction; import org.apache.flink.api.common.functions.ReduceFunction; import org.apache.flink.api.java.tuple.Tuple; import org.apache.flink.api.java.tuple.Tuple2; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.datastream.KeyedStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.util.Collector; /** * @author matt * @create 2022-01-17 22:48 * \u9ad8\u7ea7\u805a\u5408 */ public class Reduce { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(16); DataStream<Event> stream = env.fromElements(new Event(\"a1\", \"/1\", 1L), new Event(\"a1\", \"/2\", 2L), new Event(\"a2\", \"/3\", 3L), new Event(\"a2\", \"/2\", 3L), new Event(\"a3\", \"/1\", 3L), new Event(\"a2\", \"/3\", 3L), new Event(\"a3\", \"/1\", 3L), new Event(\"a2\", \"/2\", 2L)); // 2. \u7528\u6237\u70b9\u51fb\u6b21\u6570 DataStream<Tuple2<String, Long>> userClickCntStream = stream.map(new MapFunction<Event, Tuple2<String, Long>>() { @Override public Tuple2<String, Long> map(Event event) throws Exception { return Tuple2.of(event.user, 1L); } }).keyBy(d -> d.f0).reduce(new ReduceFunction<Tuple2<String, Long>>() { @Override public Tuple2<String, Long> reduce(Tuple2<String, Long> a, Tuple2<String, Long> b) throws Exception { return Tuple2.of(a.f0, a.f1 + b.f1); } }); // 3.\u5f53\u524d\u6700\u6d3b\u8dc3\u7684\u7528\u6237 userClickCntStream.keyBy(d -> \"xx\").reduce((x, y) -> x.f1 >= y.f1 ? x : y ).print(\"maxActiveUser\"); // job name env.execute(\"reduce\"); } } \u4f46\u662f\u5bf9\u4e8e\u50cf flatMap() \u8fd9\u6837\u7684\u51fd\u6570\uff0c\u5b83\u7684\u51fd\u6570\u7b7e\u540d void flatMap(IN value, Collector out) \u88ab Java \u7f16\u8bd1\u5668\u7f16\u8bd1\u6210\u4e86 void flatMap(IN value, Collector out)\uff0c\u4e5f\u5c31\u662f\u8bf4\u5c06 Collector \u7684\u6cdb \u578b\u4fe1\u606f\u64e6\u9664\u6389\u4e86\u3002\u8fd9\u6837 Flink \u5c31\u65e0\u6cd5\u81ea\u52a8\u63a8\u65ad\u8f93\u51fa\u7684\u7c7b\u578b\u4fe1\u606f\u4e86\u3002","title":"\u89c4\u7ea6\u805a\u5408"},{"location":"bigdata/flink/datastreamAPI/#_18","text":"\u4e0a\u8ff0\u57fa\u672c\u8f6c\u6362\u7b97\u5b50&\u805a\u5408\u51fd\u6570 \u90fd\u6709\u5bf9\u5e94\u7684\u62bd\u8c61\u7c7b \u53ef\u4ee5\u5199 \u533f\u540d\u533f\u540d\u5185\u90e8\u7c7b or lambda\u8868\u8fbe\u5f0f","title":"\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570"},{"location":"bigdata/flink/datastreamAPI/#_19","text":"\u4ecb\u7ecd map,filter,reduce \u90fd\u6709\u5bf9\u5e94\u7684\u5bcc\u51fd\u6570\u7248\u672c RichMapFunction\u3001RichFilterFunction\u3001 RichReduceFunction \u5bcc\u51fd\u6570\u7c7b\u53ef\u4ee5\u83b7\u53d6\u8fd0\u884c\u73af\u5883\u7684\u4e0a\u4e0b\u6587\uff0c\u5e76\u62e5\u6709\u4e00\u4e9b\u751f\u547d\u5468\u671f\u65b9\u6cd5\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b9e\u73b0 \u66f4\u590d\u6742\u7684\u529f\u80fd\u3002 \u65b9\u6cd5\uff1a open()\u65b9\u6cd5\uff0c\u662fRichFunction\u7684\u521d\u59cb\u5316\u65b9\u6cd5\u3002\u6240\u4ee5\u50cf\u6587\u4ef6 IO \u7684\u521b\u5efa\uff0c\u6570\u636e\u5e93\u8fde\u63a5\u7684\u521b\u5efa\uff0c\u914d\u7f6e\u6587\u4ef6\u7684\u8bfb\u53d6\u7b49\u7b49\u8fd9\u6837\u4e00\u6b21\u6027\u7684\u5de5\u4f5c\uff0c\u90fd\u9002\u5408\u5728 open()\u65b9\u6cd5\u4e2d\u5b8c\u6210\u3002 close()\u65b9\u6cd5\uff0c\u662f\u751f\u547d\u5468\u671f\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u4e00\u822c\u7528\u6765\u505a\u4e00 \u4e9b\u6e05\u7406\u5de5\u4f5c code package com.matt.apitest.transform; import com.matt.apitest.beans.SensorReading; import org.apache.flink.api.common.functions.RichMapFunction; import org.apache.flink.api.java.tuple.Tuple2; import org.apache.flink.configuration.Configuration; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; /** * @author matt * @create 2022-01-24 23:55 */ public class RichFunction { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(4); DataStream<String> inputStream = env.readTextFile(\"/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt\"); DataStream<SensorReading> dataStream = inputStream.map(s -> { String[] fields = s.split(\",\"); return new SensorReading(fields[0], new Long(fields[1]), new Double(fields[2])); }); DataStream<Tuple2<String, Integer>> resStream = dataStream.map( new MyMapper() ); resStream.print(); // job name env.execute(\"trans-form\"); } public static class MyMapper extends RichMapFunction<SensorReading, Tuple2<String, Integer>> { @Override public Tuple2<String, Integer> map(SensorReading v) throws Exception { return new Tuple2<>(v.getId(), getRuntimeContext().getIndexOfThisSubtask()); } public MyMapper() { super(); } @Override public void open(Configuration parameters) throws Exception { System.out.println(\"init....\"); } @Override public void close() throws Exception { System.out.println(\"clear...\"); } } }","title":"\u5bcc\u51fd\u6570"},{"location":"bigdata/flink/datastreamAPI/#_20","text":"\u5206\u533a\u79cd\u7c7b 1.\u968f\u673a\u5206\u533a shuffle \u628a\u6d41\u4e2d\u7684\u6570\u636e\u968f\u673a\u6253\u4e71 \u5747\u5300\u4f20\u9012\u5230\u4e0b\u6e38\u5206\u533a 2.\u8f6e\u8be2\u5206\u533a round-robin \u6bd4\u5982\u6765\u4e86 a,b,c,d,e,f 6\u6761\u6570\u636e \u6709\u5206\u533a p1, p2, p3 \u5219 a,d \u8fdb\u5230p1 b,e \u8fdb\u5230p2 c,f\u8fdb\u5230p3 3.\u91cd\u7f29\u653e\u5206\u533a rescale \u6bd4\u5982\u4e0a\u6e38\u67092\u5206\u533app1,pp2 \u4e0b\u6e38\u67096\u4e2a\u5206\u533acp1, cp2 ...cp6 pp1 \u4f1a\u53d1\u5230cp1-cp3 \u7136\u540e\u518dcp1-cp3 \u505a\u8f6e\u8be2\u5206\u533a pp2 -> cp4-cp6 4.\u5e7f\u64ad broadcast \u5c06\u6570\u636e\u5e7f\u64ad\u5230\u4e0b\u6e38\u6240\u6709\u5206\u533a\u4e2d 5.\u5168\u5c40\u5206\u533a global \u5c06\u4e0a\u6e38\u591a\u4e2a\u5206\u533a \u4f20\u9012\u5230\u4e0b\u6e381\u4e2a\u5206\u533a\uff0c \u628a\u5e76\u884c\u5ea6\u8bbe\u7f6e\u4e3a1 6.\u81ea\u5b9a\u4e49\u5206\u533a package com.matt.apitest.transform; import com.matt.apitest.beans.Event; import org.apache.flink.api.common.functions.MapFunction; import org.apache.flink.api.common.functions.Partitioner; import org.apache.flink.api.common.functions.ReduceFunction; import org.apache.flink.api.java.functions.KeySelector; import org.apache.flink.api.java.tuple.Tuple2; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.source.ParallelSourceFunction; import org.apache.flink.streaming.api.functions.source.RichParallelSourceFunction; public class Partition { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(16); DataStream<Event> stream = env.fromElements(new Event(\"a1\", \"/1\", 1L), new Event(\"a1\", \"/2\", 2L), new Event(\"a2\", \"/3\", 3L), new Event(\"a2\", \"/2\", 3L), new Event(\"a3\", \"/1\", 3L), new Event(\"a2\", \"/3\", 3L), new Event(\"a3\", \"/1\", 3L), new Event(\"a2\", \"/2\", 2L)); // 2.1 keyBy \u903b\u8f91\u5206\u533a shuffle \u968f\u673a\u5206\u533a //stream.shuffle().print().setParallelism(4); // 2.2\u8f6e\u8be2\u5206\u533a 2 3 1 4 # 2 3 1 4 //stream.rebalance().print(\"rebalance\").setParallelism(4); // 2.3 rescale \u91cd\u7f29\u653e\u5206\u533a \u5206\u7ec4\uff0c\u7ec4\u5185\u8f6e\u8be2 \u4e0a\u6e38\u5206\u533a2 2 \u4e2a\u5206\u533a\u5185\u5185\u90e8\u8f6e\u8be2 DataStream<Integer> rescaleStream = env.addSource(new RichParallelSourceFunction<Integer>() { @Override public void run(SourceContext<Integer> ctx) throws Exception { for (int i = 1; i <= 8; i++) { if (i % 2 == getRuntimeContext().getIndexOfThisSubtask()) { ctx.collect(i); } } } @Override public void cancel() { } }).setParallelism(2); // \u4e0a\u6e38\u5206\u533aa \u53d1\u5230\u4e0b\u6e38a1 a2 a1,a2 \u8f6e\u8be2 b -> b1, b2 b1,b2\u6240\u6709\u5206\u533a\u8f6e\u8be2 // 3,4 \u5747\u662f\u5947\u4e66 1,2 \u5747\u662f\u5076\u6570 //rescaleStream.rescale().print(\"rescale\").setParallelism(4); // 2.4 \u5e7f\u64ad \u4e00\u4efd\u6570\u636e\u5411\u6bcf\u4e2a\u5206\u533a\u90fd\u53d1\u9001 //stream.broadcast().print(\"broadcast\").setParallelism(4); //2.5 \u5168\u5c40\u5206\u533a \u7b49\u4ef7\u5e76\u884c\u5ea6\u4e3a1 //stream.global().print(\"global\").setParallelism(4); // 2.6 \u81ea\u5b9a\u4e49\u91cd\u5206\u533a env.fromElements(1, 2, 3, 4, 5).partitionCustom(new Partitioner<Integer>() { @Override public int partition(Integer k, int cnt) { return k % 2; } }, new KeySelector<Integer, Integer>() { @Override public Integer getKey(Integer v) throws Exception { return v; } }).print(\"custom\").setParallelism(4); // job name env.execute(\"partition\"); } }","title":"\u7269\u7406\u5206\u533a"},{"location":"bigdata/flink/datastreamAPI/#_21","text":"","title":"\u8f93\u51fa\u7b97\u5b50"},{"location":"bigdata/flink/datastreamAPI/#_22","text":"\u884c\u7f16\u7801:StreamingFileSink.forRowFormat(basePath\uff0crowEncoder)\u3002 \u8def\u5f84&\u6570\u636e\u7f16\u7801\u683c\u5f0f \u6279\u91cf\u7f16\u7801:StreamingFileSink.forBulkFormat(basePath\uff0cbulkWriterFactory)\u3002 package com.matt.apitest.sink; import com.matt.apitest.beans.Event; import org.apache.flink.api.common.serialization.SimpleStringEncoder; import org.apache.flink.core.fs.Path; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.sink.filesystem.StreamingFileSink; import org.apache.flink.streaming.api.functions.sink.filesystem.rollingpolicies.DefaultRollingPolicy; import java.util.concurrent.TimeUnit; public class Sink2File { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); DataStream<Event> stream = env.fromElements(new Event(\"a1\", \"/1\", 1L), new Event(\"a1\", \"/2\", 2L), new Event(\"a2\", \"/3\", 3L), new Event(\"a2\", \"/2\", 3L), new Event(\"a3\", \"/1\", 3L), new Event(\"a2\", \"/3\", 3L), new Event(\"a3\", \"/1\", 3L), new Event(\"a2\", \"/2\", 2L)); StreamingFileSink<String> streamingFileSink = StreamingFileSink.<String>forRowFormat(new Path(\"./output\"), new SimpleStringEncoder<>(\"UTF-8\")) // \u6eda\u52a8\u7b56\u7565 .withRollingPolicy(DefaultRollingPolicy.builder() .withMaxPartSize(1024 * 1024 * 1024) // ms .withRolloverInterval(TimeUnit.MINUTES.toMillis(15)) // \u6ca1\u6709\u6570\u636e\u6765 .withInactivityInterval(TimeUnit.MINUTES.toMillis(5)) .build()) .build(); stream.map(data -> data.toString()).addSink(streamingFileSink); env.execute(); } } \u5206\u533a\u6587\u4ef6 \u81f3\u5c11\u5305\u542b15\u5206\u949f\u7684\u6570\u636e \u6700\u8fd15\u5206\u949f\u6ca1\u6709\u6536\u5230\u65b0\u7684\u6570\u636e \u6587\u4ef6\u5927\u5c0f\u5df2\u8fbe\u5230 1 GB","title":"\u6587\u4ef6"},{"location":"bigdata/flink/datastreamAPI/#kafka_1","text":"FlinkKafkaProducer \u7ee7\u627f\u4e86\u62bd\u8c61\u7c7b TwoPhaseCommitSinkFunction\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b9e\u73b0\u4e86\u201c\u4e24\u9636\u6bb5\u63d0\u4ea4\u201d\u7684 RichSinkFunction\u3002\u4e24\u9636\u6bb5\u63d0\u4ea4\u63d0\u4f9b\u4e86 Flink \u5411 Kafka \u5199\u5165\u6570\u636e\u7684\u4e8b\u52a1\u6027\u4fdd\u8bc1\uff0c\u80fd\u591f\u771f\u6b63\u505a\u5230\u7cbe\u786e\u4e00\u6b21(exactly once)\u7684\u72b6\u6001\u4e00\u81f4\u6027 package com.matt.apitest.sink; import com.matt.apitest.beans.Event; import org.apache.flink.api.common.functions.MapFunction; import org.apache.flink.api.common.serialization.SimpleStringSchema; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumer; import org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer; import java.util.Properties; /** * @author matt * @create 2022-01-25 23:33 */ public class Sink2Kafka { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); Properties properties = new Properties(); properties.setProperty(\"bootstrap.servers\", \"localhost:9092\"); properties.setProperty(\"group.id\", \"consumer-group\"); properties.setProperty(\"key.deserializer\", \"org.apache.kafka.common.serialization.StringDeserializer\"); properties.setProperty(\"value.deserializer\", \"org.apache.kafka.common.serialization.StringDeserializer\"); properties.setProperty(\"auto.offset.reset\", \"latest\"); DataStream<String> kafkaStream = env.addSource( new FlinkKafkaConsumer<String>(\"first\", new SimpleStringSchema(), properties)); // SingleOutputStreamOperator<String> res = kafkaStream.map(new MapFunction<String, String>() { @Override public String map(String s) throws Exception { String[] fileds = s.split(\",\"); return new Event(fileds[0], fileds[1], Long.valueOf(fileds[2])).toString(); } }); res.addSink(new FlinkKafkaProducer<String>(\"localhost:9092\", \"test\", new SimpleStringSchema())); // job name env.execute(\"SINK_KAFKA\"); } }","title":"kafka"},{"location":"bigdata/flink/datastreamAPI/#redis","text":"\u5bfc\u5165\u4f9d\u8d56 <dependency> <groupId>org.apache.bahir</groupId> <artifactId>flink-connector-redis_2.11</artifactId> <version>1.0</version> </dependency> package com.matt.apitest.sink; import com.matt.apitest.beans.Event; import com.matt.apitest.beans.SensorReading; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.connectors.redis.RedisSink; import org.apache.flink.streaming.connectors.redis.common.config.FlinkJedisPoolConfig; import org.apache.flink.streaming.connectors.redis.common.mapper.RedisCommand; import org.apache.flink.streaming.connectors.redis.common.mapper.RedisCommandDescription; import org.apache.flink.streaming.connectors.redis.common.mapper.RedisMapper; /** * @author matt * @create 2022-01-25 23:57 */ public class Sink2Redis { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); DataStream<Event> dataStream = env.fromElements( new Event(\"a1\", \"1\", 1L), new Event(\"a2\", \"2\", 1L), new Event(\"a3\", \"3\", 1L), new Event(\"a4\", \"4\", 1L)); FlinkJedisPoolConfig config = new FlinkJedisPoolConfig.Builder() .setHost(\"127.0.0.1\") .setPort(6379) .build(); dataStream.addSink(new RedisSink<>(config, new MyRedisMapper())); env.execute(\"redis\"); } public static class MyRedisMapper implements RedisMapper<Event> { // \u4fdd\u5b58\u5230 redis \u7684\u547d\u4ee4\uff0c\u5b58\u6210\u54c8\u5e0c\u8868 public RedisCommandDescription getCommandDescription() { return new RedisCommandDescription(RedisCommand.HSET, \"test\"); } // key public String getKeyFromData(Event data) { return data.user; } // v public String getValueFromData(Event data) { return data.url; } } } redisSink \u63d0\u4f9b2\u4e2a\u53c2\u6570 jedis\u7684\u8fde\u63a5\u914d\u7f6e \u5b9e\u73b0RedisMapper, \u63d0\u4f9badd, getK getV \u5b9e\u73b0","title":"redis"},{"location":"bigdata/flink/datastreamAPI/#es","text":"flink1.13 \u652f\u6301es7 \u6dfb\u52a0\u4f9d\u8d56 <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-elasticsearch7_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> package com.matt.apitest.sink; import com.matt.apitest.beans.Event; import com.matt.apitest.beans.SensorReading; import org.apache.flink.api.common.functions.RuntimeContext; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.connectors.elasticsearch.ElasticsearchSinkFunction; import org.apache.flink.streaming.connectors.elasticsearch.RequestIndexer; import org.apache.flink.streaming.connectors.elasticsearch6.ElasticsearchSink; import org.apache.http.HttpHost; import org.elasticsearch.action.index.IndexRequest; import org.elasticsearch.client.Requests; import java.util.ArrayList; import java.util.HashMap; import java.util.Objects; /** * @author matt * @create 2022-01-26 0:21 */ public class Sink2ES { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); DataStream<Event> dataStream = env.fromElements( new Event(\"a1\", \"1\", 1L), new Event(\"a2\", \"2\", 1L), new Event(\"a3\", \"3\", 1L), new Event(\"a4\", \"4\", 1L)); ArrayList<HttpHost> httpHosts = new ArrayList<>(); httpHosts.add(new HttpHost(\"localhost\", 9200)); dataStream.addSink(new ElasticsearchSink.Builder<Event>(httpHosts,new MyEsSinkFunction()).build()); // job name env.execute(\"sink_es\"); } public static class MyEsSinkFunction implements ElasticsearchSinkFunction<Event> { @Override public void process(Event element, RuntimeContext ctx, RequestIndexer indexer) { HashMap<String, String> dataSource = new HashMap<>(); dataSource.put(\"user\", element.user); dataSource.put(\"url\", element.url); dataSource.put(\"ts\", String.valueOf(element.timestamp)); IndexRequest indexRequest = Requests.indexRequest() .index(\"tt4\") .type(\"tt\") .source(dataSource); indexer.add(indexRequest); } } }","title":"es"},{"location":"bigdata/flink/datastreamAPI/#mysql","text":"<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --> <!--\u7248\u672c\u592a\u4f4e\u53ef\u80fd\u4f1a\u5931\u8d25--> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <version>8.0.28</version> </dependency> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-jdbc_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> package com.matt.apitest.sink; import com.matt.apitest.beans.Event; import com.matt.apitest.beans.SensorReading; import org.apache.flink.configuration.Configuration; import org.apache.flink.connector.jdbc.JdbcConnectionOptions; import org.apache.flink.connector.jdbc.JdbcExecutionOptions; import org.apache.flink.connector.jdbc.JdbcSink; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.sink.RichSinkFunction; import java.sql.DriverManager; import java.sql.Connection; import java.sql.PreparedStatement; /** * @author matt * @create 2022-01-26 1:41 */ public class Sink2MySQL { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); DataStream<Event> dataStream = env.fromElements( new Event(\"a1\", \"1\", 1L), new Event(\"a2\", \"2\", 1L), new Event(\"a3\", \"3\", 1L), new Event(\"a4\", \"4\", 1L)); String sql = \"INSERT INTO `event` (user, url) VALUES(?, ?)\"; dataStream.addSink(JdbcSink.sink(sql, ((statement, event) -> { statement.setString(1, event.user); statement.setString(2, event.url); }), //JdbcExecutionOptions.builder() // .withBatchSize(1000) // .withBatchIntervalMs(200) // .withMaxRetries(5) // .build(), new JdbcConnectionOptions.JdbcConnectionOptionsBuilder() .withUrl(\"jdbc:mysql://localhost:3306/stu_go?characterEncoding=utf8&useSSL=false\") .withDriverName(\"com.mysql.cj.jdbc.Driver\") .withUsername(\"root\") .withPassword(\"rootroot\") .build() )); // job name env.execute(); } public static class MyJdbcSink extends RichSinkFunction<SensorReading> { Connection conn = null; PreparedStatement insertStmt = null; PreparedStatement updateStmt = null; // open \u4e3b\u8981\u662f\u521b\u5efa\u8fde\u63a5 @Override public void open(Configuration parameters) throws Exception { conn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/stu_flink\", \"root\", \"root\"); // \u521b\u5efa\u9884\u7f16\u8bd1\u5668\uff0c\u6709\u5360\u4f4d\u7b26\uff0c\u53ef\u4f20\u5165\u53c2\u6570 insertStmt = conn.prepareStatement(\"INSERT INTO sensor_temp (id, temp) VALUES ( ?, ?)\"); updateStmt = conn.prepareStatement(\"UPDATE sensor_temp SET temp = ? WHERE id = ? \"); } // \u8c03\u7528\u8fde\u63a5\uff0c\u6267\u884c sql @Override public void invoke(SensorReading value, Context context) throws Exception { // \u6267\u884c\u66f4\u65b0\u8bed\u53e5\uff0c\u6ce8\u610f\u4e0d\u8981\u7559 super updateStmt.setDouble(1, value.getTemperatrue()); updateStmt.setString(2, value.getId()); updateStmt.execute(); // \u5982\u679c\u521a\u624d update \u8bed\u53e5\u6ca1\u6709\u66f4\u65b0\uff0c\u90a3\u4e48\u63d2\u5165 if (updateStmt.getUpdateCount() == 0) { insertStmt.setString(1, value.getId()); insertStmt.setDouble(2, value.getTemperatrue()); insertStmt.execute(); } } @Override public void close() throws Exception { insertStmt.close(); updateStmt.close(); conn.close(); } } }","title":"mysql"},{"location":"bigdata/flink/overview/","text":"\u57fa\u672c\u6982\u5ff5 \u662f\u4ec0\u4e48 Apache Flink \u662f\u4e00\u4e2a\u6846\u67b6\u548c\u5206\u5e03\u5f0f\u5904\u7406\u5f15\u64ce\uff0c\u7528\u4e8e\u5bf9\u65e0\u754c\u548c\u6709\u754c\u6570\u636e\u6d41\u8fdb\u884c\u72b6\u6001\u8ba1\u7b97 \u7279\u70b9 \u9ad8\u541e\u5410\u548c\u4f4e\u5ef6\u8fdf\u3002\u6bcf\u79d2\u5904\u7406\u6570\u767e\u4e07\u4e2a\u4e8b\u4ef6\uff0c\u6beb\u79d2\u7ea7\u5ef6\u8fdf \u7ed3\u679c\u7684\u51c6\u786e\u6027\u3002Flink \u63d0\u4f9b\u4e86\u4e8b\u4ef6\u65f6\u95f4(event-time)\u548c\u5904\u7406\u65f6\u95f4(processing-time) \u8bed\u4e49\u3002\u5bf9\u4e8e\u4e71\u5e8f\u4e8b\u4ef6\u6d41\uff0c\u4e8b\u4ef6\u65f6\u95f4\u8bed\u4e49\u4ecd\u7136\u80fd\u63d0\u4f9b\u4e00\u81f4\u4e14\u51c6\u786e\u7684\u7ed3\u679c\u3002 \u7cbe\u786e\u4e00\u6b21(exactly-once)\u7684\u72b6\u6001\u4e00\u81f4\u6027\u4fdd\u8bc1\u3002 \u53ef\u4ee5\u8fde\u63a5\u5230\u6700\u5e38\u7528\u7684\u5b58\u50a8\u7cfb\u7edf\uff0c\u5982 Apache Kafka\u3001Apache Cassandra\u3001Elasticsearch\u3001JDBC\u3001Kinesis \u548c(\u5206\u5e03\u5f0f)\u6587\u4ef6\u7cfb\u7edf\uff0c\u5982 HDFS \u548c S3\u3002 \u9ad8\u53ef\u7528\u3002\u672c\u8eab\u9ad8\u53ef\u7528\u7684\u8bbe\u7f6e\uff0c\u52a0\u4e0a\u4e0eK8s\uff0cYARN\u548cMesos\u7684\u7d27\u5bc6\u96c6\u6210\uff0c\u518d\u52a0\u4e0a\u4ece\u6545\u969c\u4e2d\u5feb\u901f\u6062\u590d\u548c\u52a8\u6001\u6269\u5c55\u4efb\u52a1\u7684\u80fd\u529b\uff0cFlink \u80fd\u505a\u5230\u4ee5\u6781\u5c11\u7684\u505c\u673a\u65f6\u95f4 7\u00d724 \u5168\u5929\u5019\u8fd0\u884c\u3002 \u80fd\u591f\u66f4\u65b0\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u5e76\u5c06\u4f5c\u4e1a(jobs)\u8fc1\u79fb\u5230\u4e0d\u540c\u7684 Flink \u96c6\u7fa4\uff0c\u800c\u4e0d\u4f1a\u4e22\u5931\u5e94\u7528\u7a0b\u5e8f\u7684\u72b6\u6001\u3002 Flink VS Spark Streaming \u6570\u636e\u6a21\u578b Spark \u5e95\u5c42\u6570\u636e\u6a21\u578b\u662f\u5f39\u6027\u5206\u5e03\u5f0f\u6570\u636e\u96c6(RDD)\uff0cSpark Streaming \u8fdb\u884c\u5fae\u6279\u5904\u7406\u7684\u5e95\u5c42 \u63a5\u53e3 DStream\uff0c\u5b9e\u9645\u4e0a\u5904\u7406\u7684\u4e5f\u662f\u4e00\u7ec4\u7ec4\u5c0f\u6279\u6570\u636e RDD \u7684\u96c6\u5408 Flink \u7684\u57fa\u672c\u6570\u636e\u6a21\u578b\u662f\u6570\u636e\u6d41(DataFlow)\uff0c\u4ee5\u53ca\u4e8b\u4ef6(Event)\u5e8f\u5217 \u8fd0\u884c\u65f6\u67b6\u6784 Spark \u662f\u6279\u8ba1\u7b97\uff0c\u5c06 \u4efb\u52a1\u5bf9\u5e94\u7684DAG \u5212\u5206\u4e3a\u4e0d\u540c\u7684 \u9636\u6bb5stage\uff0c\u4e00\u4e2a\u5b8c\u6210\u540e\u7ecf\u8fc7 shuffle \u518d\u8fdb\u884c\u4e0b\u4e00\u9636\u6bb5\u7684\u8ba1\u7b97 Flink \u662f\u6807\u51c6\u7684\u6d41\u5f0f\u6267\u884c\u6a21\u5f0f\uff0c\u4e00\u4e2a\u4e8b\u4ef6\u5728\u4e00\u4e2a\u8282\u70b9\u5904\u7406\u5b8c\u540e\u53ef\u4ee5\u76f4\u63a5\u53d1\u5f80\u4e0b\u4e00\u4e2a\u8282\u70b9\u8fdb\u884c\u5904\u7406 # \u4fdd\u6301\u94fe\u63a5 nc -lk 777 \u65e0\u754c\u6570\u636e \u6570\u636e\u662f\u6e90\u6e90\u4e0d\u65ad\u4ea7\u751f \u6709\u754c\u6570\u636e \u6709\u660e\u786e\u5b9a\u4e49\u6570\u636e\u7684\u5f00\u59cb\u548c\u7ed3\u675f","title":"overview"},{"location":"bigdata/flink/overview/#_1","text":"","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"bigdata/flink/overview/#_2","text":"Apache Flink \u662f\u4e00\u4e2a\u6846\u67b6\u548c\u5206\u5e03\u5f0f\u5904\u7406\u5f15\u64ce\uff0c\u7528\u4e8e\u5bf9\u65e0\u754c\u548c\u6709\u754c\u6570\u636e\u6d41\u8fdb\u884c\u72b6\u6001\u8ba1\u7b97","title":"\u662f\u4ec0\u4e48"},{"location":"bigdata/flink/overview/#_3","text":"\u9ad8\u541e\u5410\u548c\u4f4e\u5ef6\u8fdf\u3002\u6bcf\u79d2\u5904\u7406\u6570\u767e\u4e07\u4e2a\u4e8b\u4ef6\uff0c\u6beb\u79d2\u7ea7\u5ef6\u8fdf \u7ed3\u679c\u7684\u51c6\u786e\u6027\u3002Flink \u63d0\u4f9b\u4e86\u4e8b\u4ef6\u65f6\u95f4(event-time)\u548c\u5904\u7406\u65f6\u95f4(processing-time) \u8bed\u4e49\u3002\u5bf9\u4e8e\u4e71\u5e8f\u4e8b\u4ef6\u6d41\uff0c\u4e8b\u4ef6\u65f6\u95f4\u8bed\u4e49\u4ecd\u7136\u80fd\u63d0\u4f9b\u4e00\u81f4\u4e14\u51c6\u786e\u7684\u7ed3\u679c\u3002 \u7cbe\u786e\u4e00\u6b21(exactly-once)\u7684\u72b6\u6001\u4e00\u81f4\u6027\u4fdd\u8bc1\u3002 \u53ef\u4ee5\u8fde\u63a5\u5230\u6700\u5e38\u7528\u7684\u5b58\u50a8\u7cfb\u7edf\uff0c\u5982 Apache Kafka\u3001Apache Cassandra\u3001Elasticsearch\u3001JDBC\u3001Kinesis \u548c(\u5206\u5e03\u5f0f)\u6587\u4ef6\u7cfb\u7edf\uff0c\u5982 HDFS \u548c S3\u3002 \u9ad8\u53ef\u7528\u3002\u672c\u8eab\u9ad8\u53ef\u7528\u7684\u8bbe\u7f6e\uff0c\u52a0\u4e0a\u4e0eK8s\uff0cYARN\u548cMesos\u7684\u7d27\u5bc6\u96c6\u6210\uff0c\u518d\u52a0\u4e0a\u4ece\u6545\u969c\u4e2d\u5feb\u901f\u6062\u590d\u548c\u52a8\u6001\u6269\u5c55\u4efb\u52a1\u7684\u80fd\u529b\uff0cFlink \u80fd\u505a\u5230\u4ee5\u6781\u5c11\u7684\u505c\u673a\u65f6\u95f4 7\u00d724 \u5168\u5929\u5019\u8fd0\u884c\u3002 \u80fd\u591f\u66f4\u65b0\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u5e76\u5c06\u4f5c\u4e1a(jobs)\u8fc1\u79fb\u5230\u4e0d\u540c\u7684 Flink \u96c6\u7fa4\uff0c\u800c\u4e0d\u4f1a\u4e22\u5931\u5e94\u7528\u7a0b\u5e8f\u7684\u72b6\u6001\u3002","title":"\u7279\u70b9"},{"location":"bigdata/flink/overview/#flink-vs-spark-streaming","text":"\u6570\u636e\u6a21\u578b Spark \u5e95\u5c42\u6570\u636e\u6a21\u578b\u662f\u5f39\u6027\u5206\u5e03\u5f0f\u6570\u636e\u96c6(RDD)\uff0cSpark Streaming \u8fdb\u884c\u5fae\u6279\u5904\u7406\u7684\u5e95\u5c42 \u63a5\u53e3 DStream\uff0c\u5b9e\u9645\u4e0a\u5904\u7406\u7684\u4e5f\u662f\u4e00\u7ec4\u7ec4\u5c0f\u6279\u6570\u636e RDD \u7684\u96c6\u5408 Flink \u7684\u57fa\u672c\u6570\u636e\u6a21\u578b\u662f\u6570\u636e\u6d41(DataFlow)\uff0c\u4ee5\u53ca\u4e8b\u4ef6(Event)\u5e8f\u5217 \u8fd0\u884c\u65f6\u67b6\u6784 Spark \u662f\u6279\u8ba1\u7b97\uff0c\u5c06 \u4efb\u52a1\u5bf9\u5e94\u7684DAG \u5212\u5206\u4e3a\u4e0d\u540c\u7684 \u9636\u6bb5stage\uff0c\u4e00\u4e2a\u5b8c\u6210\u540e\u7ecf\u8fc7 shuffle \u518d\u8fdb\u884c\u4e0b\u4e00\u9636\u6bb5\u7684\u8ba1\u7b97 Flink \u662f\u6807\u51c6\u7684\u6d41\u5f0f\u6267\u884c\u6a21\u5f0f\uff0c\u4e00\u4e2a\u4e8b\u4ef6\u5728\u4e00\u4e2a\u8282\u70b9\u5904\u7406\u5b8c\u540e\u53ef\u4ee5\u76f4\u63a5\u53d1\u5f80\u4e0b\u4e00\u4e2a\u8282\u70b9\u8fdb\u884c\u5904\u7406 # \u4fdd\u6301\u94fe\u63a5 nc -lk 777 \u65e0\u754c\u6570\u636e \u6570\u636e\u662f\u6e90\u6e90\u4e0d\u65ad\u4ea7\u751f \u6709\u754c\u6570\u636e \u6709\u660e\u786e\u5b9a\u4e49\u6570\u636e\u7684\u5f00\u59cb\u548c\u7ed3\u675f","title":"Flink VS Spark Streaming"},{"location":"bigdata/flink/processFunc/","text":"d11970-01-01 08:00:01.0wk-9223372036854775808 d21970-01-01 08:00:11.0wk999 d1\u5b9a\u65f6\u5668\u89e6\u53d1\u4e86\uff0c \u89e6\u53d1\u65f6\u95f41970-01-01 08:00:11.0wk9223372036854775807 d2\u5b9a\u65f6\u5668\u89e6\u53d1\u4e86\uff0c \u89e6\u53d1\u65f6\u95f41970-01-01 08:00:21.0wk9223372036854775807 \u4e8b\u4ef6\u4e8b\u4ef6 \u5982\u679c\u5173\u95ed\u4e86 flink \u4f1a\u628awk \u8bbe\u7f6e\u4e3aint \u6700\u5927\u503c d11970-01-01 08:00:01.0wk-9223372036854775808 d21970-01-01 08:00:11.0wk999 d21970-01-01 08:00:11.001wk10999 d1\u5b9a\u65f6\u5668\u89e6\u53d1\u4e86\uff0c \u89e6\u53d1\u65f6\u95f41970-01-01 08:00:11.0wk11000 d2\u5b9a\u65f6\u5668\u89e6\u53d1\u4e86\uff0c \u89e6\u53d1\u65f6\u95f41970-01-01 08:00:21.0wk9223372036854775807 d2\u5b9a\u65f6\u5668\u89e6\u53d1\u4e86\uff0c \u89e6\u53d1\u65f6\u95f41970-01-01 08:00:21.001wk9223372036854775807","title":"processFunc"},{"location":"bigdata/flink/processFunction/","text":"\u5904\u7406\u51fd\u6570 \u6982\u8ff0 \u5904\u7406\u51fd\u6570\u5b9a\u4e49\u6570\u636e\u6d41\u7684\u8f6c\u6362\u64cd\u4f5c \u4e4b\u524d\u7684\u7b97\u5b50\u5b58\u5728\u7684\u95ee\u9898\uff1a map\u7b97\u5b50\uff0c\u5b9e\u73b0mapFunction \u53ea\u80fd\u83b7\u53d6\u8f6c\u6362\u540e\u7684\u6570\u636e \u7a97\u53e3\u805a\u5408\u7b97\u5b50\uff0caggregateFunction\u4e2d\u51fa\u6570\u636e\u5916\uff0c\u8fd8\u53ef\u4ee5\u83b7\u53d6\u72b6\u6001 \u5bcc\u51fd\u6570\uff0cRichMapFunction\u8c03\u7528getRuntimeContext() \u53ef\u4ee5\u83b7\u5f97\u72b6\u6001\uff0c\u8fd0\u884c\u4fe1\u606f \u4e4b\u524d\u6240\u6709\u7684\u7b97\u5b50\u662f\u65e0\u6cd5\u83b7\u53d6\u4e8b\u4ef6\u65f6\u95f4\u6c34\u4f4d\u7ebf\u4ee5\u53ca\u4f7f\u7528\u5b9a\u65f6\u5668 \u5904\u7406\u51fd\u6570\u5177\u6709\u4e0a\u9762\u6240\u6709\u7b97\u5b50\u7684\u529f\u80fd\u53e6\u5916\u8fd8\u53ef\u4ee5\u83b7\u53d6\u6c34\u4f4d\u7ebf\u548c\u6ce8\u518c\u5b9a\u65f6\u5668 processFunction \u4ecb\u7ecd \u6982\u8ff0 ProcessFunction \u7ee7\u627f\u4e86 AbstractRichFunction\uff0c\u6cdb\u578b\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8f93\u5165\u7c7b\u578b\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8f93\u51fa\u7c7b\u578b \u5185\u90e8\u5b9a\u4e49\u4e862\u4e2a\u65b9\u6cd5 processElement\uff1a\u6765\u4e00\u6761\u6570\u636e\u5c31\u4f1a\u8c03\u7528\u4e00\u6b21\u8be5\u65b9\u6cd5 onTimer():\u5b9a\u65f6\u5668 \u65b9\u6cd5 processElement value:\u8f93\u5165\u7684\u5143\u7d20 context:\u8868\u793a\u5f53\u524d\u8fd0\u884c\u7684\u4e0a\u4e0b\u6587\uff0c\u53ef\u4ee5\u83b7\u53d6\u5230\u5f53\u524d\u7684\u65f6\u95f4\u6233\uff0c\u5e76\u63d0\u4f9b\u4e86\u7528\u4e8e\u67e5\u8be2\u65f6\u95f4\u548c\u6ce8\u518c\u5b9a\u65f6\u5668\u7684\u201c\u5b9a\u65f6\u670d\u52a1\u201d(TimerService)\uff0c\u4ee5\u53ca\u53ef\u4ee5\u5c06\u6570\u636e\u53d1\u9001\u5230\u201c\u4fa7\u8f93\u51fa\u6d41\u201d(side output)\u7684\u65b9\u6cd5.output()\u3002 out:\u6570\u636e\u6536\u96c6\u5668\uff0cout.Collect() onTimer \u5b9a\u65f6\u5668 \u53ea\u5728keyedStream\u4f7f\u7528 \u5206\u7c7b 1.ProcessFunction \u6700\u57fa\u672c\u7684\u5904\u7406\u51fd\u6570\uff0c\u57fa\u4e8e DataStream \u76f4\u63a5\u8c03\u7528.process()\u65f6\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002 2.KeyedProcessFunction \u5bf9\u6d41\u6309\u952e\u5206\u533a\u540e\u7684\u5904\u7406\u51fd\u6570\uff0c\u57fa\u4e8e KeyedStream \u8c03\u7528.process()\u65f6\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002\u8981\u60f3\u4f7f\u7528 \u5b9a\u65f6\u5668\uff0c\u6bd4\u5982\u57fa\u4e8e KeyedStream\u3002 3.ProcessWindowFunction \u5f00\u7a97\u4e4b\u540e\u7684\u5904\u7406\u51fd\u6570\uff0c\u4e5f\u662f\u5168\u7a97\u53e3\u51fd\u6570\u7684\u4ee3\u8868\u3002\u57fa\u4e8e WindowedStream \u8c03\u7528.process()\u65f6\u4f5c \u4e3a\u53c2\u6570\u4f20\u5165\u3002 4.ProcessAllWindowFunction \u540c\u6837\u662f\u5f00\u7a97\u4e4b\u540e\u7684\u5904\u7406\u51fd\u6570\uff0c\u57fa\u4e8e AllWindowedStream \u8c03\u7528.process()\u65f6\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002 5.CoProcessFunction \u5408\u5e76(connect)\u4e24\u6761\u6d41\u4e4b\u540e\u7684\u5904\u7406\u51fd\u6570\uff0c\u57fa\u4e8e ConnectedStreams \u8c03\u7528.process()\u65f6\u4f5c\u4e3a\u53c2 \u6570\u4f20\u5165\u3002\u5173\u4e8e\u6d41\u7684\u8fde\u63a5\u5408\u5e76\u64cd\u4f5c 6.ProcessJoinFunction \u95f4\u9694\u8fde\u63a5(interval join)\u4e24\u6761\u6d41\u4e4b\u540e\u7684\u5904\u7406\u51fd\u6570\uff0c\u57fa\u4e8e IntervalJoined \u8c03\u7528.process()\u65f6\u4f5c\u4e3a \u53c2\u6570\u4f20\u5165\u3002 7.BroadcastProcessFunction \u5e7f\u64ad\u8fde\u63a5\u6d41\u5904\u7406\u51fd\u6570\uff0c\u57fa\u4e8e BroadcastConnectedStream \u8c03\u7528.process()\u65f6\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002\u8fd9 \u91cc\u7684\u201c\u5e7f\u64ad\u8fde\u63a5\u6d41\u201dBroadcastConnectedStream\uff0c\u662f\u4e00\u4e2a\u672a keyBy \u7684\u666e\u901a DataStream \u4e0e\u4e00\u4e2a\u5e7f \u64ad\u6d41(BroadcastStream)\u505a\u8fde\u63a5(conncet)\u4e4b\u540e\u7684\u4ea7\u7269\u3002 8.KeyedBroadcastProcessFunction \u6309\u952e\u5206\u533a\u7684\u5e7f\u64ad\u8fde\u63a5\u6d41\u5904\u7406\u51fd\u6570\uff0c\u540c\u6837\u662f\u57fa\u4e8e BroadcastConnectedStream \u8c03\u7528.process()\u65f6 \u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002\u4e0e BroadcastProcessFunction \u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u65f6\u7684\u5e7f\u64ad\u8fde\u63a5\u6d41\uff0c\u662f\u4e00\u4e2a KeyedStream \u4e0e\u5e7f\u64ad\u6d41(BroadcastStream)\u505a\u8fde\u63a5\u4e4b\u540e\u7684\u4ea7\u7269\u3002 keyedProcessFunction \u6982\u8ff0 \u9996\u5148\u5bf9\u6d41\u8fdb\u884ckeyBy -> keyedStream \uff08\u903b\u8f91\u4e0a\u5206\u6d41\uff0c\u76f8\u540c\u7684key\u5728\u540c\u4e00\u5206\u533a\u8ba1\u7b97\uff09 keyedStream\u652f\u6301\u5b9a\u65f6\u5668 \u5b9a\u65f6\u5668 \u6982\u8ff0 ProcessFunction \u7684\u4e0a\u4e0b\u6587(Context)\u4e2d\u63d0\u4f9b\u4e86.timerService()\u65b9\u6cd5\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a TimerService \u5bf9\u8c61 TimeService\u652f\u6301\u7684\u65b9\u6cd5 // \u83b7\u53d6\u5f53\u524d\u7684\u5904\u7406\u65f6\u95f4 long currentProcessingTime(); // \u83b7\u53d6\u5f53\u524d\u7684\u6c34\u4f4d\u7ebf(\u4e8b\u4ef6\u65f6\u95f4) long currentWatermark(); // \u6ce8\u518c\u5904\u7406\u65f6\u95f4\u5b9a\u65f6\u5668\uff0c\u5f53\u5904\u7406\u65f6\u95f4\u8d85\u8fc7 time \u65f6\u89e6\u53d1 void registerProcessingTimeTimer(long time); // \u6ce8\u518c\u4e8b\u4ef6\u65f6\u95f4\u5b9a\u65f6\u5668\uff0c\u5f53\u6c34\u4f4d\u7ebf\u8d85\u8fc7 time \u65f6\u89e6\u53d1 void registerEventTimeTimer(long time); // \u5220\u9664\u89e6\u53d1\u65f6\u95f4\u4e3a time \u7684\u5904\u7406\u65f6\u95f4\u5b9a\u65f6\u5668 void deleteProcessingTimeTimer(long time); // \u5220\u9664\u89e6\u53d1\u65f6\u95f4\u4e3a time \u7684\u5904\u7406\u65f6\u95f4\u5b9a\u65f6\u5668 void deleteEventTimeTimer(long time); \u6ce8\u610f \u5b9a\u65f6\u5668 \u4f1a\u4ee5 key+\u65f6\u95f4 \u4f5c\u4e3a\u552f\u4e00\u952e \u53bb\u91cd \u5373 \u6bcf\u4e2akey&\u65f6\u95f4\u6233\u5373\u662f\u8c03\u7528\u591a\u6b21onTimer\uff0c\u4f46\u662f\u53ea\u4f1a\u89e6\u53d1\u4e00\u6b21 .onTimer()\u548c.processElement()\u65b9\u6cd5\u662f\u540c\u6b65\u8c03\u7528\u7684(synchronous)\uff0c\u6240\u4ee5\u4e0d\u4f1a\u6709\u5e76\u53d1\u95ee\u9898 \u4f7f\u7528 \u5904\u7406\u65f6\u95f4 processingTime package com.matt.apitest.processfunction; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.KeyedProcessFunction; import org.apache.flink.util.Collector; import java.sql.Timestamp; import java.time.Duration; public class ProcessingTimeTimerTest1 { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); SingleOutputStreamOperator<Event> stream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()); stream.keyBy(d -> d.user) .process(new KeyedProcessFunction<String, Event, String>() { @Override public void processElement(Event event, KeyedProcessFunction<String, Event, String>.Context context, Collector<String> collector) throws Exception { long pTs = context.timerService().currentProcessingTime(); collector.collect(context.getCurrentKey() + \"\u6570\u636e\u5230\u8fbe\u65f6\u95f4\".concat(String.valueOf(pTs))); // \u6ce8\u518c10s \u5b9a\u65f6\u5668 context.timerService().registerProcessingTimeTimer(pTs + 10 * 1000); } @Override public void onTimer(long ts, KeyedProcessFunction<String, Event, String>.OnTimerContext ctx, Collector<String> out) throws Exception { out.collect(ctx.getCurrentKey() + \"\u5b9a\u65f6\u5668\u89e6\u53d1\u4e86\uff0c \u89e6\u53d1\u65f6\u95f4\" + new Timestamp(ts)); } }) .print(); env.execute(); } } \u4e8b\u4ef6\u65f6\u95f4 eventTime package com.matt.apitest.processfunction; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.KeyedProcessFunction; import org.apache.flink.streaming.api.functions.ProcessFunction; import org.apache.flink.streaming.api.functions.source.SourceFunction; import org.apache.flink.util.Collector; import javax.transaction.TransactionRequiredException; import java.sql.Timestamp; import java.time.Duration; import java.util.concurrent.TransferQueue; /** * @author matt * @create 2023-02-28 23:54 * @desc xxx */ public class EventTimeTimerTest1 { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); SingleOutputStreamOperator<Event> stream = env.addSource(new CustomSource()) .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); stream.keyBy(d -> d.user) .process(new KeyedProcessFunction<String, Event, String>() { @Override public void processElement(Event event, KeyedProcessFunction<String, Event, String>.Context context, Collector<String> collector) throws Exception { long ts = context.timestamp(); String outD = context.getCurrentKey() + new Timestamp(ts); outD += \"wk\" + context.timerService().currentWatermark(); collector.collect(outD); // \u6ce8\u518c10s \u5b9a\u65f6\u5668 context.timerService().registerEventTimeTimer(ts + 10 * 1000); } @Override public void onTimer(long ts, KeyedProcessFunction<String, Event, String>.OnTimerContext ctx, Collector<String> out) throws Exception { out.collect(ctx.getCurrentKey() + \"\u5b9a\u65f6\u5668\u89e6\u53d1\u4e86\uff0c \u89e6\u53d1\u65f6\u95f4\" + new Timestamp(ts) + \"wk\" + ctx.timerService().currentWatermark()); } }) .print(); env.execute(); } public static class CustomSource implements SourceFunction<Event> { @Override public void run(SourceContext<Event> ctx) throws Exception { ctx.collect(new Event(\"d1\", \"/detail\", 1000L)); Thread.sleep(5000L); ctx.collect(new Event(\"d2\", \"/detail\", 11000L)); Thread.sleep(5000L); ctx.collect(new Event(\"d2\", \"/detail\", 11001L)); Thread.sleep(5000L); } @Override public void cancel() { } } }","title":"processFunction"},{"location":"bigdata/flink/processFunction/#_1","text":"","title":"\u5904\u7406\u51fd\u6570"},{"location":"bigdata/flink/processFunction/#_2","text":"\u5904\u7406\u51fd\u6570\u5b9a\u4e49\u6570\u636e\u6d41\u7684\u8f6c\u6362\u64cd\u4f5c \u4e4b\u524d\u7684\u7b97\u5b50\u5b58\u5728\u7684\u95ee\u9898\uff1a map\u7b97\u5b50\uff0c\u5b9e\u73b0mapFunction \u53ea\u80fd\u83b7\u53d6\u8f6c\u6362\u540e\u7684\u6570\u636e \u7a97\u53e3\u805a\u5408\u7b97\u5b50\uff0caggregateFunction\u4e2d\u51fa\u6570\u636e\u5916\uff0c\u8fd8\u53ef\u4ee5\u83b7\u53d6\u72b6\u6001 \u5bcc\u51fd\u6570\uff0cRichMapFunction\u8c03\u7528getRuntimeContext() \u53ef\u4ee5\u83b7\u5f97\u72b6\u6001\uff0c\u8fd0\u884c\u4fe1\u606f \u4e4b\u524d\u6240\u6709\u7684\u7b97\u5b50\u662f\u65e0\u6cd5\u83b7\u53d6\u4e8b\u4ef6\u65f6\u95f4\u6c34\u4f4d\u7ebf\u4ee5\u53ca\u4f7f\u7528\u5b9a\u65f6\u5668 \u5904\u7406\u51fd\u6570\u5177\u6709\u4e0a\u9762\u6240\u6709\u7b97\u5b50\u7684\u529f\u80fd\u53e6\u5916\u8fd8\u53ef\u4ee5\u83b7\u53d6\u6c34\u4f4d\u7ebf\u548c\u6ce8\u518c\u5b9a\u65f6\u5668","title":"\u6982\u8ff0"},{"location":"bigdata/flink/processFunction/#processfunction","text":"","title":"processFunction \u4ecb\u7ecd"},{"location":"bigdata/flink/processFunction/#_3","text":"ProcessFunction \u7ee7\u627f\u4e86 AbstractRichFunction\uff0c\u6cdb\u578b\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8f93\u5165\u7c7b\u578b\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8f93\u51fa\u7c7b\u578b \u5185\u90e8\u5b9a\u4e49\u4e862\u4e2a\u65b9\u6cd5 processElement\uff1a\u6765\u4e00\u6761\u6570\u636e\u5c31\u4f1a\u8c03\u7528\u4e00\u6b21\u8be5\u65b9\u6cd5 onTimer():\u5b9a\u65f6\u5668","title":"\u6982\u8ff0"},{"location":"bigdata/flink/processFunction/#_4","text":"","title":"\u65b9\u6cd5"},{"location":"bigdata/flink/processFunction/#processelement","text":"value:\u8f93\u5165\u7684\u5143\u7d20 context:\u8868\u793a\u5f53\u524d\u8fd0\u884c\u7684\u4e0a\u4e0b\u6587\uff0c\u53ef\u4ee5\u83b7\u53d6\u5230\u5f53\u524d\u7684\u65f6\u95f4\u6233\uff0c\u5e76\u63d0\u4f9b\u4e86\u7528\u4e8e\u67e5\u8be2\u65f6\u95f4\u548c\u6ce8\u518c\u5b9a\u65f6\u5668\u7684\u201c\u5b9a\u65f6\u670d\u52a1\u201d(TimerService)\uff0c\u4ee5\u53ca\u53ef\u4ee5\u5c06\u6570\u636e\u53d1\u9001\u5230\u201c\u4fa7\u8f93\u51fa\u6d41\u201d(side output)\u7684\u65b9\u6cd5.output()\u3002 out:\u6570\u636e\u6536\u96c6\u5668\uff0cout.Collect()","title":"processElement"},{"location":"bigdata/flink/processFunction/#ontimer","text":"\u53ea\u5728keyedStream\u4f7f\u7528","title":"onTimer \u5b9a\u65f6\u5668"},{"location":"bigdata/flink/processFunction/#_5","text":"1.ProcessFunction \u6700\u57fa\u672c\u7684\u5904\u7406\u51fd\u6570\uff0c\u57fa\u4e8e DataStream \u76f4\u63a5\u8c03\u7528.process()\u65f6\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002 2.KeyedProcessFunction \u5bf9\u6d41\u6309\u952e\u5206\u533a\u540e\u7684\u5904\u7406\u51fd\u6570\uff0c\u57fa\u4e8e KeyedStream \u8c03\u7528.process()\u65f6\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002\u8981\u60f3\u4f7f\u7528 \u5b9a\u65f6\u5668\uff0c\u6bd4\u5982\u57fa\u4e8e KeyedStream\u3002 3.ProcessWindowFunction \u5f00\u7a97\u4e4b\u540e\u7684\u5904\u7406\u51fd\u6570\uff0c\u4e5f\u662f\u5168\u7a97\u53e3\u51fd\u6570\u7684\u4ee3\u8868\u3002\u57fa\u4e8e WindowedStream \u8c03\u7528.process()\u65f6\u4f5c \u4e3a\u53c2\u6570\u4f20\u5165\u3002 4.ProcessAllWindowFunction \u540c\u6837\u662f\u5f00\u7a97\u4e4b\u540e\u7684\u5904\u7406\u51fd\u6570\uff0c\u57fa\u4e8e AllWindowedStream \u8c03\u7528.process()\u65f6\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002 5.CoProcessFunction \u5408\u5e76(connect)\u4e24\u6761\u6d41\u4e4b\u540e\u7684\u5904\u7406\u51fd\u6570\uff0c\u57fa\u4e8e ConnectedStreams \u8c03\u7528.process()\u65f6\u4f5c\u4e3a\u53c2 \u6570\u4f20\u5165\u3002\u5173\u4e8e\u6d41\u7684\u8fde\u63a5\u5408\u5e76\u64cd\u4f5c 6.ProcessJoinFunction \u95f4\u9694\u8fde\u63a5(interval join)\u4e24\u6761\u6d41\u4e4b\u540e\u7684\u5904\u7406\u51fd\u6570\uff0c\u57fa\u4e8e IntervalJoined \u8c03\u7528.process()\u65f6\u4f5c\u4e3a \u53c2\u6570\u4f20\u5165\u3002 7.BroadcastProcessFunction \u5e7f\u64ad\u8fde\u63a5\u6d41\u5904\u7406\u51fd\u6570\uff0c\u57fa\u4e8e BroadcastConnectedStream \u8c03\u7528.process()\u65f6\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002\u8fd9 \u91cc\u7684\u201c\u5e7f\u64ad\u8fde\u63a5\u6d41\u201dBroadcastConnectedStream\uff0c\u662f\u4e00\u4e2a\u672a keyBy \u7684\u666e\u901a DataStream \u4e0e\u4e00\u4e2a\u5e7f \u64ad\u6d41(BroadcastStream)\u505a\u8fde\u63a5(conncet)\u4e4b\u540e\u7684\u4ea7\u7269\u3002 8.KeyedBroadcastProcessFunction \u6309\u952e\u5206\u533a\u7684\u5e7f\u64ad\u8fde\u63a5\u6d41\u5904\u7406\u51fd\u6570\uff0c\u540c\u6837\u662f\u57fa\u4e8e BroadcastConnectedStream \u8c03\u7528.process()\u65f6 \u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002\u4e0e BroadcastProcessFunction \u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u65f6\u7684\u5e7f\u64ad\u8fde\u63a5\u6d41\uff0c\u662f\u4e00\u4e2a KeyedStream \u4e0e\u5e7f\u64ad\u6d41(BroadcastStream)\u505a\u8fde\u63a5\u4e4b\u540e\u7684\u4ea7\u7269\u3002","title":"\u5206\u7c7b"},{"location":"bigdata/flink/processFunction/#keyedprocessfunction","text":"","title":"keyedProcessFunction"},{"location":"bigdata/flink/processFunction/#_6","text":"\u9996\u5148\u5bf9\u6d41\u8fdb\u884ckeyBy -> keyedStream \uff08\u903b\u8f91\u4e0a\u5206\u6d41\uff0c\u76f8\u540c\u7684key\u5728\u540c\u4e00\u5206\u533a\u8ba1\u7b97\uff09 keyedStream\u652f\u6301\u5b9a\u65f6\u5668","title":"\u6982\u8ff0"},{"location":"bigdata/flink/processFunction/#_7","text":"","title":"\u5b9a\u65f6\u5668"},{"location":"bigdata/flink/processFunction/#_8","text":"ProcessFunction \u7684\u4e0a\u4e0b\u6587(Context)\u4e2d\u63d0\u4f9b\u4e86.timerService()\u65b9\u6cd5\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a TimerService \u5bf9\u8c61 TimeService\u652f\u6301\u7684\u65b9\u6cd5 // \u83b7\u53d6\u5f53\u524d\u7684\u5904\u7406\u65f6\u95f4 long currentProcessingTime(); // \u83b7\u53d6\u5f53\u524d\u7684\u6c34\u4f4d\u7ebf(\u4e8b\u4ef6\u65f6\u95f4) long currentWatermark(); // \u6ce8\u518c\u5904\u7406\u65f6\u95f4\u5b9a\u65f6\u5668\uff0c\u5f53\u5904\u7406\u65f6\u95f4\u8d85\u8fc7 time \u65f6\u89e6\u53d1 void registerProcessingTimeTimer(long time); // \u6ce8\u518c\u4e8b\u4ef6\u65f6\u95f4\u5b9a\u65f6\u5668\uff0c\u5f53\u6c34\u4f4d\u7ebf\u8d85\u8fc7 time \u65f6\u89e6\u53d1 void registerEventTimeTimer(long time); // \u5220\u9664\u89e6\u53d1\u65f6\u95f4\u4e3a time \u7684\u5904\u7406\u65f6\u95f4\u5b9a\u65f6\u5668 void deleteProcessingTimeTimer(long time); // \u5220\u9664\u89e6\u53d1\u65f6\u95f4\u4e3a time \u7684\u5904\u7406\u65f6\u95f4\u5b9a\u65f6\u5668 void deleteEventTimeTimer(long time);","title":"\u6982\u8ff0"},{"location":"bigdata/flink/processFunction/#_9","text":"\u5b9a\u65f6\u5668 \u4f1a\u4ee5 key+\u65f6\u95f4 \u4f5c\u4e3a\u552f\u4e00\u952e \u53bb\u91cd \u5373 \u6bcf\u4e2akey&\u65f6\u95f4\u6233\u5373\u662f\u8c03\u7528\u591a\u6b21onTimer\uff0c\u4f46\u662f\u53ea\u4f1a\u89e6\u53d1\u4e00\u6b21 .onTimer()\u548c.processElement()\u65b9\u6cd5\u662f\u540c\u6b65\u8c03\u7528\u7684(synchronous)\uff0c\u6240\u4ee5\u4e0d\u4f1a\u6709\u5e76\u53d1\u95ee\u9898","title":"\u6ce8\u610f"},{"location":"bigdata/flink/processFunction/#_10","text":"","title":"\u4f7f\u7528"},{"location":"bigdata/flink/processFunction/#processingtime","text":"package com.matt.apitest.processfunction; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.KeyedProcessFunction; import org.apache.flink.util.Collector; import java.sql.Timestamp; import java.time.Duration; public class ProcessingTimeTimerTest1 { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); SingleOutputStreamOperator<Event> stream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()); stream.keyBy(d -> d.user) .process(new KeyedProcessFunction<String, Event, String>() { @Override public void processElement(Event event, KeyedProcessFunction<String, Event, String>.Context context, Collector<String> collector) throws Exception { long pTs = context.timerService().currentProcessingTime(); collector.collect(context.getCurrentKey() + \"\u6570\u636e\u5230\u8fbe\u65f6\u95f4\".concat(String.valueOf(pTs))); // \u6ce8\u518c10s \u5b9a\u65f6\u5668 context.timerService().registerProcessingTimeTimer(pTs + 10 * 1000); } @Override public void onTimer(long ts, KeyedProcessFunction<String, Event, String>.OnTimerContext ctx, Collector<String> out) throws Exception { out.collect(ctx.getCurrentKey() + \"\u5b9a\u65f6\u5668\u89e6\u53d1\u4e86\uff0c \u89e6\u53d1\u65f6\u95f4\" + new Timestamp(ts)); } }) .print(); env.execute(); } }","title":"\u5904\u7406\u65f6\u95f4 processingTime"},{"location":"bigdata/flink/processFunction/#eventtime","text":"package com.matt.apitest.processfunction; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.KeyedProcessFunction; import org.apache.flink.streaming.api.functions.ProcessFunction; import org.apache.flink.streaming.api.functions.source.SourceFunction; import org.apache.flink.util.Collector; import javax.transaction.TransactionRequiredException; import java.sql.Timestamp; import java.time.Duration; import java.util.concurrent.TransferQueue; /** * @author matt * @create 2023-02-28 23:54 * @desc xxx */ public class EventTimeTimerTest1 { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); SingleOutputStreamOperator<Event> stream = env.addSource(new CustomSource()) .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); stream.keyBy(d -> d.user) .process(new KeyedProcessFunction<String, Event, String>() { @Override public void processElement(Event event, KeyedProcessFunction<String, Event, String>.Context context, Collector<String> collector) throws Exception { long ts = context.timestamp(); String outD = context.getCurrentKey() + new Timestamp(ts); outD += \"wk\" + context.timerService().currentWatermark(); collector.collect(outD); // \u6ce8\u518c10s \u5b9a\u65f6\u5668 context.timerService().registerEventTimeTimer(ts + 10 * 1000); } @Override public void onTimer(long ts, KeyedProcessFunction<String, Event, String>.OnTimerContext ctx, Collector<String> out) throws Exception { out.collect(ctx.getCurrentKey() + \"\u5b9a\u65f6\u5668\u89e6\u53d1\u4e86\uff0c \u89e6\u53d1\u65f6\u95f4\" + new Timestamp(ts) + \"wk\" + ctx.timerService().currentWatermark()); } }) .print(); env.execute(); } public static class CustomSource implements SourceFunction<Event> { @Override public void run(SourceContext<Event> ctx) throws Exception { ctx.collect(new Event(\"d1\", \"/detail\", 1000L)); Thread.sleep(5000L); ctx.collect(new Event(\"d2\", \"/detail\", 11000L)); Thread.sleep(5000L); ctx.collect(new Event(\"d2\", \"/detail\", 11001L)); Thread.sleep(5000L); } @Override public void cancel() { } } }","title":"\u4e8b\u4ef6\u65f6\u95f4 eventTime"},{"location":"bigdata/flink/quickstart/","text":"helloword wc 1.\u65b0\u5efamaven\u9879\u76ee 2.\u7f16\u5199pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"> <modelVersion>4.0.0</modelVersion> <groupId>com.matt</groupId> <artifactId>stu-flink</artifactId> <version>1.0-SNAPSHOT</version> <properties> <flink.version>1.13.0</flink.version> <java.version>1.8</java.version> <scala.binary.version>2.12</scala.binary.version> <slf4j.version>1.7.30</slf4j.version> </properties> <dependencies> <!-- flink \u4f7f\u7528\u5230scala \u7ec4\u4ef6--> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-java</artifactId> <version>${flink.version}</version> </dependency> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-streaming-java_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-clients_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> <!-- \u65e5\u5fd7 --> <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-api</artifactId> <version>${slf4j.version}</version> </dependency> <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-log4j12</artifactId> <version>${slf4j.version}</version> </dependency> <dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-to-slf4j</artifactId> <version>2.14.0</version> </dependency> </dependencies> <build> <plugins> <!--\u6253\u5305\u5de5\u5177--> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId> <version>3.0.0</version> <configuration> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> </descriptorRefs> </configuration> <executions> <execution> <id>make-assembly</id> <phase>package</phase> <goals> <goal>single</goal> </goals> </execution> </executions> </plugin> </plugins> </build> </project> 3.\u7f16\u5199\u65e5\u5fd7\u914d\u7f6e\u6587\u4ef6 log4j.properties log4j.rootLogger=error, stdout log4j.appender.stdout=org.apache.log4j.ConsoleAppender log4j.appender.stdout.layout=org.apache.log4j.PatternLayout log4j.appender.stdout.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n \u8fd0\u884c\u65f6\u53c2\u6570\u6307\u5b9a 4.\u5177\u4f53\u4ee3\u7801 \u90e8\u7f72 mac-Standalone \u6a21\u5f0f \u4fee\u6539\u6587\u4ef6\u6240\u6709\u8005 # \u67e5\u770b\u5f53\u524d\u7528\u6237 whoami # \u67e5\u770b\u7528\u6237\u7ec4 id matt # \u7528\u6237\u540d\uff1a\u7ec4\u540d chown -R matt:staff /opt/software chown -R matt:staff /opt/module \u67e5\u770b\u66f4\u591a\u7528\u6237\u76f8\u5173\u4fe1\u606f https://blog.csdn.net/qq_26129413/article/details/109675386 \u4e0b\u8f7d\u89e3\u538b tar -zxvf flink-1.13.0-bin-scala_2.12.tgz -C /opt/module \u914d\u7f6e \u4fee\u6539 flink/conf/flink-conf.yaml \u6587\u4ef6 jobmanager \u5982\u679c\u662f\u5355\u673a\u5b89\u88c5\u9ed8\u8ba4\u5373\u53ef\uff0c\u96c6\u7fa4\u5b89\u88c5\u914d\u7f6e\u67d0\u53f0\u4e3b\u673a jobmanager.rpc.address: localhost \u4fee\u6539 /conf/workers \u6587\u4ef6 taskmanager \u4ece\u673a\u673a\u5668\u5217\u8868 localhost \u5982\u679c\u662f\u96c6\u7fa4\u5b89\u88c5\u53ef\u4ee5\u914d\u7f6e\u4e3a matt06 matt07 \u5982\u679c\u662f\u96c6\u7fa4\u5b89\u88c5\u9700\u8981\u628a flink \u540c\u6b65\u5230\u5176\u4ed6\u673a\u5668 \u5176\u4ed6\u914d\u7f6e jobmanager.memory.process.size:\u5bf9JobManager\u8fdb\u7a0b\u53ef\u4f7f\u7528\u5230\u7684\u5168\u90e8\u5185\u5b58\u8fdb\u884c\u914d\u7f6e\uff0c\u5305\u62ec JVM \u5143\u7a7a\u95f4\u548c\u5176\u4ed6\u5f00\u9500\uff0c\u9ed8\u8ba4\u4e3a 1600M\uff0c\u53ef\u4ee5\u6839\u636e\u96c6\u7fa4\u89c4\u6a21\u8fdb\u884c\u9002\u5f53\u8c03\u6574\u3002 taskmanager.memory.process.size:\u5bf9TaskManager\u8fdb\u7a0b\u53ef\u4f7f\u7528\u5230\u7684\u5168\u90e8\u5185\u5b58\u8fdb\u884c\u914d\u7f6e\uff0c\u5305\u62ec JVM \u5143\u7a7a\u95f4\u548c\u5176\u4ed6\u5f00\u9500\uff0c\u9ed8\u8ba4\u4e3a 1600M\uff0c\u53ef\u4ee5\u6839\u636e\u96c6\u7fa4\u89c4\u6a21\u8fdb\u884c\u9002\u5f53\u8c03\u6574\u3002 taskmanager.numberOfTaskSlots:\u5bf9\u6bcf\u4e2aTaskManager\u80fd\u591f\u5206\u914d\u7684Slot\u6570\u91cf\u8fdb\u884c\u914d\u7f6e\uff0c\u9ed8\u8ba4\u4e3a 1\uff0c\u53ef\u6839\u636e TaskManager \u6240\u5728\u7684\u673a\u5668\u80fd\u591f\u4f9b\u7ed9 Flink \u7684 CPU \u6570\u91cf\u51b3\u5b9a\u3002\u6240\u8c13Slot \u5c31\u662f TaskManager \u4e2d\u5177\u4f53\u8fd0\u884c\u4e00\u4e2a\u4efb\u52a1\u6240\u5206\u914d\u7684\u8ba1\u7b97\u8d44\u6e90\u3002 parallelism.default:Flink\u4efb\u52a1\u6267\u884c\u7684\u9ed8\u8ba4\u5e76\u884c\u5ea6\uff0c\u4f18\u5148\u7ea7\u4f4e\u4e8e\u4ee3\u7801\u4e2d\u8fdb\u884c\u7684\u5e76\u884c\u5ea6\u914d\u7f6e\u548c\u4efb\u52a1\u63d0\u4ea4\u4ea4\u65f6\u4f7f\u7528\u53c2\u6570\u6307\u5b9a\u7684\u5e76\u884c\u5ea6\u6570\u91cf\u3002 \u542f\u52a8 \u5728jobmanger\u673a\u5668\u4e0a\u8fdb\u884c\u542f\u52a8 bin start-cluster.sh stop-cluster.sh \u63d0\u4ea4\u4efb\u52a1 \u4f9d\u8d56\u7684jar \u5305\u4e5f\u6253\u8fdb\u53bb <build> <plugins> <!--\u6253\u5305\u5de5\u5177--> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId> <version>3.0.0</version> <configuration> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> </descriptorRefs> </configuration> <executions> <execution> <id>make-assembly</id> <phase>package</phase> <goals> <goal>single</goal> </goals> </execution> </executions> </plugin> </plugins> </build> ui \u63d0\u4ea4 http://localhost:8081/#/overview \u276f ./bin/flink list Waiting for response... ------------------ Running/Restarting Jobs ------------------- 24.12.2022 15:11:40 : a21e498f6c313c5be5941d45aaef4ed1 : Flink Streaming Job (RUNNING) -------------------------------------------------------------- No scheduled jobs. \u276f ./bin/flink cancel a21e498f6c313c5be5941d45aaef4ed1 Cancelling job a21e498f6c313c5be5941d45aaef4ed1. Cancelled job a21e498f6c313c5be5941d45aaef4ed1. \u547d\u4ee4\u884c\u63d0\u4ea4 \u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u63d0\u4ea4\u4e5f\u53ef\u4ee5ui\u8fdb\u884c\u63d0\u4ea4 -m ip ./bin/flink run -c com.matt.wc.StreamWordCount -p 1 stu-flink-1.0-SNAPSHOT.jar --host localhost --port 777 \u90e8\u7f72\u6a21\u5f0f \u4f1a\u8bdd\u6a21\u5f0f \u542f\u52a8\u4e00\u4e2aflink\u96c6\u7fa4 \uff0c\u63d0\u4ea4\u4f5c\u4e1a\uff0c \u6240\u6709\u4f5c\u4e1a\u516c\u7528\u4e00\u4e2a\u96c6\u7fa4 \u5355\u4f5c\u4e1a\u6a21\u5f0f \u7531\u5ba2\u6237\u7aef\u8fd0\u884c \u5e94\u7528\u7a0b\u5e8f\uff0c\u7136\u540e\u542f\u52a8\u96c6\u7fa4\uff0c\u4f5c\u4e1a\u88ab\u4ea4\u7ed9 JobManager\uff0c\u8fdb\u800c\u5206\u53d1\u7ed9 TaskManager \u6267\u884c\u3002\u4f5c\u4e1a\u5b8c\u6210\u540e\uff0c\u96c6\u7fa4\u5c31\u4f1a\u5173\u95ed\uff0c\u6240\u6709\u8d44\u6e90\u4e5f\u4f1a\u91ca\u653e\u3002 Flink \u672c\u8eab\u65e0\u6cd5\u76f4\u63a5\u8fd9\u6837\u8fd0\u884c\uff0c\u6240\u4ee5\u5355\u4f5c\u4e1a\u6a21\u5f0f\u4e00\u822c\u9700\u8981\u501f\u52a9\u4e00\u4e9b\u8d44\u6e90\u7ba1\u7406\u6846\u67b6\u6765\u542f\u52a8\u96c6\u7fa4\uff0c\u6bd4\u5982 YARN\u3001Kubernetes\u3002 1.15 \u5df2\u88ab\u629b\u5f03 \u5e94\u7528\u6a21\u5f0f \u4e0d\u9700\u8981\u5ba2\u6237\u7aef\uff0c\u76f4\u63a5\u628a\u5e94\u7528\u63d0\u4ea4\u5230 JobManger \u4e0a\u8fd0\u884c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e00\u4e2a\u63d0\u4ea4\u7684\u5e94\u7528\u5355\u72ec\u542f\u52a8\u4e00\u4e2a JobManager\uff0c\u4e5f\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u96c6\u7fa4\u3002\u8fd9\u4e2a JobManager \u53ea\u4e3a\u6267\u884c\u8fd9\u4e00\u4e2a\u5e94\u7528\u800c\u5b58\u5728\uff0c\u6267\u884c\u7ed3\u675f\u4e4b\u540e JobManager \u4e5f\u5c31\u5173\u95ed\u4e86\u3002 \u4f1a\u5305\u542b\u591a\u4e2a\u4f5c\u4e1a \u72ec\u7acb\u6a21\u5f0f\u90e8\u7f72 \u4f1a\u8bdd\u6a21\u5f0f \u5148\u542f\u52a8\u96c6\u7fa4\u4f1a\u63d0\u4ea4\u4f5c\u4e1a \u5355\u4f5c\u4e1a\u6a21\u5f0f Flink \u672c\u8eab\u65e0\u6cd5\u76f4\u63a5\u4ee5\u5355\u4f5c\u4e1a\u65b9\u5f0f\u542f\u52a8\u96c6\u7fa4\uff0c\u4e00\u822c\u9700\u8981\u501f\u52a9\u4e00\u4e9b\u8d44 \u6e90\u7ba1\u7406\u5e73\u53f0\u3002\u6240\u4ee5 Flink \u7684\u72ec\u7acb(Standalone)\u96c6\u7fa4\u5e76\u4e0d\u652f\u6301\u5355\u4f5c\u4e1a\u6a21\u5f0f\u90e8\u7f72\u3002 \u5e94\u7528\u6a21\u5f0f\u90e8\u7f72 \u5e94\u7528\u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u63d0\u524d\u521b\u5efa\u96c6\u7fa4\uff0c\u6240\u4ee5\u4e0d\u80fd\u8c03\u7528 start-cluster.sh \u811a\u672c\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u540c\u6837\u5728 bin \u76ee\u5f55\u4e0b\u7684 standalone-job.sh \u6765\u521b\u5efa\u4e00\u4e2a JobManager\u3002 \u5177\u4f53\u6b65\u9aa4\u5982\u4e0b: (1)\u8fdb\u5165\u5230 Flink \u7684\u5b89\u88c5\u8def\u5f84\u4e0b\uff0c\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684 jar \u5305\u653e\u5230 lib/\u76ee\u5f55\u4e0b\u3002 cp ./FlinkTutorial-1.0-SNAPSHOT.jar lib/ (2)\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u542f\u52a8 JobManager\u3002 ./bin/standalone-job.sh start --job-classname com.atguigu.wc.StreamWordCount \u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u6307\u5b9a\u4f5c\u4e1a\u5165\u53e3\u7c7b\uff0c\u811a\u672c\u4f1a\u5230 lib \u76ee\u5f55\u626b\u6240\u6709\u7684 jar \u5305\u3002 (3)\u540c\u6837\u662f\u4f7f\u7528 bin \u76ee\u5f55\u4e0b\u7684\u811a\u672c\uff0c\u542f\u52a8 TaskManager\u3002 ./bin/taskmanager.sh start (4)\u5982\u679c\u5e0c\u671b\u505c\u6389\u96c6\u7fa4\uff0c\u540c\u6837\u53ef\u4ee5\u4f7f\u7528\u811a\u672c\uff0c\u547d\u4ee4\u5982\u4e0b\u3002 ./bin/standalone-job.sh stop ./bin/taskmanager.sh stop TODO yarn/k8s\u90e8\u7f72 \u8fd0\u884c\u67b6\u6784 \u6784\u6210 JobManager JobManager \u662f\u4e00\u4e2a Flink \u96c6\u7fa4\u4e2d\u4efb\u52a1\u7ba1\u7406\u548c\u8c03\u5ea6\u7684\u6838\u5fc3\uff0c\u662f\u63a7\u5236\u5e94\u7528\u6267\u884c\u7684\u4e3b\u8fdb\u7a0b\u3002\u6bcf\u4e2a\u5e94\u7528\u90fd\u5e94\u8be5\u88ab\u552f\u4e00\u7684 JobManager \u6240\u63a7\u5236\u6267\u884c\u3002\u5f53\u7136\uff0c\u5728\u9ad8\u53ef\u7528(HA)\u7684\u573a\u666f\u4e0b\u53ef\u80fd\u4f1a\u51fa\u73b0\u591a\u4e2a JobManager;\u8fd9\u65f6\u53ea\u6709\u4e00\u4e2a\u662f\u6b63\u5728\u8fd0\u884c\u7684\u9886\u5bfc\u8282\u70b9(leader)\uff0c\u5176\u4ed6\u90fd\u662f\u5907\u7528\u8282\u70b9(standby)\u3002 JobMaster \u5728\u4f5c\u4e1a\u63d0\u4ea4\u65f6\uff0cJobMaster \u4f1a\u5148\u63a5\u6536\u5230\u8981\u6267\u884c\u7684\u5e94\u7528\u3002\u8fd9\u91cc\u6240\u8bf4\u201c\u5e94\u7528\u201d\u4e00\u822c\u662f\u5ba2\u6237\u7aef\u63d0\u4ea4 \u4ea4\u6765\u7684\uff0c\u5305\u62ec:Jar \u5305\uff0c\u6570\u636e\u6d41\u56fe(dataflow graph)\uff0c\u548c\u4f5c\u4e1a\u56fe(JobGraph)\u3002 JobMaster \u4f1a\u628a JobGraph \u8f6c\u6362\u6210\u4e00\u4e2a\u7269\u7406\u5c42\u9762\u7684\u6570\u636e\u6d41\u56fe\uff0c\u8fd9\u4e2a\u56fe\u88ab\u53eb\u4f5c\u201c\u6267\u884c\u56fe\u201d (ExecutionGraph)\uff0c\u5b83\u5305\u542b\u4e86\u6240\u6709\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\u7684\u4efb\u52a1\u3002JobMaster \u4f1a\u5411\u8d44\u6e90\u7ba1\u7406\u5668 (ResourceManager)\u53d1\u51fa\u8bf7\u6c42\uff0c\u7533\u8bf7\u6267\u884c\u4efb\u52a1\u5fc5\u8981\u7684\u8d44\u6e90\u3002\u4e00\u65e6\u5b83\u83b7\u53d6\u5230\u4e86\u8db3\u591f\u7684\u8d44\u6e90\uff0c\u5c31\u4f1a\u5c06\u6267\u884c\u56fe\u5206\u53d1\u5230\u771f\u6b63\u8fd0\u884c\u5b83\u4eec\u7684 TaskManager \u4e0a\u3002 \u800c\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0cJobMaster \u4f1a\u8d1f\u8d23\u6240\u6709\u9700\u8981\u4e2d\u592e\u534f\u8c03\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u8bf4\u68c0\u67e5\u70b9(checkpoints)\u7684\u534f\u8c03\u3002 \u8d44\u6e90\u7ba1\u7406\u5668(ResourceManager) \u4e3b\u8981\u8d1f\u8d23\u8d44\u6e90\u7684\u5206\u914d\u548c\u7ba1\u7406\u3002\u5728 Flink \u96c6\u7fa4\u4e2d\u53ea\u6709\u4e00\u4e2a\u3002\u6240\u8c13\u201c\u8d44\u6e90\u201d\uff0c \u4e3b\u8981\u662f\u6307 TaskManager \u7684\u4efb\u52a1\u69fd(task slots)\u3002\u4efb\u52a1\u69fd\u5c31\u662f Flink \u96c6\u7fa4\u4e2d\u7684\u8d44\u6e90\u8c03\u914d\u5355\u5143\uff0c\u5305\u542b \u4e86\u673a\u5668\u7528\u6765\u6267\u884c\u8ba1\u7b97\u7684\u4e00\u7ec4 CPU \u548c\u5185\u5b58\u8d44\u6e90\u3002\u6bcf\u4e00\u4e2a\u4efb\u52a1(Task)\u90fd\u9700\u8981\u5206\u914d\u5230\u4e00\u4e2a slot \u4e0a \u6267\u884c\u3002 Flink \u7684 ResourceManager\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u73af\u5883\u548c\u8d44\u6e90\u7ba1\u7406\u5e73\u53f0(\u6bd4\u5982 Standalone \u90e8\u7f72\uff0c\u6216\u8005 YARN)\uff0c\u6709\u4e0d\u540c\u7684\u5177\u4f53\u5b9e\u73b0\u3002\u5728 Standalone \u90e8\u7f72\u65f6\uff0c\u56e0\u4e3a TaskManager \u662f\u5355\u72ec\u542f\u52a8\u7684(\u6ca1\u6709 Per-Job \u6a21\u5f0f)\uff0c\u6240\u4ee5 ResourceManager \u53ea\u80fd\u5206\u53d1\u53ef\u7528 TaskManager \u7684\u4efb\u52a1\u69fd\uff0c\u4e0d\u80fd\u5355\u72ec\u542f\u52a8\u65b0 TaskManager\u3002 \u800c\u5728\u6709\u8d44\u6e90\u7ba1\u7406\u5e73\u53f0\u65f6\uff0c\u5c31\u4e0d\u53d7\u6b64\u9650\u5236\u3002\u5f53\u65b0\u7684\u4f5c\u4e1a\u7533\u8bf7\u8d44\u6e90\u65f6\uff0cResourceManager \u4f1a\u5c06 \u6709\u7a7a\u95f2\u69fd\u4f4d\u7684 TaskManager \u5206\u914d\u7ed9 JobMaster\u3002\u5982\u679c ResourceManager \u6ca1\u6709\u8db3\u591f\u7684\u4efb\u52a1\u69fd\uff0c\u5b83 \u8fd8\u53ef\u4ee5\u5411\u8d44\u6e90\u63d0\u4f9b\u5e73\u53f0\u53d1\u8d77\u4f1a\u8bdd\uff0c\u8bf7\u6c42\u63d0\u4f9b\u542f\u52a8 TaskManager \u8fdb\u7a0b\u7684\u5bb9\u5668\u3002\u53e6\u5916\uff0c ResourceManager \u8fd8\u8d1f\u8d23\u505c\u6389\u7a7a\u95f2\u7684 TaskManager\uff0c\u91ca\u653e\u8ba1\u7b97\u8d44\u6e90\u3002 Dispatcher \u4e3b\u8981\u8d1f\u8d23\u63d0\u4f9b\u4e00\u4e2a REST \u63a5\u53e3\uff0c\u7528\u6765\u63d0\u4ea4\u5e94\u7528\uff0c\u5e76\u4e14\u8d1f\u8d23\u4e3a\u6bcf\u4e00\u4e2a\u65b0\u63d0\u4ea4\u7684\u4f5c \u4e1a\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 JobMaster \u7ec4\u4ef6\u3002Dispatcher \u4e5f\u4f1a\u542f\u52a8\u4e00\u4e2a Web UI\uff0c\u7528\u6765\u65b9\u4fbf\u5730\u5c55\u793a\u548c\u76d1\u63a7\u4f5c\u4e1a\u6267\u884c\u7684\u4fe1\u606f\u3002Dispatcher \u5728\u67b6\u6784\u4e2d\u5e76\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u5728\u4e0d\u540c\u7684\u90e8\u7f72\u6a21\u5f0f\u4e0b\u53ef\u80fd\u4f1a\u88ab\u5ffd\u7565\u6389\u3002 TaskManager TaskManager \u662f Flink \u4e2d\u7684\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u6570\u636e\u6d41\u7684\u5177\u4f53\u8ba1\u7b97\u5c31\u662f\u5b83\u6765\u505a\u7684\uff0c\u6240\u4ee5\u4e5f\u88ab\u79f0\u4e3a \u201cWorker\u201d\u3002Flink \u96c6\u7fa4\u4e2d\u5fc5\u987b\u81f3\u5c11\u6709\u4e00\u4e2a TaskManager; \u5f53\u7136\u7531\u4e8e\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684\u8003\u8651\uff0c\u901a\u5e38\u4f1a \u6709\u591a\u4e2a TaskManager \u8fd0\u884c\uff0c\u6bcf\u4e00\u4e2a TaskManager \u90fd\u5305\u542b\u4e86\u4e00\u5b9a\u6570\u91cf\u7684\u4efb\u52a1\u69fd(task slots)\u3002Slot \u662f\u8d44\u6e90\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\uff0cslot \u7684\u6570\u91cf\u9650\u5236\u4e86 TaskManager \u80fd\u591f\u5e76\u884c\u5904\u7406\u7684\u4efb\u52a1\u6570\u91cf\u3002 \u542f\u52a8\u4e4b\u540e\uff0cTaskManager \u4f1a\u5411\u8d44\u6e90\u7ba1\u7406\u5668\u6ce8\u518c\u5b83\u7684 slots;\u6536\u5230\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u6307\u4ee4\u540e\uff0c TaskManager\u5c31\u4f1a\u5c06\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u69fd\u4f4d\u63d0\u4f9b\u7ed9JobMaster\u8c03\u7528\uff0cJobMaster\u5c31\u53ef\u4ee5\u5206\u914d\u4efb\u52a1\u6765\u6267\u884c\u4e86\u3002 \u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0cTaskManager \u53ef\u4ee5\u7f13\u51b2\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u8ddf\u5176\u4ed6\u8fd0\u884c\u540c\u4e00\u5e94\u7528\u7684 TaskManager\u4ea4\u6362\u6570\u636e\u3002 \u4efb\u52a1\u63d0\u4ea4\u6d41\u7a0b \u62bd\u8c61 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7531\u5ba2\u6237\u7aef(App)\u901a\u8fc7\u5206\u53d1\u5668\u63d0\u4f9b\u7684 REST \u63a5\u53e3\uff0c\u5c06\u4f5c\u4e1a\u63d0\u4ea4\u7ed9JobManager\u3002 \u7531\u5206\u53d1\u5668\u542f\u52a8 JobMaster\uff0c\u5e76\u5c06\u4f5c\u4e1a(\u5305\u542b JobGraph)\u63d0\u4ea4\u7ed9 JobMaster\u3002 JobMaster \u5c06 JobGraph \u89e3\u6790\u4e3a\u53ef\u6267\u884c\u7684 ExecutionGraph\uff0c\u5f97\u5230\u6240\u9700\u7684\u8d44\u6e90\u6570\u91cf\uff0c\u7136\u540e\u5411\u8d44\u6e90\u7ba1\u7406\u5668\u8bf7\u6c42\u8d44\u6e90(slots)\u3002 \u8d44\u6e90\u7ba1\u7406\u5668\u5224\u65ad\u5f53\u524d\u662f\u5426\u7531\u8db3\u591f\u7684\u53ef\u7528\u8d44\u6e90;\u5982\u679c\u6ca1\u6709\uff0c\u542f\u52a8\u65b0\u7684 TaskManager\u3002 TaskManager \u542f\u52a8\u4e4b\u540e\uff0c\u5411 ResourceManager \u6ce8\u518c\u81ea\u5df1\u7684\u53ef\u7528\u4efb\u52a1\u69fd(slots)\u3002 \u8d44\u6e90\u7ba1\u7406\u5668\u901a\u77e5 TaskManager \u4e3a\u65b0\u7684\u4f5c\u4e1a\u63d0\u4f9b slots\u3002 TaskManager \u8fde\u63a5\u5230\u5bf9\u5e94\u7684 JobMaster\uff0c\u63d0\u4f9b slots\u3002 JobMaster \u5c06\u9700\u8981\u6267\u884c\u7684\u4efb\u52a1\u5206\u53d1\u7ed9 TaskManager\u3002 TaskManager \u6267\u884c\u4efb\u52a1\uff0c\u4e92\u76f8\u4e4b\u95f4\u53ef\u4ee5\u4ea4\u6362\u6570\u636e \u90e8\u7f72\u6a21\u5f0f\u4e0d\u540c\uff0c\u6709\u4e9b\u6b65\u9aa4\u53ef\u80fd\u4e0d\u76f8\u540c \u72ec\u7acb\u6a21\u5f0f \u4f1a\u8bdd\u6a21\u5f0f\u548c\u5e94\u7528\u6a21\u5f0f \u4fe9\u8005\u662f\u76f8\u4f3c\u7684 \u4e0d\u4f1a\u542f\u52a8 TaskManager\uff0c\u800c\u4e14\u76f4\u63a5\u5411\u5df2\u6709\u7684 TaskManager \u8981\u6c42\u8d44\u6e90 yarn \u96c6\u7fa4 \u4f1a\u8bdd\u6a21\u5f0f \u5728\u4f1a\u8bdd\u6a21\u5f0f\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u5148\u542f\u52a8\u4e00\u4e2a YARN session\uff0c\u8fd9\u4e2a\u4f1a\u8bdd\u4f1a\u521b\u5efa\u4e00\u4e2a Flink \u96c6\u7fa4\u3002 \u8fd9\u91cc\u53ea\u542f\u52a8\u4e86 JobManager\uff0c\u800c TaskManager \u53ef\u4ee5\u6839\u636e\u9700\u8981\u52a8\u6001\u5730\u542f\u52a8\u3002\u5728 JobManager \u5185\u90e8\uff0c\u7531\u4e8e\u8fd8\u6ca1\u6709\u63d0\u4ea4\u4f5c\u4e1a\uff0c\u6240\u4ee5\u53ea\u6709 ResourceManager \u548c Dispatcher \u5728\u8fd0\u884c \u5ba2\u6237\u7aef\u901a\u8fc7 REST \u63a5\u53e3\uff0c\u5c06\u4f5c\u4e1a\u63d0\u4ea4\u7ed9\u5206\u53d1\u5668\u3002 \u5206\u53d1\u5668\u542f\u52a8 JobMaster\uff0c\u5e76\u5c06\u4f5c\u4e1a(\u5305\u542b JobGraph)\u63d0\u4ea4\u7ed9 JobMaster\u3002 JobMaster \u5411\u8d44\u6e90\u7ba1\u7406\u5668\u8bf7\u6c42\u8d44\u6e90(slots)\u3002 \u8d44\u6e90\u7ba1\u7406\u5668\u5411 YARN \u7684\u8d44\u6e90\u7ba1\u7406\u5668\u8bf7\u6c42 container \u8d44\u6e90\u3002 YARN \u542f\u52a8\u65b0\u7684 TaskManager \u5bb9\u5668\u3002 TaskManager \u542f\u52a8\u4e4b\u540e\uff0c\u5411 Flink \u7684\u8d44\u6e90\u7ba1\u7406\u5668\u6ce8\u518c\u81ea\u5df1\u7684\u53ef\u7528\u4efb\u52a1\u69fd\u3002 \u8d44\u6e90\u7ba1\u7406\u5668\u901a\u77e5 TaskManager \u4e3a\u65b0\u7684\u4f5c\u4e1a\u63d0\u4f9b slots\u3002 TaskManager \u8fde\u63a5\u5230\u5bf9\u5e94\u7684 JobMaster\uff0c\u63d0\u4f9b slots\u3002 JobMaster \u5c06\u9700\u8981\u6267\u884c\u7684\u4efb\u52a1\u5206\u53d1\u7ed9 TaskManager\uff0c\u6267\u884c\u4efb\u52a1\u3002 \u5355\u4f5c\u4e1a\u6a21\u5f0f \u5ba2\u6237\u7aef\u5c06\u4f5c\u4e1a\u63d0\u4ea4\u7ed9 YARN \u7684\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u8fd9\u4e00\u6b65\u4e2d\u4f1a\u540c\u65f6\u5c06 Flink \u7684 Jar \u5305\u548c\u914d\u7f6e \u4e0a\u4f20\u5230 HDFS\uff0c\u4ee5\u4fbf\u540e\u7eed\u542f\u52a8 Flink \u76f8\u5173\u7ec4\u4ef6\u7684\u5bb9\u5668\u3002 YARN\u7684\u8d44\u6e90\u7ba1\u7406\u5668\u5206\u914dContainer\u8d44\u6e90\uff0c\u542f\u52a8Flink JobManager\uff0c\u5e76\u5c06\u4f5c\u4e1a\u63d0\u4ea4\u7ed9 JobMaster\u3002\u8fd9\u91cc\u7701\u7565\u4e86 Dispatcher \u7ec4\u4ef6\u3002 JobMaster \u5411\u8d44\u6e90\u7ba1\u7406\u5668\u8bf7\u6c42\u8d44\u6e90(slots)\u3002 \u8d44\u6e90\u7ba1\u7406\u5668\u5411 YARN \u7684\u8d44\u6e90\u7ba1\u7406\u5668\u8bf7\u6c42 container \u8d44\u6e90\u3002 YARN \u542f\u52a8\u65b0\u7684 TaskManager \u5bb9\u5668\u3002 TaskManager \u542f\u52a8\u4e4b\u540e\uff0c\u5411 Flink \u7684\u8d44\u6e90\u7ba1\u7406\u5668\u6ce8\u518c\u81ea\u5df1\u7684\u53ef\u7528\u4efb\u52a1\u69fd\u3002 \u8d44\u6e90\u7ba1\u7406\u5668\u901a\u77e5 TaskManager \u4e3a\u65b0\u7684\u4f5c\u4e1a\u63d0\u4f9b slots\u3002 TaskManager \u8fde\u63a5\u5230\u5bf9\u5e94\u7684 JobMaster\uff0c\u63d0\u4f9b slots\u3002 JobMaster \u5c06\u9700\u8981\u6267\u884c\u7684\u4efb\u52a1\u5206\u53d1\u7ed9 TaskManager\uff0c\u6267\u884c\u4efb\u52a1\u3002 \u53ef\u89c1\uff0c\u533a\u522b\u53ea\u5728\u4e8e JobManager \u7684\u542f\u52a8\u65b9\u5f0f\uff0c\u4ee5\u53ca\u7701\u53bb\u4e86\u5206\u53d1\u5668\u3002\u5f53\u7b2c 2 \u6b65\u4f5c\u4e1a\u63d0\u4ea4\u4ea4\u7ed9 JobMaster\uff0c\u4e4b\u540e\u7684\u6d41\u7a0b\u5c31\u4e0e\u4f1a\u8bdd\u6a21\u5f0f\u5b8c\u5168\u4e00\u6837\u4e86\u3002 \u5e94\u7528\u6a21\u5f0f \u5e94\u7528\u6a21\u5f0f\u4e0e\u5355\u4f5c\u4e1a\u6a21\u5f0f\u7684\u63d0\u4ea4\u6d41\u7a0b\u975e\u5e38\u76f8\u4f3c\uff0c\u53ea\u662f\u521d\u59cb\u63d0\u4ea4\u7ed9 YARN \u8d44\u6e90\u7ba1\u7406\u5668\u7684\u4e0d\u518d\u662f\u5177\u4f53\u7684\u4f5c\u4e1a\uff0c\u800c\u662f\u6574\u4e2a\u5e94\u7528\u3002\u4e00\u4e2a\u5e94\u7528\u4e2d\u53ef\u80fd\u5305\u542b\u4e86\u591a\u4e2a\u4f5c\u4e1a\uff0c\u8fd9\u4e9b\u4f5c\u4e1a\u90fd\u5c06\u5728 Flink \u96c6\u7fa4\u4e2d\u542f\u52a8\u5404\u81ea\u5bf9\u5e94\u7684 JobMaster\u3002 \u4e00\u4e9b\u91cd\u8981\u6982\u5ff5 \u6570\u636e\u6d41\u56fe(Dataflow Graph) \u6240\u6709\u7684 Flink \u7a0b\u5e8f\u90fd\u53ef\u4ee5\u5f52\u7eb3\u4e3a\u7531\u4e09\u90e8\u5206\u6784\u6210:Source\u3001Transformation \u548c Sink\u3002 Source\u8868\u793a\u201c\u6e90\u7b97\u5b50\u201d\uff0c\u8d1f\u8d23\u8bfb\u53d6\u6570\u636e\u6e90\u3002 Transformation\u8868\u793a\u201c\u8f6c\u6362\u7b97\u5b50\u201d\uff0c\u5229\u7528\u5404\u79cd\u7b97\u5b50\u8fdb\u884c\u5904\u7406\u52a0\u5de5\u3002 Sink\u8868\u793a\u201c\u4e0b\u6c89\u7b97\u5b50\u201d\uff0c\u8d1f\u8d23\u6570\u636e\u7684\u8f93\u51fa\u3002 \u5728\u8fd0\u884c\u65f6\uff0cFlink \u7a0b\u5e8f\u4f1a\u88ab\u6620\u5c04\u6210\u6240\u6709\u7b97\u5b50\u6309\u7167\u903b\u8f91\u987a\u5e8f\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u4e00\u5f20\u56fe\uff0c\u8fd9\u88ab\u79f0\u4e3a \u201c\u903b\u8f91\u6570\u636e\u6d41\u201d(logical dataflow)\uff0c\u6216\u8005\u53eb\u201c\u6570\u636e\u6d41\u56fe\u201d(dataflow graph)\u3002 \u5e76\u884c\u5ea6(Parallelism) \u5e76\u884c\u8ba1\u7b97 \u4e00\u6761\u6570\u636e\u6b63\u5728\u6267\u884cflatMap \u4e4b\u524d\u7684\u6570\u636e\u53ef\u80fd\u6b63\u5728\u6267\u884c\u8bfb\u53d6 \u591a\u6761\u6570\u636e\u540c\u65f6\u6765\uff0c\u53ef\u4ee5\u5728\u4e0d\u540c\u8282\u70b9\u540c\u65f6\u8ba1\u7b97 \u5e76\u884c\u5b50\u4efb\u52a1\u548c\u5e76\u884c\u5ea6 \u6bcf\u4e00\u4e2a\u7b97\u5b50(operator)\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u5b50\u4efb\u52a1(operator subtask)\uff0c\u8fd9\u4e9b\u5b50\u4efb\u52a1\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u3001\u4e0d\u540c\u7684\u7269\u7406\u673a\u6216\u4e0d\u540c\u7684\u5bb9\u5668\u4e2d\u5b8c\u5168\u72ec\u7acb\u5730\u6267\u884c\u3002 \u4e00\u4e2a\u7279\u5b9a\u7b97\u5b50\u7684\u5b50\u4efb\u52a1(subtask)\u7684\u4e2a\u6570\u88ab\u79f0\u4e4b\u4e3a\u5176\u5e76\u884c\u5ea6(parallelism) \u5e76\u884c\u5ea6\u8bbe\u7f6e \u4ee3\u7801\u8bbe\u7f6e // \u5355\u4e2a\u7b97\u5b50\u6709\u6548 stream.map(word -> Tuple2.of(word, 1L)).setParallelism(2); // \u5168\u5c40\u6709\u6548 env.setParallelism(2) \u63d0\u4ea4\u4efb\u52a1\u8bbe\u7f6e bin/flink run \u2013p 2 \u2013c com.atguigu.wc.StreamWordCount ./FlinkTutorial-1.0-SNAPSHOT.jar \u914d\u7f6e\u6587\u4ef6\u8bbe\u7f6e flink-conf.yaml parallelism.default: 2 \u7b97\u5b50\u94fe Operator Chain \u7b97\u5b50\u94fe\u4f20\u8f93 1:1 source,map \u91cd\u5206\u533a keyBy,window,sink \u5728 Flink \u4e2d\uff0c\u5e76\u884c\u5ea6\u76f8\u540c\u7684\u4e00\u5bf9\u4e00(one to one)\u7b97\u5b50\u64cd\u4f5c\uff0c\u53ef\u4ee5\u76f4\u63a5\u94fe\u63a5\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2a \u201c\u5927\u201d\u7684\u4efb\u52a1(task)\uff0c\u8fd9\u6837\u539f\u6765\u7684\u7b97\u5b50\u5c31\u6210\u4e3a\u4e86\u771f\u6b63\u4efb\u52a1\u91cc\u7684\u4e00\u90e8\u5206\u8fd9\u6837\u7684\u6280\u672f\u88ab\u79f0\u4e3a\u201c\u7b97\u5b50\u94fe\u201d(Operator Chain)\u3002 // \u7981\u7528\u7b97\u5b50\u94fe .map(word -> Tuple2.of(word, 1L)).disableChaining(); // \u4ece\u5f53\u524d\u7b97\u5b50\u5f00\u59cb\u65b0\u94fe .map(word -> Tuple2.of(word, 1L)).startNewChain() \u4f5c\u4e1a\u56fe\u4e0e\u6267\u884c\u56fe \u903b\u8f91\u6d41\u56fe \u8fd9\u662f\u6839\u636e\u7528\u6237\u901a\u8fc7 DataStream API \u7f16\u5199\u7684\u4ee3\u7801\u751f\u6210\u7684\u6700\u521d\u7684 DAG \u56fe\uff0c\u7528\u6765\u8868\u793a\u7a0b\u5e8f\u7684\u62d3 \u6251\u7ed3\u6784\u3002\u8fd9\u4e00\u6b65\u4e00\u822c\u5728\u5ba2\u6237\u7aef\u5b8c\u6210\u3002 \u6e90\u7b97\u5b50 Source(socketTextStream())\u2192\u6241\u5e73\u6620\u5c04\u7b97\u5b50 Flat Map(flatMap()) \u2192\u5206\u7ec4\u805a\u5408\u7b97\u5b50 Keyed Aggregation(keyBy/sum()) \u2192\u8f93\u51fa\u7b97\u5b50 Sink(print())\u3002 \u4f5c\u4e1a\u56fe(JobGraph) \u5c06\u591a\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\u94fe\u63a5\u5728\u4e00\u8d77 \u5408\u5e76\u6210\u4e00\u4e2a\u4efb\u52a1\u8282\u70b9\uff0c\u5f62\u6210\u7b97\u5b50\u94fe\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u6570\u636e\u4ea4\u6362\u7684\u6d88\u8017\u3002 \u6267\u884c\u56fe(ExecutionGraph) JobMaster \u6536\u5230 JobGraph \u540e\uff0c\u4f1a\u6839\u636e\u5b83\u6765\u751f\u6210\u6267\u884c\u56fe(ExecutionGraph)\u3002ExecutionGraph \u662f JobGraph \u7684\u5e76\u884c\u5316\u7248\u672c\uff0c\u662f\u8c03\u5ea6\u5c42\u6700\u6838\u5fc3\u7684\u6570\u636e\u7ed3\u6784\u3002 \u7269\u7406\u56fe(Physical Graph) JobMaster \u751f\u6210\u6267\u884c\u56fe\u540e\uff0c \u4f1a\u5c06\u5b83\u5206\u53d1\u7ed9 TaskManager;\u5404\u4e2a TaskManager \u4f1a\u6839\u636e\u6267\u884c\u56fe \u90e8\u7f72\u4efb\u52a1\uff0c\u6700\u7ec8\u7684\u7269\u7406\u6267\u884c\u8fc7\u7a0b\u4e5f\u4f1a\u5f62\u6210\u4e00\u5f20\u201c\u56fe\u201d\uff0c\u4e00\u822c\u5c31\u53eb\u4f5c\u7269\u7406\u56fe(Physical Graph)\u3002 \u4efb\u52a1(Tasks)\u548c\u4efb\u52a1\u69fd(Task Slots) taskmanager.numberOfTaskSlots: 8 slot \u76ee\u524d\u4ec5\u4ec5\u7528\u6765\u9694\u79bb\u5185\u5b58\uff0c\u4e0d\u4f1a\u6d89\u53ca CPU \u7684\u9694\u79bb \u53ea\u8981\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4f5c\u4e1a\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e0d\u540c\u4efb\u52a1\u8282\u70b9\u7684\u5e76\u884c\u5b50\u4efb\u52a1\uff0c\u5c31\u53ef\u4ee5\u653e\u5230\u540c\u4e00\u4e2a slot \u4e0a\u6267\u884c\u3002","title":"quickstart"},{"location":"bigdata/flink/quickstart/#helloword","text":"","title":"helloword"},{"location":"bigdata/flink/quickstart/#wc","text":"1.\u65b0\u5efamaven\u9879\u76ee 2.\u7f16\u5199pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"> <modelVersion>4.0.0</modelVersion> <groupId>com.matt</groupId> <artifactId>stu-flink</artifactId> <version>1.0-SNAPSHOT</version> <properties> <flink.version>1.13.0</flink.version> <java.version>1.8</java.version> <scala.binary.version>2.12</scala.binary.version> <slf4j.version>1.7.30</slf4j.version> </properties> <dependencies> <!-- flink \u4f7f\u7528\u5230scala \u7ec4\u4ef6--> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-java</artifactId> <version>${flink.version}</version> </dependency> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-streaming-java_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-clients_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> <!-- \u65e5\u5fd7 --> <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-api</artifactId> <version>${slf4j.version}</version> </dependency> <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-log4j12</artifactId> <version>${slf4j.version}</version> </dependency> <dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-to-slf4j</artifactId> <version>2.14.0</version> </dependency> </dependencies> <build> <plugins> <!--\u6253\u5305\u5de5\u5177--> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId> <version>3.0.0</version> <configuration> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> </descriptorRefs> </configuration> <executions> <execution> <id>make-assembly</id> <phase>package</phase> <goals> <goal>single</goal> </goals> </execution> </executions> </plugin> </plugins> </build> </project> 3.\u7f16\u5199\u65e5\u5fd7\u914d\u7f6e\u6587\u4ef6 log4j.properties log4j.rootLogger=error, stdout log4j.appender.stdout=org.apache.log4j.ConsoleAppender log4j.appender.stdout.layout=org.apache.log4j.PatternLayout log4j.appender.stdout.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n \u8fd0\u884c\u65f6\u53c2\u6570\u6307\u5b9a 4.\u5177\u4f53\u4ee3\u7801","title":"wc"},{"location":"bigdata/flink/quickstart/#_1","text":"","title":"\u90e8\u7f72"},{"location":"bigdata/flink/quickstart/#mac-standalone","text":"","title":"mac-Standalone \u6a21\u5f0f"},{"location":"bigdata/flink/quickstart/#_2","text":"# \u67e5\u770b\u5f53\u524d\u7528\u6237 whoami # \u67e5\u770b\u7528\u6237\u7ec4 id matt # \u7528\u6237\u540d\uff1a\u7ec4\u540d chown -R matt:staff /opt/software chown -R matt:staff /opt/module \u67e5\u770b\u66f4\u591a\u7528\u6237\u76f8\u5173\u4fe1\u606f https://blog.csdn.net/qq_26129413/article/details/109675386","title":"\u4fee\u6539\u6587\u4ef6\u6240\u6709\u8005"},{"location":"bigdata/flink/quickstart/#_3","text":"tar -zxvf flink-1.13.0-bin-scala_2.12.tgz -C /opt/module","title":"\u4e0b\u8f7d\u89e3\u538b"},{"location":"bigdata/flink/quickstart/#_4","text":"","title":"\u914d\u7f6e"},{"location":"bigdata/flink/quickstart/#flinkconfflink-confyaml-jobmanager","text":"\u5982\u679c\u662f\u5355\u673a\u5b89\u88c5\u9ed8\u8ba4\u5373\u53ef\uff0c\u96c6\u7fa4\u5b89\u88c5\u914d\u7f6e\u67d0\u53f0\u4e3b\u673a jobmanager.rpc.address: localhost","title":"\u4fee\u6539 flink/conf/flink-conf.yaml \u6587\u4ef6 jobmanager"},{"location":"bigdata/flink/quickstart/#confworkers-taskmanager","text":"\u4ece\u673a\u673a\u5668\u5217\u8868 localhost \u5982\u679c\u662f\u96c6\u7fa4\u5b89\u88c5\u53ef\u4ee5\u914d\u7f6e\u4e3a matt06 matt07 \u5982\u679c\u662f\u96c6\u7fa4\u5b89\u88c5\u9700\u8981\u628a flink \u540c\u6b65\u5230\u5176\u4ed6\u673a\u5668","title":"\u4fee\u6539 /conf/workers \u6587\u4ef6 taskmanager"},{"location":"bigdata/flink/quickstart/#_5","text":"jobmanager.memory.process.size:\u5bf9JobManager\u8fdb\u7a0b\u53ef\u4f7f\u7528\u5230\u7684\u5168\u90e8\u5185\u5b58\u8fdb\u884c\u914d\u7f6e\uff0c\u5305\u62ec JVM \u5143\u7a7a\u95f4\u548c\u5176\u4ed6\u5f00\u9500\uff0c\u9ed8\u8ba4\u4e3a 1600M\uff0c\u53ef\u4ee5\u6839\u636e\u96c6\u7fa4\u89c4\u6a21\u8fdb\u884c\u9002\u5f53\u8c03\u6574\u3002 taskmanager.memory.process.size:\u5bf9TaskManager\u8fdb\u7a0b\u53ef\u4f7f\u7528\u5230\u7684\u5168\u90e8\u5185\u5b58\u8fdb\u884c\u914d\u7f6e\uff0c\u5305\u62ec JVM \u5143\u7a7a\u95f4\u548c\u5176\u4ed6\u5f00\u9500\uff0c\u9ed8\u8ba4\u4e3a 1600M\uff0c\u53ef\u4ee5\u6839\u636e\u96c6\u7fa4\u89c4\u6a21\u8fdb\u884c\u9002\u5f53\u8c03\u6574\u3002 taskmanager.numberOfTaskSlots:\u5bf9\u6bcf\u4e2aTaskManager\u80fd\u591f\u5206\u914d\u7684Slot\u6570\u91cf\u8fdb\u884c\u914d\u7f6e\uff0c\u9ed8\u8ba4\u4e3a 1\uff0c\u53ef\u6839\u636e TaskManager \u6240\u5728\u7684\u673a\u5668\u80fd\u591f\u4f9b\u7ed9 Flink \u7684 CPU \u6570\u91cf\u51b3\u5b9a\u3002\u6240\u8c13Slot \u5c31\u662f TaskManager \u4e2d\u5177\u4f53\u8fd0\u884c\u4e00\u4e2a\u4efb\u52a1\u6240\u5206\u914d\u7684\u8ba1\u7b97\u8d44\u6e90\u3002 parallelism.default:Flink\u4efb\u52a1\u6267\u884c\u7684\u9ed8\u8ba4\u5e76\u884c\u5ea6\uff0c\u4f18\u5148\u7ea7\u4f4e\u4e8e\u4ee3\u7801\u4e2d\u8fdb\u884c\u7684\u5e76\u884c\u5ea6\u914d\u7f6e\u548c\u4efb\u52a1\u63d0\u4ea4\u4ea4\u65f6\u4f7f\u7528\u53c2\u6570\u6307\u5b9a\u7684\u5e76\u884c\u5ea6\u6570\u91cf\u3002","title":"\u5176\u4ed6\u914d\u7f6e"},{"location":"bigdata/flink/quickstart/#_6","text":"\u5728jobmanger\u673a\u5668\u4e0a\u8fdb\u884c\u542f\u52a8 bin start-cluster.sh stop-cluster.sh","title":"\u542f\u52a8"},{"location":"bigdata/flink/quickstart/#_7","text":"\u4f9d\u8d56\u7684jar \u5305\u4e5f\u6253\u8fdb\u53bb <build> <plugins> <!--\u6253\u5305\u5de5\u5177--> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId> <version>3.0.0</version> <configuration> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> </descriptorRefs> </configuration> <executions> <execution> <id>make-assembly</id> <phase>package</phase> <goals> <goal>single</goal> </goals> </execution> </executions> </plugin> </plugins> </build>","title":"\u63d0\u4ea4\u4efb\u52a1"},{"location":"bigdata/flink/quickstart/#ui","text":"http://localhost:8081/#/overview \u276f ./bin/flink list Waiting for response... ------------------ Running/Restarting Jobs ------------------- 24.12.2022 15:11:40 : a21e498f6c313c5be5941d45aaef4ed1 : Flink Streaming Job (RUNNING) -------------------------------------------------------------- No scheduled jobs. \u276f ./bin/flink cancel a21e498f6c313c5be5941d45aaef4ed1 Cancelling job a21e498f6c313c5be5941d45aaef4ed1. Cancelled job a21e498f6c313c5be5941d45aaef4ed1.","title":"ui \u63d0\u4ea4"},{"location":"bigdata/flink/quickstart/#_8","text":"\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u63d0\u4ea4\u4e5f\u53ef\u4ee5ui\u8fdb\u884c\u63d0\u4ea4 -m ip ./bin/flink run -c com.matt.wc.StreamWordCount -p 1 stu-flink-1.0-SNAPSHOT.jar --host localhost --port 777","title":"\u547d\u4ee4\u884c\u63d0\u4ea4"},{"location":"bigdata/flink/quickstart/#_9","text":"","title":"\u90e8\u7f72\u6a21\u5f0f"},{"location":"bigdata/flink/quickstart/#_10","text":"\u542f\u52a8\u4e00\u4e2aflink\u96c6\u7fa4 \uff0c\u63d0\u4ea4\u4f5c\u4e1a\uff0c \u6240\u6709\u4f5c\u4e1a\u516c\u7528\u4e00\u4e2a\u96c6\u7fa4","title":"\u4f1a\u8bdd\u6a21\u5f0f"},{"location":"bigdata/flink/quickstart/#_11","text":"\u7531\u5ba2\u6237\u7aef\u8fd0\u884c \u5e94\u7528\u7a0b\u5e8f\uff0c\u7136\u540e\u542f\u52a8\u96c6\u7fa4\uff0c\u4f5c\u4e1a\u88ab\u4ea4\u7ed9 JobManager\uff0c\u8fdb\u800c\u5206\u53d1\u7ed9 TaskManager \u6267\u884c\u3002\u4f5c\u4e1a\u5b8c\u6210\u540e\uff0c\u96c6\u7fa4\u5c31\u4f1a\u5173\u95ed\uff0c\u6240\u6709\u8d44\u6e90\u4e5f\u4f1a\u91ca\u653e\u3002 Flink \u672c\u8eab\u65e0\u6cd5\u76f4\u63a5\u8fd9\u6837\u8fd0\u884c\uff0c\u6240\u4ee5\u5355\u4f5c\u4e1a\u6a21\u5f0f\u4e00\u822c\u9700\u8981\u501f\u52a9\u4e00\u4e9b\u8d44\u6e90\u7ba1\u7406\u6846\u67b6\u6765\u542f\u52a8\u96c6\u7fa4\uff0c\u6bd4\u5982 YARN\u3001Kubernetes\u3002 1.15 \u5df2\u88ab\u629b\u5f03","title":"\u5355\u4f5c\u4e1a\u6a21\u5f0f"},{"location":"bigdata/flink/quickstart/#_12","text":"\u4e0d\u9700\u8981\u5ba2\u6237\u7aef\uff0c\u76f4\u63a5\u628a\u5e94\u7528\u63d0\u4ea4\u5230 JobManger \u4e0a\u8fd0\u884c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e00\u4e2a\u63d0\u4ea4\u7684\u5e94\u7528\u5355\u72ec\u542f\u52a8\u4e00\u4e2a JobManager\uff0c\u4e5f\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u96c6\u7fa4\u3002\u8fd9\u4e2a JobManager \u53ea\u4e3a\u6267\u884c\u8fd9\u4e00\u4e2a\u5e94\u7528\u800c\u5b58\u5728\uff0c\u6267\u884c\u7ed3\u675f\u4e4b\u540e JobManager \u4e5f\u5c31\u5173\u95ed\u4e86\u3002 \u4f1a\u5305\u542b\u591a\u4e2a\u4f5c\u4e1a","title":"\u5e94\u7528\u6a21\u5f0f"},{"location":"bigdata/flink/quickstart/#_13","text":"","title":"\u72ec\u7acb\u6a21\u5f0f\u90e8\u7f72"},{"location":"bigdata/flink/quickstart/#_14","text":"\u5148\u542f\u52a8\u96c6\u7fa4\u4f1a\u63d0\u4ea4\u4f5c\u4e1a","title":"\u4f1a\u8bdd\u6a21\u5f0f"},{"location":"bigdata/flink/quickstart/#_15","text":"Flink \u672c\u8eab\u65e0\u6cd5\u76f4\u63a5\u4ee5\u5355\u4f5c\u4e1a\u65b9\u5f0f\u542f\u52a8\u96c6\u7fa4\uff0c\u4e00\u822c\u9700\u8981\u501f\u52a9\u4e00\u4e9b\u8d44 \u6e90\u7ba1\u7406\u5e73\u53f0\u3002\u6240\u4ee5 Flink \u7684\u72ec\u7acb(Standalone)\u96c6\u7fa4\u5e76\u4e0d\u652f\u6301\u5355\u4f5c\u4e1a\u6a21\u5f0f\u90e8\u7f72\u3002","title":"\u5355\u4f5c\u4e1a\u6a21\u5f0f"},{"location":"bigdata/flink/quickstart/#_16","text":"\u5e94\u7528\u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u63d0\u524d\u521b\u5efa\u96c6\u7fa4\uff0c\u6240\u4ee5\u4e0d\u80fd\u8c03\u7528 start-cluster.sh \u811a\u672c\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u540c\u6837\u5728 bin \u76ee\u5f55\u4e0b\u7684 standalone-job.sh \u6765\u521b\u5efa\u4e00\u4e2a JobManager\u3002 \u5177\u4f53\u6b65\u9aa4\u5982\u4e0b: (1)\u8fdb\u5165\u5230 Flink \u7684\u5b89\u88c5\u8def\u5f84\u4e0b\uff0c\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684 jar \u5305\u653e\u5230 lib/\u76ee\u5f55\u4e0b\u3002 cp ./FlinkTutorial-1.0-SNAPSHOT.jar lib/ (2)\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u542f\u52a8 JobManager\u3002 ./bin/standalone-job.sh start --job-classname com.atguigu.wc.StreamWordCount \u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u6307\u5b9a\u4f5c\u4e1a\u5165\u53e3\u7c7b\uff0c\u811a\u672c\u4f1a\u5230 lib \u76ee\u5f55\u626b\u6240\u6709\u7684 jar \u5305\u3002 (3)\u540c\u6837\u662f\u4f7f\u7528 bin \u76ee\u5f55\u4e0b\u7684\u811a\u672c\uff0c\u542f\u52a8 TaskManager\u3002 ./bin/taskmanager.sh start (4)\u5982\u679c\u5e0c\u671b\u505c\u6389\u96c6\u7fa4\uff0c\u540c\u6837\u53ef\u4ee5\u4f7f\u7528\u811a\u672c\uff0c\u547d\u4ee4\u5982\u4e0b\u3002 ./bin/standalone-job.sh stop ./bin/taskmanager.sh stop","title":"\u5e94\u7528\u6a21\u5f0f\u90e8\u7f72"},{"location":"bigdata/flink/quickstart/#todo-yarnk8s","text":"","title":"TODO yarn/k8s\u90e8\u7f72"},{"location":"bigdata/flink/quickstart/#_17","text":"","title":"\u8fd0\u884c\u67b6\u6784"},{"location":"bigdata/flink/quickstart/#_18","text":"","title":"\u6784\u6210"},{"location":"bigdata/flink/quickstart/#jobmanager","text":"JobManager \u662f\u4e00\u4e2a Flink \u96c6\u7fa4\u4e2d\u4efb\u52a1\u7ba1\u7406\u548c\u8c03\u5ea6\u7684\u6838\u5fc3\uff0c\u662f\u63a7\u5236\u5e94\u7528\u6267\u884c\u7684\u4e3b\u8fdb\u7a0b\u3002\u6bcf\u4e2a\u5e94\u7528\u90fd\u5e94\u8be5\u88ab\u552f\u4e00\u7684 JobManager \u6240\u63a7\u5236\u6267\u884c\u3002\u5f53\u7136\uff0c\u5728\u9ad8\u53ef\u7528(HA)\u7684\u573a\u666f\u4e0b\u53ef\u80fd\u4f1a\u51fa\u73b0\u591a\u4e2a JobManager;\u8fd9\u65f6\u53ea\u6709\u4e00\u4e2a\u662f\u6b63\u5728\u8fd0\u884c\u7684\u9886\u5bfc\u8282\u70b9(leader)\uff0c\u5176\u4ed6\u90fd\u662f\u5907\u7528\u8282\u70b9(standby)\u3002","title":"JobManager"},{"location":"bigdata/flink/quickstart/#jobmaster","text":"\u5728\u4f5c\u4e1a\u63d0\u4ea4\u65f6\uff0cJobMaster \u4f1a\u5148\u63a5\u6536\u5230\u8981\u6267\u884c\u7684\u5e94\u7528\u3002\u8fd9\u91cc\u6240\u8bf4\u201c\u5e94\u7528\u201d\u4e00\u822c\u662f\u5ba2\u6237\u7aef\u63d0\u4ea4 \u4ea4\u6765\u7684\uff0c\u5305\u62ec:Jar \u5305\uff0c\u6570\u636e\u6d41\u56fe(dataflow graph)\uff0c\u548c\u4f5c\u4e1a\u56fe(JobGraph)\u3002 JobMaster \u4f1a\u628a JobGraph \u8f6c\u6362\u6210\u4e00\u4e2a\u7269\u7406\u5c42\u9762\u7684\u6570\u636e\u6d41\u56fe\uff0c\u8fd9\u4e2a\u56fe\u88ab\u53eb\u4f5c\u201c\u6267\u884c\u56fe\u201d (ExecutionGraph)\uff0c\u5b83\u5305\u542b\u4e86\u6240\u6709\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\u7684\u4efb\u52a1\u3002JobMaster \u4f1a\u5411\u8d44\u6e90\u7ba1\u7406\u5668 (ResourceManager)\u53d1\u51fa\u8bf7\u6c42\uff0c\u7533\u8bf7\u6267\u884c\u4efb\u52a1\u5fc5\u8981\u7684\u8d44\u6e90\u3002\u4e00\u65e6\u5b83\u83b7\u53d6\u5230\u4e86\u8db3\u591f\u7684\u8d44\u6e90\uff0c\u5c31\u4f1a\u5c06\u6267\u884c\u56fe\u5206\u53d1\u5230\u771f\u6b63\u8fd0\u884c\u5b83\u4eec\u7684 TaskManager \u4e0a\u3002 \u800c\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0cJobMaster \u4f1a\u8d1f\u8d23\u6240\u6709\u9700\u8981\u4e2d\u592e\u534f\u8c03\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u8bf4\u68c0\u67e5\u70b9(checkpoints)\u7684\u534f\u8c03\u3002","title":"JobMaster"},{"location":"bigdata/flink/quickstart/#resourcemanager","text":"\u4e3b\u8981\u8d1f\u8d23\u8d44\u6e90\u7684\u5206\u914d\u548c\u7ba1\u7406\u3002\u5728 Flink \u96c6\u7fa4\u4e2d\u53ea\u6709\u4e00\u4e2a\u3002\u6240\u8c13\u201c\u8d44\u6e90\u201d\uff0c \u4e3b\u8981\u662f\u6307 TaskManager \u7684\u4efb\u52a1\u69fd(task slots)\u3002\u4efb\u52a1\u69fd\u5c31\u662f Flink \u96c6\u7fa4\u4e2d\u7684\u8d44\u6e90\u8c03\u914d\u5355\u5143\uff0c\u5305\u542b \u4e86\u673a\u5668\u7528\u6765\u6267\u884c\u8ba1\u7b97\u7684\u4e00\u7ec4 CPU \u548c\u5185\u5b58\u8d44\u6e90\u3002\u6bcf\u4e00\u4e2a\u4efb\u52a1(Task)\u90fd\u9700\u8981\u5206\u914d\u5230\u4e00\u4e2a slot \u4e0a \u6267\u884c\u3002 Flink \u7684 ResourceManager\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u73af\u5883\u548c\u8d44\u6e90\u7ba1\u7406\u5e73\u53f0(\u6bd4\u5982 Standalone \u90e8\u7f72\uff0c\u6216\u8005 YARN)\uff0c\u6709\u4e0d\u540c\u7684\u5177\u4f53\u5b9e\u73b0\u3002\u5728 Standalone \u90e8\u7f72\u65f6\uff0c\u56e0\u4e3a TaskManager \u662f\u5355\u72ec\u542f\u52a8\u7684(\u6ca1\u6709 Per-Job \u6a21\u5f0f)\uff0c\u6240\u4ee5 ResourceManager \u53ea\u80fd\u5206\u53d1\u53ef\u7528 TaskManager \u7684\u4efb\u52a1\u69fd\uff0c\u4e0d\u80fd\u5355\u72ec\u542f\u52a8\u65b0 TaskManager\u3002 \u800c\u5728\u6709\u8d44\u6e90\u7ba1\u7406\u5e73\u53f0\u65f6\uff0c\u5c31\u4e0d\u53d7\u6b64\u9650\u5236\u3002\u5f53\u65b0\u7684\u4f5c\u4e1a\u7533\u8bf7\u8d44\u6e90\u65f6\uff0cResourceManager \u4f1a\u5c06 \u6709\u7a7a\u95f2\u69fd\u4f4d\u7684 TaskManager \u5206\u914d\u7ed9 JobMaster\u3002\u5982\u679c ResourceManager \u6ca1\u6709\u8db3\u591f\u7684\u4efb\u52a1\u69fd\uff0c\u5b83 \u8fd8\u53ef\u4ee5\u5411\u8d44\u6e90\u63d0\u4f9b\u5e73\u53f0\u53d1\u8d77\u4f1a\u8bdd\uff0c\u8bf7\u6c42\u63d0\u4f9b\u542f\u52a8 TaskManager \u8fdb\u7a0b\u7684\u5bb9\u5668\u3002\u53e6\u5916\uff0c ResourceManager \u8fd8\u8d1f\u8d23\u505c\u6389\u7a7a\u95f2\u7684 TaskManager\uff0c\u91ca\u653e\u8ba1\u7b97\u8d44\u6e90\u3002","title":"\u8d44\u6e90\u7ba1\u7406\u5668(ResourceManager)"},{"location":"bigdata/flink/quickstart/#dispatcher","text":"\u4e3b\u8981\u8d1f\u8d23\u63d0\u4f9b\u4e00\u4e2a REST \u63a5\u53e3\uff0c\u7528\u6765\u63d0\u4ea4\u5e94\u7528\uff0c\u5e76\u4e14\u8d1f\u8d23\u4e3a\u6bcf\u4e00\u4e2a\u65b0\u63d0\u4ea4\u7684\u4f5c \u4e1a\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 JobMaster \u7ec4\u4ef6\u3002Dispatcher \u4e5f\u4f1a\u542f\u52a8\u4e00\u4e2a Web UI\uff0c\u7528\u6765\u65b9\u4fbf\u5730\u5c55\u793a\u548c\u76d1\u63a7\u4f5c\u4e1a\u6267\u884c\u7684\u4fe1\u606f\u3002Dispatcher \u5728\u67b6\u6784\u4e2d\u5e76\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u5728\u4e0d\u540c\u7684\u90e8\u7f72\u6a21\u5f0f\u4e0b\u53ef\u80fd\u4f1a\u88ab\u5ffd\u7565\u6389\u3002","title":"Dispatcher"},{"location":"bigdata/flink/quickstart/#taskmanager","text":"TaskManager \u662f Flink \u4e2d\u7684\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u6570\u636e\u6d41\u7684\u5177\u4f53\u8ba1\u7b97\u5c31\u662f\u5b83\u6765\u505a\u7684\uff0c\u6240\u4ee5\u4e5f\u88ab\u79f0\u4e3a \u201cWorker\u201d\u3002Flink \u96c6\u7fa4\u4e2d\u5fc5\u987b\u81f3\u5c11\u6709\u4e00\u4e2a TaskManager; \u5f53\u7136\u7531\u4e8e\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684\u8003\u8651\uff0c\u901a\u5e38\u4f1a \u6709\u591a\u4e2a TaskManager \u8fd0\u884c\uff0c\u6bcf\u4e00\u4e2a TaskManager \u90fd\u5305\u542b\u4e86\u4e00\u5b9a\u6570\u91cf\u7684\u4efb\u52a1\u69fd(task slots)\u3002Slot \u662f\u8d44\u6e90\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\uff0cslot \u7684\u6570\u91cf\u9650\u5236\u4e86 TaskManager \u80fd\u591f\u5e76\u884c\u5904\u7406\u7684\u4efb\u52a1\u6570\u91cf\u3002 \u542f\u52a8\u4e4b\u540e\uff0cTaskManager \u4f1a\u5411\u8d44\u6e90\u7ba1\u7406\u5668\u6ce8\u518c\u5b83\u7684 slots;\u6536\u5230\u8d44\u6e90\u7ba1\u7406\u5668\u7684\u6307\u4ee4\u540e\uff0c TaskManager\u5c31\u4f1a\u5c06\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u69fd\u4f4d\u63d0\u4f9b\u7ed9JobMaster\u8c03\u7528\uff0cJobMaster\u5c31\u53ef\u4ee5\u5206\u914d\u4efb\u52a1\u6765\u6267\u884c\u4e86\u3002 \u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0cTaskManager \u53ef\u4ee5\u7f13\u51b2\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u8ddf\u5176\u4ed6\u8fd0\u884c\u540c\u4e00\u5e94\u7528\u7684 TaskManager\u4ea4\u6362\u6570\u636e\u3002","title":"TaskManager"},{"location":"bigdata/flink/quickstart/#_19","text":"","title":"\u4efb\u52a1\u63d0\u4ea4\u6d41\u7a0b"},{"location":"bigdata/flink/quickstart/#_20","text":"\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7531\u5ba2\u6237\u7aef(App)\u901a\u8fc7\u5206\u53d1\u5668\u63d0\u4f9b\u7684 REST \u63a5\u53e3\uff0c\u5c06\u4f5c\u4e1a\u63d0\u4ea4\u7ed9JobManager\u3002 \u7531\u5206\u53d1\u5668\u542f\u52a8 JobMaster\uff0c\u5e76\u5c06\u4f5c\u4e1a(\u5305\u542b JobGraph)\u63d0\u4ea4\u7ed9 JobMaster\u3002 JobMaster \u5c06 JobGraph \u89e3\u6790\u4e3a\u53ef\u6267\u884c\u7684 ExecutionGraph\uff0c\u5f97\u5230\u6240\u9700\u7684\u8d44\u6e90\u6570\u91cf\uff0c\u7136\u540e\u5411\u8d44\u6e90\u7ba1\u7406\u5668\u8bf7\u6c42\u8d44\u6e90(slots)\u3002 \u8d44\u6e90\u7ba1\u7406\u5668\u5224\u65ad\u5f53\u524d\u662f\u5426\u7531\u8db3\u591f\u7684\u53ef\u7528\u8d44\u6e90;\u5982\u679c\u6ca1\u6709\uff0c\u542f\u52a8\u65b0\u7684 TaskManager\u3002 TaskManager \u542f\u52a8\u4e4b\u540e\uff0c\u5411 ResourceManager \u6ce8\u518c\u81ea\u5df1\u7684\u53ef\u7528\u4efb\u52a1\u69fd(slots)\u3002 \u8d44\u6e90\u7ba1\u7406\u5668\u901a\u77e5 TaskManager \u4e3a\u65b0\u7684\u4f5c\u4e1a\u63d0\u4f9b slots\u3002 TaskManager \u8fde\u63a5\u5230\u5bf9\u5e94\u7684 JobMaster\uff0c\u63d0\u4f9b slots\u3002 JobMaster \u5c06\u9700\u8981\u6267\u884c\u7684\u4efb\u52a1\u5206\u53d1\u7ed9 TaskManager\u3002 TaskManager \u6267\u884c\u4efb\u52a1\uff0c\u4e92\u76f8\u4e4b\u95f4\u53ef\u4ee5\u4ea4\u6362\u6570\u636e \u90e8\u7f72\u6a21\u5f0f\u4e0d\u540c\uff0c\u6709\u4e9b\u6b65\u9aa4\u53ef\u80fd\u4e0d\u76f8\u540c","title":"\u62bd\u8c61"},{"location":"bigdata/flink/quickstart/#_21","text":"\u4f1a\u8bdd\u6a21\u5f0f\u548c\u5e94\u7528\u6a21\u5f0f \u4fe9\u8005\u662f\u76f8\u4f3c\u7684 \u4e0d\u4f1a\u542f\u52a8 TaskManager\uff0c\u800c\u4e14\u76f4\u63a5\u5411\u5df2\u6709\u7684 TaskManager \u8981\u6c42\u8d44\u6e90","title":"\u72ec\u7acb\u6a21\u5f0f"},{"location":"bigdata/flink/quickstart/#yarn","text":"","title":"yarn \u96c6\u7fa4"},{"location":"bigdata/flink/quickstart/#_22","text":"\u5728\u4f1a\u8bdd\u6a21\u5f0f\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u5148\u542f\u52a8\u4e00\u4e2a YARN session\uff0c\u8fd9\u4e2a\u4f1a\u8bdd\u4f1a\u521b\u5efa\u4e00\u4e2a Flink \u96c6\u7fa4\u3002 \u8fd9\u91cc\u53ea\u542f\u52a8\u4e86 JobManager\uff0c\u800c TaskManager \u53ef\u4ee5\u6839\u636e\u9700\u8981\u52a8\u6001\u5730\u542f\u52a8\u3002\u5728 JobManager \u5185\u90e8\uff0c\u7531\u4e8e\u8fd8\u6ca1\u6709\u63d0\u4ea4\u4f5c\u4e1a\uff0c\u6240\u4ee5\u53ea\u6709 ResourceManager \u548c Dispatcher \u5728\u8fd0\u884c \u5ba2\u6237\u7aef\u901a\u8fc7 REST \u63a5\u53e3\uff0c\u5c06\u4f5c\u4e1a\u63d0\u4ea4\u7ed9\u5206\u53d1\u5668\u3002 \u5206\u53d1\u5668\u542f\u52a8 JobMaster\uff0c\u5e76\u5c06\u4f5c\u4e1a(\u5305\u542b JobGraph)\u63d0\u4ea4\u7ed9 JobMaster\u3002 JobMaster \u5411\u8d44\u6e90\u7ba1\u7406\u5668\u8bf7\u6c42\u8d44\u6e90(slots)\u3002 \u8d44\u6e90\u7ba1\u7406\u5668\u5411 YARN \u7684\u8d44\u6e90\u7ba1\u7406\u5668\u8bf7\u6c42 container \u8d44\u6e90\u3002 YARN \u542f\u52a8\u65b0\u7684 TaskManager \u5bb9\u5668\u3002 TaskManager \u542f\u52a8\u4e4b\u540e\uff0c\u5411 Flink \u7684\u8d44\u6e90\u7ba1\u7406\u5668\u6ce8\u518c\u81ea\u5df1\u7684\u53ef\u7528\u4efb\u52a1\u69fd\u3002 \u8d44\u6e90\u7ba1\u7406\u5668\u901a\u77e5 TaskManager \u4e3a\u65b0\u7684\u4f5c\u4e1a\u63d0\u4f9b slots\u3002 TaskManager \u8fde\u63a5\u5230\u5bf9\u5e94\u7684 JobMaster\uff0c\u63d0\u4f9b slots\u3002 JobMaster \u5c06\u9700\u8981\u6267\u884c\u7684\u4efb\u52a1\u5206\u53d1\u7ed9 TaskManager\uff0c\u6267\u884c\u4efb\u52a1\u3002","title":"\u4f1a\u8bdd\u6a21\u5f0f"},{"location":"bigdata/flink/quickstart/#_23","text":"\u5ba2\u6237\u7aef\u5c06\u4f5c\u4e1a\u63d0\u4ea4\u7ed9 YARN \u7684\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u8fd9\u4e00\u6b65\u4e2d\u4f1a\u540c\u65f6\u5c06 Flink \u7684 Jar \u5305\u548c\u914d\u7f6e \u4e0a\u4f20\u5230 HDFS\uff0c\u4ee5\u4fbf\u540e\u7eed\u542f\u52a8 Flink \u76f8\u5173\u7ec4\u4ef6\u7684\u5bb9\u5668\u3002 YARN\u7684\u8d44\u6e90\u7ba1\u7406\u5668\u5206\u914dContainer\u8d44\u6e90\uff0c\u542f\u52a8Flink JobManager\uff0c\u5e76\u5c06\u4f5c\u4e1a\u63d0\u4ea4\u7ed9 JobMaster\u3002\u8fd9\u91cc\u7701\u7565\u4e86 Dispatcher \u7ec4\u4ef6\u3002 JobMaster \u5411\u8d44\u6e90\u7ba1\u7406\u5668\u8bf7\u6c42\u8d44\u6e90(slots)\u3002 \u8d44\u6e90\u7ba1\u7406\u5668\u5411 YARN \u7684\u8d44\u6e90\u7ba1\u7406\u5668\u8bf7\u6c42 container \u8d44\u6e90\u3002 YARN \u542f\u52a8\u65b0\u7684 TaskManager \u5bb9\u5668\u3002 TaskManager \u542f\u52a8\u4e4b\u540e\uff0c\u5411 Flink \u7684\u8d44\u6e90\u7ba1\u7406\u5668\u6ce8\u518c\u81ea\u5df1\u7684\u53ef\u7528\u4efb\u52a1\u69fd\u3002 \u8d44\u6e90\u7ba1\u7406\u5668\u901a\u77e5 TaskManager \u4e3a\u65b0\u7684\u4f5c\u4e1a\u63d0\u4f9b slots\u3002 TaskManager \u8fde\u63a5\u5230\u5bf9\u5e94\u7684 JobMaster\uff0c\u63d0\u4f9b slots\u3002 JobMaster \u5c06\u9700\u8981\u6267\u884c\u7684\u4efb\u52a1\u5206\u53d1\u7ed9 TaskManager\uff0c\u6267\u884c\u4efb\u52a1\u3002 \u53ef\u89c1\uff0c\u533a\u522b\u53ea\u5728\u4e8e JobManager \u7684\u542f\u52a8\u65b9\u5f0f\uff0c\u4ee5\u53ca\u7701\u53bb\u4e86\u5206\u53d1\u5668\u3002\u5f53\u7b2c 2 \u6b65\u4f5c\u4e1a\u63d0\u4ea4\u4ea4\u7ed9 JobMaster\uff0c\u4e4b\u540e\u7684\u6d41\u7a0b\u5c31\u4e0e\u4f1a\u8bdd\u6a21\u5f0f\u5b8c\u5168\u4e00\u6837\u4e86\u3002","title":"\u5355\u4f5c\u4e1a\u6a21\u5f0f"},{"location":"bigdata/flink/quickstart/#_24","text":"\u5e94\u7528\u6a21\u5f0f\u4e0e\u5355\u4f5c\u4e1a\u6a21\u5f0f\u7684\u63d0\u4ea4\u6d41\u7a0b\u975e\u5e38\u76f8\u4f3c\uff0c\u53ea\u662f\u521d\u59cb\u63d0\u4ea4\u7ed9 YARN \u8d44\u6e90\u7ba1\u7406\u5668\u7684\u4e0d\u518d\u662f\u5177\u4f53\u7684\u4f5c\u4e1a\uff0c\u800c\u662f\u6574\u4e2a\u5e94\u7528\u3002\u4e00\u4e2a\u5e94\u7528\u4e2d\u53ef\u80fd\u5305\u542b\u4e86\u591a\u4e2a\u4f5c\u4e1a\uff0c\u8fd9\u4e9b\u4f5c\u4e1a\u90fd\u5c06\u5728 Flink \u96c6\u7fa4\u4e2d\u542f\u52a8\u5404\u81ea\u5bf9\u5e94\u7684 JobMaster\u3002","title":"\u5e94\u7528\u6a21\u5f0f"},{"location":"bigdata/flink/quickstart/#_25","text":"","title":"\u4e00\u4e9b\u91cd\u8981\u6982\u5ff5"},{"location":"bigdata/flink/quickstart/#dataflow-graph","text":"\u6240\u6709\u7684 Flink \u7a0b\u5e8f\u90fd\u53ef\u4ee5\u5f52\u7eb3\u4e3a\u7531\u4e09\u90e8\u5206\u6784\u6210:Source\u3001Transformation \u548c Sink\u3002 Source\u8868\u793a\u201c\u6e90\u7b97\u5b50\u201d\uff0c\u8d1f\u8d23\u8bfb\u53d6\u6570\u636e\u6e90\u3002 Transformation\u8868\u793a\u201c\u8f6c\u6362\u7b97\u5b50\u201d\uff0c\u5229\u7528\u5404\u79cd\u7b97\u5b50\u8fdb\u884c\u5904\u7406\u52a0\u5de5\u3002 Sink\u8868\u793a\u201c\u4e0b\u6c89\u7b97\u5b50\u201d\uff0c\u8d1f\u8d23\u6570\u636e\u7684\u8f93\u51fa\u3002 \u5728\u8fd0\u884c\u65f6\uff0cFlink \u7a0b\u5e8f\u4f1a\u88ab\u6620\u5c04\u6210\u6240\u6709\u7b97\u5b50\u6309\u7167\u903b\u8f91\u987a\u5e8f\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u4e00\u5f20\u56fe\uff0c\u8fd9\u88ab\u79f0\u4e3a \u201c\u903b\u8f91\u6570\u636e\u6d41\u201d(logical dataflow)\uff0c\u6216\u8005\u53eb\u201c\u6570\u636e\u6d41\u56fe\u201d(dataflow graph)\u3002","title":"\u6570\u636e\u6d41\u56fe(Dataflow Graph)"},{"location":"bigdata/flink/quickstart/#parallelism","text":"","title":"\u5e76\u884c\u5ea6(Parallelism)"},{"location":"bigdata/flink/quickstart/#_26","text":"\u4e00\u6761\u6570\u636e\u6b63\u5728\u6267\u884cflatMap \u4e4b\u524d\u7684\u6570\u636e\u53ef\u80fd\u6b63\u5728\u6267\u884c\u8bfb\u53d6 \u591a\u6761\u6570\u636e\u540c\u65f6\u6765\uff0c\u53ef\u4ee5\u5728\u4e0d\u540c\u8282\u70b9\u540c\u65f6\u8ba1\u7b97","title":"\u5e76\u884c\u8ba1\u7b97"},{"location":"bigdata/flink/quickstart/#_27","text":"\u6bcf\u4e00\u4e2a\u7b97\u5b50(operator)\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u5b50\u4efb\u52a1(operator subtask)\uff0c\u8fd9\u4e9b\u5b50\u4efb\u52a1\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u3001\u4e0d\u540c\u7684\u7269\u7406\u673a\u6216\u4e0d\u540c\u7684\u5bb9\u5668\u4e2d\u5b8c\u5168\u72ec\u7acb\u5730\u6267\u884c\u3002 \u4e00\u4e2a\u7279\u5b9a\u7b97\u5b50\u7684\u5b50\u4efb\u52a1(subtask)\u7684\u4e2a\u6570\u88ab\u79f0\u4e4b\u4e3a\u5176\u5e76\u884c\u5ea6(parallelism)","title":"\u5e76\u884c\u5b50\u4efb\u52a1\u548c\u5e76\u884c\u5ea6"},{"location":"bigdata/flink/quickstart/#_28","text":"\u4ee3\u7801\u8bbe\u7f6e // \u5355\u4e2a\u7b97\u5b50\u6709\u6548 stream.map(word -> Tuple2.of(word, 1L)).setParallelism(2); // \u5168\u5c40\u6709\u6548 env.setParallelism(2) \u63d0\u4ea4\u4efb\u52a1\u8bbe\u7f6e bin/flink run \u2013p 2 \u2013c com.atguigu.wc.StreamWordCount ./FlinkTutorial-1.0-SNAPSHOT.jar \u914d\u7f6e\u6587\u4ef6\u8bbe\u7f6e flink-conf.yaml parallelism.default: 2","title":"\u5e76\u884c\u5ea6\u8bbe\u7f6e"},{"location":"bigdata/flink/quickstart/#operator-chain","text":"\u7b97\u5b50\u94fe\u4f20\u8f93 1:1 source,map \u91cd\u5206\u533a keyBy,window,sink \u5728 Flink \u4e2d\uff0c\u5e76\u884c\u5ea6\u76f8\u540c\u7684\u4e00\u5bf9\u4e00(one to one)\u7b97\u5b50\u64cd\u4f5c\uff0c\u53ef\u4ee5\u76f4\u63a5\u94fe\u63a5\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2a \u201c\u5927\u201d\u7684\u4efb\u52a1(task)\uff0c\u8fd9\u6837\u539f\u6765\u7684\u7b97\u5b50\u5c31\u6210\u4e3a\u4e86\u771f\u6b63\u4efb\u52a1\u91cc\u7684\u4e00\u90e8\u5206\u8fd9\u6837\u7684\u6280\u672f\u88ab\u79f0\u4e3a\u201c\u7b97\u5b50\u94fe\u201d(Operator Chain)\u3002 // \u7981\u7528\u7b97\u5b50\u94fe .map(word -> Tuple2.of(word, 1L)).disableChaining(); // \u4ece\u5f53\u524d\u7b97\u5b50\u5f00\u59cb\u65b0\u94fe .map(word -> Tuple2.of(word, 1L)).startNewChain()","title":"\u7b97\u5b50\u94fe Operator Chain"},{"location":"bigdata/flink/quickstart/#_29","text":"","title":"\u4f5c\u4e1a\u56fe\u4e0e\u6267\u884c\u56fe"},{"location":"bigdata/flink/quickstart/#_30","text":"\u8fd9\u662f\u6839\u636e\u7528\u6237\u901a\u8fc7 DataStream API \u7f16\u5199\u7684\u4ee3\u7801\u751f\u6210\u7684\u6700\u521d\u7684 DAG \u56fe\uff0c\u7528\u6765\u8868\u793a\u7a0b\u5e8f\u7684\u62d3 \u6251\u7ed3\u6784\u3002\u8fd9\u4e00\u6b65\u4e00\u822c\u5728\u5ba2\u6237\u7aef\u5b8c\u6210\u3002 \u6e90\u7b97\u5b50 Source(socketTextStream())\u2192\u6241\u5e73\u6620\u5c04\u7b97\u5b50 Flat Map(flatMap()) \u2192\u5206\u7ec4\u805a\u5408\u7b97\u5b50 Keyed Aggregation(keyBy/sum()) \u2192\u8f93\u51fa\u7b97\u5b50 Sink(print())\u3002","title":"\u903b\u8f91\u6d41\u56fe"},{"location":"bigdata/flink/quickstart/#jobgraph","text":"\u5c06\u591a\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\u94fe\u63a5\u5728\u4e00\u8d77 \u5408\u5e76\u6210\u4e00\u4e2a\u4efb\u52a1\u8282\u70b9\uff0c\u5f62\u6210\u7b97\u5b50\u94fe\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u6570\u636e\u4ea4\u6362\u7684\u6d88\u8017\u3002","title":"\u4f5c\u4e1a\u56fe(JobGraph)"},{"location":"bigdata/flink/quickstart/#executiongraph","text":"JobMaster \u6536\u5230 JobGraph \u540e\uff0c\u4f1a\u6839\u636e\u5b83\u6765\u751f\u6210\u6267\u884c\u56fe(ExecutionGraph)\u3002ExecutionGraph \u662f JobGraph \u7684\u5e76\u884c\u5316\u7248\u672c\uff0c\u662f\u8c03\u5ea6\u5c42\u6700\u6838\u5fc3\u7684\u6570\u636e\u7ed3\u6784\u3002","title":"\u6267\u884c\u56fe(ExecutionGraph)"},{"location":"bigdata/flink/quickstart/#physical-graph","text":"JobMaster \u751f\u6210\u6267\u884c\u56fe\u540e\uff0c \u4f1a\u5c06\u5b83\u5206\u53d1\u7ed9 TaskManager;\u5404\u4e2a TaskManager \u4f1a\u6839\u636e\u6267\u884c\u56fe \u90e8\u7f72\u4efb\u52a1\uff0c\u6700\u7ec8\u7684\u7269\u7406\u6267\u884c\u8fc7\u7a0b\u4e5f\u4f1a\u5f62\u6210\u4e00\u5f20\u201c\u56fe\u201d\uff0c\u4e00\u822c\u5c31\u53eb\u4f5c\u7269\u7406\u56fe(Physical Graph)\u3002","title":"\u7269\u7406\u56fe(Physical Graph)"},{"location":"bigdata/flink/quickstart/#taskstask-slots","text":"taskmanager.numberOfTaskSlots: 8 slot \u76ee\u524d\u4ec5\u4ec5\u7528\u6765\u9694\u79bb\u5185\u5b58\uff0c\u4e0d\u4f1a\u6d89\u53ca CPU \u7684\u9694\u79bb \u53ea\u8981\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4f5c\u4e1a\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e0d\u540c\u4efb\u52a1\u8282\u70b9\u7684\u5e76\u884c\u5b50\u4efb\u52a1\uff0c\u5c31\u53ef\u4ee5\u653e\u5230\u540c\u4e00\u4e2a slot \u4e0a\u6267\u884c\u3002","title":"\u4efb\u52a1(Tasks)\u548c\u4efb\u52a1\u69fd(Task Slots)"},{"location":"bigdata/flink/state/","text":"keyed \u591a\u4e2a \u7b97\u5b50 kafka \u504f\u79fb\u91cf \u6240\u6709\u4efb\u52a1\u5bf9\u4e00\u4e2a\u6570\u636e\u90fd\u8ba1\u7b97\u5b8c\u6210","title":"State"},{"location":"bigdata/flink/table/","text":"\u6982\u8ff0 ProcessFunction -> DataStream -> Table -> SQL ProcessFunction: \u4e8b\u4ef6\u7684\u65f6\u95f4\u4fe1\u606f\u3001\u6ce8\u518c\u5b9a\u65f6\u5668\u3001\u81ea\u5b9a\u4e49\u72b6\u6001\uff0c\u8fdb\u884c\u6709\u72b6\u6001\u7684\u6d41\u5904\u7406 \u4e0d\u8fc7\u5728\u4f01\u4e1a\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5f80\u5f80\u4f1a\u9762\u5bf9\u5927\u91cf\u7c7b\u4f3c\u7684\u5904\u7406\u903b\u8f91\uff0c\u6240\u4ee5\u4e00\u822c\u4f1a\u5c06\u5e95\u5c42 API \u5305\u88c5 \u6210\u66f4\u52a0\u5177\u4f53\u7684\u5e94\u7528\u7ea7\u63a5\u53e3\uff0c\u5982\u76f4\u63a5\u662f\u4f7f\u7528SQL quickstart \u5f15\u5165\u4f9d\u8d56 <!--flinkTableAPI\u4f7f\u7528, tableAPI \u5230DataStream\u8fde\u63a5\u652f\u6301--> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-table-api-java-bridge_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> <!--\u5982\u9700\u672c\u5730ide\u8fd0\u884c\uff0c\u8fd8\u987b\u5f15\u5165\u4ee5\u4e0b\u4f9d\u8d56--> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-table-planner-blink_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-streaming-scala_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> \u8fd9\u91cc\u4e3b\u8981\u6dfb\u52a0\u7684\u4f9d\u8d56\u662f\u4e00\u4e2a\u201c\u8ba1\u5212\u5668\u201d(planner)\uff0c\u5b83\u662f Table API \u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u8d1f\u8d23\u63d0\u4f9b\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u5e76\u751f\u6210\u7a0b\u5e8f\u7684\u6267\u884c\u8ba1\u5212\u3002\u8fd9\u91cc\u6211\u4eec\u7528\u5230\u7684\u662f\u65b0\u7248\u7684blink planner\u3002\u7531\u4e8eFlink\u5b89\u88c5\u5305\u7684 lib \u76ee\u5f55\u4e0b\u4f1a\u81ea\u5e26 planner\uff0c\u6240\u4ee5\u5728\u751f\u4ea7\u96c6\u7fa4\u73af\u5883\u4e2d\u63d0\u4ea4\u7684\u4f5c\u4e1a\u4e0d\u9700\u8981\u6253\u5305\u8fd9\u4e2a\u4f9d\u8d56\u3002 \u5982\u679c\u60f3\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u683c\u5f0f\u6765\u505a\u5e8f\u5217\u5316\uff0c\u53ef\u4ee5\u5f15\u5165\u4e0b\u9762\u7684\u4f9d\u8d56 <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-table-common</artifactId> <version>${flink.version}</version> </dependency> code package com.matt.apitest.table; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.table.api.Table; import org.apache.flink.table.api.bridge.java.StreamTableEnvironment; import org.apache.flink.types.Row; import java.time.Duration; import static org.apache.flink.table.api.Expressions.$; /** * @author matt * @create 2023-03-24 00:10 * @desc xxx */ public class SimpleTableCase { public static void main(String[] args) throws Exception { // 1.create env StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); // 2.build sourceStream SingleOutputStreamOperator<Event> eventStream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()) .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); // 3.\u521b\u5efa\u8868\u6267\u884c\u73af\u5883 StreamTableEnvironment streamTableEnv = StreamTableEnvironment.create(env); // 4. createTable Table eTable = streamTableEnv.fromDataStream(eventStream); Table resT = streamTableEnv.sqlQuery(\"select user, url, `timestamp` from \" + eTable); Table resT2 = resT.select($(\"user\"), $(\"url\")) .where($(\"user\").isEqual(\"matt\")); // 5.table out DataStream<Row> rowDataStream = streamTableEnv.toDataStream(resT); DataStream<Row> res2 = streamTableEnv.toDataStream(resT2); rowDataStream.print(\"res1\"); res2.print(\"res2\"); env.execute(); // \u66f4\u65b0\u6d41 \u4f7f\u7528 //streamTableEnv.toChangelogStream(\"\"); } } commonAPI \u7a0b\u5e8f\u67b6\u6784 DataStream: \u8bfb\u53d6\u6570\u636e\u6e90Source -> \u8f6c\u6362Transform -> \u8f93\u51fa\u6570\u636eSink Table: \u521b\u5efa\u8868\u73af\u5883\uff0c\u8bbe\u7f6e\u8f93\u5165\u8f93\u51fa\u8868 -> \u6267\u884cSQL\u5bf9\u8868\u8fdb\u884c\u67e5\u8be2\u8f6c\u6362 -> \u5199\u5165\u5230\u8f93\u51fa\u8868 \u521b\u5efa\u8868\u73af\u5883 \u8868\u73af\u5883\uff1a\u8fd0\u884c\u7684\u73af\u5883 \u529f\u80fd\uff1a \u6ce8\u518c Catalog \u548c\u8868; \u6267\u884c SQL \u67e5\u8be2; \u6ce8\u518c\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570(UDF); DataStream \u548c\u8868\u4e4b\u95f4\u7684\u8f6c\u6362\u3002 Catalog: \u4e3b\u8981\u7528\u6765\u7ba1\u7406\u6240\u6709\u6570\u636e\u5e93(database)\u548c\u8868(table)\u7684\u5143\u6570\u636e(metadata)\u3002\u9ed8\u8ba4\u7684 Catalog \u5c31\u53eb\u4f5c default_catalog\u3002 code \u5f53\u524d\u8868\u73af\u5883\u7684\u6267\u884c\u6a21\u5f0f\u548c\u8ba1\u5212\u5668(planner)\u3002\u6267\u884c\u6a21\u5f0f\u6709\u6279\u5904\u7406\u548c\u6d41\u5904\u7406\u4e24\u79cd\u9009\u62e9\uff0c\u9ed8\u8ba4\u662f\u6d41\u5904\u7406\u6a21\u5f0f;\u8ba1\u5212\u5668\u9ed8\u8ba4\u4f7f \u7528 blink planner\u3002 // \u5e38\u7528 //StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); //env.setParallelism(1); //StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env); // 1 \u5b9a\u4e49\u73af\u5883\u914d\u7f6e \u521b\u5efa\u6267\u884c\u73af\u5883 EnvironmentSettings settings = EnvironmentSettings.newInstance() .inStreamingMode() .useBlinkPlanner() .build(); TableEnvironment tableEnv = TableEnvironment.create(settings); /*// \u8001\u7248\u672c \u6d41\u5904\u7406 EnvironmentSettings settings1 = EnvironmentSettings.newInstance() .inStreamingMode() .useOldPlanner() .build(); TableEnvironment tableEnv1 = TableEnvironment.create(settings1); // \u8001\u7248\u672c \u6279\u5904\u7406 ExecutionEnvironment batchEnv = ExecutionEnvironment.getExecutionEnvironment(); BatchTableEnvironment batchTableEnvironment = BatchTableEnvironment.create(batchEnv); */ \u521b\u5efa\u8868 \u6982\u8ff0 \u8868\u5728\u73af\u5883\u4e2d\u6709\u4e00\u4e2a\u552f\u4e00\u7684 ID\uff0c\u7531\u4e09\u90e8\u5206\u7ec4\u6210:\u76ee\u5f55(catalog)\u540d\uff0c\u6570\u636e\u5e93(database)\u540d\uff0c\u4ee5\u53ca\u8868\u540d\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u76ee\u5f55\u540d\u4e3a default_catalog\uff0c\u6570\u636e\u5e93\u540d\u4e3adefault_database\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u53eb\u4f5c MyTable \u7684\u8868\uff0c\u5b83\u7684 ID \u5c31\u662f: default_catalog.default_database.MyTable \u521b\u5efa\u8868\u7684\u65b9\u5f0f\u6709\u4fe9\u79cd \u8fde\u63a5\u5668connector \u548c\u865a\u62df\u8868virtual tables \u8bbe\u7f6ecataLog&database tEnv.useCatalog(\"custom_catalog\"); tEnv.useDatabase(\"custom_database\"); \u8fde\u63a5\u5668 \u5b9a\u4e49\u4e00\u4e2addl \u8bed\u53e5 \uff0c\u7136\u540e\u6267\u884c // \u521b\u5efa\u8868 String createDDL = \"CREATE TABLE clickTable (\" + \"`user` STRING, \" + \"ts BIGINT, \" + \"v STRING\" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = '/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt',\" + \"'format' = 'csv'\" + \")\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createDDL); String createOutDDL = \"CREATE TABLE outTable (\" + \"`user` STRING, \" + \"ts BIGINT \" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = 'out',\" + \"'format' = 'csv')\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createOutDDL); \u865a\u62df\u8868 \u67e5\u8be2\u540e\u5f97\u5230Table -> \u6ce8\u518c\u865a\u62df\u8868 Table clickTable = tableEnv.from(\"clickTable\"); // \u8fd9\u91cc\u4e0d\u7528\u5199\u53cd\u5f15\u53f7 Table mattTable = clickTable.where($(\"user\").isEqual(\"matt\")); tableEnv.createTemporaryView(\"mattTable\",mattTable); \u8868\u7684\u67e5\u8be2 \u652f\u6301SQL\u67e5\u8be2\u548cTableAPI SQL String aggResSQL = \"SELECT user, count(ts) from clickTable group by user\"; String aggResDDL = \"CREATE TABLE printOutTable (\" + \"`user` STRING, \" + \"cnt BIGINT \" + \") WITH (\" + \"'connector' = 'print')\"; Table aggResTable = tableEnv.sqlQuery(aggResSQL); SELECT\u8bed\u53e5\u67e5\u8be2\uff0c\u8c03\u7528sqlQuery INSERT\u8bed\u53e5\u5199\u5165\u5230outTable,\u8c03\u7528executeSQL TableAPI Table maryClickTable = eventTable .where($(\"user\").isEqual(\"Alice\")) .select($(\"url\"), $(\"user\")); $\u6307\u5b9a\u8868\u7684\u4e00\u4e2a\u5b57\u6bb5 \u7ed3\u5408\u4f7f\u7528 Table clickTable = tableEnvironment.sqlQuery(\"select url, user from \" + eventTable); \u4e5f\u53ef\u4ee5\u5c06eventTable \u6ce8\u518c\u5230\u865a\u62df\u8868\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 \u8f93\u51fa\u8868 \u521b\u5efa\u8f93\u51fa\u8868 \u67e5\u8be2\u7ed3\u679c\u5199\u5165\u5230\u8f93\u51fa\u8868 String createOutDDL = \"CREATE TABLE outTable (\" + \"`user` STRING, \" + \"ts BIGINT \" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = 'out',\" + \"'format' = 'csv')\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createOutDDL); Table mattTable2 = tableEnv.sqlQuery(\"select user, ts from mattTable\"); mattTable2.executeInsert(\"outTable\"); \u8868\u548c\u6d41\u7684\u8f6c\u6362 \u8868\u8f6c\u6362\u6d41 Table2DataStream toDataStream tableEnv.toDataStream(aliceVisitTable).print(); toChangelogStream: \u8868\u7684\u5185\u5bb9\u4f1a\u53d1\u751f\u66f4\u65b0 tableEnv.toChangelogStream(urlCountTable).print(); \u6d41\u8f6c\u6362\u8868 fromDataStream Table eventTable2 = tableEnv.fromDataStream(eventStream, $(\"timestamp\"), $(\"url\")); // \u5c06 timestamp \u5b57\u6bb5\u91cd\u547d\u540d\u4e3a ts Table eventTable2 = tableEnv.fromDataStream(eventStream, $(\"timestamp\").as(\"ts\"), $(\"url\")); createTemporaryView tableEnv.createTemporaryView(\"EventTable\", eventStream, $(\"timestamp\").as(\"ts\"),$(\"url\")); fromChangelogStream \u8868\u73af\u5883\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u6cd5 fromChangelogStream()\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e2a\u66f4\u65b0\u65e5\u5fd7\u6d41\u8f6c\u6362\u6210\u8868\u3002\u8fd9 \u4e2a\u65b9\u6cd5\u8981\u6c42\u6d41\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u53ea\u80fd\u662f Row\uff0c\u800c\u4e14\u6bcf\u4e00\u4e2a\u6570\u636e\u90fd\u9700\u8981\u6307\u5b9a\u5f53\u524d\u884c\u7684\u66f4\u65b0\u7c7b\u578b \uff08RowKind\uff09\uff1b \u652f\u6301\u7684\u6570\u636e\u7c7b\u578b \u539f\u5b50\u7c7b\u578b int,double,string \u548c\u901a\u7528\u7684\u6570\u636e\u7c7b\u578b\uff08\u4e0d\u53ef\u5728\u62c6\u5206\u7684\u6570\u636e\u7c7b\u578b\uff09 Tuple\u7c7b\u578b \u5982\u679c\u4e0d\u505a\u91cd\u547d\u540d\uff0c\u90a3\u4e48\u540d\u5b57\u5c31\u662ff0,f1,f2 pojo\u7c7b\u578b \u5982\u679c\u4e0d\u505a\u91cd\u547d\u540d\uff0c\u5b57\u6bb5\u540d\u5c31\u662f\u539f\u6765\u7c7b\u4e2d\u5b57\u6bb5\u540d\u79f0 Row Row \u7c7b\u578b\u8fd8\u9644\u52a0\u4e86\u4e00\u4e2a\u5c5e\u6027 RowKind\uff0c\u7528\u6765\u8868\u793a\u5f53\u524d\u884c\u5728\u66f4\u65b0\u64cd\u4f5c\u4e2d\u7684\u7c7b\u578b\u3002\u8fd9\u6837\uff0c Row \u5c31\u53ef\u4ee5\u7528\u6765\u8868\u793a\u66f4\u65b0\u65e5\u5fd7\u6d41\uff08changelog stream\uff09\u4e2d\u7684\u6570\u636e DataStream<Row> dataStream = env.fromElements( Row.ofKind(RowKind.INSERT, \"Alice\", 12), Row.ofKind(RowKind.INSERT, \"Bob\", 5), Row.ofKind(RowKind.UPDATE_BEFORE, \"Alice\", 12), Row.ofKind(RowKind.UPDATE_AFTER, \"Alice\", 100)); // \u5c06\u66f4\u65b0\u65e5\u5fd7\u6d41\u8f6c\u6362\u4e3a\u8868 Table table = tableEnv.fromChangelogStream(dataStream); case \u7edf\u8ba1\u6bcf\u4e2a\u7528\u6237\u70b9\u51fb\u6b21\u6570 package com.matt.apitest.table; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.table.api.Table; import org.apache.flink.table.api.bridge.java.StreamTableEnvironment; import org.apache.flink.types.Row; import java.time.Duration; import static org.apache.flink.table.api.Expressions.$; /** * @author matt * @create 2023-03-24 00:10 * @desc xxx */ public class SimpleTableCase { public static void main(String[] args) throws Exception { // 1.create env StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); // 2.build sourceStream SingleOutputStreamOperator<Event> eventStream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()) .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); // 3.\u521b\u5efa\u8868\u6267\u884c\u73af\u5883 StreamTableEnvironment streamTableEnv = StreamTableEnvironment.create(env); // 4. createTable Table eTable = streamTableEnv.fromDataStream(eventStream); Table userClickCnt = streamTableEnv.sqlQuery(\"select user, count(url) from \" + eTable + \" group by user\"); // 5.table out DataStream<Row> userClickCntStream = streamTableEnv.toChangelogStream(userClickCnt); userClickCntStream.print(); env.execute(); } } \u6d41\u5904\u7406\u4e2d\u7684\u8868 \u52a8\u6001\u8868\u548c\u6301\u7eed\u67e5\u8be2 \u52a8\u6001\u8868 \u5982\u679c\u6211\u4eec\u4fdd\u5b58\u4e86\u8868\u5728\u67d0\u4e00\u65f6\u523b\u7684\u5feb\u7167\uff08snapshot\uff09\uff0c\u90a3\u4e48 \u63a5\u4e0b\u6765\u53ea\u8981\u8bfb\u53d6\u66f4\u65b0\u65e5\u5fd7\u6d41\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u4e4b\u540e\u7684\u53d8\u5316\u8fc7\u7a0b\u548c\u6700\u7ec8\u7ed3\u679c\u4e86 \u6301\u7eed\u67e5\u8be2 \u7531\u4e8e\u6570\u636e\u5728\u4e0d\u65ad\u53d8\u5316\uff0c\u56e0\u6b64\u57fa\u4e8e\u5b83\u5b9a\u4e49 \u7684 SQL \u67e5\u8be2\u4e5f\u4e0d\u53ef\u80fd\u6267\u884c\u4e00\u6b21\u5c31\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002 \u968f\u7740\u65b0\u6570\u636e\u7684\u5230\u6765\u800c\u7ee7\u7eed\u6267\u884c \u6d41\u8f6c\u6362\u4e3a\u52a8\u6001\u8868 \u65e0\u66f4\u65b0\u5219\u4f7f\u7528 fromDataStream \u6709\u66f4\u65b0\u5219\u4f7f\u7528 fromChangelogStream \u51e0\u79cd\u6d41insert \u4ec5\u63d2\u5165\u6d41 \u65b0\u589einsert\uff1aadd \u6d88\u606f \u64a4\u56de\u6d41retract \u65b0\u589einsert\uff1aadd \u6d88\u606f \u5220\u9664delete:retract\u6d88\u606f \u66f4\u65b0update\uff1aretract,add \u66f4\u65b0\u540e\u7684\u6d88\u606f \u66f4\u65b0\u63d2\u5165\u6d41upsert \u66f4\u65b0\u63d2\u5165\uff1a\u6709\u4e00\u4e2a\u552f\u4e00\u7684key, \u5b58\u5728\u5219\u66f4\u65b0\u4e0d\u5b58\u5728\u5219\u63d2\u5165 \u5220\u9664\uff1a\u5220\u9664\u6d88\u606f \u5728\u8868\u6d41\u8f6c\u6362\u662f\u6ca1\u6709\u552f\u4e00\u7684key \u6240\u4ee5\u5f53\u524d\u4f7f\u7528\u7684\u662f\u64a4\u56de\u6d41 -u \u5220\u9664 +u \u66f4\u65b0 3> +I[matt, 1] 2> +I[sensor_7, 1] 10> +I[sensor_1, 1] 5> +I[sensor_6, 1] 5> -U[sensor_6, 1] 3> -U[matt, 1] 5> +U[sensor_6, 2] 3> +U[matt, 2] 5> -U[sensor_6, 2] 5> +U[sensor_6, 3] sink \u4e0d\u652f\u6301\u66f4\u65b0\u64cd\u4f5c \u65f6\u95f4\u5c5e\u6027\u548c\u7a97\u53e3 \u4e8b\u4ef6\u65f6\u95f4 1s \u7684\u5ef6\u8fdf \u51fd\u6570\u8bf4\u660e TO_TIMESTAMP // \u5e26\u6709\u65f6\u533a TO_TIMESTAMP_LTZ timestamp = \"2022-04-12 12:00:00\" TO_TIMESTAMP(timestamp, 'yyyy-MM-dd HH:mm:ss') timestamp = 1649826000L // \u79d2\u7ea7\u65f6\u95f4\u6233 FROM_UNIXTIME(timestamp, 'yyyy-MM-dd HH:mm:ss') \u4e8b\u4ef6\u65f6\u95f4\u662fms \u7ea7\u522b\u65f6\u95f4\u6233 String createDDL = \"CREATE TABLE clickTable (\" + \"`user` STRING, \" + \"ts BIGINT, \" + \"url STRING,\" + \"et AS TO_TIMESTAMP(FROM_UNIXTIME(ts)),\" + \"WATERMARK FOR et as et - INTERVAL '1' SECOND\" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = '/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt',\" + \"'format' = 'csv'\" + \")\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createDDL); // 2.\u6d41\u8f6c\u6362\u6210 \u6307\u5b9a SingleOutputStreamOperator<Event> clickStream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()) .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); Table clickTable = tableEnv.fromDataStream(clickStream, $(\"user\"), $(\"url\"), $(\"timestamp\").as(\"ts\"), $(\"et\").rowtime()); clickTable.printSchema(); \u5904\u7406\u65f6\u95f4 \u521b\u5efa\u8868\u65f6\u6307\u5b9a ROCTIME()\u51fd\u6570\u6765\u6307\u5b9a\u5f53\u524d\u7684\u5904\u7406\u65f6\u95f4\u5c5e\u6027\uff0c\u8fd4\u56de\u7684\u7c7b\u578b\u662f TIMESTAMP_LTZ CREATE TABLE EventTable( user STRING, url STRING, ts AS PROCTIME() ) WITH ( ... ); \u6570\u636e\u6d41\u8f6c\u6362\u65f6\u6307\u5b9a Table table = tEnv.fromDataStream(stream, $(\"user\"), $(\"url\"), $(\"ts\").proctime()); \u7a97\u53e3 \u5206\u7ec4\u7a97\u53e3\u8001\u7248\u672c 10s \u7684\u6eda\u52a8\u7a97\u53e3 // 2.\u5206\u7ec4\u7a97\u53e3 \uff08\u8001\u7248\u672c\uff09 Table aggWinTable = tableEnv.sqlQuery(\"select user, count(1), TUMBLE_END(et, INTERVAL '10' SECOND) as entT \" + \"from clickTable group by user, TUMBLE(et, INTERVAL '10' SECOND)\"); \u51fd\u6570\u6709 TUMBLE()\u3001HOP()\u3001SESSION() \u5206\u7ec4\u7a97\u53e3\u7684\u529f\u80fd\u6bd4\u8f83\u6709\u9650\uff0c\u53ea\u652f\u6301\u7a97\u53e3\u805a\u5408\uff0c\u6240\u4ee5\u76ee\u524d\u5df2\u7ecf\u5904\u4e8e\u5f03\u7528(deprecated)\u7684\u72b6\u6001\u3002 \u7a97\u53e3\u8868\u503c\u51fd\u6570 tvt \u65b0\u7248\u672c \u6982\u8ff0 \u7a97\u53e3\u8868\u503c\u51fd\u6570\u662f Flink \u5b9a\u4e49\u7684\u591a\u6001\u8868\u51fd\u6570(PTF)\uff0c\u53ef\u4ee5\u5c06\u8868\u8fdb\u884c\u6269\u5c55\u540e\u8fd4\u56de tvf \u63d0\u4f9b\u4e86\u4e09\u4e2a\u7279\u6b8a\u7684\u5b57\u6bb5 \u201c\u7a97\u53e3\u8d77\u59cb\u70b9\u201d(window_start)\u3001\u201c\u7a97\u53e3\u7ed3\u675f\u70b9\u201d(window_end)\u3001\u201c\u7a97\u53e3\u65f6\u95f4\u201d(window_time) \u6eda\u52a8\u7a97\u53e3Tumble Table tumbleWinResTable = tableEnv.sqlQuery(\"select user, count(1) as cnt, \" + \"window_start as entS \" + \"from Table( \" + \"TUMBLE(TABLE clickTable, DESCRIPTOR(et), INTERVAL '10' SECOND)) \" + \"GROUP BY user, window_start, window_end\"); // et \u65f6\u95f4\u5b57\u6bb5 10s \u7684\u7a97\u53e3 TUMBLE(TABLE clickTable, DESCRIPTOR(et), INTERVAL '10' SECOND) \u6ed1\u52a8\u7a97\u53e3Hop // 1hd\u7684\u6ed1\u52a8\u7a97\u53e3 5min\u6ed1\u52a8\u4e00\u6b21 HOP(TABLE EventTable, DESCRIPTOR(ts), INTERVAL '5' MINUTES, INTERVAL '1' HOURS)) \u7d2f\u8ba1\u7a97\u53e3CUMULATE \u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u8f93\u51fa\u5f53\u524d\u7a97\u53e3\u72b6\u6001 \u4f46\u662f\u7a97\u53e3\u4e0d\u6ed1\u52a8 \u662f\u6eda\u52a8\u7684 CUMULATE(TABLE EventTable, DESCRIPTOR(ts), INTERVAL '1' HOURS, INTERVAL '1' DAYS)) \u4f1a\u8bdd\u7a97\u53e3 \u6682\u672a\u652f\u6301 \u805a\u5408 \u5206\u7ec4\u805a\u5408 SELECT user, COUNT(url) as cnt FROM EventTable GROUP BY user \u51fd\u6570\u6709 SUM()\u3001MAX()\u3001MIN()\u3001AVG()\u4ee5\u53ca COUNT() \u9632\u6b62\u72b6\u6001\u65e0\u9650\u589e\u957f\u8017\u5c3d\u8d44\u6e90\uff0cFlink Table API \u548c SQL \u53ef\u4ee5\u5728\u8868 \u73af\u5883\u4e2d\u914d\u7f6e\u72b6\u6001\u7684\u751f\u5b58\u65f6\u95f4(TTL): \u65b9\u5f0f\u4e00 // \u83b7\u53d6\u8868\u73af\u5883\u7684\u914d\u7f6e TableConfig tableConfig = tableEnv.getConfig(); // \u914d\u7f6e\u72b6\u6001\u4fdd\u6301\u65f6\u95f4 tableConfig.setIdleStateRetention(Duration.ofMinutes(60)); \u65b9\u5f0f\u4e8c TableEnvironment tableEnv = ... Configuration configuration = tableEnv.getConfig().getConfiguration(); configuration.setString(\"table.exec.state.ttl\", \"60 min\"); \u7a97\u53e3\u805a\u5408 Table result = tableEnv.sqlQuery( \"SELECT user, window_end AS endT, COUNT(url) AS cnt \" + \"FROM TABLE(\" + \" TUMBLE(TABLE EventTable, \" + \" DESCRIPTOR(ts), \" + \" INTERVAL '1' HOUR)) \" + \"GROUP BY user, window_start, window_end\" ); \u5f00\u7a97\u805a\u5408 over \u7ec4\u5185\u6392\u5e8f // over \u5f00\u7a97\u805a\u5408 Table overResTable = tableEnv.sqlQuery(\"SELECT `user`, AVG(ts) OVER( \" + \"PARTITION BY `user` ORDER BY et ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) \" + \"as avg_ts from clickTable\"); tableEnv.toChangelogStream(overResTable).print(\"overResTable\"); \u5206\u533a\uff0c\u6392\u5e8f \u5f00\u7a97\u8303\u56f4 \u65f6\u95f4 \u5f53\u524d\u884c\u4e4b\u524d 1 \u5c0f\u65f6\u7684\u6570\u636e: RANGE BETWEEN INTERVAL '1' HOUR PRECEDING AND CURRENT ROW \u884c\u95f4\u9694 \u5f53\u524d\u884c+\u5f53\u524d\u884c\u7684\u524d5\u884c ROWS BETWEEN 5 PRECEDING AND CURRENT ROW \u5355\u72ec\u5b9a\u4e49over SELECT user, ts, COUNT(url) OVER w AS cnt, MAX(CHAR_LENGTH(url)) OVER w AS max_url FROM EventTable WINDOW w AS ( PARTITION BY user ORDER BY ts ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) TopN case package com.matt.apitest.table; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.table.api.Table; import org.apache.flink.table.api.bridge.java.StreamTableEnvironment; /** * @author matt * @create 2023-03-29 23:01 * @desc xxx */ public class TopNCase { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env); // 1.\u65b0\u5efa\u8868\u6307\u5b9a String createDDL = \"CREATE TABLE clickTable (\" + \"`user` STRING, \" + \"ts BIGINT, \" + \"url STRING,\" + \"et AS TO_TIMESTAMP(FROM_UNIXTIME(ts)),\" + \"WATERMARK FOR et as et - INTERVAL '1' SECOND\" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = '/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt',\" + \"'format' = 'csv'\" + \")\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createDDL); Table topNUser = tableEnv.sqlQuery(\"SELECT user, cnt, row_num \" + \"FROM ( \" + \" SELECT *, ROW_NUMBER() OVER( \" + \" ORDER BY cnt DESC\" + \" ) AS row_num \" + \" FROM (SELECT user, COUNT(url) as cnt FROM clickTable GROUP BY user) \" + \")\" + \"WHERE row_num <= 2\"); //tableEnv.toChangelogStream(topNUser).print(); // \u7a97\u53e3topN \u4e00\u6bb5\u65f6\u95f4\u5185\u6d3b\u8dc3\u7528\u6237 top2 // \u6bcf\u4e2a\u7a97\u53e3\u552f\u4e00\u4e00\u4e2a\u7ed3\u679c Table winTopN = tableEnv.sqlQuery(\"SELECT user, cnt, row_num, window_end \" + \"FROM ( \" + \" SELECT *, ROW_NUMBER() OVER( \" + \" PARTITION BY window_start, window_end \" + \" ORDER BY cnt DESC\" + \" ) AS row_num \" + \" FROM (\" + \" SELECT user, COUNT(url) as cnt, window_start, window_end \" + \" FROM Table (\" + \" TUMBLE(TABLE clickTable, DESCRIPTOR(et), INTERVAL '10' SECOND) \" + \" )\" + \" GROUP BY user, window_start, window_end\" + \" ) \" + \")\" + \"WHERE row_num <= 2\"); tableEnv.toChangelogStream(winTopN).print(); env.execute(); } } ROW_NUMBER: \u7ec4\u5185\u6392\u5e8f\uff0c \u4f1a\u6dfb\u52a0\u4e00\u4e2a\u6392\u540d\u5b57\u6bb5 PARTITION BY: \u5206\u533a\uff0c\u4e0d\u540c\u5206\u533a\u5206\u522b\u8ba1\u7b97 ORDER BY \u6392\u5e8f Join \u8fde\u63a5\u67e5\u8be2 \u5e38\u89c4\u8fde\u63a5 \u548cmysql \u662f\u4e00\u81f4\u7684 \u5185\u8fde\u63a5 SELECT * FROM Order INNER JOIN Product ON Order.product_id = Product.id \u5916\u8fde\u63a5 SELECT * FROM Order LEFT JOIN Product ON Order.product_id = Product.id SELECT * FROM Order RIGHT JOIN Product ON Order.product_id = Product.id SELECT * FROM Order FULL OUTER JOIN Product ON Order.product_id = Product.id \u95f4\u9694\u8fde\u63a5 \u4f1a\u589e\u52a0\u4e00\u4e2a\u65f6\u95f4\u6761\u4ef6\u9650\u5236\uff0c \u5982\u4e0b ltime = rtime ltime >= rtime AND ltime < rtime + INTERVAL '10' MINUTE ltime BETWEEN rtime - INTERVAL '10' SECOND AND rtime + INTERVAL '5' SECOND \u6848\u4f8b\uff1a\u4e0b\u5355\u540e4h\u5185\u53d1\u8d27 SELECT * FROM Order o, Shipment s WHERE o.id = s.order_id AND o.order_time BETWEEN s.ship_time - INTERVAL '4' HOUR AND s.ship_time \u51fd\u6570 \u7cfb\u7edf\u51fd\u6570 \u6807\u91cf\u51fd\u6570 \u8f93\u5165\u4e00\u4e2a\u6570\u636e \u8f93\u51fa\u4e00\u4e2a\u6570\u636e \u6bd4\u8f83\u51fd\u6570 value1 = value2 \u5224\u65ad\u4e24\u4e2a\u503c\u76f8\u7b49 value1 <> value2 \u5224\u65ad\u4e24\u4e2a\u503c\u4e0d\u76f8\u7b49 value IS NOT NULL \u5224\u65ad value \u4e0d\u4e3a\u7a7a \u903b\u8f91\u51fd\u6570 \u5e03\u5c14\u7c7b\u578b\u62fc\u63a5\u8d77\u6765, and,or,not boolean1 OR boolean2 \u5e03\u5c14\u503c boolean1 \u4e0e\u5e03\u5c14\u503c boolean2 \u53d6\u903b\u8f91\u6216 boolean IS FALSE \u5224\u65ad\u5e03\u5c14\u503c boolean \u662f\u5426\u4e3a false NOT boolean \u5e03\u5c14\u503c boolean \u53d6\u903b\u8f91\u975e \u7b97\u672f\u51fd\u6570 numeric1 + numeric2 \u4e24\u6570\u76f8\u52a0 POWER(numeric1, numeric2) \u5e42\u8fd0\u7b97\uff0c\u53d6\u6570 numeric1 \u7684 numeric2 \u6b21\u65b9 RAND() \u8fd4\u56de(0.0, 1.0)\u533a\u95f4\u5185\u7684\u4e00\u4e2a double \u7c7b\u578b\u7684\u4f2a\u968f\u673a\u6570 \u5b57\u7b26\u4e32\u5904\u7406\u51fd\u6570 string1 || string2 \u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u8fde\u63a5 UPPER(string) \u5c06\u5b57\u7b26\u4e32 string \u8f6c\u4e3a\u5168\u90e8\u5927\u5199 CHAR_LENGTH(string) \u8ba1\u7b97\u5b57\u7b26\u4e32 string \u7684\u957f\u5ea6 \u65f6\u95f4\u51fd\u6570 DATE string \u6309\u683c\u5f0f\"yyyy-MM-dd\"\u89e3\u6790\u5b57\u7b26\u4e32 string\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a SQL Date TIMESTAMP string \u6309\u683c\u5f0f\"yyyy-MM-dd HH:mm:ss[.SSS]\"\u89e3\u6790\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a SQL timestamp CURRENT_TIME \u8fd4\u56de\u672c\u5730\u65f6\u533a\u7684\u5f53\u524d\u65f6\u95f4\uff0c\u7c7b\u578b\u4e3a SQL time(\u4e0e LOCALTIME\u7b49\u4ef7) INTERVAL string range \u8fd4\u56de\u4e00\u4e2a\u65f6\u95f4\u95f4\u9694\u3002string \u8868\u793a\u6570\u503c;range \u53ef\u4ee5\u662f DAY\uff0cMINUTE\uff0cDAT TO HOUR \u7b49\u5355\u4f4d\uff0c\u4e5f\u53ef\u4ee5\u662f YEAR TO MONTH \u8fd9\u6837\u7684\u590d\u5408\u5355\u4f4d\u3002\u5982\u201c2 \u5e74 10 \u4e2a\u6708\u201d\u53ef\u4ee5\u5199\u6210:INTERVAL '2-10' YEAR TO MONTH \u805a\u5408\u51fd\u6570 \u805a\u5408\u7b97\u5b50\u6709 count(*) SUM([ ALL | DISTINCT ] expression) \u5bf9\u6bcf\u4e2a\u5b57\u6bb5\u8fdb\u884c\u6c42\u548c\u64cd\u4f5c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7701\u7565\u4e86\u5173\u952e\u5b57 ALL\uff0c\u8868\u793a\u5bf9\u6240\u6709\u884c\u6c42\u548c;\u5982\u679c\u6307\u5b9a DISTINCT\uff0c\u5219\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u53bb \u91cd\uff0c\u6bcf\u4e2a\u503c\u53ea\u53e0\u52a0\u4e00\u6b21\u3002 RANK() \u8fd4\u56de\u5f53\u524d\u503c\u5728\u4e00\u7ec4\u503c\u4e2d\u7684\u6392\u540d ROW_NUMBER() \u5bf9\u4e00\u7ec4\u503c\u6392\u5e8f\u540e\uff0c\u8fd4\u56de\u5f53\u524d\u503c\u7684\u884c\u53f7\u3002\u4e0eRANK()\u7684 \u529f\u80fd\u76f8\u4f3c \u81ea\u5b9a\u4e49\u51fd\u6570 \u6982\u8ff0 \u652f\u6301\u7684\u51fd\u6570\u7c7b\u578b \u6807\u91cf\u51fd\u6570\uff1a\u5c06\u8f93\u5165\u7684\u6807\u91cf(0,1\u4e2a\u6216\u8005\u591a\u4e2a)\u8f6c\u6362\u4f4d\u53e6\u4e00\u4e2a\u6807\u91cf \u8868\u51fd\u6570\uff1a\u5c06\u6807\u91cf\u503c\u8f6c\u6362\u6210\u4e00\u4e2a\u6216\u591a\u4e2a\u65b0\u7684\u884c\u6570\u636e \u805a\u5408\u51fd\u6570\uff1a\u5c06\u591a\u884c\u6570\u636e\u91cc\u7684\u6807\u91cf\u503c\u8f6c\u6362\u6210\u4e00\u4e2a\u65b0\u7684\u6807\u91cf\u503c; \u8868\u805a\u5408\u51fd\u6570\uff1a\u5c06\u591a\u884c\u6570\u636e\u91cc\u7684\u6807\u91cf\u503c\u8f6c\u6362\u6210\u4e00 \u4e2a\u6216\u591a\u4e2a\u65b0\u7684\u884c\u6570\u636e\u3002 \u57fa\u7840\u6d41\u7a0b 1.\u6ce8\u518c\u51fd\u6570 tableEnv.createTemporarySystemFunction(\"MyFunction\", MyFunction.class); createTemporarySystemFunction\uff1a\u7cfb\u7edf\u51fd\u6570 createTemporaryFunction:\u5f53\u524d\u76ee\u5f55\u548c\u6570\u636e\u5e93 2.\u4f7f\u7528TableAPI\u8c03\u7528\u51fd\u6570 tableEnv.from(\"MyTable\").select(call(\"MyFunction\", $(\"myField\"))); call: arg1(\u51fd\u6570\u540d) arg2(\u8c03\u7528\u65f6\u4f20\u9012\u7684\u53c2\u6570) \u4e0d\u6ce8\u518c\u51fd\u6570\u76f4\u63a5\u4f7f\u7528 tableEnv.from(\"MyTable\").select(call(SubstringFunction.class, $(\"myField\"))); 3.sql\u4e2d\u8c03\u7528\u51fd\u6570 tableEnv.sqlQuery(\"SELECT MyFunction(myField) FROM MyTable\"); \u6807\u91cf\u51fd\u6570 \u7ee7\u627fScalarFunction \u5199\u4e00\u4e2apublic eval \u65b9\u6cd5 \u4e0d\u662f\u91cd\u5199\u8be5\u65b9\u6cd5 package com.matt.apitest.table; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.table.api.Table; import org.apache.flink.table.api.bridge.java.StreamTableEnvironment; import org.apache.flink.table.functions.ScalarFunction; /** * @author matt * @create 2023-03-31 00:43 * @desc xxx */ public class UDFTest_ScalarFunc { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env); // 1.\u65b0\u5efa\u8868\u6307\u5b9a String createDDL = \"CREATE TABLE clickTable (\" + \"`user` STRING, \" + \"ts BIGINT, \" + \"url STRING,\" + \"et AS TO_TIMESTAMP(FROM_UNIXTIME(ts)),\" + \"WATERMARK FOR et as et - INTERVAL '1' SECOND\" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = '/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt',\" + \"'format' = 'csv'\" + \")\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createDDL); tableEnv.createTemporarySystemFunction(\"MyHash\", MyHashFunction.class); Table myHashTable = tableEnv.sqlQuery(\"SELECT user, MyHash(user) from clickTable\"); tableEnv.toDataStream(myHashTable).print(); env.execute(); } public static class MyHashFunction extends ScalarFunction { public int eval(String str) { return str.hashCode(); } } } \u8868\u51fd\u6570 \u8868\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\u4e5f\u53ef\u4ee5\u662f 0 \u4e2a\u30011 \u4e2a\u6216\u591a\u4e2a\u6807\u91cf\u503c;\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u53ef \u4ee5\u8fd4\u56de\u4efb\u610f\u591a\u884c\u6570\u636e\u3002 LATERAL TABLE(MySplit(url)) as T(word, length) LATERAL \u4f1a\u751f\u6210\u4e00\u4e2a\u4fa7\u5411\u8868 \u7136\u540e \u548c\u4e3b\u8868\u8fdb\u884c\u8fde\u63a5 package com.matt.apitest.table; import org.apache.flink.api.java.tuple.Tuple2; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.table.api.Table; import org.apache.flink.table.api.bridge.java.StreamTableEnvironment; import org.apache.flink.table.functions.TableFunction; /** * @author matt * @create 2023-03-31 01:08 * @desc xxx */ public class UDFTest_TableFunction { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env); // 1.\u65b0\u5efa\u8868\u6307\u5b9a String createDDL = \"CREATE TABLE clickTable (\" + \"`user` STRING, \" + \"ts BIGINT, \" + \"url STRING,\" + \"et AS TO_TIMESTAMP(FROM_UNIXTIME(ts)),\" + \"WATERMARK FOR et as et - INTERVAL '1' SECOND\" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = '/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt',\" + \"'format' = 'csv'\" + \")\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createDDL); tableEnv.createTemporarySystemFunction(\"MySplit\", MySplit.class); Table mySplitT = tableEnv.sqlQuery(\"SELECT user, url,word, length \" + \"from clickTable, LATERAL TABLE(MySplit(url)) as T(word, length)\"); tableEnv.toDataStream(mySplitT).print(); env.execute(); } // \u81ea\u5b9a\u4e49\u8868\u51fd\u6570 public static class MySplit extends TableFunction<Tuple2<String, Integer>> { public void eval(String str) { String[] words = str.split(\"\\\\?\"); for (String w: words) { collect(Tuple2.of(w, w.length())); } } } } \u805a\u5408\u51fd\u6570 \u4f1a\u628a\u4e00\u884c\u6216\u591a\u884c\u6570\u636e (\u4e5f\u5c31\u662f\u4e00\u4e2a\u8868)\u805a\u5408\u6210\u4e00\u4e2a\u6807\u91cf\u503c\u3002\u8fd9\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u201c\u591a\u5bf9\u4e00\u201d\u7684\u8f6c\u6362\u3002 package com.matt.apitest.table; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.table.api.Table; import org.apache.flink.table.api.bridge.java.StreamTableEnvironment; import org.apache.flink.table.functions.AggregateFunction; /** * @author matt * @create 2023-03-31 01:25 * @desc xxx */ public class UTFTest_Aggfunction { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env); // 1.\u65b0\u5efa\u8868\u6307\u5b9a String createDDL = \"CREATE TABLE clickTable (\" + \"`user` STRING, \" + \"ts BIGINT, \" + \"url STRING,\" + \"et AS TO_TIMESTAMP(FROM_UNIXTIME(ts)),\" + \"WATERMARK FOR et as et - INTERVAL '1' SECOND\" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = '/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt',\" + \"'format' = 'csv'\" + \")\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createDDL); tableEnv.createTemporarySystemFunction(\"WeightAverage\", WeightAverage.class); Table cc = tableEnv.sqlQuery(\"SELECT user, WeightAverage(ts, 1) as w_avg \" + \"from clickTable group by user\"); tableEnv.toChangelogStream(cc).print(); env.execute(); } public static class WeightAvgAcc { public long sum = 0; public int cnt = 0; } // \u81ea\u5b9a\u4e49\u805a\u5408\u51fd\u6570 public static class WeightAverage extends AggregateFunction<Long, WeightAvgAcc> { @Override public Long getValue(WeightAvgAcc acc) { if (acc.cnt == 0) { return 0L; } return acc.sum / acc.cnt; } @Override public WeightAvgAcc createAccumulator() { return new WeightAvgAcc(); } public void accumulate(WeightAvgAcc acc, Long iV, Integer iWeight) { acc.sum += iV * iWeight; acc.cnt += iWeight; } } } 1.\u521b\u5efa\u7d2f\u52a0\u5668 2.\u6bcf\u6765\u4e00\u6761\u6570\u636e\u89e6\u53d1\u4e00\u6b21accumulate 3.\u83b7\u53d6\u8fd4\u56de\u6570\u636egetValue \u8868\u805a\u5408\u51fd\u6570 \u7528\u6237\u81ea\u5b9a\u4e49\u8868\u805a\u5408\u51fd\u6570(UDTAGG)\u53ef\u4ee5\u628a\u4e00\u884c\u6216\u591a\u884c\u6570\u636e(\u4e5f\u5c31\u662f\u4e00\u4e2a\u8868)\u805a\u5408\u6210\u53e6 \u4e00\u5f20\u8868 package com.matt.apitest.table; import org.apache.flink.api.java.tuple.Tuple2; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.table.api.Table; import org.apache.flink.table.api.bridge.java.StreamTableEnvironment; import org.apache.flink.table.functions.TableAggregateFunction; import org.apache.flink.util.Collector; import static org.apache.flink.table.api.Expressions.$; import static org.apache.flink.table.api.Expressions.call; /** * @author matt * @create 2023-04-06 22:32 * @desc xxx */ public class UDFTest_TableAggFunc { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env); // 1.\u65b0\u5efa\u8868\u6307\u5b9a String createDDL = \"CREATE TABLE clickTable (\" + \"`user` STRING, \" + \"ts BIGINT, \" + \"url STRING,\" + \"et AS TO_TIMESTAMP(FROM_UNIXTIME(ts)),\" + \"WATERMARK FOR et as et - INTERVAL '1' SECOND\" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = '/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt',\" + \"'format' = 'csv'\" + \")\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createDDL); tableEnv.createTemporarySystemFunction(\"Top2\", Top2.class); Table aggT = tableEnv.sqlQuery(\"SELECT user, COUNT(url) as cnt, window_start, window_end \" + \"FROM Table (\" + \" TUMBLE(TABLE clickTable, DESCRIPTOR(et), INTERVAL '10' SECOND) \" + \")\" + \"GROUP BY user, window_start, window_end\"); Table top2T = aggT.groupBy($(\"window_end\")) .flatAggregate(call(\"Top2\", $(\"cnt\")).as(\"v\", \"rank\")) .select($(\"window_end\"), $(\"v\"), $(\"rank\")); tableEnv.toChangelogStream(top2T).print(); env.execute(); } public static class Top2Acc { public Long max = Long.MIN_VALUE; public Long secondMax = Long.MIN_VALUE; } public static class Top2 extends TableAggregateFunction<Tuple2<Long, Integer>, Top2Acc> { @Override public Top2Acc createAccumulator() { return new Top2Acc(); } // \u6807\u51c6 public void accumulate(Top2Acc acc, Long v) { if (v > acc.max) { acc.secondMax = acc.max; acc.max = v; } else if (v > acc.secondMax) { acc.secondMax = v; } } public void emitValue(Top2Acc acc, Collector<Tuple2<Long, Integer>> collector) { if (acc.max != Long.MIN_VALUE) { collector.collect(Tuple2.of(acc.max, 1)); } if (acc.secondMax != Long.MIN_VALUE) { collector.collect(Tuple2.of(acc.secondMax, 2)); } } } } \u76ee\u524d SQL \u4e2d\u6ca1\u6709\u76f4\u63a5\u4f7f\u7528\u8868\u805a\u5408\u51fd\u6570\u7684\u65b9\u5f0f\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528 Table API \u7684\u65b9\u5f0f\u6765\u8c03\u7528 emitUpdateWithRetract()\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u5728\u7ed3\u679c\u8868\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u4ee5\u201c\u64a4\u56de\u201d(retract)\u8001\u6570 \u636e\u3001\u53d1\u9001\u65b0\u6570\u636e\u7684\u65b9\u5f0f\u589e\u91cf\u5730\u8fdb\u884c\u66f4\u65b0\u3002\u5982\u679c\u540c\u65f6\u5b9a\u4e49\u4e86 emitValue()\u548c emitUpdateWithRetract() \u4e24\u4e2a\u65b9\u6cd5\uff0c\u5728\u8fdb\u884c\u66f4\u65b0\u64cd\u4f5c\u65f6\u4f1a\u4f18\u5148\u8c03\u7528 emitUpdateWithRetract()\u3002 sql\u5ba2\u6237\u7aef \u6d41\u7a0b 1.\u542f\u52a8\u672c\u5730\u96c6\u7fa4 ./bin/start-cluster.sh 2.\u542f\u52a8flink-sql\u5ba2\u6237\u7aef ./bin/sql-client.sh 3.\u8bbe\u7f6e\u8fd0\u884c\u6a21\u5f0f \u8868\u73af\u5883\u7684\u8fd0\u884c\u6a21\u5f0f\uff0c \u6709\u6d41\u5904\u7406\u548c\u6279\u5904\u7406\uff0c \u9ed8\u8ba4\u662f\u6d41\u5904\u7406 SET 'execution.runtime-mode' = 'streaming'; \u5176\u6b21\u662f SQL \u5ba2\u6237\u7aef\u7684\u201c\u6267\u884c\u7ed3\u679c\u6a21\u5f0f\u201d\uff0c\u4e3b\u8981\u6709 table\u3001changelog\u3001tableau \u4e09\u79cd SET 'sql-client.execution.result-mode' = 'table'; table \u6a21\u5f0f\u5c31\u662f\u6700\u666e\u901a\u7684\u8868\u5904\u7406\u6a21\u5f0f\uff0c\u7ed3\u679c\u4f1a\u4ee5\u9017\u53f7\u5206\u9694\u6bcf\u4e2a\u5b57\u6bb5; changelog \u5219\u662f\u66f4\u65b0\u65e5 \u5fd7\u6a21\u5f0f\uff0c\u4f1a\u5728\u6570\u636e\u524d\u52a0\u4e0a\u201c+\u201d(\u8868\u793a\u63d2\u5165)\u6216\u201c-\u201d(\u8868\u793a\u64a4\u56de)\u7684\u524d\u7f00; tableau \u5219\u662f\u7ecf\u5178 \u7684\u53ef\u89c6\u5316\u8868\u6a21\u5f0f\uff0c\u7ed3\u679c\u4f1a\u662f\u4e00\u4e2a\u865a\u7ebf\u6846\u7684\u8868\u683c\u3002 4.\u7f16\u5199sql \u6267\u884csql\u67e5\u8be2 \u8fde\u63a5\u5230\u5916\u90e8\u7cfb\u7edf kafka \u914d\u7f6e\u4f9d\u8d56 <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-kafka_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> \u5bf9\u4e8e Kafka \u800c\u8a00\uff0cCSV\u3001JSON\u3001Avro \u7b49\u4e3b\u8981\u683c\u5f0f\u90fd\u662f\u652f\u6301\u7684\uff0c\u7531\u4e8e SQL \u5ba2\u6237\u7aef\u4e2d\u5df2\u7ecf\u5185\u7f6e\u4e86 CSV\u3001JSON \u7684\u652f\u6301\uff0c\u56e0\u6b64\u4f7f\u7528\u65f6\u65e0\u9700\u4e13\u95e8\u5f15\u5165;\u800c\u5bf9\u4e8e \u6ca1\u6709\u5185\u7f6e\u652f\u6301\u7684\u683c\u5f0f(\u6bd4\u5982 Avro)\uff0c\u5219\u4ecd\u7136\u8981\u4e0b\u8f7d\u76f8\u5e94\u7684 jar \u5305 \u521b\u5efa\u8fde\u63a5\u8868 CREATE TABLE KafkaTable ( `user` STRING, `url` STRING, `ts` TIMESTAMP(3) METADATA FROM 'timestamp' ) WITH ( 'connector' = 'kafka', 'topic' = 'events', 'properties.bootstrap.servers' = 'localhost:9092', 'properties.group.id' = 'testGroup', 'scan.startup.mode' = 'earliest-offset', 'format' = 'csv' ) METADATA FROM\uff0c\u8fd9\u662f\u8868\u793a\u4e00\u4e2a\u201c\u5143\u6570\u636e\u5217\u201d(metadata column)\uff0c\u5b83\u662f\u7531Kafka\u8fde\u63a5\u5668\u7684\u5143\u6570\u636e\u201ctimestamp\u201d\u751f\u6210\u7684\u3002\u8fd9\u91cc\u7684 timestamp \u5176\u5b9e\u5c31\u662f Kafka \u4e2d\u6570\u636e\u81ea\u5e26\u7684\u65f6\u95f4\u6233\uff0c\u6211\u4eec\u628a \u5b83\u76f4\u63a5\u4f5c\u4e3a\u5143\u6570\u636e\u63d0\u53d6\u51fa\u6765\uff0c\u8f6c\u6362\u6210\u4e00\u4e2a\u65b0\u7684\u5b57\u6bb5 ts\u3002 upsert Upsert Kafka \u8fde\u63a5\u5668\u5904\u7406\u7684\u662f\u66f4\u65b0\u65e5\u5fd7(changlog)\u6d41\u3002\u5982\u679c\u4f5c\u4e3a TableSource\uff0c \u8fde\u63a5\u5668\u4f1a\u5c06\u8bfb\u53d6\u5230\u7684topic\u4e2d\u7684\u6570\u636e(key, value)\uff0c\u89e3\u91ca\u4e3a\u5bf9\u5f53\u524dkey\u7684\u6570\u636e\u503c\u7684\u66f4\u65b0(UPDATE)\uff0c \u6ca1\u6709k \u5bf9\u5e94\u7684\u884c\u5219\u63d2\u5165 \u5b58\u5728\u5219\u66f4\u65b0 value\u4e3a\u7a7a\u5219\u5220\u9664 CREATE TABLE pageviews_per_region ( user_region STRING, pv BIGINT, uv BIGINT, PRIMARY KEY (user_region) NOT ENFORCED ) WITH ( 'connector' = 'upsert-kafka', 'topic' = 'pageviews_per_region', 'properties.bootstrap.servers' = '...', 'key.format' = 'avro', 'value.format' = 'avro' ); CREATE TABLE pageviews ( user_id BIGINT, page_id BIGINT, viewtime TIMESTAMP, user_region STRING, WATERMARK FOR viewtime AS viewtime - INTERVAL '2' SECOND ) WITH ( 'connector' = 'kafka', 'topic' = 'pageviews', 'properties.bootstrap.servers' = '...', 'format' = 'json' ); -- \u8ba1\u7b97 pv\u3001uv \u5e76\u63d2\u5165\u5230 upsert-kafka \u8868\u4e2d INSERT INTO pageviews_per_region SELECT user_region, COUNT(*), COUNT(DISTINCT user_id) FROM pageviews GROUP BY user_region; \u6587\u4ef6\u7cfb\u7edf flink \u5df2\u5185\u7f6e\u8be5\u8fde\u63a5\u5668\u65e0\u9700\u5bfc\u5165\u4f9d\u8d56 CREATE TABLE MyTable ( column_name1 INT, column_name2 STRING, ... part_name1 INT, part_name2 STRING ) PARTITIONED BY (part_name1, part_name2) WITH ( 'connector' = 'filesystem', -- \u8fde\u63a5\u5668\u7c7b\u578b 'path' = '...', -- \u6587\u4ef6\u8def\u5f84 'format' = '...' -- \u6587\u4ef6\u683c\u5f0f ) JDBC \u4f5c\u4e3a TableSink \u5411\u6570\u636e\u5e93\u5199\u5165\u6570\u636e\u65f6\uff0c\u8fd0\u884c\u7684\u6a21\u5f0f\u53d6\u51b3\u4e8e\u521b\u5efa\u8868\u7684 DDL \u662f\u5426\u5b9a\u4e49\u4e86\u4e3b\u952e (primary key)\u3002 \u5982\u679c\u6709\u4e3b\u952e\uff0c\u90a3\u4e48 JDBC \u8fde\u63a5\u5668\u5c31\u5c06\u4ee5\u66f4\u65b0\u63d2\u5165(Upsert)\u6a21\u5f0f\u8fd0\u884c\uff0c\u53ef\u4ee5\u5411 \u5916\u90e8\u6570\u636e\u5e93\u53d1\u9001\u6309\u7167\u6307\u5b9a\u952e(key)\u7684\u66f4\u65b0(UPDATE)\u548c\u5220\u9664(DELETE)\u64cd\u4f5c; \u5982\u679c\u6ca1\u6709 \u5b9a\u4e49\u4e3b\u952e\uff0c\u90a3\u4e48\u5c31\u5c06\u5728\u8ffd\u52a0(Append)\u6a21\u5f0f\u4e0b\u8fd0\u884c\uff0c\u4e0d\u652f\u6301\u66f4\u65b0\u548c\u5220\u9664\u64cd\u4f5c\u3002 \u63a5\u5165\u6d41\u7a0b \u5f15\u5165\u4f9d\u8d56 <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-jdbc_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <version>5.1.38</version> </dependency> \u521b\u5efajdbc\u8868 -- \u521b\u5efa\u4e00\u5f20\u8fde\u63a5\u5230 MySQL \u7684\u8868 CREATE TABLE MyTable ( id BIGINT, name STRING, age INT, status BOOLEAN, PRIMARY KEY (id) NOT ENFORCED ) WITH ( 'connector' = 'jdbc', 'url' = 'jdbc:mysql://localhost:3306/mydatabase', 'table-name' = 'users' ); -- \u5c06\u53e6\u4e00\u5f20\u8868 T \u7684\u6570\u636e\u5199\u5165\u5230 MyTable \u8868\u4e2d INSERT INTO MyTable SELECT id, name, age, status FROM T; es \u63a5\u5165\u6d41\u7a0b \u5f15\u5165\u4f9d\u8d56 es \u7248\u672c\u4e0d\u540c \u5bfc\u5165\u4f9d\u8d56\u7684\u7248\u672c\u4e0d\u4e00\u6837 <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-elasticsearch6_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-elasticsearch7_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> \u521b\u5efa\u8868 -- \u521b\u5efa\u4e00\u5f20\u8fde\u63a5\u5230 Elasticsearch \u7684 \u8868 CREATE TABLE MyTable ( user_id STRING, user_name STRING uv BIGINT, pv BIGINT, PRIMARY KEY (user_id) NOT ENFORCED ) WITH ( 'connector' = 'elasticsearch-7', 'hosts' = 'http://localhost:9200', 'index' = 'users' ); \u8fd9\u91cc\u5b9a\u4e49\u4e86\u4e3b\u952e\uff0c\u6240\u4ee5\u4f1a\u4ee5\u66f4\u65b0\u63d2\u5165(Upsert)\u6a21\u5f0f\u5411 Elasticsearch \u5199\u5165\u6570\u636e\u3002 hbase \u6982\u8ff0 \u8fde\u63a5\u5668\u4f5c\u4e3a TableSink \u5411 HBase \u5199\u5165\u6570\u636e\u65f6\uff0c\u91c7\u7528\u7684\u59cb\u7ec8\u662f\u66f4\u65b0\u63d2\u5165 (Upsert)\u6a21\u5f0f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cHBase \u8981\u6c42\u8fde\u63a5\u5668\u5fc5\u987b\u901a\u8fc7\u5b9a\u4e49\u7684\u4e3b\u952e(primary key)\u6765\u53d1\u9001\u66f4 \u65b0\u65e5\u5fd7(changelog)\u3002\u6240\u4ee5\u5728\u521b\u5efa\u8868\u7684 DDL \u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u5b9a\u4e49\u884c\u952e(rowkey)\u5b57\u6bb5\uff0c\u5e76\u5c06 \u5b83\u58f0\u660e\u4e3a\u4e3b\u952e;\u5982\u679c\u6ca1\u6709\u7528 PRIMARY KEY \u5b50\u53e5\u58f0\u660e\u4e3b\u952e\uff0c\u8fde\u63a5\u5668\u4f1a\u9ed8\u8ba4\u628a rowkey \u4f5c\u4e3a\u4e3b\u952e\u3002 \u63a5\u5165\u6d41\u7a0b \u5f15\u5165\u4f9d\u8d56 \u76ee\u524d\u4ec5\u652f\u63011.4.x 2.2.x hbase1.4 <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-hbase-1.4_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> hbase1.4 <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-hbase-2.2_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> \u521b\u5efa\u8868 \u521b\u5efa\u51fa\u7684 HBase \u8868\u4e2d\uff0c\u6240\u6709\u7684\u5217\u65cf(column family)\u90fd\u5fc5\u987b\u58f0\u660e\u4e3a ROW \u7c7b\u578b\uff0c\u5728\u8868\u4e2d\u5360\u636e\u4e00 \u4e2a\u5b57\u6bb5;\u800c\u6bcf\u4e2a family \u4e2d\u7684\u5217(column qualifier)\u5219\u5bf9\u5e94\u7740 ROW \u91cc\u7684\u5d4c\u5957\u5b57\u6bb5\u3002\u6211\u4eec\u4e0d\u9700\u8981 \u5c06 HBase \u4e2d\u6240\u6709\u7684 family \u548c qualifier \u90fd\u5728 Flink SQL \u7684\u8868\u4e2d\u58f0\u660e\u51fa\u6765\uff0c\u53ea\u8981\u628a\u90a3\u4e9b\u5728\u67e5\u8be2\u4e2d\u7528 \u5230\u7684\u58f0\u660e\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\u3002 ROW \u7c7b\u578b\u7684\u5b57\u6bb5(\u5bf9\u5e94\u7740 HBase \u4e2d\u7684 family)\uff0c\u8868\u4e2d\u8fd8\u5e94\u6709\u4e00\u4e2a\u539f\u5b50\u7c7b\u578b\u7684\u5b57 \u6bb5\uff0c\u5b83\u5c31\u4f1a\u88ab\u8bc6\u522b\u4e3a HBase \u7684 rowkey\u3002\u5728\u8868\u4e2d\u8fd9\u4e2a\u5b57\u6bb5\u53ef\u4ee5\u4efb\u610f\u53d6\u540d\uff0c\u4e0d\u4e00\u5b9a\u975e\u8981\u53eb rowkey -- \u521b\u5efa\u4e00\u5f20\u8fde\u63a5\u5230 HBase \u7684 \u8868 CREATE TABLE MyTable ( rowkey INT, family1 ROW<q1 INT>, family2 ROW<q2 STRING, q3 BIGINT>, family3 ROW<q4 DOUBLE, q5 BOOLEAN, q6 STRING>, PRIMARY KEY (rowkey) NOT ENFORCED ) WITH ( 'connector' = 'hbase-1.4', 'table-name' = 'mytable', 'zookeeper.quorum' = 'localhost:2181' ); -- \u5047\u8bbe\u8868 T \u7684\u5b57\u6bb5\u7ed3\u6784\u662f [rowkey, f1q1, f2q2, f2q3, f3q4, f3q5, f3q6] INSERT INTO MyTable SELECT rowkey, ROW(f1q1), ROW(f2q2, f2q3), ROW(f3q4, f3q5, f3q6) FROM T; hive flink \u4e0e Hive \u7684\u96c6\u6210\u6bd4\u8f83\u7279\u522b\u3002Flink \u63d0\u4f9b\u4e86\u201cHive \u76ee\u5f55\u201d(HiveCatalog)\u529f\u80fd\uff0c\u5141\u8bb8\u4f7f\u7528 Hive \u7684\u201c\u5143\u5b58\u50a8\u201d(Metastore)\u6765\u7ba1\u7406 Flink \u7684\u5143\u6570\u636e\u3002\u8fd9\u5e26\u6765\u7684\u597d\u5904\u4f53\u73b0\u5728\u4e24\u4e2a\u65b9\u9762: 1.Metastore \u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u6301\u4e45\u5316\u7684\u76ee\u5f55\uff0c\u56e0\u6b64\u4f7f\u7528 HiveCatalog \u53ef\u4ee5\u8de8\u4f1a\u8bdd\u5b58\u50a8 Flink \u7279\u5b9a\u7684\u5143\u6570\u636e\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u5728 HiveCatalog \u4e2d\u6267\u884c\u6267\u884c\u521b\u5efa Kafka \u8868\u6216\u8005 ElasticSearch \u8868\uff0c \u5c31\u53ef\u4ee5\u628a\u5b83\u4eec\u7684\u5143\u6570\u636e\u6301\u4e45\u5316\u5b58\u50a8\u5728 Hive \u7684 Metastore \u4e2d;\u5bf9\u4e8e\u4e0d\u540c\u7684\u4f5c\u4e1a\u4f1a\u8bdd\u5c31\u4e0d\u9700\u8981\u91cd\u590d\u521b\u5efa\u4e86\uff0c\u76f4\u63a5\u5728 SQL \u67e5\u8be2\u4e2d\u91cd\u7528\u5c31\u53ef\u4ee5\u3002 2.\u4f7f\u7528 HiveCatalog\uff0cFlink \u53ef\u4ee5\u4f5c\u4e3a\u8bfb\u5199 Hive \u8868\u7684\u66ff\u4ee3\u5206\u6790\u5f15\u64ce\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5728 Hive \u4e2d\u8fdb\u884c\u6279\u5904\u7406\u4f1a\u66f4\u52a0\u9ad8\u6548;\u4e0e\u6b64\u540c\u65f6\uff0c\u4e5f\u6709\u4e86\u8fde\u7eed\u5728 Hive \u4e2d\u8bfb\u5199\u6570\u636e\u3001\u8fdb\u884c\u6d41\u5904\u7406\u7684\u80fd\u529b\uff0c \u8fd9\u4e5f\u4f7f\u5f97\u201c\u5b9e\u65f6\u6570\u4ed3\u201d(real-time data warehouse)\u6210\u4e3a\u4e86\u53ef\u80fd\u3002 \u63a5\u5165 \u5f15\u5165\u4f9d\u8d56 \u76ee\u524dflink \u652f\u6301\u7684\u7248\u672c\u6709 Hive 1.x:1.0.0~1.2.2; Hive 2.x:2.0.0-2.2.0-2.3.0-2.3.6; Hive 3.x:3.0.0~3.1.2; \u9700\u8981\u6709hadoop \u73af\u5883 <!-- Flink \u7684 Hive \u8fde\u63a5\u5668--> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-hive_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> <!-- Hive \u4f9d\u8d56 --> <dependency> <groupId>org.apache.hive</groupId> <artifactId>hive-exec</artifactId> <version>${hive.version}</version> </dependency> \u5efa\u8bae\u4e0d\u8981\u628a\u8fd9\u4e9b\u4f9d\u8d56\u6253\u5305\u5230\u7ed3\u679c jar \u6587\u4ef6\u4e2d\uff0c\u800c\u662f\u5728\u8fd0\u884c\u65f6\u7684\u96c6\u7fa4\u73af\u5883\u4e2d\u4e3a\u4e0d\u540c\u7684 Hive \u7248\u672c\u6dfb\u52a0\u4e0d\u540c\u7684\u4f9d\u8d56\u652f\u6301\u3002\u5177\u4f53\u7248\u672c\u5bf9\u5e94\u7684\u4f9d\u8d56\u5173\u7cfb \u8fde\u63a5hive \u5728 Flink \u4e2d\u8fde\u63a5 Hive\uff0c\u662f\u901a\u8fc7\u5728\u8868\u73af\u5883\u4e2d\u914d\u7f6e HiveCatalog \u6765\u5b9e\u73b0\u7684\u3002\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u914d \u7f6e HiveCatalog \u672c\u8eab\u5e76\u4e0d\u9700\u8981\u9650\u5b9a\u4f7f\u7528\u54ea\u4e2a planner\uff0c\u4e0d\u8fc7\u5bf9 Hive \u8868\u7684\u8bfb\u5199\u64cd\u4f5c\u53ea\u6709 Blink \u7684 planner \u624d\u652f\u6301\u3002\u6240\u4ee5\u4e00\u822c\u6211\u4eec\u9700\u8981\u5c06\u8868\u73af\u5883\u7684 planner \u8bbe\u7f6e\u4e3a Blink\u3002 EnvironmentSettings settings = EnvironmentSettings.newInstance().useBlinkPlanner().build(); TableEnvironment tableEnv = TableEnvironment.create(settings); String name = \"myhive\"; String defaultDatabase = \"mydatabase\"; String hiveConfDir = \"/opt/hive-conf\"; // \u521b\u5efa\u4e00\u4e2a HiveCatalog\uff0c\u5e76\u5728\u8868\u73af\u5883\u4e2d\u6ce8\u518c HiveCatalog hive = new HiveCatalog(name, defaultDatabase, hiveConfDir); tableEnv.registerCatalog(\"myhive\", hive); // \u4f7f\u7528 HiveCatalog \u4f5c\u4e3a\u5f53\u524d\u4f1a\u8bdd\u7684 catalog tableEnv.useCatalog(\"myhive\"); Flink SQL> create catalog myhive with ('type' = 'hive', 'hive-conf-dir' = '/opt/hive-conf'); [INFO] Execute statement succeed. Flink SQL> use catalog myhive; [INFO] Execute statement succeed. \u8bbe\u7f6esql\u65b9\u8a00 Flink \u76ee\u524d\u652f\u6301\u4e24\u79cd SQL \u65b9\u8a00\u7684\u914d\u7f6e:default \u548c hive\u3002\u6240\u8c13\u7684 default \u5c31\u662f Flink SQL \u9ed8\u8ba4 \u7684SQL\u8bed\u6cd5\u4e86\u3002\u6211\u4eec\u9700\u8981\u5148\u5207\u6362\u5230hive\u65b9\u8a00\uff0c\u7136\u540e\u624d\u80fd\u4f7f\u7528Hive SQL\u7684\u8bed\u6cd5\u3002\u5177\u4f53\u8bbe\u7f6e\u53ef \u4ee5\u5206\u4e3a SQL \u548c Table API \u4e24\u79cd\u65b9\u5f0f\u3002 1.sql\u4e2d\u8bbe\u7f6e \u65b9\u5f0f\u4e00 sql\u914d\u7f6e set table.sql-dialect=hive; \u65b9\u5f0f\u4e8c\u914d\u7f6e\u6587\u4ef6\u4e2d\u4fee\u6539sql-cli-defaults.yaml execution: planner: blink type: batch result-mode: table configuration: table.sql-dialect: hive 2.tableAPI\u8bbe\u7f6e // \u914d\u7f6e hive \u65b9\u8a00 tableEnv.getConfig().setSqlDialect(SqlDialect.HIVE); // \u914d\u7f6e default \u65b9\u8a00 tableEnv.getConfig().setSqlDialect(SqlDialect.DEFAULT); \u8bfb\u5199hive -- \u8bbe\u7f6e SQL \u65b9\u8a00\u4e3a hive\uff0c\u521b\u5efa Hive \u8868 SET table.sql-dialect=hive; CREATE TABLE hive_table ( user_id STRING, order_amount DOUBLE ) PARTITIONED BY (dt STRING, hr STRING) STORED AS parquet TBLPROPERTIES ( 'partition.time-extractor.timestamp-pattern'='$dt $hr:00:00', 'sink.partition-commit.trigger'='partition-time', 'sink.partition-commit.delay'='1 h', 'sink.partition-commit.policy.kind'='metastore,success-file' ); -- \u8bbe\u7f6e SQL \u65b9\u8a00\u4e3a default\uff0c\u521b\u5efa Kafka \u8868 SET table.sql-dialect=default; CREATE TABLE kafka_table ( user_id STRING, order_amount DOUBLE, log_ts TIMESTAMP(3), WATERMARK FOR log_ts AS log_ts - INTERVAL '5' SECOND \u2013 \u5b9a\u4e49\u6c34\u4f4d\u7ebf ) WITH (...); -- \u5c06 Kafka \u4e2d\u8bfb\u53d6\u7684\u6570\u636e\u7ecf\u8f6c\u6362\u540e\u5199\u5165 Hive INSERT INTO TABLE hive_table SELECT user_id, order_amount, DATE_FORMAT(log_ts, 'yyyy-MM-dd'), DATE_FORMAT(log_ts, 'HH') FROM kafka_table;","title":"table"},{"location":"bigdata/flink/table/#_1","text":"ProcessFunction -> DataStream -> Table -> SQL ProcessFunction: \u4e8b\u4ef6\u7684\u65f6\u95f4\u4fe1\u606f\u3001\u6ce8\u518c\u5b9a\u65f6\u5668\u3001\u81ea\u5b9a\u4e49\u72b6\u6001\uff0c\u8fdb\u884c\u6709\u72b6\u6001\u7684\u6d41\u5904\u7406 \u4e0d\u8fc7\u5728\u4f01\u4e1a\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5f80\u5f80\u4f1a\u9762\u5bf9\u5927\u91cf\u7c7b\u4f3c\u7684\u5904\u7406\u903b\u8f91\uff0c\u6240\u4ee5\u4e00\u822c\u4f1a\u5c06\u5e95\u5c42 API \u5305\u88c5 \u6210\u66f4\u52a0\u5177\u4f53\u7684\u5e94\u7528\u7ea7\u63a5\u53e3\uff0c\u5982\u76f4\u63a5\u662f\u4f7f\u7528SQL","title":"\u6982\u8ff0"},{"location":"bigdata/flink/table/#quickstart","text":"","title":"quickstart"},{"location":"bigdata/flink/table/#_2","text":"<!--flinkTableAPI\u4f7f\u7528, tableAPI \u5230DataStream\u8fde\u63a5\u652f\u6301--> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-table-api-java-bridge_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> <!--\u5982\u9700\u672c\u5730ide\u8fd0\u884c\uff0c\u8fd8\u987b\u5f15\u5165\u4ee5\u4e0b\u4f9d\u8d56--> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-table-planner-blink_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-streaming-scala_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> \u8fd9\u91cc\u4e3b\u8981\u6dfb\u52a0\u7684\u4f9d\u8d56\u662f\u4e00\u4e2a\u201c\u8ba1\u5212\u5668\u201d(planner)\uff0c\u5b83\u662f Table API \u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u8d1f\u8d23\u63d0\u4f9b\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u5e76\u751f\u6210\u7a0b\u5e8f\u7684\u6267\u884c\u8ba1\u5212\u3002\u8fd9\u91cc\u6211\u4eec\u7528\u5230\u7684\u662f\u65b0\u7248\u7684blink planner\u3002\u7531\u4e8eFlink\u5b89\u88c5\u5305\u7684 lib \u76ee\u5f55\u4e0b\u4f1a\u81ea\u5e26 planner\uff0c\u6240\u4ee5\u5728\u751f\u4ea7\u96c6\u7fa4\u73af\u5883\u4e2d\u63d0\u4ea4\u7684\u4f5c\u4e1a\u4e0d\u9700\u8981\u6253\u5305\u8fd9\u4e2a\u4f9d\u8d56\u3002 \u5982\u679c\u60f3\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u683c\u5f0f\u6765\u505a\u5e8f\u5217\u5316\uff0c\u53ef\u4ee5\u5f15\u5165\u4e0b\u9762\u7684\u4f9d\u8d56 <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-table-common</artifactId> <version>${flink.version}</version> </dependency>","title":"\u5f15\u5165\u4f9d\u8d56"},{"location":"bigdata/flink/table/#code","text":"package com.matt.apitest.table; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.table.api.Table; import org.apache.flink.table.api.bridge.java.StreamTableEnvironment; import org.apache.flink.types.Row; import java.time.Duration; import static org.apache.flink.table.api.Expressions.$; /** * @author matt * @create 2023-03-24 00:10 * @desc xxx */ public class SimpleTableCase { public static void main(String[] args) throws Exception { // 1.create env StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); // 2.build sourceStream SingleOutputStreamOperator<Event> eventStream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()) .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); // 3.\u521b\u5efa\u8868\u6267\u884c\u73af\u5883 StreamTableEnvironment streamTableEnv = StreamTableEnvironment.create(env); // 4. createTable Table eTable = streamTableEnv.fromDataStream(eventStream); Table resT = streamTableEnv.sqlQuery(\"select user, url, `timestamp` from \" + eTable); Table resT2 = resT.select($(\"user\"), $(\"url\")) .where($(\"user\").isEqual(\"matt\")); // 5.table out DataStream<Row> rowDataStream = streamTableEnv.toDataStream(resT); DataStream<Row> res2 = streamTableEnv.toDataStream(resT2); rowDataStream.print(\"res1\"); res2.print(\"res2\"); env.execute(); // \u66f4\u65b0\u6d41 \u4f7f\u7528 //streamTableEnv.toChangelogStream(\"\"); } }","title":"code"},{"location":"bigdata/flink/table/#commonapi","text":"","title":"commonAPI"},{"location":"bigdata/flink/table/#_3","text":"DataStream: \u8bfb\u53d6\u6570\u636e\u6e90Source -> \u8f6c\u6362Transform -> \u8f93\u51fa\u6570\u636eSink Table: \u521b\u5efa\u8868\u73af\u5883\uff0c\u8bbe\u7f6e\u8f93\u5165\u8f93\u51fa\u8868 -> \u6267\u884cSQL\u5bf9\u8868\u8fdb\u884c\u67e5\u8be2\u8f6c\u6362 -> \u5199\u5165\u5230\u8f93\u51fa\u8868","title":"\u7a0b\u5e8f\u67b6\u6784"},{"location":"bigdata/flink/table/#_4","text":"\u8868\u73af\u5883\uff1a\u8fd0\u884c\u7684\u73af\u5883 \u529f\u80fd\uff1a \u6ce8\u518c Catalog \u548c\u8868; \u6267\u884c SQL \u67e5\u8be2; \u6ce8\u518c\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570(UDF); DataStream \u548c\u8868\u4e4b\u95f4\u7684\u8f6c\u6362\u3002 Catalog: \u4e3b\u8981\u7528\u6765\u7ba1\u7406\u6240\u6709\u6570\u636e\u5e93(database)\u548c\u8868(table)\u7684\u5143\u6570\u636e(metadata)\u3002\u9ed8\u8ba4\u7684 Catalog \u5c31\u53eb\u4f5c default_catalog\u3002 code \u5f53\u524d\u8868\u73af\u5883\u7684\u6267\u884c\u6a21\u5f0f\u548c\u8ba1\u5212\u5668(planner)\u3002\u6267\u884c\u6a21\u5f0f\u6709\u6279\u5904\u7406\u548c\u6d41\u5904\u7406\u4e24\u79cd\u9009\u62e9\uff0c\u9ed8\u8ba4\u662f\u6d41\u5904\u7406\u6a21\u5f0f;\u8ba1\u5212\u5668\u9ed8\u8ba4\u4f7f \u7528 blink planner\u3002 // \u5e38\u7528 //StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); //env.setParallelism(1); //StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env); // 1 \u5b9a\u4e49\u73af\u5883\u914d\u7f6e \u521b\u5efa\u6267\u884c\u73af\u5883 EnvironmentSettings settings = EnvironmentSettings.newInstance() .inStreamingMode() .useBlinkPlanner() .build(); TableEnvironment tableEnv = TableEnvironment.create(settings); /*// \u8001\u7248\u672c \u6d41\u5904\u7406 EnvironmentSettings settings1 = EnvironmentSettings.newInstance() .inStreamingMode() .useOldPlanner() .build(); TableEnvironment tableEnv1 = TableEnvironment.create(settings1); // \u8001\u7248\u672c \u6279\u5904\u7406 ExecutionEnvironment batchEnv = ExecutionEnvironment.getExecutionEnvironment(); BatchTableEnvironment batchTableEnvironment = BatchTableEnvironment.create(batchEnv); */","title":"\u521b\u5efa\u8868\u73af\u5883"},{"location":"bigdata/flink/table/#_5","text":"","title":"\u521b\u5efa\u8868"},{"location":"bigdata/flink/table/#_6","text":"\u8868\u5728\u73af\u5883\u4e2d\u6709\u4e00\u4e2a\u552f\u4e00\u7684 ID\uff0c\u7531\u4e09\u90e8\u5206\u7ec4\u6210:\u76ee\u5f55(catalog)\u540d\uff0c\u6570\u636e\u5e93(database)\u540d\uff0c\u4ee5\u53ca\u8868\u540d\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u76ee\u5f55\u540d\u4e3a default_catalog\uff0c\u6570\u636e\u5e93\u540d\u4e3adefault_database\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u53eb\u4f5c MyTable \u7684\u8868\uff0c\u5b83\u7684 ID \u5c31\u662f: default_catalog.default_database.MyTable \u521b\u5efa\u8868\u7684\u65b9\u5f0f\u6709\u4fe9\u79cd \u8fde\u63a5\u5668connector \u548c\u865a\u62df\u8868virtual tables \u8bbe\u7f6ecataLog&database tEnv.useCatalog(\"custom_catalog\"); tEnv.useDatabase(\"custom_database\");","title":"\u6982\u8ff0"},{"location":"bigdata/flink/table/#_7","text":"\u5b9a\u4e49\u4e00\u4e2addl \u8bed\u53e5 \uff0c\u7136\u540e\u6267\u884c // \u521b\u5efa\u8868 String createDDL = \"CREATE TABLE clickTable (\" + \"`user` STRING, \" + \"ts BIGINT, \" + \"v STRING\" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = '/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt',\" + \"'format' = 'csv'\" + \")\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createDDL); String createOutDDL = \"CREATE TABLE outTable (\" + \"`user` STRING, \" + \"ts BIGINT \" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = 'out',\" + \"'format' = 'csv')\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createOutDDL);","title":"\u8fde\u63a5\u5668"},{"location":"bigdata/flink/table/#_8","text":"\u67e5\u8be2\u540e\u5f97\u5230Table -> \u6ce8\u518c\u865a\u62df\u8868 Table clickTable = tableEnv.from(\"clickTable\"); // \u8fd9\u91cc\u4e0d\u7528\u5199\u53cd\u5f15\u53f7 Table mattTable = clickTable.where($(\"user\").isEqual(\"matt\")); tableEnv.createTemporaryView(\"mattTable\",mattTable);","title":"\u865a\u62df\u8868"},{"location":"bigdata/flink/table/#_9","text":"\u652f\u6301SQL\u67e5\u8be2\u548cTableAPI","title":"\u8868\u7684\u67e5\u8be2"},{"location":"bigdata/flink/table/#sql","text":"String aggResSQL = \"SELECT user, count(ts) from clickTable group by user\"; String aggResDDL = \"CREATE TABLE printOutTable (\" + \"`user` STRING, \" + \"cnt BIGINT \" + \") WITH (\" + \"'connector' = 'print')\"; Table aggResTable = tableEnv.sqlQuery(aggResSQL); SELECT\u8bed\u53e5\u67e5\u8be2\uff0c\u8c03\u7528sqlQuery INSERT\u8bed\u53e5\u5199\u5165\u5230outTable,\u8c03\u7528executeSQL","title":"SQL"},{"location":"bigdata/flink/table/#tableapi","text":"Table maryClickTable = eventTable .where($(\"user\").isEqual(\"Alice\")) .select($(\"url\"), $(\"user\")); $\u6307\u5b9a\u8868\u7684\u4e00\u4e2a\u5b57\u6bb5","title":"TableAPI"},{"location":"bigdata/flink/table/#_10","text":"Table clickTable = tableEnvironment.sqlQuery(\"select url, user from \" + eventTable); \u4e5f\u53ef\u4ee5\u5c06eventTable \u6ce8\u518c\u5230\u865a\u62df\u8868\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528","title":"\u7ed3\u5408\u4f7f\u7528"},{"location":"bigdata/flink/table/#_11","text":"\u521b\u5efa\u8f93\u51fa\u8868 \u67e5\u8be2\u7ed3\u679c\u5199\u5165\u5230\u8f93\u51fa\u8868 String createOutDDL = \"CREATE TABLE outTable (\" + \"`user` STRING, \" + \"ts BIGINT \" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = 'out',\" + \"'format' = 'csv')\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createOutDDL); Table mattTable2 = tableEnv.sqlQuery(\"select user, ts from mattTable\"); mattTable2.executeInsert(\"outTable\");","title":"\u8f93\u51fa\u8868"},{"location":"bigdata/flink/table/#_12","text":"","title":"\u8868\u548c\u6d41\u7684\u8f6c\u6362"},{"location":"bigdata/flink/table/#table2datastream","text":"toDataStream tableEnv.toDataStream(aliceVisitTable).print(); toChangelogStream: \u8868\u7684\u5185\u5bb9\u4f1a\u53d1\u751f\u66f4\u65b0 tableEnv.toChangelogStream(urlCountTable).print();","title":"\u8868\u8f6c\u6362\u6d41 Table2DataStream"},{"location":"bigdata/flink/table/#_13","text":"fromDataStream Table eventTable2 = tableEnv.fromDataStream(eventStream, $(\"timestamp\"), $(\"url\")); // \u5c06 timestamp \u5b57\u6bb5\u91cd\u547d\u540d\u4e3a ts Table eventTable2 = tableEnv.fromDataStream(eventStream, $(\"timestamp\").as(\"ts\"), $(\"url\")); createTemporaryView tableEnv.createTemporaryView(\"EventTable\", eventStream, $(\"timestamp\").as(\"ts\"),$(\"url\")); fromChangelogStream \u8868\u73af\u5883\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u6cd5 fromChangelogStream()\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e2a\u66f4\u65b0\u65e5\u5fd7\u6d41\u8f6c\u6362\u6210\u8868\u3002\u8fd9 \u4e2a\u65b9\u6cd5\u8981\u6c42\u6d41\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u53ea\u80fd\u662f Row\uff0c\u800c\u4e14\u6bcf\u4e00\u4e2a\u6570\u636e\u90fd\u9700\u8981\u6307\u5b9a\u5f53\u524d\u884c\u7684\u66f4\u65b0\u7c7b\u578b \uff08RowKind\uff09\uff1b","title":"\u6d41\u8f6c\u6362\u8868"},{"location":"bigdata/flink/table/#_14","text":"\u539f\u5b50\u7c7b\u578b int,double,string \u548c\u901a\u7528\u7684\u6570\u636e\u7c7b\u578b\uff08\u4e0d\u53ef\u5728\u62c6\u5206\u7684\u6570\u636e\u7c7b\u578b\uff09 Tuple\u7c7b\u578b \u5982\u679c\u4e0d\u505a\u91cd\u547d\u540d\uff0c\u90a3\u4e48\u540d\u5b57\u5c31\u662ff0,f1,f2 pojo\u7c7b\u578b \u5982\u679c\u4e0d\u505a\u91cd\u547d\u540d\uff0c\u5b57\u6bb5\u540d\u5c31\u662f\u539f\u6765\u7c7b\u4e2d\u5b57\u6bb5\u540d\u79f0 Row Row \u7c7b\u578b\u8fd8\u9644\u52a0\u4e86\u4e00\u4e2a\u5c5e\u6027 RowKind\uff0c\u7528\u6765\u8868\u793a\u5f53\u524d\u884c\u5728\u66f4\u65b0\u64cd\u4f5c\u4e2d\u7684\u7c7b\u578b\u3002\u8fd9\u6837\uff0c Row \u5c31\u53ef\u4ee5\u7528\u6765\u8868\u793a\u66f4\u65b0\u65e5\u5fd7\u6d41\uff08changelog stream\uff09\u4e2d\u7684\u6570\u636e DataStream<Row> dataStream = env.fromElements( Row.ofKind(RowKind.INSERT, \"Alice\", 12), Row.ofKind(RowKind.INSERT, \"Bob\", 5), Row.ofKind(RowKind.UPDATE_BEFORE, \"Alice\", 12), Row.ofKind(RowKind.UPDATE_AFTER, \"Alice\", 100)); // \u5c06\u66f4\u65b0\u65e5\u5fd7\u6d41\u8f6c\u6362\u4e3a\u8868 Table table = tableEnv.fromChangelogStream(dataStream);","title":"\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b"},{"location":"bigdata/flink/table/#case","text":"\u7edf\u8ba1\u6bcf\u4e2a\u7528\u6237\u70b9\u51fb\u6b21\u6570 package com.matt.apitest.table; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.table.api.Table; import org.apache.flink.table.api.bridge.java.StreamTableEnvironment; import org.apache.flink.types.Row; import java.time.Duration; import static org.apache.flink.table.api.Expressions.$; /** * @author matt * @create 2023-03-24 00:10 * @desc xxx */ public class SimpleTableCase { public static void main(String[] args) throws Exception { // 1.create env StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); // 2.build sourceStream SingleOutputStreamOperator<Event> eventStream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()) .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); // 3.\u521b\u5efa\u8868\u6267\u884c\u73af\u5883 StreamTableEnvironment streamTableEnv = StreamTableEnvironment.create(env); // 4. createTable Table eTable = streamTableEnv.fromDataStream(eventStream); Table userClickCnt = streamTableEnv.sqlQuery(\"select user, count(url) from \" + eTable + \" group by user\"); // 5.table out DataStream<Row> userClickCntStream = streamTableEnv.toChangelogStream(userClickCnt); userClickCntStream.print(); env.execute(); } }","title":"case"},{"location":"bigdata/flink/table/#_15","text":"","title":"\u6d41\u5904\u7406\u4e2d\u7684\u8868"},{"location":"bigdata/flink/table/#_16","text":"","title":"\u52a8\u6001\u8868\u548c\u6301\u7eed\u67e5\u8be2"},{"location":"bigdata/flink/table/#_17","text":"\u5982\u679c\u6211\u4eec\u4fdd\u5b58\u4e86\u8868\u5728\u67d0\u4e00\u65f6\u523b\u7684\u5feb\u7167\uff08snapshot\uff09\uff0c\u90a3\u4e48 \u63a5\u4e0b\u6765\u53ea\u8981\u8bfb\u53d6\u66f4\u65b0\u65e5\u5fd7\u6d41\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u4e4b\u540e\u7684\u53d8\u5316\u8fc7\u7a0b\u548c\u6700\u7ec8\u7ed3\u679c\u4e86","title":"\u52a8\u6001\u8868"},{"location":"bigdata/flink/table/#_18","text":"\u7531\u4e8e\u6570\u636e\u5728\u4e0d\u65ad\u53d8\u5316\uff0c\u56e0\u6b64\u57fa\u4e8e\u5b83\u5b9a\u4e49 \u7684 SQL \u67e5\u8be2\u4e5f\u4e0d\u53ef\u80fd\u6267\u884c\u4e00\u6b21\u5c31\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002 \u968f\u7740\u65b0\u6570\u636e\u7684\u5230\u6765\u800c\u7ee7\u7eed\u6267\u884c","title":"\u6301\u7eed\u67e5\u8be2"},{"location":"bigdata/flink/table/#_19","text":"\u65e0\u66f4\u65b0\u5219\u4f7f\u7528 fromDataStream \u6709\u66f4\u65b0\u5219\u4f7f\u7528 fromChangelogStream \u51e0\u79cd\u6d41insert \u4ec5\u63d2\u5165\u6d41 \u65b0\u589einsert\uff1aadd \u6d88\u606f \u64a4\u56de\u6d41retract \u65b0\u589einsert\uff1aadd \u6d88\u606f \u5220\u9664delete:retract\u6d88\u606f \u66f4\u65b0update\uff1aretract,add \u66f4\u65b0\u540e\u7684\u6d88\u606f \u66f4\u65b0\u63d2\u5165\u6d41upsert \u66f4\u65b0\u63d2\u5165\uff1a\u6709\u4e00\u4e2a\u552f\u4e00\u7684key, \u5b58\u5728\u5219\u66f4\u65b0\u4e0d\u5b58\u5728\u5219\u63d2\u5165 \u5220\u9664\uff1a\u5220\u9664\u6d88\u606f \u5728\u8868\u6d41\u8f6c\u6362\u662f\u6ca1\u6709\u552f\u4e00\u7684key \u6240\u4ee5\u5f53\u524d\u4f7f\u7528\u7684\u662f\u64a4\u56de\u6d41 -u \u5220\u9664 +u \u66f4\u65b0 3> +I[matt, 1] 2> +I[sensor_7, 1] 10> +I[sensor_1, 1] 5> +I[sensor_6, 1] 5> -U[sensor_6, 1] 3> -U[matt, 1] 5> +U[sensor_6, 2] 3> +U[matt, 2] 5> -U[sensor_6, 2] 5> +U[sensor_6, 3] sink \u4e0d\u652f\u6301\u66f4\u65b0\u64cd\u4f5c","title":"\u6d41\u8f6c\u6362\u4e3a\u52a8\u6001\u8868"},{"location":"bigdata/flink/table/#_20","text":"","title":"\u65f6\u95f4\u5c5e\u6027\u548c\u7a97\u53e3"},{"location":"bigdata/flink/table/#_21","text":"1s \u7684\u5ef6\u8fdf \u51fd\u6570\u8bf4\u660e TO_TIMESTAMP // \u5e26\u6709\u65f6\u533a TO_TIMESTAMP_LTZ timestamp = \"2022-04-12 12:00:00\" TO_TIMESTAMP(timestamp, 'yyyy-MM-dd HH:mm:ss') timestamp = 1649826000L // \u79d2\u7ea7\u65f6\u95f4\u6233 FROM_UNIXTIME(timestamp, 'yyyy-MM-dd HH:mm:ss') \u4e8b\u4ef6\u65f6\u95f4\u662fms \u7ea7\u522b\u65f6\u95f4\u6233 String createDDL = \"CREATE TABLE clickTable (\" + \"`user` STRING, \" + \"ts BIGINT, \" + \"url STRING,\" + \"et AS TO_TIMESTAMP(FROM_UNIXTIME(ts)),\" + \"WATERMARK FOR et as et - INTERVAL '1' SECOND\" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = '/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt',\" + \"'format' = 'csv'\" + \")\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createDDL); // 2.\u6d41\u8f6c\u6362\u6210 \u6307\u5b9a SingleOutputStreamOperator<Event> clickStream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()) .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); Table clickTable = tableEnv.fromDataStream(clickStream, $(\"user\"), $(\"url\"), $(\"timestamp\").as(\"ts\"), $(\"et\").rowtime()); clickTable.printSchema();","title":"\u4e8b\u4ef6\u65f6\u95f4"},{"location":"bigdata/flink/table/#_22","text":"\u521b\u5efa\u8868\u65f6\u6307\u5b9a ROCTIME()\u51fd\u6570\u6765\u6307\u5b9a\u5f53\u524d\u7684\u5904\u7406\u65f6\u95f4\u5c5e\u6027\uff0c\u8fd4\u56de\u7684\u7c7b\u578b\u662f TIMESTAMP_LTZ CREATE TABLE EventTable( user STRING, url STRING, ts AS PROCTIME() ) WITH ( ... ); \u6570\u636e\u6d41\u8f6c\u6362\u65f6\u6307\u5b9a Table table = tEnv.fromDataStream(stream, $(\"user\"), $(\"url\"), $(\"ts\").proctime());","title":"\u5904\u7406\u65f6\u95f4"},{"location":"bigdata/flink/table/#_23","text":"","title":"\u7a97\u53e3"},{"location":"bigdata/flink/table/#_24","text":"10s \u7684\u6eda\u52a8\u7a97\u53e3 // 2.\u5206\u7ec4\u7a97\u53e3 \uff08\u8001\u7248\u672c\uff09 Table aggWinTable = tableEnv.sqlQuery(\"select user, count(1), TUMBLE_END(et, INTERVAL '10' SECOND) as entT \" + \"from clickTable group by user, TUMBLE(et, INTERVAL '10' SECOND)\"); \u51fd\u6570\u6709 TUMBLE()\u3001HOP()\u3001SESSION() \u5206\u7ec4\u7a97\u53e3\u7684\u529f\u80fd\u6bd4\u8f83\u6709\u9650\uff0c\u53ea\u652f\u6301\u7a97\u53e3\u805a\u5408\uff0c\u6240\u4ee5\u76ee\u524d\u5df2\u7ecf\u5904\u4e8e\u5f03\u7528(deprecated)\u7684\u72b6\u6001\u3002","title":"\u5206\u7ec4\u7a97\u53e3\u8001\u7248\u672c"},{"location":"bigdata/flink/table/#tvt","text":"","title":"\u7a97\u53e3\u8868\u503c\u51fd\u6570 tvt \u65b0\u7248\u672c"},{"location":"bigdata/flink/table/#_25","text":"\u7a97\u53e3\u8868\u503c\u51fd\u6570\u662f Flink \u5b9a\u4e49\u7684\u591a\u6001\u8868\u51fd\u6570(PTF)\uff0c\u53ef\u4ee5\u5c06\u8868\u8fdb\u884c\u6269\u5c55\u540e\u8fd4\u56de tvf \u63d0\u4f9b\u4e86\u4e09\u4e2a\u7279\u6b8a\u7684\u5b57\u6bb5 \u201c\u7a97\u53e3\u8d77\u59cb\u70b9\u201d(window_start)\u3001\u201c\u7a97\u53e3\u7ed3\u675f\u70b9\u201d(window_end)\u3001\u201c\u7a97\u53e3\u65f6\u95f4\u201d(window_time)","title":"\u6982\u8ff0"},{"location":"bigdata/flink/table/#tumble","text":"Table tumbleWinResTable = tableEnv.sqlQuery(\"select user, count(1) as cnt, \" + \"window_start as entS \" + \"from Table( \" + \"TUMBLE(TABLE clickTable, DESCRIPTOR(et), INTERVAL '10' SECOND)) \" + \"GROUP BY user, window_start, window_end\"); // et \u65f6\u95f4\u5b57\u6bb5 10s \u7684\u7a97\u53e3 TUMBLE(TABLE clickTable, DESCRIPTOR(et), INTERVAL '10' SECOND)","title":"\u6eda\u52a8\u7a97\u53e3Tumble"},{"location":"bigdata/flink/table/#hop","text":"// 1hd\u7684\u6ed1\u52a8\u7a97\u53e3 5min\u6ed1\u52a8\u4e00\u6b21 HOP(TABLE EventTable, DESCRIPTOR(ts), INTERVAL '5' MINUTES, INTERVAL '1' HOURS))","title":"\u6ed1\u52a8\u7a97\u53e3Hop"},{"location":"bigdata/flink/table/#cumulate","text":"\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u8f93\u51fa\u5f53\u524d\u7a97\u53e3\u72b6\u6001 \u4f46\u662f\u7a97\u53e3\u4e0d\u6ed1\u52a8 \u662f\u6eda\u52a8\u7684 CUMULATE(TABLE EventTable, DESCRIPTOR(ts), INTERVAL '1' HOURS, INTERVAL '1' DAYS))","title":"\u7d2f\u8ba1\u7a97\u53e3CUMULATE"},{"location":"bigdata/flink/table/#_26","text":"","title":"\u4f1a\u8bdd\u7a97\u53e3 \u6682\u672a\u652f\u6301"},{"location":"bigdata/flink/table/#_27","text":"","title":"\u805a\u5408"},{"location":"bigdata/flink/table/#_28","text":"SELECT user, COUNT(url) as cnt FROM EventTable GROUP BY user \u51fd\u6570\u6709 SUM()\u3001MAX()\u3001MIN()\u3001AVG()\u4ee5\u53ca COUNT() \u9632\u6b62\u72b6\u6001\u65e0\u9650\u589e\u957f\u8017\u5c3d\u8d44\u6e90\uff0cFlink Table API \u548c SQL \u53ef\u4ee5\u5728\u8868 \u73af\u5883\u4e2d\u914d\u7f6e\u72b6\u6001\u7684\u751f\u5b58\u65f6\u95f4(TTL): \u65b9\u5f0f\u4e00 // \u83b7\u53d6\u8868\u73af\u5883\u7684\u914d\u7f6e TableConfig tableConfig = tableEnv.getConfig(); // \u914d\u7f6e\u72b6\u6001\u4fdd\u6301\u65f6\u95f4 tableConfig.setIdleStateRetention(Duration.ofMinutes(60)); \u65b9\u5f0f\u4e8c TableEnvironment tableEnv = ... Configuration configuration = tableEnv.getConfig().getConfiguration(); configuration.setString(\"table.exec.state.ttl\", \"60 min\");","title":"\u5206\u7ec4\u805a\u5408"},{"location":"bigdata/flink/table/#_29","text":"Table result = tableEnv.sqlQuery( \"SELECT user, window_end AS endT, COUNT(url) AS cnt \" + \"FROM TABLE(\" + \" TUMBLE(TABLE EventTable, \" + \" DESCRIPTOR(ts), \" + \" INTERVAL '1' HOUR)) \" + \"GROUP BY user, window_start, window_end\" );","title":"\u7a97\u53e3\u805a\u5408"},{"location":"bigdata/flink/table/#over","text":"\u7ec4\u5185\u6392\u5e8f // over \u5f00\u7a97\u805a\u5408 Table overResTable = tableEnv.sqlQuery(\"SELECT `user`, AVG(ts) OVER( \" + \"PARTITION BY `user` ORDER BY et ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) \" + \"as avg_ts from clickTable\"); tableEnv.toChangelogStream(overResTable).print(\"overResTable\");","title":"\u5f00\u7a97\u805a\u5408 over"},{"location":"bigdata/flink/table/#_30","text":"","title":"\u5206\u533a\uff0c\u6392\u5e8f"},{"location":"bigdata/flink/table/#_31","text":"\u65f6\u95f4 \u5f53\u524d\u884c\u4e4b\u524d 1 \u5c0f\u65f6\u7684\u6570\u636e: RANGE BETWEEN INTERVAL '1' HOUR PRECEDING AND CURRENT ROW","title":"\u5f00\u7a97\u8303\u56f4"},{"location":"bigdata/flink/table/#_32","text":"\u5f53\u524d\u884c+\u5f53\u524d\u884c\u7684\u524d5\u884c ROWS BETWEEN 5 PRECEDING AND CURRENT ROW \u5355\u72ec\u5b9a\u4e49over SELECT user, ts, COUNT(url) OVER w AS cnt, MAX(CHAR_LENGTH(url)) OVER w AS max_url FROM EventTable WINDOW w AS ( PARTITION BY user ORDER BY ts ROWS BETWEEN 2 PRECEDING AND CURRENT ROW )","title":"\u884c\u95f4\u9694"},{"location":"bigdata/flink/table/#topn-case","text":"package com.matt.apitest.table; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.table.api.Table; import org.apache.flink.table.api.bridge.java.StreamTableEnvironment; /** * @author matt * @create 2023-03-29 23:01 * @desc xxx */ public class TopNCase { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env); // 1.\u65b0\u5efa\u8868\u6307\u5b9a String createDDL = \"CREATE TABLE clickTable (\" + \"`user` STRING, \" + \"ts BIGINT, \" + \"url STRING,\" + \"et AS TO_TIMESTAMP(FROM_UNIXTIME(ts)),\" + \"WATERMARK FOR et as et - INTERVAL '1' SECOND\" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = '/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt',\" + \"'format' = 'csv'\" + \")\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createDDL); Table topNUser = tableEnv.sqlQuery(\"SELECT user, cnt, row_num \" + \"FROM ( \" + \" SELECT *, ROW_NUMBER() OVER( \" + \" ORDER BY cnt DESC\" + \" ) AS row_num \" + \" FROM (SELECT user, COUNT(url) as cnt FROM clickTable GROUP BY user) \" + \")\" + \"WHERE row_num <= 2\"); //tableEnv.toChangelogStream(topNUser).print(); // \u7a97\u53e3topN \u4e00\u6bb5\u65f6\u95f4\u5185\u6d3b\u8dc3\u7528\u6237 top2 // \u6bcf\u4e2a\u7a97\u53e3\u552f\u4e00\u4e00\u4e2a\u7ed3\u679c Table winTopN = tableEnv.sqlQuery(\"SELECT user, cnt, row_num, window_end \" + \"FROM ( \" + \" SELECT *, ROW_NUMBER() OVER( \" + \" PARTITION BY window_start, window_end \" + \" ORDER BY cnt DESC\" + \" ) AS row_num \" + \" FROM (\" + \" SELECT user, COUNT(url) as cnt, window_start, window_end \" + \" FROM Table (\" + \" TUMBLE(TABLE clickTable, DESCRIPTOR(et), INTERVAL '10' SECOND) \" + \" )\" + \" GROUP BY user, window_start, window_end\" + \" ) \" + \")\" + \"WHERE row_num <= 2\"); tableEnv.toChangelogStream(winTopN).print(); env.execute(); } } ROW_NUMBER: \u7ec4\u5185\u6392\u5e8f\uff0c \u4f1a\u6dfb\u52a0\u4e00\u4e2a\u6392\u540d\u5b57\u6bb5 PARTITION BY: \u5206\u533a\uff0c\u4e0d\u540c\u5206\u533a\u5206\u522b\u8ba1\u7b97 ORDER BY \u6392\u5e8f","title":"TopN case"},{"location":"bigdata/flink/table/#join","text":"","title":"Join \u8fde\u63a5\u67e5\u8be2"},{"location":"bigdata/flink/table/#_33","text":"\u548cmysql \u662f\u4e00\u81f4\u7684 \u5185\u8fde\u63a5 SELECT * FROM Order INNER JOIN Product ON Order.product_id = Product.id \u5916\u8fde\u63a5 SELECT * FROM Order LEFT JOIN Product ON Order.product_id = Product.id SELECT * FROM Order RIGHT JOIN Product ON Order.product_id = Product.id SELECT * FROM Order FULL OUTER JOIN Product ON Order.product_id = Product.id","title":"\u5e38\u89c4\u8fde\u63a5"},{"location":"bigdata/flink/table/#_34","text":"\u4f1a\u589e\u52a0\u4e00\u4e2a\u65f6\u95f4\u6761\u4ef6\u9650\u5236\uff0c \u5982\u4e0b ltime = rtime ltime >= rtime AND ltime < rtime + INTERVAL '10' MINUTE ltime BETWEEN rtime - INTERVAL '10' SECOND AND rtime + INTERVAL '5' SECOND \u6848\u4f8b\uff1a\u4e0b\u5355\u540e4h\u5185\u53d1\u8d27 SELECT * FROM Order o, Shipment s WHERE o.id = s.order_id AND o.order_time BETWEEN s.ship_time - INTERVAL '4' HOUR AND s.ship_time","title":"\u95f4\u9694\u8fde\u63a5"},{"location":"bigdata/flink/table/#_35","text":"","title":"\u51fd\u6570"},{"location":"bigdata/flink/table/#_36","text":"","title":"\u7cfb\u7edf\u51fd\u6570"},{"location":"bigdata/flink/table/#_37","text":"\u8f93\u5165\u4e00\u4e2a\u6570\u636e \u8f93\u51fa\u4e00\u4e2a\u6570\u636e","title":"\u6807\u91cf\u51fd\u6570"},{"location":"bigdata/flink/table/#_38","text":"value1 = value2 \u5224\u65ad\u4e24\u4e2a\u503c\u76f8\u7b49 value1 <> value2 \u5224\u65ad\u4e24\u4e2a\u503c\u4e0d\u76f8\u7b49 value IS NOT NULL \u5224\u65ad value \u4e0d\u4e3a\u7a7a","title":"\u6bd4\u8f83\u51fd\u6570"},{"location":"bigdata/flink/table/#_39","text":"\u5e03\u5c14\u7c7b\u578b\u62fc\u63a5\u8d77\u6765, and,or,not boolean1 OR boolean2 \u5e03\u5c14\u503c boolean1 \u4e0e\u5e03\u5c14\u503c boolean2 \u53d6\u903b\u8f91\u6216 boolean IS FALSE \u5224\u65ad\u5e03\u5c14\u503c boolean \u662f\u5426\u4e3a false NOT boolean \u5e03\u5c14\u503c boolean \u53d6\u903b\u8f91\u975e","title":"\u903b\u8f91\u51fd\u6570"},{"location":"bigdata/flink/table/#_40","text":"numeric1 + numeric2 \u4e24\u6570\u76f8\u52a0 POWER(numeric1, numeric2) \u5e42\u8fd0\u7b97\uff0c\u53d6\u6570 numeric1 \u7684 numeric2 \u6b21\u65b9 RAND() \u8fd4\u56de(0.0, 1.0)\u533a\u95f4\u5185\u7684\u4e00\u4e2a double \u7c7b\u578b\u7684\u4f2a\u968f\u673a\u6570","title":"\u7b97\u672f\u51fd\u6570"},{"location":"bigdata/flink/table/#_41","text":"string1 || string2 \u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u8fde\u63a5 UPPER(string) \u5c06\u5b57\u7b26\u4e32 string \u8f6c\u4e3a\u5168\u90e8\u5927\u5199 CHAR_LENGTH(string) \u8ba1\u7b97\u5b57\u7b26\u4e32 string \u7684\u957f\u5ea6","title":"\u5b57\u7b26\u4e32\u5904\u7406\u51fd\u6570"},{"location":"bigdata/flink/table/#_42","text":"DATE string \u6309\u683c\u5f0f\"yyyy-MM-dd\"\u89e3\u6790\u5b57\u7b26\u4e32 string\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a SQL Date TIMESTAMP string \u6309\u683c\u5f0f\"yyyy-MM-dd HH:mm:ss[.SSS]\"\u89e3\u6790\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a SQL timestamp CURRENT_TIME \u8fd4\u56de\u672c\u5730\u65f6\u533a\u7684\u5f53\u524d\u65f6\u95f4\uff0c\u7c7b\u578b\u4e3a SQL time(\u4e0e LOCALTIME\u7b49\u4ef7) INTERVAL string range \u8fd4\u56de\u4e00\u4e2a\u65f6\u95f4\u95f4\u9694\u3002string \u8868\u793a\u6570\u503c;range \u53ef\u4ee5\u662f DAY\uff0cMINUTE\uff0cDAT TO HOUR \u7b49\u5355\u4f4d\uff0c\u4e5f\u53ef\u4ee5\u662f YEAR TO MONTH \u8fd9\u6837\u7684\u590d\u5408\u5355\u4f4d\u3002\u5982\u201c2 \u5e74 10 \u4e2a\u6708\u201d\u53ef\u4ee5\u5199\u6210:INTERVAL '2-10' YEAR TO MONTH","title":"\u65f6\u95f4\u51fd\u6570"},{"location":"bigdata/flink/table/#_43","text":"\u805a\u5408\u7b97\u5b50\u6709 count(*) SUM([ ALL | DISTINCT ] expression) \u5bf9\u6bcf\u4e2a\u5b57\u6bb5\u8fdb\u884c\u6c42\u548c\u64cd\u4f5c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7701\u7565\u4e86\u5173\u952e\u5b57 ALL\uff0c\u8868\u793a\u5bf9\u6240\u6709\u884c\u6c42\u548c;\u5982\u679c\u6307\u5b9a DISTINCT\uff0c\u5219\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u53bb \u91cd\uff0c\u6bcf\u4e2a\u503c\u53ea\u53e0\u52a0\u4e00\u6b21\u3002 RANK() \u8fd4\u56de\u5f53\u524d\u503c\u5728\u4e00\u7ec4\u503c\u4e2d\u7684\u6392\u540d ROW_NUMBER() \u5bf9\u4e00\u7ec4\u503c\u6392\u5e8f\u540e\uff0c\u8fd4\u56de\u5f53\u524d\u503c\u7684\u884c\u53f7\u3002\u4e0eRANK()\u7684 \u529f\u80fd\u76f8\u4f3c","title":"\u805a\u5408\u51fd\u6570"},{"location":"bigdata/flink/table/#_44","text":"","title":"\u81ea\u5b9a\u4e49\u51fd\u6570"},{"location":"bigdata/flink/table/#_45","text":"\u652f\u6301\u7684\u51fd\u6570\u7c7b\u578b \u6807\u91cf\u51fd\u6570\uff1a\u5c06\u8f93\u5165\u7684\u6807\u91cf(0,1\u4e2a\u6216\u8005\u591a\u4e2a)\u8f6c\u6362\u4f4d\u53e6\u4e00\u4e2a\u6807\u91cf \u8868\u51fd\u6570\uff1a\u5c06\u6807\u91cf\u503c\u8f6c\u6362\u6210\u4e00\u4e2a\u6216\u591a\u4e2a\u65b0\u7684\u884c\u6570\u636e \u805a\u5408\u51fd\u6570\uff1a\u5c06\u591a\u884c\u6570\u636e\u91cc\u7684\u6807\u91cf\u503c\u8f6c\u6362\u6210\u4e00\u4e2a\u65b0\u7684\u6807\u91cf\u503c; \u8868\u805a\u5408\u51fd\u6570\uff1a\u5c06\u591a\u884c\u6570\u636e\u91cc\u7684\u6807\u91cf\u503c\u8f6c\u6362\u6210\u4e00 \u4e2a\u6216\u591a\u4e2a\u65b0\u7684\u884c\u6570\u636e\u3002","title":"\u6982\u8ff0"},{"location":"bigdata/flink/table/#_46","text":"","title":"\u57fa\u7840\u6d41\u7a0b"},{"location":"bigdata/flink/table/#1","text":"tableEnv.createTemporarySystemFunction(\"MyFunction\", MyFunction.class); createTemporarySystemFunction\uff1a\u7cfb\u7edf\u51fd\u6570 createTemporaryFunction:\u5f53\u524d\u76ee\u5f55\u548c\u6570\u636e\u5e93","title":"1.\u6ce8\u518c\u51fd\u6570"},{"location":"bigdata/flink/table/#2tableapi","text":"tableEnv.from(\"MyTable\").select(call(\"MyFunction\", $(\"myField\"))); call: arg1(\u51fd\u6570\u540d) arg2(\u8c03\u7528\u65f6\u4f20\u9012\u7684\u53c2\u6570) \u4e0d\u6ce8\u518c\u51fd\u6570\u76f4\u63a5\u4f7f\u7528 tableEnv.from(\"MyTable\").select(call(SubstringFunction.class, $(\"myField\")));","title":"2.\u4f7f\u7528TableAPI\u8c03\u7528\u51fd\u6570"},{"location":"bigdata/flink/table/#3sql","text":"tableEnv.sqlQuery(\"SELECT MyFunction(myField) FROM MyTable\");","title":"3.sql\u4e2d\u8c03\u7528\u51fd\u6570"},{"location":"bigdata/flink/table/#_47","text":"\u7ee7\u627fScalarFunction \u5199\u4e00\u4e2apublic eval \u65b9\u6cd5 \u4e0d\u662f\u91cd\u5199\u8be5\u65b9\u6cd5 package com.matt.apitest.table; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.table.api.Table; import org.apache.flink.table.api.bridge.java.StreamTableEnvironment; import org.apache.flink.table.functions.ScalarFunction; /** * @author matt * @create 2023-03-31 00:43 * @desc xxx */ public class UDFTest_ScalarFunc { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env); // 1.\u65b0\u5efa\u8868\u6307\u5b9a String createDDL = \"CREATE TABLE clickTable (\" + \"`user` STRING, \" + \"ts BIGINT, \" + \"url STRING,\" + \"et AS TO_TIMESTAMP(FROM_UNIXTIME(ts)),\" + \"WATERMARK FOR et as et - INTERVAL '1' SECOND\" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = '/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt',\" + \"'format' = 'csv'\" + \")\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createDDL); tableEnv.createTemporarySystemFunction(\"MyHash\", MyHashFunction.class); Table myHashTable = tableEnv.sqlQuery(\"SELECT user, MyHash(user) from clickTable\"); tableEnv.toDataStream(myHashTable).print(); env.execute(); } public static class MyHashFunction extends ScalarFunction { public int eval(String str) { return str.hashCode(); } } }","title":"\u6807\u91cf\u51fd\u6570"},{"location":"bigdata/flink/table/#_48","text":"\u8868\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\u4e5f\u53ef\u4ee5\u662f 0 \u4e2a\u30011 \u4e2a\u6216\u591a\u4e2a\u6807\u91cf\u503c;\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u53ef \u4ee5\u8fd4\u56de\u4efb\u610f\u591a\u884c\u6570\u636e\u3002 LATERAL TABLE(MySplit(url)) as T(word, length) LATERAL \u4f1a\u751f\u6210\u4e00\u4e2a\u4fa7\u5411\u8868 \u7136\u540e \u548c\u4e3b\u8868\u8fdb\u884c\u8fde\u63a5 package com.matt.apitest.table; import org.apache.flink.api.java.tuple.Tuple2; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.table.api.Table; import org.apache.flink.table.api.bridge.java.StreamTableEnvironment; import org.apache.flink.table.functions.TableFunction; /** * @author matt * @create 2023-03-31 01:08 * @desc xxx */ public class UDFTest_TableFunction { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env); // 1.\u65b0\u5efa\u8868\u6307\u5b9a String createDDL = \"CREATE TABLE clickTable (\" + \"`user` STRING, \" + \"ts BIGINT, \" + \"url STRING,\" + \"et AS TO_TIMESTAMP(FROM_UNIXTIME(ts)),\" + \"WATERMARK FOR et as et - INTERVAL '1' SECOND\" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = '/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt',\" + \"'format' = 'csv'\" + \")\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createDDL); tableEnv.createTemporarySystemFunction(\"MySplit\", MySplit.class); Table mySplitT = tableEnv.sqlQuery(\"SELECT user, url,word, length \" + \"from clickTable, LATERAL TABLE(MySplit(url)) as T(word, length)\"); tableEnv.toDataStream(mySplitT).print(); env.execute(); } // \u81ea\u5b9a\u4e49\u8868\u51fd\u6570 public static class MySplit extends TableFunction<Tuple2<String, Integer>> { public void eval(String str) { String[] words = str.split(\"\\\\?\"); for (String w: words) { collect(Tuple2.of(w, w.length())); } } } }","title":"\u8868\u51fd\u6570"},{"location":"bigdata/flink/table/#_49","text":"\u4f1a\u628a\u4e00\u884c\u6216\u591a\u884c\u6570\u636e (\u4e5f\u5c31\u662f\u4e00\u4e2a\u8868)\u805a\u5408\u6210\u4e00\u4e2a\u6807\u91cf\u503c\u3002\u8fd9\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u201c\u591a\u5bf9\u4e00\u201d\u7684\u8f6c\u6362\u3002 package com.matt.apitest.table; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.table.api.Table; import org.apache.flink.table.api.bridge.java.StreamTableEnvironment; import org.apache.flink.table.functions.AggregateFunction; /** * @author matt * @create 2023-03-31 01:25 * @desc xxx */ public class UTFTest_Aggfunction { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env); // 1.\u65b0\u5efa\u8868\u6307\u5b9a String createDDL = \"CREATE TABLE clickTable (\" + \"`user` STRING, \" + \"ts BIGINT, \" + \"url STRING,\" + \"et AS TO_TIMESTAMP(FROM_UNIXTIME(ts)),\" + \"WATERMARK FOR et as et - INTERVAL '1' SECOND\" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = '/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt',\" + \"'format' = 'csv'\" + \")\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createDDL); tableEnv.createTemporarySystemFunction(\"WeightAverage\", WeightAverage.class); Table cc = tableEnv.sqlQuery(\"SELECT user, WeightAverage(ts, 1) as w_avg \" + \"from clickTable group by user\"); tableEnv.toChangelogStream(cc).print(); env.execute(); } public static class WeightAvgAcc { public long sum = 0; public int cnt = 0; } // \u81ea\u5b9a\u4e49\u805a\u5408\u51fd\u6570 public static class WeightAverage extends AggregateFunction<Long, WeightAvgAcc> { @Override public Long getValue(WeightAvgAcc acc) { if (acc.cnt == 0) { return 0L; } return acc.sum / acc.cnt; } @Override public WeightAvgAcc createAccumulator() { return new WeightAvgAcc(); } public void accumulate(WeightAvgAcc acc, Long iV, Integer iWeight) { acc.sum += iV * iWeight; acc.cnt += iWeight; } } } 1.\u521b\u5efa\u7d2f\u52a0\u5668 2.\u6bcf\u6765\u4e00\u6761\u6570\u636e\u89e6\u53d1\u4e00\u6b21accumulate 3.\u83b7\u53d6\u8fd4\u56de\u6570\u636egetValue","title":"\u805a\u5408\u51fd\u6570"},{"location":"bigdata/flink/table/#_50","text":"\u7528\u6237\u81ea\u5b9a\u4e49\u8868\u805a\u5408\u51fd\u6570(UDTAGG)\u53ef\u4ee5\u628a\u4e00\u884c\u6216\u591a\u884c\u6570\u636e(\u4e5f\u5c31\u662f\u4e00\u4e2a\u8868)\u805a\u5408\u6210\u53e6 \u4e00\u5f20\u8868 package com.matt.apitest.table; import org.apache.flink.api.java.tuple.Tuple2; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.table.api.Table; import org.apache.flink.table.api.bridge.java.StreamTableEnvironment; import org.apache.flink.table.functions.TableAggregateFunction; import org.apache.flink.util.Collector; import static org.apache.flink.table.api.Expressions.$; import static org.apache.flink.table.api.Expressions.call; /** * @author matt * @create 2023-04-06 22:32 * @desc xxx */ public class UDFTest_TableAggFunc { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env); // 1.\u65b0\u5efa\u8868\u6307\u5b9a String createDDL = \"CREATE TABLE clickTable (\" + \"`user` STRING, \" + \"ts BIGINT, \" + \"url STRING,\" + \"et AS TO_TIMESTAMP(FROM_UNIXTIME(ts)),\" + \"WATERMARK FOR et as et - INTERVAL '1' SECOND\" + \") WITH (\" + \"'connector' = 'filesystem',\" + \"'path' = '/Users/matt/workspace/java/stu/stu-flink/src/main/resources/sensor.txt',\" + \"'format' = 'csv'\" + \")\"; // , \u5206\u5272\u7684\u6587\u672c\u6587\u4ef6 tableEnv.executeSql(createDDL); tableEnv.createTemporarySystemFunction(\"Top2\", Top2.class); Table aggT = tableEnv.sqlQuery(\"SELECT user, COUNT(url) as cnt, window_start, window_end \" + \"FROM Table (\" + \" TUMBLE(TABLE clickTable, DESCRIPTOR(et), INTERVAL '10' SECOND) \" + \")\" + \"GROUP BY user, window_start, window_end\"); Table top2T = aggT.groupBy($(\"window_end\")) .flatAggregate(call(\"Top2\", $(\"cnt\")).as(\"v\", \"rank\")) .select($(\"window_end\"), $(\"v\"), $(\"rank\")); tableEnv.toChangelogStream(top2T).print(); env.execute(); } public static class Top2Acc { public Long max = Long.MIN_VALUE; public Long secondMax = Long.MIN_VALUE; } public static class Top2 extends TableAggregateFunction<Tuple2<Long, Integer>, Top2Acc> { @Override public Top2Acc createAccumulator() { return new Top2Acc(); } // \u6807\u51c6 public void accumulate(Top2Acc acc, Long v) { if (v > acc.max) { acc.secondMax = acc.max; acc.max = v; } else if (v > acc.secondMax) { acc.secondMax = v; } } public void emitValue(Top2Acc acc, Collector<Tuple2<Long, Integer>> collector) { if (acc.max != Long.MIN_VALUE) { collector.collect(Tuple2.of(acc.max, 1)); } if (acc.secondMax != Long.MIN_VALUE) { collector.collect(Tuple2.of(acc.secondMax, 2)); } } } } \u76ee\u524d SQL \u4e2d\u6ca1\u6709\u76f4\u63a5\u4f7f\u7528\u8868\u805a\u5408\u51fd\u6570\u7684\u65b9\u5f0f\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528 Table API \u7684\u65b9\u5f0f\u6765\u8c03\u7528 emitUpdateWithRetract()\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u5728\u7ed3\u679c\u8868\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u4ee5\u201c\u64a4\u56de\u201d(retract)\u8001\u6570 \u636e\u3001\u53d1\u9001\u65b0\u6570\u636e\u7684\u65b9\u5f0f\u589e\u91cf\u5730\u8fdb\u884c\u66f4\u65b0\u3002\u5982\u679c\u540c\u65f6\u5b9a\u4e49\u4e86 emitValue()\u548c emitUpdateWithRetract() \u4e24\u4e2a\u65b9\u6cd5\uff0c\u5728\u8fdb\u884c\u66f4\u65b0\u64cd\u4f5c\u65f6\u4f1a\u4f18\u5148\u8c03\u7528 emitUpdateWithRetract()\u3002","title":"\u8868\u805a\u5408\u51fd\u6570"},{"location":"bigdata/flink/table/#sql_1","text":"","title":"sql\u5ba2\u6237\u7aef"},{"location":"bigdata/flink/table/#_51","text":"1.\u542f\u52a8\u672c\u5730\u96c6\u7fa4 ./bin/start-cluster.sh 2.\u542f\u52a8flink-sql\u5ba2\u6237\u7aef ./bin/sql-client.sh 3.\u8bbe\u7f6e\u8fd0\u884c\u6a21\u5f0f \u8868\u73af\u5883\u7684\u8fd0\u884c\u6a21\u5f0f\uff0c \u6709\u6d41\u5904\u7406\u548c\u6279\u5904\u7406\uff0c \u9ed8\u8ba4\u662f\u6d41\u5904\u7406 SET 'execution.runtime-mode' = 'streaming'; \u5176\u6b21\u662f SQL \u5ba2\u6237\u7aef\u7684\u201c\u6267\u884c\u7ed3\u679c\u6a21\u5f0f\u201d\uff0c\u4e3b\u8981\u6709 table\u3001changelog\u3001tableau \u4e09\u79cd SET 'sql-client.execution.result-mode' = 'table'; table \u6a21\u5f0f\u5c31\u662f\u6700\u666e\u901a\u7684\u8868\u5904\u7406\u6a21\u5f0f\uff0c\u7ed3\u679c\u4f1a\u4ee5\u9017\u53f7\u5206\u9694\u6bcf\u4e2a\u5b57\u6bb5; changelog \u5219\u662f\u66f4\u65b0\u65e5 \u5fd7\u6a21\u5f0f\uff0c\u4f1a\u5728\u6570\u636e\u524d\u52a0\u4e0a\u201c+\u201d(\u8868\u793a\u63d2\u5165)\u6216\u201c-\u201d(\u8868\u793a\u64a4\u56de)\u7684\u524d\u7f00; tableau \u5219\u662f\u7ecf\u5178 \u7684\u53ef\u89c6\u5316\u8868\u6a21\u5f0f\uff0c\u7ed3\u679c\u4f1a\u662f\u4e00\u4e2a\u865a\u7ebf\u6846\u7684\u8868\u683c\u3002 4.\u7f16\u5199sql \u6267\u884csql\u67e5\u8be2","title":"\u6d41\u7a0b"},{"location":"bigdata/flink/table/#_52","text":"","title":"\u8fde\u63a5\u5230\u5916\u90e8\u7cfb\u7edf"},{"location":"bigdata/flink/table/#kafka","text":"","title":"kafka"},{"location":"bigdata/flink/table/#_53","text":"<dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-kafka_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> \u5bf9\u4e8e Kafka \u800c\u8a00\uff0cCSV\u3001JSON\u3001Avro \u7b49\u4e3b\u8981\u683c\u5f0f\u90fd\u662f\u652f\u6301\u7684\uff0c\u7531\u4e8e SQL \u5ba2\u6237\u7aef\u4e2d\u5df2\u7ecf\u5185\u7f6e\u4e86 CSV\u3001JSON \u7684\u652f\u6301\uff0c\u56e0\u6b64\u4f7f\u7528\u65f6\u65e0\u9700\u4e13\u95e8\u5f15\u5165;\u800c\u5bf9\u4e8e \u6ca1\u6709\u5185\u7f6e\u652f\u6301\u7684\u683c\u5f0f(\u6bd4\u5982 Avro)\uff0c\u5219\u4ecd\u7136\u8981\u4e0b\u8f7d\u76f8\u5e94\u7684 jar \u5305","title":"\u914d\u7f6e\u4f9d\u8d56"},{"location":"bigdata/flink/table/#_54","text":"CREATE TABLE KafkaTable ( `user` STRING, `url` STRING, `ts` TIMESTAMP(3) METADATA FROM 'timestamp' ) WITH ( 'connector' = 'kafka', 'topic' = 'events', 'properties.bootstrap.servers' = 'localhost:9092', 'properties.group.id' = 'testGroup', 'scan.startup.mode' = 'earliest-offset', 'format' = 'csv' ) METADATA FROM\uff0c\u8fd9\u662f\u8868\u793a\u4e00\u4e2a\u201c\u5143\u6570\u636e\u5217\u201d(metadata column)\uff0c\u5b83\u662f\u7531Kafka\u8fde\u63a5\u5668\u7684\u5143\u6570\u636e\u201ctimestamp\u201d\u751f\u6210\u7684\u3002\u8fd9\u91cc\u7684 timestamp \u5176\u5b9e\u5c31\u662f Kafka \u4e2d\u6570\u636e\u81ea\u5e26\u7684\u65f6\u95f4\u6233\uff0c\u6211\u4eec\u628a \u5b83\u76f4\u63a5\u4f5c\u4e3a\u5143\u6570\u636e\u63d0\u53d6\u51fa\u6765\uff0c\u8f6c\u6362\u6210\u4e00\u4e2a\u65b0\u7684\u5b57\u6bb5 ts\u3002","title":"\u521b\u5efa\u8fde\u63a5\u8868"},{"location":"bigdata/flink/table/#upsert","text":"Upsert Kafka \u8fde\u63a5\u5668\u5904\u7406\u7684\u662f\u66f4\u65b0\u65e5\u5fd7(changlog)\u6d41\u3002\u5982\u679c\u4f5c\u4e3a TableSource\uff0c \u8fde\u63a5\u5668\u4f1a\u5c06\u8bfb\u53d6\u5230\u7684topic\u4e2d\u7684\u6570\u636e(key, value)\uff0c\u89e3\u91ca\u4e3a\u5bf9\u5f53\u524dkey\u7684\u6570\u636e\u503c\u7684\u66f4\u65b0(UPDATE)\uff0c \u6ca1\u6709k \u5bf9\u5e94\u7684\u884c\u5219\u63d2\u5165 \u5b58\u5728\u5219\u66f4\u65b0 value\u4e3a\u7a7a\u5219\u5220\u9664 CREATE TABLE pageviews_per_region ( user_region STRING, pv BIGINT, uv BIGINT, PRIMARY KEY (user_region) NOT ENFORCED ) WITH ( 'connector' = 'upsert-kafka', 'topic' = 'pageviews_per_region', 'properties.bootstrap.servers' = '...', 'key.format' = 'avro', 'value.format' = 'avro' ); CREATE TABLE pageviews ( user_id BIGINT, page_id BIGINT, viewtime TIMESTAMP, user_region STRING, WATERMARK FOR viewtime AS viewtime - INTERVAL '2' SECOND ) WITH ( 'connector' = 'kafka', 'topic' = 'pageviews', 'properties.bootstrap.servers' = '...', 'format' = 'json' ); -- \u8ba1\u7b97 pv\u3001uv \u5e76\u63d2\u5165\u5230 upsert-kafka \u8868\u4e2d INSERT INTO pageviews_per_region SELECT user_region, COUNT(*), COUNT(DISTINCT user_id) FROM pageviews GROUP BY user_region;","title":"upsert"},{"location":"bigdata/flink/table/#_55","text":"flink \u5df2\u5185\u7f6e\u8be5\u8fde\u63a5\u5668\u65e0\u9700\u5bfc\u5165\u4f9d\u8d56 CREATE TABLE MyTable ( column_name1 INT, column_name2 STRING, ... part_name1 INT, part_name2 STRING ) PARTITIONED BY (part_name1, part_name2) WITH ( 'connector' = 'filesystem', -- \u8fde\u63a5\u5668\u7c7b\u578b 'path' = '...', -- \u6587\u4ef6\u8def\u5f84 'format' = '...' -- \u6587\u4ef6\u683c\u5f0f )","title":"\u6587\u4ef6\u7cfb\u7edf"},{"location":"bigdata/flink/table/#jdbc","text":"\u4f5c\u4e3a TableSink \u5411\u6570\u636e\u5e93\u5199\u5165\u6570\u636e\u65f6\uff0c\u8fd0\u884c\u7684\u6a21\u5f0f\u53d6\u51b3\u4e8e\u521b\u5efa\u8868\u7684 DDL \u662f\u5426\u5b9a\u4e49\u4e86\u4e3b\u952e (primary key)\u3002 \u5982\u679c\u6709\u4e3b\u952e\uff0c\u90a3\u4e48 JDBC \u8fde\u63a5\u5668\u5c31\u5c06\u4ee5\u66f4\u65b0\u63d2\u5165(Upsert)\u6a21\u5f0f\u8fd0\u884c\uff0c\u53ef\u4ee5\u5411 \u5916\u90e8\u6570\u636e\u5e93\u53d1\u9001\u6309\u7167\u6307\u5b9a\u952e(key)\u7684\u66f4\u65b0(UPDATE)\u548c\u5220\u9664(DELETE)\u64cd\u4f5c; \u5982\u679c\u6ca1\u6709 \u5b9a\u4e49\u4e3b\u952e\uff0c\u90a3\u4e48\u5c31\u5c06\u5728\u8ffd\u52a0(Append)\u6a21\u5f0f\u4e0b\u8fd0\u884c\uff0c\u4e0d\u652f\u6301\u66f4\u65b0\u548c\u5220\u9664\u64cd\u4f5c\u3002","title":"JDBC"},{"location":"bigdata/flink/table/#_56","text":"","title":"\u63a5\u5165\u6d41\u7a0b"},{"location":"bigdata/flink/table/#_57","text":"<dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-jdbc_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <version>5.1.38</version> </dependency>","title":"\u5f15\u5165\u4f9d\u8d56"},{"location":"bigdata/flink/table/#jdbc_1","text":"-- \u521b\u5efa\u4e00\u5f20\u8fde\u63a5\u5230 MySQL \u7684\u8868 CREATE TABLE MyTable ( id BIGINT, name STRING, age INT, status BOOLEAN, PRIMARY KEY (id) NOT ENFORCED ) WITH ( 'connector' = 'jdbc', 'url' = 'jdbc:mysql://localhost:3306/mydatabase', 'table-name' = 'users' ); -- \u5c06\u53e6\u4e00\u5f20\u8868 T \u7684\u6570\u636e\u5199\u5165\u5230 MyTable \u8868\u4e2d INSERT INTO MyTable SELECT id, name, age, status FROM T;","title":"\u521b\u5efajdbc\u8868"},{"location":"bigdata/flink/table/#es","text":"","title":"es"},{"location":"bigdata/flink/table/#_58","text":"","title":"\u63a5\u5165\u6d41\u7a0b"},{"location":"bigdata/flink/table/#_59","text":"es \u7248\u672c\u4e0d\u540c \u5bfc\u5165\u4f9d\u8d56\u7684\u7248\u672c\u4e0d\u4e00\u6837 <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-elasticsearch6_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-elasticsearch7_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency>","title":"\u5f15\u5165\u4f9d\u8d56"},{"location":"bigdata/flink/table/#_60","text":"-- \u521b\u5efa\u4e00\u5f20\u8fde\u63a5\u5230 Elasticsearch \u7684 \u8868 CREATE TABLE MyTable ( user_id STRING, user_name STRING uv BIGINT, pv BIGINT, PRIMARY KEY (user_id) NOT ENFORCED ) WITH ( 'connector' = 'elasticsearch-7', 'hosts' = 'http://localhost:9200', 'index' = 'users' ); \u8fd9\u91cc\u5b9a\u4e49\u4e86\u4e3b\u952e\uff0c\u6240\u4ee5\u4f1a\u4ee5\u66f4\u65b0\u63d2\u5165(Upsert)\u6a21\u5f0f\u5411 Elasticsearch \u5199\u5165\u6570\u636e\u3002","title":"\u521b\u5efa\u8868"},{"location":"bigdata/flink/table/#hbase","text":"","title":"hbase"},{"location":"bigdata/flink/table/#_61","text":"\u8fde\u63a5\u5668\u4f5c\u4e3a TableSink \u5411 HBase \u5199\u5165\u6570\u636e\u65f6\uff0c\u91c7\u7528\u7684\u59cb\u7ec8\u662f\u66f4\u65b0\u63d2\u5165 (Upsert)\u6a21\u5f0f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cHBase \u8981\u6c42\u8fde\u63a5\u5668\u5fc5\u987b\u901a\u8fc7\u5b9a\u4e49\u7684\u4e3b\u952e(primary key)\u6765\u53d1\u9001\u66f4 \u65b0\u65e5\u5fd7(changelog)\u3002\u6240\u4ee5\u5728\u521b\u5efa\u8868\u7684 DDL \u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u5b9a\u4e49\u884c\u952e(rowkey)\u5b57\u6bb5\uff0c\u5e76\u5c06 \u5b83\u58f0\u660e\u4e3a\u4e3b\u952e;\u5982\u679c\u6ca1\u6709\u7528 PRIMARY KEY \u5b50\u53e5\u58f0\u660e\u4e3b\u952e\uff0c\u8fde\u63a5\u5668\u4f1a\u9ed8\u8ba4\u628a rowkey \u4f5c\u4e3a\u4e3b\u952e\u3002","title":"\u6982\u8ff0"},{"location":"bigdata/flink/table/#_62","text":"","title":"\u63a5\u5165\u6d41\u7a0b"},{"location":"bigdata/flink/table/#_63","text":"\u76ee\u524d\u4ec5\u652f\u63011.4.x 2.2.x hbase1.4 <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-hbase-1.4_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> hbase1.4 <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-hbase-2.2_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency>","title":"\u5f15\u5165\u4f9d\u8d56"},{"location":"bigdata/flink/table/#_64","text":"\u521b\u5efa\u51fa\u7684 HBase \u8868\u4e2d\uff0c\u6240\u6709\u7684\u5217\u65cf(column family)\u90fd\u5fc5\u987b\u58f0\u660e\u4e3a ROW \u7c7b\u578b\uff0c\u5728\u8868\u4e2d\u5360\u636e\u4e00 \u4e2a\u5b57\u6bb5;\u800c\u6bcf\u4e2a family \u4e2d\u7684\u5217(column qualifier)\u5219\u5bf9\u5e94\u7740 ROW \u91cc\u7684\u5d4c\u5957\u5b57\u6bb5\u3002\u6211\u4eec\u4e0d\u9700\u8981 \u5c06 HBase \u4e2d\u6240\u6709\u7684 family \u548c qualifier \u90fd\u5728 Flink SQL \u7684\u8868\u4e2d\u58f0\u660e\u51fa\u6765\uff0c\u53ea\u8981\u628a\u90a3\u4e9b\u5728\u67e5\u8be2\u4e2d\u7528 \u5230\u7684\u58f0\u660e\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\u3002 ROW \u7c7b\u578b\u7684\u5b57\u6bb5(\u5bf9\u5e94\u7740 HBase \u4e2d\u7684 family)\uff0c\u8868\u4e2d\u8fd8\u5e94\u6709\u4e00\u4e2a\u539f\u5b50\u7c7b\u578b\u7684\u5b57 \u6bb5\uff0c\u5b83\u5c31\u4f1a\u88ab\u8bc6\u522b\u4e3a HBase \u7684 rowkey\u3002\u5728\u8868\u4e2d\u8fd9\u4e2a\u5b57\u6bb5\u53ef\u4ee5\u4efb\u610f\u53d6\u540d\uff0c\u4e0d\u4e00\u5b9a\u975e\u8981\u53eb rowkey -- \u521b\u5efa\u4e00\u5f20\u8fde\u63a5\u5230 HBase \u7684 \u8868 CREATE TABLE MyTable ( rowkey INT, family1 ROW<q1 INT>, family2 ROW<q2 STRING, q3 BIGINT>, family3 ROW<q4 DOUBLE, q5 BOOLEAN, q6 STRING>, PRIMARY KEY (rowkey) NOT ENFORCED ) WITH ( 'connector' = 'hbase-1.4', 'table-name' = 'mytable', 'zookeeper.quorum' = 'localhost:2181' ); -- \u5047\u8bbe\u8868 T \u7684\u5b57\u6bb5\u7ed3\u6784\u662f [rowkey, f1q1, f2q2, f2q3, f3q4, f3q5, f3q6] INSERT INTO MyTable SELECT rowkey, ROW(f1q1), ROW(f2q2, f2q3), ROW(f3q4, f3q5, f3q6) FROM T;","title":"\u521b\u5efa\u8868"},{"location":"bigdata/flink/table/#hive","text":"flink \u4e0e Hive \u7684\u96c6\u6210\u6bd4\u8f83\u7279\u522b\u3002Flink \u63d0\u4f9b\u4e86\u201cHive \u76ee\u5f55\u201d(HiveCatalog)\u529f\u80fd\uff0c\u5141\u8bb8\u4f7f\u7528 Hive \u7684\u201c\u5143\u5b58\u50a8\u201d(Metastore)\u6765\u7ba1\u7406 Flink \u7684\u5143\u6570\u636e\u3002\u8fd9\u5e26\u6765\u7684\u597d\u5904\u4f53\u73b0\u5728\u4e24\u4e2a\u65b9\u9762: 1.Metastore \u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u6301\u4e45\u5316\u7684\u76ee\u5f55\uff0c\u56e0\u6b64\u4f7f\u7528 HiveCatalog \u53ef\u4ee5\u8de8\u4f1a\u8bdd\u5b58\u50a8 Flink \u7279\u5b9a\u7684\u5143\u6570\u636e\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u5728 HiveCatalog \u4e2d\u6267\u884c\u6267\u884c\u521b\u5efa Kafka \u8868\u6216\u8005 ElasticSearch \u8868\uff0c \u5c31\u53ef\u4ee5\u628a\u5b83\u4eec\u7684\u5143\u6570\u636e\u6301\u4e45\u5316\u5b58\u50a8\u5728 Hive \u7684 Metastore \u4e2d;\u5bf9\u4e8e\u4e0d\u540c\u7684\u4f5c\u4e1a\u4f1a\u8bdd\u5c31\u4e0d\u9700\u8981\u91cd\u590d\u521b\u5efa\u4e86\uff0c\u76f4\u63a5\u5728 SQL \u67e5\u8be2\u4e2d\u91cd\u7528\u5c31\u53ef\u4ee5\u3002 2.\u4f7f\u7528 HiveCatalog\uff0cFlink \u53ef\u4ee5\u4f5c\u4e3a\u8bfb\u5199 Hive \u8868\u7684\u66ff\u4ee3\u5206\u6790\u5f15\u64ce\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5728 Hive \u4e2d\u8fdb\u884c\u6279\u5904\u7406\u4f1a\u66f4\u52a0\u9ad8\u6548;\u4e0e\u6b64\u540c\u65f6\uff0c\u4e5f\u6709\u4e86\u8fde\u7eed\u5728 Hive \u4e2d\u8bfb\u5199\u6570\u636e\u3001\u8fdb\u884c\u6d41\u5904\u7406\u7684\u80fd\u529b\uff0c \u8fd9\u4e5f\u4f7f\u5f97\u201c\u5b9e\u65f6\u6570\u4ed3\u201d(real-time data warehouse)\u6210\u4e3a\u4e86\u53ef\u80fd\u3002","title":"hive"},{"location":"bigdata/flink/table/#_65","text":"","title":"\u63a5\u5165"},{"location":"bigdata/flink/table/#_66","text":"\u76ee\u524dflink \u652f\u6301\u7684\u7248\u672c\u6709 Hive 1.x:1.0.0~1.2.2; Hive 2.x:2.0.0-2.2.0-2.3.0-2.3.6; Hive 3.x:3.0.0~3.1.2; \u9700\u8981\u6709hadoop \u73af\u5883 <!-- Flink \u7684 Hive \u8fde\u63a5\u5668--> <dependency> <groupId>org.apache.flink</groupId> <artifactId>flink-connector-hive_${scala.binary.version}</artifactId> <version>${flink.version}</version> </dependency> <!-- Hive \u4f9d\u8d56 --> <dependency> <groupId>org.apache.hive</groupId> <artifactId>hive-exec</artifactId> <version>${hive.version}</version> </dependency> \u5efa\u8bae\u4e0d\u8981\u628a\u8fd9\u4e9b\u4f9d\u8d56\u6253\u5305\u5230\u7ed3\u679c jar \u6587\u4ef6\u4e2d\uff0c\u800c\u662f\u5728\u8fd0\u884c\u65f6\u7684\u96c6\u7fa4\u73af\u5883\u4e2d\u4e3a\u4e0d\u540c\u7684 Hive \u7248\u672c\u6dfb\u52a0\u4e0d\u540c\u7684\u4f9d\u8d56\u652f\u6301\u3002\u5177\u4f53\u7248\u672c\u5bf9\u5e94\u7684\u4f9d\u8d56\u5173\u7cfb","title":"\u5f15\u5165\u4f9d\u8d56"},{"location":"bigdata/flink/table/#hive_1","text":"\u5728 Flink \u4e2d\u8fde\u63a5 Hive\uff0c\u662f\u901a\u8fc7\u5728\u8868\u73af\u5883\u4e2d\u914d\u7f6e HiveCatalog \u6765\u5b9e\u73b0\u7684\u3002\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u914d \u7f6e HiveCatalog \u672c\u8eab\u5e76\u4e0d\u9700\u8981\u9650\u5b9a\u4f7f\u7528\u54ea\u4e2a planner\uff0c\u4e0d\u8fc7\u5bf9 Hive \u8868\u7684\u8bfb\u5199\u64cd\u4f5c\u53ea\u6709 Blink \u7684 planner \u624d\u652f\u6301\u3002\u6240\u4ee5\u4e00\u822c\u6211\u4eec\u9700\u8981\u5c06\u8868\u73af\u5883\u7684 planner \u8bbe\u7f6e\u4e3a Blink\u3002 EnvironmentSettings settings = EnvironmentSettings.newInstance().useBlinkPlanner().build(); TableEnvironment tableEnv = TableEnvironment.create(settings); String name = \"myhive\"; String defaultDatabase = \"mydatabase\"; String hiveConfDir = \"/opt/hive-conf\"; // \u521b\u5efa\u4e00\u4e2a HiveCatalog\uff0c\u5e76\u5728\u8868\u73af\u5883\u4e2d\u6ce8\u518c HiveCatalog hive = new HiveCatalog(name, defaultDatabase, hiveConfDir); tableEnv.registerCatalog(\"myhive\", hive); // \u4f7f\u7528 HiveCatalog \u4f5c\u4e3a\u5f53\u524d\u4f1a\u8bdd\u7684 catalog tableEnv.useCatalog(\"myhive\"); Flink SQL> create catalog myhive with ('type' = 'hive', 'hive-conf-dir' = '/opt/hive-conf'); [INFO] Execute statement succeed. Flink SQL> use catalog myhive; [INFO] Execute statement succeed.","title":"\u8fde\u63a5hive"},{"location":"bigdata/flink/table/#sql_2","text":"Flink \u76ee\u524d\u652f\u6301\u4e24\u79cd SQL \u65b9\u8a00\u7684\u914d\u7f6e:default \u548c hive\u3002\u6240\u8c13\u7684 default \u5c31\u662f Flink SQL \u9ed8\u8ba4 \u7684SQL\u8bed\u6cd5\u4e86\u3002\u6211\u4eec\u9700\u8981\u5148\u5207\u6362\u5230hive\u65b9\u8a00\uff0c\u7136\u540e\u624d\u80fd\u4f7f\u7528Hive SQL\u7684\u8bed\u6cd5\u3002\u5177\u4f53\u8bbe\u7f6e\u53ef \u4ee5\u5206\u4e3a SQL \u548c Table API \u4e24\u79cd\u65b9\u5f0f\u3002 1.sql\u4e2d\u8bbe\u7f6e \u65b9\u5f0f\u4e00 sql\u914d\u7f6e set table.sql-dialect=hive; \u65b9\u5f0f\u4e8c\u914d\u7f6e\u6587\u4ef6\u4e2d\u4fee\u6539sql-cli-defaults.yaml execution: planner: blink type: batch result-mode: table configuration: table.sql-dialect: hive 2.tableAPI\u8bbe\u7f6e // \u914d\u7f6e hive \u65b9\u8a00 tableEnv.getConfig().setSqlDialect(SqlDialect.HIVE); // \u914d\u7f6e default \u65b9\u8a00 tableEnv.getConfig().setSqlDialect(SqlDialect.DEFAULT);","title":"\u8bbe\u7f6esql\u65b9\u8a00"},{"location":"bigdata/flink/table/#hive_2","text":"-- \u8bbe\u7f6e SQL \u65b9\u8a00\u4e3a hive\uff0c\u521b\u5efa Hive \u8868 SET table.sql-dialect=hive; CREATE TABLE hive_table ( user_id STRING, order_amount DOUBLE ) PARTITIONED BY (dt STRING, hr STRING) STORED AS parquet TBLPROPERTIES ( 'partition.time-extractor.timestamp-pattern'='$dt $hr:00:00', 'sink.partition-commit.trigger'='partition-time', 'sink.partition-commit.delay'='1 h', 'sink.partition-commit.policy.kind'='metastore,success-file' ); -- \u8bbe\u7f6e SQL \u65b9\u8a00\u4e3a default\uff0c\u521b\u5efa Kafka \u8868 SET table.sql-dialect=default; CREATE TABLE kafka_table ( user_id STRING, order_amount DOUBLE, log_ts TIMESTAMP(3), WATERMARK FOR log_ts AS log_ts - INTERVAL '5' SECOND \u2013 \u5b9a\u4e49\u6c34\u4f4d\u7ebf ) WITH (...); -- \u5c06 Kafka \u4e2d\u8bfb\u53d6\u7684\u6570\u636e\u7ecf\u8f6c\u6362\u540e\u5199\u5165 Hive INSERT INTO TABLE hive_table SELECT user_id, order_amount, DATE_FORMAT(log_ts, 'yyyy-MM-dd'), DATE_FORMAT(log_ts, 'HH') FROM kafka_table;","title":"\u8bfb\u5199hive"},{"location":"bigdata/flink/timeWin/","text":"\u65f6\u95f4\u8bed\u4e49 \u4fe9\u79cd\u65f6\u95f4 \u6982\u8ff0 \u5904\u7406\u65f6\u95f4\u673a\u5668\u8ba1\u7b97\u7684\u65f6\u95f4 \u4e8b\u4ef6\u65f6\u95f4\u6570\u636e\u4ea7\u751f\u7684\u65f6\u95f4 \u4f7f\u7528\u573a\u666f\uff1a \u5904\u7406\u65f6\u95f4\u662f\u6211\u4eec\u8ba1\u7b97\u6548\u7387\u7684\u8861\u91cf\u6807\u51c6\uff0c\u800c\u4e8b\u4ef6\u65f6\u95f4\u4f1a\u66f4\u7b26\u5408\u6211\u4eec\u7684\u4e1a\u52a1\u8ba1\u7b97\u903b \u8f91 \u5904\u7406\u65f6\u95f4\u8bed\u4e49\uff0c\u4e00\u822c\u7528\u5728\u5bf9\u5b9e\u65f6\u6027\u8981\u6c42\u6781\u9ad8\u3001\u800c\u5bf9\u8ba1\u7b97\u51c6\u786e\u6027\u8981\u6c42\u4e0d\u592a\u9ad8\u7684\u573a\u666f\uff0c\u53cd\u4e4b\u5c31\u662f\u4e8b\u4ef6\u65f6\u95f4 flink1.12\u9ed8\u8ba4\u662f\u4e8b\u4ef6\u65f6\u95f4 \u6c34\u4f4d\u7ebf \u6982\u8ff0 \u6c34\u4f4d\u7ebf\u662f\u57fa\u4e8e\u6570\u636e\u7684\u65f6\u95f4\u6233\u751f\u6210\u7684\uff0c \u5411\u4e0b\u6e38\u4f20\u9012\u7279\u6b8a\u7684\u6570\u636e \uff0c\u7528\u6765\u8868\u793a\u5f53\u524d\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5c55 \u6c34\u4f4d\u7ebf\u662f\u5355\u8c03\u9012\u589e \u53ef\u4ee5\u8bbe\u7f6e\u5ef6\u8fdf\uff0c\u5904\u7406\u8fdf\u5230\u6570\u636e \u6c34\u4f4d\u7ebf\u4e3at, \u5219\u8868\u793a<t\u7684\u6570\u636e\u5747\u5df2\u5230\u8fbe \u5982\u4f55\u751f\u6210\u6c34\u4f4d\u7ebf public interface WatermarkStrategy<T> extends TimestampAssignerSupplier<T>,WatermarkGeneratorSupplier<T>{ @Override TimestampAssigner<T> createTimestampAssigner(TimestampAssignerSupplier.Context context); @Override WatermarkGenerator<T> createWatermarkGenerator(WatermarkGeneratorSupplier.Context context); } \u6c34\u4f4d\u7ebf\u76f8\u5173\u7c7b\u7684\u4ecb\u7ecd TimestampAssigner:\u65f6\u95f4\u6233\u5206\u914d\u5668\uff0c\u6307\u5b9a\u54ea\u4e2a\u5b57\u6bb5\u4f5c\u4e3a\u4e8b\u4ef6\u65f6\u95f4\u5b57\u6bb5 WatermarkGenerator:\u4e3b\u8981\u8d1f\u8d23\u6309\u7167\u65e2\u5b9a\u7684\u65b9\u5f0f\uff0c\u57fa\u4e8e\u65f6\u95f4\u6233\u751f\u6210\u6c34\u4f4d\u7ebf\u3002\u5728 WatermarkGenerator \u63a5\u53e3\u4e2d\uff0c\u4e3b\u8981\u53c8\u6709\u4e24\u4e2a\u65b9\u6cd5:onEvent()\u548c onPeriodicEmit()\u3002 onEvent:\u6bcf\u4e2a\u4e8b\u4ef6(\u6570\u636e)\u5230\u6765\u90fd\u4f1a\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u5b83\u7684\u53c2\u6570\u6709\u5f53\u524d\u4e8b\u4ef6\u3001\u65f6\u95f4\u6233\uff0c \u4ee5\u53ca\u5141\u8bb8\u53d1\u51fa\u6c34\u4f4d\u7ebf\u7684\u4e00\u4e2a WatermarkOutput\uff0c\u53ef\u4ee5\u57fa\u4e8e\u4e8b\u4ef6\u505a\u5404\u79cd\u64cd\u4f5c onPeriodicEmit:\u5468\u671f\u6027\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u7531WatermarkOutput\u53d1\u51fa\u6c34\u4f4d\u7ebf\u3002\u5468\u671f\u65f6\u95f4\u4e3a\u5904\u7406\u65f6\u95f4\uff0c\u53ef\u4ee5\u8c03\u7528\u73af\u5883\u914d\u7f6e\u7684.setAutoWatermarkInterval()\u65b9\u6cd5\u6765\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a200ms\u3002 \u7cfb\u7edf\u5185\u7f6e\u6c34\u4f4d\u7ebf package com.matt.apitest.window; import com.matt.apitest.beans.Event; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import java.time.Duration; public class Watermark { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); // >=1.12 \u4e0d\u9700\u8981\u8bbe\u7f6e\u5f00\u542fwatermark // 100ms \u89e6\u53d1\u4e00\u6b21\u6c34\u4f4d\u7ebf\u751f\u6210 env.getConfig().setAutoWatermarkInterval(100); DataStream<Event> dataStream = env.fromElements( new Event(\"a1\", \"1\", 100L), new Event(\"a2\", \"2\", 200L), new Event(\"a3\", \"3\", 300L), new Event(\"a4\", \"4\", 400L)) /* // \u6709\u5e8f .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forMonotonousTimestamps() // \u6307\u5b9a\u65f6\u95f4\u5b57\u6bb5 ms .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })*/ // \u4e71\u5e8f \u5ef6\u8fdf .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ofMinutes(2)) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); env.execute(\"matt\"); } } \u6c34\u4f4d\u7ebf = \u5f53\u524d\u6700\u5927\u65f6\u95f4\u6233 \u2013 \u5ef6\u8fdf\u65f6\u95f4 \u2013 1 \u6c34\u4f4d\u7ebf\u4e3a7 \u8868\u793a\u4e0d\u4f1a\u518d\u6709<=7\u7684\u6570\u636e\u6765 \u81ea\u5b9a\u4e49\u6c34\u4f4d\u7ebf \u81ea\u5b9a\u4e49\u6570\u636e\u6e90 \u53d1\u9001\u6c34\u4f4d\u7ebf import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.source.SourceFunction; import org.apache.flink.streaming.api.watermark.Watermark; import java.util.Calendar; import java.util.Random; public class EmitWatermarkInSourceFunction { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); env.addSource(new ClickSourceWithWatermark()).print(); env.execute(); } // \u6cdb\u578b\u662f\u6570\u636e\u6e90\u4e2d\u7684\u7c7b\u578b public static class ClickSourceWithWatermark implements SourceFunction<Event> { private boolean running = true; @Override public void run(SourceContext<Event> sourceContext) throws Exception { Random random = new Random(); String[] userArr = {\"Mary\", \"Bob\", \"Alice\"}; String[] urlArr = {\"./home\", \"./cart\", \"./prod?id=1\"}; while (running) { long currTs = Calendar.getInstance().getTimeInMillis(); // \u6beb\u79d2\u65f6 String username = userArr[random.nextInt(userArr.length)]; String url = urlArr[random.nextInt(urlArr.length)]; Event event = new Event(username, url, currTs); // \u4f7f\u7528 collectWithTimestamp \u65b9\u6cd5\u5c06\u6570\u636e\u53d1\u9001\u51fa\u53bb\uff0c\u5e76\u6307\u660e\u6570\u636e\u4e2d\u7684\u65f6\u95f4\u6233\u7684\u5b57\u6bb5 sourceContext.collectWithTimestamp(event, event.timestamp); // \u53d1\u9001\u6c34\u4f4d\u7ebf sourceContext.emitWatermark(new Watermark(event.timestamp - 1L)); Thread.sleep(1000L); } } @Override public void cancel() { running = false; } } } \u4e3a\u6c34\u4f4d\u7ebf\u4f20\u9012 \u5982\u679c\u4e0a\u6e38\u6709\u4e09\u4e2a\u5206\u533a\u53d1\u6765 \u5219\u53d6\u6700\u5c0f\u7684\u4f5c\u4e3a \u6c34\u4f4d\u7ebf \u5e76\u53d1\u5f80\u4e0b\u6e38 \u7a97\u53e3 \u7a97\u53e3\u5206\u7c7b \u6309\u7167\u9a71\u52a8\u5206 \u65f6\u95f4\u7a97\u53e3\uff1a\u6839\u636e\u65f6\u95f4\u9a71\u52a8\u6765\u5212\u5206\u7a97\u53e3 \u8ba1\u7b97\u7a97\u53e3\uff1a\u6839\u636e\u6570\u636e\u4e2a\u6570\u6765\u5212\u5206\u7a97\u53e3 \u6309\u7167\u7a97\u53e3\u5206\u914d\u7684\u6570\u636e\u89c4\u5219 \u6eda\u52a8\u7a97\u53e3 1:00 - 1:10\uff0c \u5de6\u5fc5\u53f3\u5f00 \u6ed1\u52a8\u7a97\u53e3 \u9700\u8981\u5b9a\u4e49\u7a97\u53e3\u5927\u5c0f\u4ee5\u53ca\u6bcf\u6b21\u6ed1\u52a8\u7684\u6b65\u957f 1:00 - 1:10 1:05 - 1:15 \u4f1a\u8bdd\u7a97\u53e3\uff1a \u8d85\u8fc7\u591a\u5c11\u65f6\u95f4\u6ca1\u6709\u6570\u636e \u5c31\u5173\u95ed\u4f1a\u8bdd\u5417, \u4f1a\u8bdd\u53ea\u6709\u65f6\u95f4\u6ca1\u6709\u4f1a\u8bdd\u8ba1\u6570\u7a97\u53e3 \u4f1a\u8bdd\u7a97\u53e3\u7279\u6b8a\u5904\u7406\uff1a \u5982\u679c\u6765\u4e2a\u6570\u636e\u65f6\u95f4\u95f4\u9694gap \u5927\u4e8e\u6307\u5b9a\u7684size \u4efb\u52a1\u4ed6\u4eec\u5c5e\u4e8e\u4e0d\u540c\u4f1a\u8bdd\uff0c\u4f46\u662f\u5982\u679c\u6709\u4e00\u4e2a\u8fdf\u5230\u6570\u636e\u5728\u4ed6\u4eec\u4e8c\u8005\u4e4b\u95f4\u5c31\u4f1a\u628a\u8fd9\u4e2a\u5e73\u8861\u6253\u7834\uff0c \u6240\u4ee5\u6bcf\u6765\u4e00\u4e2a\u65b0\u7684\u6570\u636e\uff0c\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0 \u7684\u4f1a\u8bdd\u7a97\u53e3;\u7136\u540e\u5224\u65ad\u5df2\u6709\u7a97\u53e3\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u5982\u679c\u5c0f\u4e8e\u7ed9\u5b9a\u7684 size\uff0c\u5c31\u5bf9\u5b83\u4eec\u8fdb\u884c\u5408\u5e76(merge) \u64cd\u4f5c \u5168\u5c40\u7a97\u53e3 \u540c\u4e00\u4e2akey \u4f1a\u516c\u7528\u4e00\u4e2a\u7a97\u53e3 \u7a97\u53e3API \u6982\u8ff0 \u4f1a\u6709\u6309\u952e\u5206\u533a\u548c\u975e\u6309\u952e\u5206\u533a \u6309\u952e\u5206\u533a\u4f1a\u57fa\u4e8e\u952e\u5206\u4e3a\u591a\u6761\u903b\u8f91\u6d41\uff0c \u800c\u975e\u6309\u952e\u5206\u533a\u53ea\u662f\u4e00\u6761\u6d41\uff0c\u63a8\u8350\u4f7f\u7528\u6309\u952e\u5206\u533a \u6309\u952e\u5206\u533a stream.keyBy(...) .window(...) \u975e\u6309\u952e\u5206\u533a stream.windowAll(...) \u5177\u4f53\u4f7f\u7528 \u7a97\u53e3\u5206\u914d\u5668(Window Assigners)\u548c\u7a97\u53e3\u51fd\u6570(Window Functions)\u3002 stream.keyBy(<key selector>) .window(<window assigner>) .aggregate(<window function>) window()\u65b9\u6cd5\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u7a97\u53e3\u5206\u914d\u5668\uff0c\u5b83\u6307\u660e\u4e86\u7a97\u53e3\u7684\u7c7b\u578b; aggregate() \u65b9\u6cd5\u4f20\u5165\u4e00\u4e2a\u7a97\u53e3\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u5b83\u7528\u6765\u5b9a\u4e49\u7a97\u53e3\u5177\u4f53\u7684\u5904\u7406\u903b\u8f91\u3002 dataStream.map(new MapFunction<Event, Tuple2<String, Long>>() { @Override public Tuple2<String, Long> map(Event event) throws Exception { return Tuple2.of(event.user, 1L); } }).keyBy(d -> d.f0) // 1\u4e2a\u53c2\u6570\u6eda\u52a8 2\u4e2a\u53c2\u6570\u6ed1\u52a8 //.countWindow() // \u4f1a\u8bdd //.window(EventTimeSessionWindows.withGap(Time.seconds(2))) // \u6ed1\u52a8\u4e8b\u4ef6\u65f6\u95f4\u7a97\u53e3 //.window(SlidingEventTimeWindows.of(Time.hours(1), Time.hours(1))) // \u6eda\u52a8\u4e8b\u4ef6\u65f6\u95f4\u7a97\u53e3 .window(TumblingEventTimeWindows.of(Time.seconds(10))) //.sum(1).print(); // \u76f8\u540c\u6570\u636e\u7c7b\u578b .reduce(new ReduceFunction<Tuple2<String, Long>>() { @Override public Tuple2<String, Long> reduce(Tuple2<String, Long> t1, Tuple2<String, Long> t2) throws Exception { return Tuple2.of(t1.f0, t1.f1 + t2.f1); } }).print(); \u7a97\u53e3\u5206\u914d\u5668 \u65f6\u95f4\u7a97\u53e3 \u6eda\u52a8\u4e8b\u4ef6\u65f6\u95f4\u7a97\u53e3 \u652f\u63012\u4e2a\u53c2\u6570\uff0c p1: \u6eda\u52a8\u7a97\u53e3\u5927\u5c0f p2:\u504f\u79fb\u91cf \u504f\u79fb\u91cf\u89e3\u91ca\uff1a \u7a97\u53e3\u5927\u5c0f\u4e3a1min, \u6b63\u5e38\u662f10:00:00 - 10:01:00 \u504f\u79fb\u91cf\u4e3a1 \u90a3\u4e48\u7a97\u53e3\u5f00\u542f\u65f6\u95f4\u4e3a10:00:00.001 .window(TumblingEventTimeWindows.of(Time.seconds(10))) \u6ed1\u52a8\u4e8b\u4ef6\u65f6\u95f4\u7a97\u53e3 2\u4e2a\u53c2\u6570 p1: \u6ed1\u52a8\u7a97\u53e3\u5927\u5c0f, p2:\u6bcf\u6b21\u6ed1\u52a8\u6b65\u957f p3:\u53ef\u9009\uff0c \u548c\u6eda\u52a8\u7a97\u53e3\u7c7b\u4f3c, \u53ef\u6307\u5b9a\u504f\u79fb\u91cf // \u6ed1\u52a8\u4e8b\u4ef6\u65f6\u95f4\u7a97\u53e3 .window(SlidingEventTimeWindows.of(Time.hours(1), Time.hours(1))) \u4f1a\u8bdd\u4e8b\u4ef6\u65f6\u95f4\u7a97\u53e3 \u8868\u793a\u4f1a\u8bdd\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u4e5f\u5c31\u662f\u6700 \u5c0f\u95f4\u9694 session gap\u3002\u6211\u4eec\u8fd9\u91cc\u521b\u5efa\u4e86\u9759\u6001\u4f1a\u8bdd\u8d85\u65f6\u65f6\u95f4\u4e3a 10 \u79d2\u7684\u4f1a\u8bdd\u7a97\u53e3\u3002 // \u4f1a\u8bdd //.window(EventTimeSessionWindows.withGap(Time.seconds(2))) \u5904\u7406\u65f6\u95f4\u7a97\u53e3 \u548c\u4e8b\u4ef6\u65f6\u95f4\u7c7b\u4f3c\uff0cEvent\u6539\u6210Processing\uff0c \u7528\u6cd5\u4e00\u81f4 \u8ba1\u6570\u7a97\u53e3 \u6eda\u52a8\u6ed1\u52a8\u8ba1\u6570\u7a97\u53e3 // 1\u4e2a\u53c2\u6570\u6eda\u52a8 2\u4e2a\u53c2\u6570\u6ed1\u52a8 //.countWindow() \u5168\u5c40\u7a97\u53e3 \u6ce8\u610f\u4f7f\u7528\u5168\u5c40\u7a97\u53e3\uff0c\u5fc5\u987b\u81ea\u884c\u5b9a\u4e49\u89e6\u53d1\u5668\u624d\u80fd\u5b9e\u73b0\u7a97\u53e3\u8ba1\u7b97\uff0c\u5426\u5219\u8d77\u4e0d\u5230\u4efb\u4f55\u4f5c\u7528\u3002 stream.keyBy(...) .window(GlobalWindows.create()); \u7a97\u53e3\u51fd\u6570 \u5206\u4e3a2\u7c7b \u589e\u91cf\u805a\u5408\u51fd\u6570\u548c\u5168\u7a97\u53e3\u51fd\u6570 \u589e\u91cf\u805a\u5408\u51fd\u6570 ReduceFunction \u548c AggregateFunction\u3002 ReduceFunction \u4e2d\u95f4\u805a\u5408\u7684\u72b6\u6001\u548c\u8f93\u51fa\u7684\u7ed3\u679c\uff0c\u90fd\u548c\u8f93\u5165\u7684\u6570\u636e\u7c7b\u578b\u662f\u4e00\u6837\u7684 package com.matt.apitest.window; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.api.common.functions.AggregateFunction; import org.apache.flink.api.java.tuple.Tuple2; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.windowing.assigners.TumblingEventTimeWindows; import org.apache.flink.streaming.api.windowing.time.Time; import java.sql.Timestamp; import java.time.Duration; public class WinAggregate { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); // >=1.12 \u4e0d\u9700\u8981\u8bbe\u7f6e\u5f00\u542fwatermark // 100ms \u89e6\u53d1\u4e00\u6b21\u6c34\u4f4d\u7ebf\u751f\u6210 //env.getConfig().setAutoWatermarkInterval(100); DataStream<Event> dataStream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()) .setParallelism(1) // \u4e71\u5e8f \u5ef6\u8fdf .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); // dataStream.keyBy(d -> d.user) .window(TumblingEventTimeWindows.of(Time.seconds(10))) .aggregate(new AggregateFunction<Event, Tuple2<Long, Integer>, String>() { @Override public Tuple2<Long, Integer> createAccumulator() { return Tuple2.of(0L, 0); } // \u53e0\u52a0 @Override public Tuple2<Long, Integer> add(Event event, Tuple2<Long, Integer> acc) { return Tuple2.of(acc.f0 + event.timestamp, acc.f1 + 1); } @Override public String getResult(Tuple2<Long, Integer> acc) { Timestamp timestamp = new Timestamp(acc.f0 / acc.f1); return timestamp.toString(); } // \u5408\u5e76\u4fe9\u4e2a\u7d2f\u52a0\u5668 \u4f1a\u8bdd\u7a97\u53e3\u4f7f\u7528 @Override public Tuple2<Long, Integer> merge(Tuple2<Long, Integer> a, Tuple2<Long, Integer> b) { return Tuple2.of((a.f0 + b.f0), (a.f1 + b.f1)); } }).print(); env.execute(\"matt\"); } } AggregateFunction \u805a\u5408\u51fd\u6570 \u8f93\u5165\u6570\u636e\u3001\u4e2d\u95f4\u72b6\u6001\u3001\u8f93\u51fa\u7ed3\u679c\u4e09\u8005\u7c7b\u578b\u90fd\u53ef\u4ee5\u4e0d\u540c package com.matt.apitest.window; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.api.common.functions.AggregateFunction; import org.apache.flink.api.java.tuple.Tuple2; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.windowing.assigners.SlidingEventTimeWindows; import org.apache.flink.streaming.api.windowing.time.Time; import java.time.Duration; import java.util.HashSet; // pv uv public class WinAggregateTest2 { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); // >=1.12 \u4e0d\u9700\u8981\u8bbe\u7f6e\u5f00\u542fwatermark // 100ms \u89e6\u53d1\u4e00\u6b21\u6c34\u4f4d\u7ebf\u751f\u6210 //env.getConfig().setAutoWatermarkInterval(100); DataStream<Event> dataStream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()) .setParallelism(1) // \u4e71\u5e8f \u5ef6\u8fdf .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); // \u6240\u6709\u6570\u636e\u653e\u5728\u4e00\u8d77 \u53ef\u4ee5\u6839\u636eurl\u5206\u5f00 dataStream.keyBy(d -> true) .window(SlidingEventTimeWindows.of(Time.seconds(10), Time.seconds(2))) .aggregate(new AvgPvAggregate()) .print(); env.execute(\"matt\"); } public static class AvgPvAggregate implements AggregateFunction<Event, Tuple2<Long, HashSet<String>>, Double> { @Override public Tuple2<Long, HashSet<String>> createAccumulator() { return Tuple2.of(0L, new HashSet<>()); } @Override public Tuple2<Long, HashSet<String>> add(Event event, Tuple2<Long, HashSet<String>> tuple2) { tuple2.f1.add(event.user); return Tuple2.of(tuple2.f0 + 1, tuple2.f1); } @Override public Double getResult(Tuple2<Long, HashSet<String>> tuple2) { return tuple2.f0 * 1.0 / tuple2.f1.size(); } @Override public Tuple2<Long, HashSet<String>> merge(Tuple2<Long, HashSet<String>> longHashSetTuple2, Tuple2<Long, HashSet<String>> acc1) { return null; } } } createAccumulator: \u521b\u5efa\u4e00\u4e2a\u7d2f\u52a0\u5668\uff0c\u6bcf\u4e2a\u805a\u5408\u4efb\u52a1\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21 add:\u6bcf\u6765\u4e00\u6761\u6570\u636e\u90fd\u662f\u8c03\u7528\u8be5\u65b9\u6cd5 getResult\uff1a \u83b7\u53d6\u805a\u5408\u540e\u7684\u7ed3\u679c merge:\u5408\u5e76\u4fe9\u4e2a\u7d2f\u52a0\u5668\uff0c \u5e38\u7528\u4e8e\u4f1a\u8bdd\u7a97\u53e3 \u5168\u7a97\u53e3\u51fd\u6570 \u6982\u8ff0 \u4e0e\u589e\u91cf\u805a\u5408\u51fd\u6570\u4e0d\u540c\uff0c\u5168\u7a97\u53e3\u51fd\u6570\u9700\u8981\u5148\u6536\u96c6\u7a97\u53e3\u4e2d\u7684\u6570\u636e\uff0c\u5e76\u5728\u5185\u90e8\u7f13\u5b58\u8d77\u6765\uff0c\u7b49\u5230\u7a97\u53e3\u8981\u8f93\u51fa\u7ed3\u679c\u7684\u65f6\u5019\u518d\u53d6\u51fa\u6570\u636e\u8fdb\u884c\u8ba1\u7b97\u3002 \u4e3a\u4ec0\u4e48\u8981\u6709\u5168\u7a97\u53e3\u51fd\u6570 \u6211\u4eec\u8981\u505a\u7684\u8ba1\u7b97\u5fc5\u987b\u57fa\u4e8e\u5168\u90e8\u7684 \u6570\u636e\u624d\u6709\u6548\uff0c\u8fd9\u65f6\u505a\u589e\u91cf\u805a\u5408\u5c31\u6ca1\u4ec0\u4e48\u610f\u4e49\u4e86 \u8f93\u51fa\u7684\u7ed3\u679c\u6709\u53ef\u80fd\u8981\u5305\u542b\u4e0a\u4e0b\u6587\u4e2d\u7684\u4e00 \u4e9b\u4fe1\u606f(\u6bd4\u5982\u7a97\u53e3\u7684\u8d77\u59cb\u65f6\u95f4)\uff0c\u8fd9\u662f\u589e\u91cf\u805a\u5408\u51fd\u6570\u505a\u4e0d\u5230\u7684 \u5206\u7c7b WindowFunction \u548c ProcessWindowFunction\u3002 WindowFunction WindowFunction \u80fd\u63d0\u4f9b\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u8f83\u5c11\uff0c\u4e5f\u6ca1\u6709\u66f4\u9ad8\u7ea7\u7684\u529f\u80fd\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5b83\u7684\u4f5c\u7528\u53ef\u4ee5\u88ab ProcessWindowFunction \u5168\u8986\u76d6\uff0c\u4e00\u822c\u5728 \u5b9e\u9645\u5e94\u7528\uff0c\u76f4\u63a5\u4f7f\u7528 ProcessWindowFunction \u5c31\u53ef\u4ee5\u4e86 stream .keyBy(<key selector>) .window(<window assigner>) .apply(new MyWindowFunction()); ProcessWindowFunction package com.matt.apitest.window; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.ProcessFunction; import org.apache.flink.streaming.api.functions.windowing.ProcessWindowFunction; import org.apache.flink.streaming.api.windowing.assigners.TumblingEventTimeWindows; import org.apache.flink.streaming.api.windowing.time.Time; import org.apache.flink.streaming.api.windowing.windows.TimeWindow; import org.apache.flink.util.Collector; import java.time.Duration; import java.util.HashSet; import java.util.Iterator; public class WindowProcessTest1 { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); // >=1.12 \u4e0d\u9700\u8981\u8bbe\u7f6e\u5f00\u542fwatermark // 100ms \u89e6\u53d1\u4e00\u6b21\u6c34\u4f4d\u7ebf\u751f\u6210 //env.getConfig().setAutoWatermarkInterval(100); DataStream<Event> dataStream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()) .setParallelism(1) // \u4e71\u5e8f \u5ef6\u8fdf .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); dataStream.keyBy(data -> true) .window(TumblingEventTimeWindows.of(Time.seconds(10))) .process(new UVCountByWindow()) .print(); env.execute(\"\u5168\u7a97\u53e3\u51fd\u6570\"); } public static class UVCountByWindow extends ProcessWindowFunction<Event, String, Boolean, TimeWindow> { @Override public void process(Boolean key, ProcessWindowFunction<Event, String, Boolean, TimeWindow>.Context ctx, Iterable<Event> iterable, Collector<String> collector) throws Exception { HashSet<String> usernameSet = new HashSet<>(); for (Event e : iterable) { usernameSet.add(e.user); } collector.collect(ctx.window().getStart() / 1000 + \"-\" + ctx.window().getEnd() / 1000 + \"uv->\" + usernameSet.size()); } } } Event, String, Boolean, TimeWindow \u8f93\u5165\u6570\u636e \u8f93\u51fa\u6570\u636e key \u7a97\u53e3\u7c7b\u578b \u5168\u7a97\u53e3\u51fd\u6570 \u548c \u589e\u91cf\u805a\u5408\u51fd\u6570\u7ed3\u5408\u4f7f\u7528 package com.matt.apitest.window; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.api.common.functions.AggregateFunction; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.windowing.ProcessWindowFunction; import org.apache.flink.streaming.api.windowing.assigners.TumblingEventTimeWindows; import org.apache.flink.streaming.api.windowing.time.Time; import org.apache.flink.streaming.api.windowing.windows.TimeWindow; import org.apache.flink.util.Collector; import java.time.Duration; import java.util.HashSet; // \u589e\u91cf \u5168\u7a97\u53e3 \u7ec4\u5408 public class UVCntExample { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); // >=1.12 \u4e0d\u9700\u8981\u8bbe\u7f6e\u5f00\u542fwatermark // 100ms \u89e6\u53d1\u4e00\u6b21\u6c34\u4f4d\u7ebf\u751f\u6210 //env.getConfig().setAutoWatermarkInterval(100); DataStream<Event> dataStream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()) .setParallelism(1) // \u4e71\u5e8f \u5ef6\u8fdf .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); dataStream.keyBy(d -> true) .window(TumblingEventTimeWindows.of(Time.seconds(10))) .aggregate(new UvAgg(), new UvCountResult()) .print(); env.execute(); } public static class UvAgg implements AggregateFunction<Event, HashSet<String>, Long> { @Override public HashSet<String> createAccumulator() { return new HashSet<>(); } @Override public HashSet<String> add(Event event, HashSet<String> usernameSet) { usernameSet.add(event.user); return usernameSet; } @Override public Long getResult(HashSet<String> acc) { return (long) acc.size(); } @Override public HashSet<String> merge(HashSet<String> strings, HashSet<String> acc1) { return null; } } public static class UvCountResult extends ProcessWindowFunction<Long, String, Boolean, TimeWindow> { @Override public void process(Boolean aBoolean, ProcessWindowFunction<Long, String, Boolean, TimeWindow>.Context ctx, Iterable<Long> iterable, Collector<String> collector) throws Exception { Long uv = iterable.iterator().next(); collector.collect(ctx.window().getStart() / 1000 + \"-\" + ctx.window().getEnd() / 1000 + \"uv->\" + uv); } } } \u8fdf\u5230\u6570\u636e \u8bbe\u7f6e\u6c34\u4f4d\u7ebf\u5ef6\u8fdf\u65f6\u95f4 \u6bd4\u5982\u5f53\u524d\u6c34\u4f4d\u7ebf\u771f\u5b9e\u662f 15s \u90a3\u4e48\u751f\u6548\u540e\u7684\u6c34\u4f4d\u7ebf\u662f10s \uff08\u5ef6\u8fdf5s\uff09 \u6c34\u4f4d\u7ebf = eventTime - watermarkDealy - 1 \u5141\u8bb8\u7a97\u53e3\u5904\u7406\u8fdf\u5230\u7684\u6570\u636e package com.matt.apitest.window; import com.matt.apitest.beans.Event; import com.matt.apitest.model.UrlCntBO; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.api.common.functions.MapFunction; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.windowing.assigners.TumblingEventTimeWindows; import org.apache.flink.streaming.api.windowing.time.Time; import org.apache.flink.util.OutputTag; import java.time.Duration; // \u5ef6\u8fdf\u5904\u7406 public class LateDataTest { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); // >=1.12 \u4e0d\u9700\u8981\u8bbe\u7f6e\u5f00\u542fwatermark // 100ms \u89e6\u53d1\u4e00\u6b21\u6c34\u4f4d\u7ebf\u751f\u6210 //env.getConfig().setAutoWatermarkInterval(100); env.setParallelism(1); DataStream<Event> dataStream = env.socketTextStream(\"localhost\", 777) .map( new MapFunction<String, Event>() { @Override public Event map(String line) throws Exception { String[] fArr = line.split(\" \"); return new Event(fArr[0], fArr[1], Long.valueOf(fArr[2])); } } ) // \u4e71\u5e8f \u5ef6\u8fdf .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ofSeconds(2L)) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); dataStream.print(\"in\"); // \u6d4b\u8f93\u51fa\u6d41\u6807\u7b7e {} \u9632\u6b62\u6cdb\u578b\u67e5\u51fa \u5185\u90e8\u5217 OutputTag<Event> late = new OutputTag<Event>(\"late\"){}; SingleOutputStreamOperator<UrlCntBO> res = dataStream.keyBy(d -> d.url) .window(TumblingEventTimeWindows.of(Time.seconds(10))) // 1\u5206\u949f\u5ef6\u8fdf \u6c34\u4f4d\u7ebf\u67e560s \u5185 \u4ecd\u7136\u4f1a\u8ba1\u7b97 .allowedLateness(Time.minutes(1L)) // \u6ca1\u6765\u7684\u6570\u636e\u653e\u5230 .sideOutputLateData(late) .aggregate(new UrlCntCase.UrlCntAgg(), new UrlCntCase.UrlCntResult()); res.print(\"res\"); DataStream<Event> sideOutput = res.getSideOutput(late); sideOutput.print(\"late\"); env.execute(); } } \u5982\u4f55\u8bbe\u7f6e\u8fdf\u5230\u65f6\u95f4\u8fc7\u4e86 \u8fd8\u662f\u4f1a\u6709\u90e8\u5206\u6570\u636e\u6ca1\u6765\uff0c \u53ef\u4ee5\u8bbe\u7f6e\u5c06\u8fdf\u5230\u7684\u6570\u636e\u5199\u5230\u4fa7\u8f93\u51fa\u6d41","title":"timeWin"},{"location":"bigdata/flink/timeWin/#_1","text":"","title":"\u65f6\u95f4\u8bed\u4e49"},{"location":"bigdata/flink/timeWin/#_2","text":"","title":"\u4fe9\u79cd\u65f6\u95f4"},{"location":"bigdata/flink/timeWin/#_3","text":"\u5904\u7406\u65f6\u95f4\u673a\u5668\u8ba1\u7b97\u7684\u65f6\u95f4 \u4e8b\u4ef6\u65f6\u95f4\u6570\u636e\u4ea7\u751f\u7684\u65f6\u95f4","title":"\u6982\u8ff0"},{"location":"bigdata/flink/timeWin/#_4","text":"\u5904\u7406\u65f6\u95f4\u662f\u6211\u4eec\u8ba1\u7b97\u6548\u7387\u7684\u8861\u91cf\u6807\u51c6\uff0c\u800c\u4e8b\u4ef6\u65f6\u95f4\u4f1a\u66f4\u7b26\u5408\u6211\u4eec\u7684\u4e1a\u52a1\u8ba1\u7b97\u903b \u8f91 \u5904\u7406\u65f6\u95f4\u8bed\u4e49\uff0c\u4e00\u822c\u7528\u5728\u5bf9\u5b9e\u65f6\u6027\u8981\u6c42\u6781\u9ad8\u3001\u800c\u5bf9\u8ba1\u7b97\u51c6\u786e\u6027\u8981\u6c42\u4e0d\u592a\u9ad8\u7684\u573a\u666f\uff0c\u53cd\u4e4b\u5c31\u662f\u4e8b\u4ef6\u65f6\u95f4 flink1.12\u9ed8\u8ba4\u662f\u4e8b\u4ef6\u65f6\u95f4","title":"\u4f7f\u7528\u573a\u666f\uff1a"},{"location":"bigdata/flink/timeWin/#_5","text":"","title":"\u6c34\u4f4d\u7ebf"},{"location":"bigdata/flink/timeWin/#_6","text":"\u6c34\u4f4d\u7ebf\u662f\u57fa\u4e8e\u6570\u636e\u7684\u65f6\u95f4\u6233\u751f\u6210\u7684\uff0c \u5411\u4e0b\u6e38\u4f20\u9012\u7279\u6b8a\u7684\u6570\u636e \uff0c\u7528\u6765\u8868\u793a\u5f53\u524d\u4e8b\u4ef6\u65f6\u95f4\u7684\u8fdb\u5c55 \u6c34\u4f4d\u7ebf\u662f\u5355\u8c03\u9012\u589e \u53ef\u4ee5\u8bbe\u7f6e\u5ef6\u8fdf\uff0c\u5904\u7406\u8fdf\u5230\u6570\u636e \u6c34\u4f4d\u7ebf\u4e3at, \u5219\u8868\u793a<t\u7684\u6570\u636e\u5747\u5df2\u5230\u8fbe","title":"\u6982\u8ff0"},{"location":"bigdata/flink/timeWin/#_7","text":"public interface WatermarkStrategy<T> extends TimestampAssignerSupplier<T>,WatermarkGeneratorSupplier<T>{ @Override TimestampAssigner<T> createTimestampAssigner(TimestampAssignerSupplier.Context context); @Override WatermarkGenerator<T> createWatermarkGenerator(WatermarkGeneratorSupplier.Context context); } \u6c34\u4f4d\u7ebf\u76f8\u5173\u7c7b\u7684\u4ecb\u7ecd TimestampAssigner:\u65f6\u95f4\u6233\u5206\u914d\u5668\uff0c\u6307\u5b9a\u54ea\u4e2a\u5b57\u6bb5\u4f5c\u4e3a\u4e8b\u4ef6\u65f6\u95f4\u5b57\u6bb5 WatermarkGenerator:\u4e3b\u8981\u8d1f\u8d23\u6309\u7167\u65e2\u5b9a\u7684\u65b9\u5f0f\uff0c\u57fa\u4e8e\u65f6\u95f4\u6233\u751f\u6210\u6c34\u4f4d\u7ebf\u3002\u5728 WatermarkGenerator \u63a5\u53e3\u4e2d\uff0c\u4e3b\u8981\u53c8\u6709\u4e24\u4e2a\u65b9\u6cd5:onEvent()\u548c onPeriodicEmit()\u3002 onEvent:\u6bcf\u4e2a\u4e8b\u4ef6(\u6570\u636e)\u5230\u6765\u90fd\u4f1a\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u5b83\u7684\u53c2\u6570\u6709\u5f53\u524d\u4e8b\u4ef6\u3001\u65f6\u95f4\u6233\uff0c \u4ee5\u53ca\u5141\u8bb8\u53d1\u51fa\u6c34\u4f4d\u7ebf\u7684\u4e00\u4e2a WatermarkOutput\uff0c\u53ef\u4ee5\u57fa\u4e8e\u4e8b\u4ef6\u505a\u5404\u79cd\u64cd\u4f5c onPeriodicEmit:\u5468\u671f\u6027\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u7531WatermarkOutput\u53d1\u51fa\u6c34\u4f4d\u7ebf\u3002\u5468\u671f\u65f6\u95f4\u4e3a\u5904\u7406\u65f6\u95f4\uff0c\u53ef\u4ee5\u8c03\u7528\u73af\u5883\u914d\u7f6e\u7684.setAutoWatermarkInterval()\u65b9\u6cd5\u6765\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a200ms\u3002","title":"\u5982\u4f55\u751f\u6210\u6c34\u4f4d\u7ebf"},{"location":"bigdata/flink/timeWin/#_8","text":"package com.matt.apitest.window; import com.matt.apitest.beans.Event; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import java.time.Duration; public class Watermark { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); // >=1.12 \u4e0d\u9700\u8981\u8bbe\u7f6e\u5f00\u542fwatermark // 100ms \u89e6\u53d1\u4e00\u6b21\u6c34\u4f4d\u7ebf\u751f\u6210 env.getConfig().setAutoWatermarkInterval(100); DataStream<Event> dataStream = env.fromElements( new Event(\"a1\", \"1\", 100L), new Event(\"a2\", \"2\", 200L), new Event(\"a3\", \"3\", 300L), new Event(\"a4\", \"4\", 400L)) /* // \u6709\u5e8f .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forMonotonousTimestamps() // \u6307\u5b9a\u65f6\u95f4\u5b57\u6bb5 ms .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })*/ // \u4e71\u5e8f \u5ef6\u8fdf .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ofMinutes(2)) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); env.execute(\"matt\"); } } \u6c34\u4f4d\u7ebf = \u5f53\u524d\u6700\u5927\u65f6\u95f4\u6233 \u2013 \u5ef6\u8fdf\u65f6\u95f4 \u2013 1 \u6c34\u4f4d\u7ebf\u4e3a7 \u8868\u793a\u4e0d\u4f1a\u518d\u6709<=7\u7684\u6570\u636e\u6765","title":"\u7cfb\u7edf\u5185\u7f6e\u6c34\u4f4d\u7ebf"},{"location":"bigdata/flink/timeWin/#_9","text":"\u81ea\u5b9a\u4e49\u6570\u636e\u6e90 \u53d1\u9001\u6c34\u4f4d\u7ebf import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.source.SourceFunction; import org.apache.flink.streaming.api.watermark.Watermark; import java.util.Calendar; import java.util.Random; public class EmitWatermarkInSourceFunction { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); env.setParallelism(1); env.addSource(new ClickSourceWithWatermark()).print(); env.execute(); } // \u6cdb\u578b\u662f\u6570\u636e\u6e90\u4e2d\u7684\u7c7b\u578b public static class ClickSourceWithWatermark implements SourceFunction<Event> { private boolean running = true; @Override public void run(SourceContext<Event> sourceContext) throws Exception { Random random = new Random(); String[] userArr = {\"Mary\", \"Bob\", \"Alice\"}; String[] urlArr = {\"./home\", \"./cart\", \"./prod?id=1\"}; while (running) { long currTs = Calendar.getInstance().getTimeInMillis(); // \u6beb\u79d2\u65f6 String username = userArr[random.nextInt(userArr.length)]; String url = urlArr[random.nextInt(urlArr.length)]; Event event = new Event(username, url, currTs); // \u4f7f\u7528 collectWithTimestamp \u65b9\u6cd5\u5c06\u6570\u636e\u53d1\u9001\u51fa\u53bb\uff0c\u5e76\u6307\u660e\u6570\u636e\u4e2d\u7684\u65f6\u95f4\u6233\u7684\u5b57\u6bb5 sourceContext.collectWithTimestamp(event, event.timestamp); // \u53d1\u9001\u6c34\u4f4d\u7ebf sourceContext.emitWatermark(new Watermark(event.timestamp - 1L)); Thread.sleep(1000L); } } @Override public void cancel() { running = false; } } }","title":"\u81ea\u5b9a\u4e49\u6c34\u4f4d\u7ebf"},{"location":"bigdata/flink/timeWin/#_10","text":"\u5982\u679c\u4e0a\u6e38\u6709\u4e09\u4e2a\u5206\u533a\u53d1\u6765 \u5219\u53d6\u6700\u5c0f\u7684\u4f5c\u4e3a \u6c34\u4f4d\u7ebf \u5e76\u53d1\u5f80\u4e0b\u6e38","title":"\u4e3a\u6c34\u4f4d\u7ebf\u4f20\u9012"},{"location":"bigdata/flink/timeWin/#_11","text":"","title":"\u7a97\u53e3"},{"location":"bigdata/flink/timeWin/#_12","text":"","title":"\u7a97\u53e3\u5206\u7c7b"},{"location":"bigdata/flink/timeWin/#_13","text":"\u65f6\u95f4\u7a97\u53e3\uff1a\u6839\u636e\u65f6\u95f4\u9a71\u52a8\u6765\u5212\u5206\u7a97\u53e3 \u8ba1\u7b97\u7a97\u53e3\uff1a\u6839\u636e\u6570\u636e\u4e2a\u6570\u6765\u5212\u5206\u7a97\u53e3","title":"\u6309\u7167\u9a71\u52a8\u5206"},{"location":"bigdata/flink/timeWin/#_14","text":"","title":"\u6309\u7167\u7a97\u53e3\u5206\u914d\u7684\u6570\u636e\u89c4\u5219"},{"location":"bigdata/flink/timeWin/#_15","text":"1:00 - 1:10\uff0c \u5de6\u5fc5\u53f3\u5f00","title":"\u6eda\u52a8\u7a97\u53e3"},{"location":"bigdata/flink/timeWin/#_16","text":"\u9700\u8981\u5b9a\u4e49\u7a97\u53e3\u5927\u5c0f\u4ee5\u53ca\u6bcf\u6b21\u6ed1\u52a8\u7684\u6b65\u957f 1:00 - 1:10 1:05 - 1:15","title":"\u6ed1\u52a8\u7a97\u53e3"},{"location":"bigdata/flink/timeWin/#_17","text":"\u8d85\u8fc7\u591a\u5c11\u65f6\u95f4\u6ca1\u6709\u6570\u636e \u5c31\u5173\u95ed\u4f1a\u8bdd\u5417, \u4f1a\u8bdd\u53ea\u6709\u65f6\u95f4\u6ca1\u6709\u4f1a\u8bdd\u8ba1\u6570\u7a97\u53e3 \u4f1a\u8bdd\u7a97\u53e3\u7279\u6b8a\u5904\u7406\uff1a \u5982\u679c\u6765\u4e2a\u6570\u636e\u65f6\u95f4\u95f4\u9694gap \u5927\u4e8e\u6307\u5b9a\u7684size \u4efb\u52a1\u4ed6\u4eec\u5c5e\u4e8e\u4e0d\u540c\u4f1a\u8bdd\uff0c\u4f46\u662f\u5982\u679c\u6709\u4e00\u4e2a\u8fdf\u5230\u6570\u636e\u5728\u4ed6\u4eec\u4e8c\u8005\u4e4b\u95f4\u5c31\u4f1a\u628a\u8fd9\u4e2a\u5e73\u8861\u6253\u7834\uff0c \u6240\u4ee5\u6bcf\u6765\u4e00\u4e2a\u65b0\u7684\u6570\u636e\uff0c\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0 \u7684\u4f1a\u8bdd\u7a97\u53e3;\u7136\u540e\u5224\u65ad\u5df2\u6709\u7a97\u53e3\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u5982\u679c\u5c0f\u4e8e\u7ed9\u5b9a\u7684 size\uff0c\u5c31\u5bf9\u5b83\u4eec\u8fdb\u884c\u5408\u5e76(merge) \u64cd\u4f5c","title":"\u4f1a\u8bdd\u7a97\u53e3\uff1a"},{"location":"bigdata/flink/timeWin/#_18","text":"\u540c\u4e00\u4e2akey \u4f1a\u516c\u7528\u4e00\u4e2a\u7a97\u53e3","title":"\u5168\u5c40\u7a97\u53e3"},{"location":"bigdata/flink/timeWin/#api","text":"","title":"\u7a97\u53e3API"},{"location":"bigdata/flink/timeWin/#_19","text":"\u4f1a\u6709\u6309\u952e\u5206\u533a\u548c\u975e\u6309\u952e\u5206\u533a \u6309\u952e\u5206\u533a\u4f1a\u57fa\u4e8e\u952e\u5206\u4e3a\u591a\u6761\u903b\u8f91\u6d41\uff0c \u800c\u975e\u6309\u952e\u5206\u533a\u53ea\u662f\u4e00\u6761\u6d41\uff0c\u63a8\u8350\u4f7f\u7528\u6309\u952e\u5206\u533a \u6309\u952e\u5206\u533a stream.keyBy(...) .window(...) \u975e\u6309\u952e\u5206\u533a stream.windowAll(...)","title":"\u6982\u8ff0"},{"location":"bigdata/flink/timeWin/#_20","text":"\u7a97\u53e3\u5206\u914d\u5668(Window Assigners)\u548c\u7a97\u53e3\u51fd\u6570(Window Functions)\u3002 stream.keyBy(<key selector>) .window(<window assigner>) .aggregate(<window function>) window()\u65b9\u6cd5\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u7a97\u53e3\u5206\u914d\u5668\uff0c\u5b83\u6307\u660e\u4e86\u7a97\u53e3\u7684\u7c7b\u578b; aggregate() \u65b9\u6cd5\u4f20\u5165\u4e00\u4e2a\u7a97\u53e3\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u5b83\u7528\u6765\u5b9a\u4e49\u7a97\u53e3\u5177\u4f53\u7684\u5904\u7406\u903b\u8f91\u3002 dataStream.map(new MapFunction<Event, Tuple2<String, Long>>() { @Override public Tuple2<String, Long> map(Event event) throws Exception { return Tuple2.of(event.user, 1L); } }).keyBy(d -> d.f0) // 1\u4e2a\u53c2\u6570\u6eda\u52a8 2\u4e2a\u53c2\u6570\u6ed1\u52a8 //.countWindow() // \u4f1a\u8bdd //.window(EventTimeSessionWindows.withGap(Time.seconds(2))) // \u6ed1\u52a8\u4e8b\u4ef6\u65f6\u95f4\u7a97\u53e3 //.window(SlidingEventTimeWindows.of(Time.hours(1), Time.hours(1))) // \u6eda\u52a8\u4e8b\u4ef6\u65f6\u95f4\u7a97\u53e3 .window(TumblingEventTimeWindows.of(Time.seconds(10))) //.sum(1).print(); // \u76f8\u540c\u6570\u636e\u7c7b\u578b .reduce(new ReduceFunction<Tuple2<String, Long>>() { @Override public Tuple2<String, Long> reduce(Tuple2<String, Long> t1, Tuple2<String, Long> t2) throws Exception { return Tuple2.of(t1.f0, t1.f1 + t2.f1); } }).print();","title":"\u5177\u4f53\u4f7f\u7528"},{"location":"bigdata/flink/timeWin/#_21","text":"","title":"\u7a97\u53e3\u5206\u914d\u5668"},{"location":"bigdata/flink/timeWin/#_22","text":"","title":"\u65f6\u95f4\u7a97\u53e3"},{"location":"bigdata/flink/timeWin/#_23","text":"\u652f\u63012\u4e2a\u53c2\u6570\uff0c p1: \u6eda\u52a8\u7a97\u53e3\u5927\u5c0f p2:\u504f\u79fb\u91cf \u504f\u79fb\u91cf\u89e3\u91ca\uff1a \u7a97\u53e3\u5927\u5c0f\u4e3a1min, \u6b63\u5e38\u662f10:00:00 - 10:01:00 \u504f\u79fb\u91cf\u4e3a1 \u90a3\u4e48\u7a97\u53e3\u5f00\u542f\u65f6\u95f4\u4e3a10:00:00.001 .window(TumblingEventTimeWindows.of(Time.seconds(10)))","title":"\u6eda\u52a8\u4e8b\u4ef6\u65f6\u95f4\u7a97\u53e3"},{"location":"bigdata/flink/timeWin/#_24","text":"2\u4e2a\u53c2\u6570 p1: \u6ed1\u52a8\u7a97\u53e3\u5927\u5c0f, p2:\u6bcf\u6b21\u6ed1\u52a8\u6b65\u957f p3:\u53ef\u9009\uff0c \u548c\u6eda\u52a8\u7a97\u53e3\u7c7b\u4f3c, \u53ef\u6307\u5b9a\u504f\u79fb\u91cf // \u6ed1\u52a8\u4e8b\u4ef6\u65f6\u95f4\u7a97\u53e3 .window(SlidingEventTimeWindows.of(Time.hours(1), Time.hours(1)))","title":"\u6ed1\u52a8\u4e8b\u4ef6\u65f6\u95f4\u7a97\u53e3"},{"location":"bigdata/flink/timeWin/#_25","text":"\u8868\u793a\u4f1a\u8bdd\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u4e5f\u5c31\u662f\u6700 \u5c0f\u95f4\u9694 session gap\u3002\u6211\u4eec\u8fd9\u91cc\u521b\u5efa\u4e86\u9759\u6001\u4f1a\u8bdd\u8d85\u65f6\u65f6\u95f4\u4e3a 10 \u79d2\u7684\u4f1a\u8bdd\u7a97\u53e3\u3002 // \u4f1a\u8bdd //.window(EventTimeSessionWindows.withGap(Time.seconds(2))) \u5904\u7406\u65f6\u95f4\u7a97\u53e3 \u548c\u4e8b\u4ef6\u65f6\u95f4\u7c7b\u4f3c\uff0cEvent\u6539\u6210Processing\uff0c \u7528\u6cd5\u4e00\u81f4","title":"\u4f1a\u8bdd\u4e8b\u4ef6\u65f6\u95f4\u7a97\u53e3"},{"location":"bigdata/flink/timeWin/#_26","text":"","title":"\u8ba1\u6570\u7a97\u53e3"},{"location":"bigdata/flink/timeWin/#_27","text":"// 1\u4e2a\u53c2\u6570\u6eda\u52a8 2\u4e2a\u53c2\u6570\u6ed1\u52a8 //.countWindow()","title":"\u6eda\u52a8\u6ed1\u52a8\u8ba1\u6570\u7a97\u53e3"},{"location":"bigdata/flink/timeWin/#_28","text":"\u6ce8\u610f\u4f7f\u7528\u5168\u5c40\u7a97\u53e3\uff0c\u5fc5\u987b\u81ea\u884c\u5b9a\u4e49\u89e6\u53d1\u5668\u624d\u80fd\u5b9e\u73b0\u7a97\u53e3\u8ba1\u7b97\uff0c\u5426\u5219\u8d77\u4e0d\u5230\u4efb\u4f55\u4f5c\u7528\u3002 stream.keyBy(...) .window(GlobalWindows.create());","title":"\u5168\u5c40\u7a97\u53e3"},{"location":"bigdata/flink/timeWin/#_29","text":"\u5206\u4e3a2\u7c7b \u589e\u91cf\u805a\u5408\u51fd\u6570\u548c\u5168\u7a97\u53e3\u51fd\u6570","title":"\u7a97\u53e3\u51fd\u6570"},{"location":"bigdata/flink/timeWin/#_30","text":"ReduceFunction \u548c AggregateFunction\u3002","title":"\u589e\u91cf\u805a\u5408\u51fd\u6570"},{"location":"bigdata/flink/timeWin/#reducefunction","text":"\u4e2d\u95f4\u805a\u5408\u7684\u72b6\u6001\u548c\u8f93\u51fa\u7684\u7ed3\u679c\uff0c\u90fd\u548c\u8f93\u5165\u7684\u6570\u636e\u7c7b\u578b\u662f\u4e00\u6837\u7684 package com.matt.apitest.window; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.api.common.functions.AggregateFunction; import org.apache.flink.api.java.tuple.Tuple2; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.windowing.assigners.TumblingEventTimeWindows; import org.apache.flink.streaming.api.windowing.time.Time; import java.sql.Timestamp; import java.time.Duration; public class WinAggregate { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); // >=1.12 \u4e0d\u9700\u8981\u8bbe\u7f6e\u5f00\u542fwatermark // 100ms \u89e6\u53d1\u4e00\u6b21\u6c34\u4f4d\u7ebf\u751f\u6210 //env.getConfig().setAutoWatermarkInterval(100); DataStream<Event> dataStream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()) .setParallelism(1) // \u4e71\u5e8f \u5ef6\u8fdf .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); // dataStream.keyBy(d -> d.user) .window(TumblingEventTimeWindows.of(Time.seconds(10))) .aggregate(new AggregateFunction<Event, Tuple2<Long, Integer>, String>() { @Override public Tuple2<Long, Integer> createAccumulator() { return Tuple2.of(0L, 0); } // \u53e0\u52a0 @Override public Tuple2<Long, Integer> add(Event event, Tuple2<Long, Integer> acc) { return Tuple2.of(acc.f0 + event.timestamp, acc.f1 + 1); } @Override public String getResult(Tuple2<Long, Integer> acc) { Timestamp timestamp = new Timestamp(acc.f0 / acc.f1); return timestamp.toString(); } // \u5408\u5e76\u4fe9\u4e2a\u7d2f\u52a0\u5668 \u4f1a\u8bdd\u7a97\u53e3\u4f7f\u7528 @Override public Tuple2<Long, Integer> merge(Tuple2<Long, Integer> a, Tuple2<Long, Integer> b) { return Tuple2.of((a.f0 + b.f0), (a.f1 + b.f1)); } }).print(); env.execute(\"matt\"); } }","title":"ReduceFunction"},{"location":"bigdata/flink/timeWin/#aggregatefunction","text":"\u8f93\u5165\u6570\u636e\u3001\u4e2d\u95f4\u72b6\u6001\u3001\u8f93\u51fa\u7ed3\u679c\u4e09\u8005\u7c7b\u578b\u90fd\u53ef\u4ee5\u4e0d\u540c package com.matt.apitest.window; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.api.common.functions.AggregateFunction; import org.apache.flink.api.java.tuple.Tuple2; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.windowing.assigners.SlidingEventTimeWindows; import org.apache.flink.streaming.api.windowing.time.Time; import java.time.Duration; import java.util.HashSet; // pv uv public class WinAggregateTest2 { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); // >=1.12 \u4e0d\u9700\u8981\u8bbe\u7f6e\u5f00\u542fwatermark // 100ms \u89e6\u53d1\u4e00\u6b21\u6c34\u4f4d\u7ebf\u751f\u6210 //env.getConfig().setAutoWatermarkInterval(100); DataStream<Event> dataStream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()) .setParallelism(1) // \u4e71\u5e8f \u5ef6\u8fdf .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); // \u6240\u6709\u6570\u636e\u653e\u5728\u4e00\u8d77 \u53ef\u4ee5\u6839\u636eurl\u5206\u5f00 dataStream.keyBy(d -> true) .window(SlidingEventTimeWindows.of(Time.seconds(10), Time.seconds(2))) .aggregate(new AvgPvAggregate()) .print(); env.execute(\"matt\"); } public static class AvgPvAggregate implements AggregateFunction<Event, Tuple2<Long, HashSet<String>>, Double> { @Override public Tuple2<Long, HashSet<String>> createAccumulator() { return Tuple2.of(0L, new HashSet<>()); } @Override public Tuple2<Long, HashSet<String>> add(Event event, Tuple2<Long, HashSet<String>> tuple2) { tuple2.f1.add(event.user); return Tuple2.of(tuple2.f0 + 1, tuple2.f1); } @Override public Double getResult(Tuple2<Long, HashSet<String>> tuple2) { return tuple2.f0 * 1.0 / tuple2.f1.size(); } @Override public Tuple2<Long, HashSet<String>> merge(Tuple2<Long, HashSet<String>> longHashSetTuple2, Tuple2<Long, HashSet<String>> acc1) { return null; } } } createAccumulator: \u521b\u5efa\u4e00\u4e2a\u7d2f\u52a0\u5668\uff0c\u6bcf\u4e2a\u805a\u5408\u4efb\u52a1\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21 add:\u6bcf\u6765\u4e00\u6761\u6570\u636e\u90fd\u662f\u8c03\u7528\u8be5\u65b9\u6cd5 getResult\uff1a \u83b7\u53d6\u805a\u5408\u540e\u7684\u7ed3\u679c merge:\u5408\u5e76\u4fe9\u4e2a\u7d2f\u52a0\u5668\uff0c \u5e38\u7528\u4e8e\u4f1a\u8bdd\u7a97\u53e3","title":"AggregateFunction \u805a\u5408\u51fd\u6570"},{"location":"bigdata/flink/timeWin/#_31","text":"","title":"\u5168\u7a97\u53e3\u51fd\u6570"},{"location":"bigdata/flink/timeWin/#_32","text":"\u4e0e\u589e\u91cf\u805a\u5408\u51fd\u6570\u4e0d\u540c\uff0c\u5168\u7a97\u53e3\u51fd\u6570\u9700\u8981\u5148\u6536\u96c6\u7a97\u53e3\u4e2d\u7684\u6570\u636e\uff0c\u5e76\u5728\u5185\u90e8\u7f13\u5b58\u8d77\u6765\uff0c\u7b49\u5230\u7a97\u53e3\u8981\u8f93\u51fa\u7ed3\u679c\u7684\u65f6\u5019\u518d\u53d6\u51fa\u6570\u636e\u8fdb\u884c\u8ba1\u7b97\u3002 \u4e3a\u4ec0\u4e48\u8981\u6709\u5168\u7a97\u53e3\u51fd\u6570 \u6211\u4eec\u8981\u505a\u7684\u8ba1\u7b97\u5fc5\u987b\u57fa\u4e8e\u5168\u90e8\u7684 \u6570\u636e\u624d\u6709\u6548\uff0c\u8fd9\u65f6\u505a\u589e\u91cf\u805a\u5408\u5c31\u6ca1\u4ec0\u4e48\u610f\u4e49\u4e86 \u8f93\u51fa\u7684\u7ed3\u679c\u6709\u53ef\u80fd\u8981\u5305\u542b\u4e0a\u4e0b\u6587\u4e2d\u7684\u4e00 \u4e9b\u4fe1\u606f(\u6bd4\u5982\u7a97\u53e3\u7684\u8d77\u59cb\u65f6\u95f4)\uff0c\u8fd9\u662f\u589e\u91cf\u805a\u5408\u51fd\u6570\u505a\u4e0d\u5230\u7684 \u5206\u7c7b WindowFunction \u548c ProcessWindowFunction\u3002","title":"\u6982\u8ff0"},{"location":"bigdata/flink/timeWin/#windowfunction","text":"WindowFunction \u80fd\u63d0\u4f9b\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u8f83\u5c11\uff0c\u4e5f\u6ca1\u6709\u66f4\u9ad8\u7ea7\u7684\u529f\u80fd\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5b83\u7684\u4f5c\u7528\u53ef\u4ee5\u88ab ProcessWindowFunction \u5168\u8986\u76d6\uff0c\u4e00\u822c\u5728 \u5b9e\u9645\u5e94\u7528\uff0c\u76f4\u63a5\u4f7f\u7528 ProcessWindowFunction \u5c31\u53ef\u4ee5\u4e86 stream .keyBy(<key selector>) .window(<window assigner>) .apply(new MyWindowFunction());","title":"WindowFunction"},{"location":"bigdata/flink/timeWin/#processwindowfunction","text":"package com.matt.apitest.window; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.ProcessFunction; import org.apache.flink.streaming.api.functions.windowing.ProcessWindowFunction; import org.apache.flink.streaming.api.windowing.assigners.TumblingEventTimeWindows; import org.apache.flink.streaming.api.windowing.time.Time; import org.apache.flink.streaming.api.windowing.windows.TimeWindow; import org.apache.flink.util.Collector; import java.time.Duration; import java.util.HashSet; import java.util.Iterator; public class WindowProcessTest1 { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); // >=1.12 \u4e0d\u9700\u8981\u8bbe\u7f6e\u5f00\u542fwatermark // 100ms \u89e6\u53d1\u4e00\u6b21\u6c34\u4f4d\u7ebf\u751f\u6210 //env.getConfig().setAutoWatermarkInterval(100); DataStream<Event> dataStream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()) .setParallelism(1) // \u4e71\u5e8f \u5ef6\u8fdf .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); dataStream.keyBy(data -> true) .window(TumblingEventTimeWindows.of(Time.seconds(10))) .process(new UVCountByWindow()) .print(); env.execute(\"\u5168\u7a97\u53e3\u51fd\u6570\"); } public static class UVCountByWindow extends ProcessWindowFunction<Event, String, Boolean, TimeWindow> { @Override public void process(Boolean key, ProcessWindowFunction<Event, String, Boolean, TimeWindow>.Context ctx, Iterable<Event> iterable, Collector<String> collector) throws Exception { HashSet<String> usernameSet = new HashSet<>(); for (Event e : iterable) { usernameSet.add(e.user); } collector.collect(ctx.window().getStart() / 1000 + \"-\" + ctx.window().getEnd() / 1000 + \"uv->\" + usernameSet.size()); } } } Event, String, Boolean, TimeWindow \u8f93\u5165\u6570\u636e \u8f93\u51fa\u6570\u636e key \u7a97\u53e3\u7c7b\u578b \u5168\u7a97\u53e3\u51fd\u6570 \u548c \u589e\u91cf\u805a\u5408\u51fd\u6570\u7ed3\u5408\u4f7f\u7528 package com.matt.apitest.window; import com.matt.apitest.beans.Event; import com.matt.apitest.source.SourceTest4_UDF; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.api.common.functions.AggregateFunction; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.functions.windowing.ProcessWindowFunction; import org.apache.flink.streaming.api.windowing.assigners.TumblingEventTimeWindows; import org.apache.flink.streaming.api.windowing.time.Time; import org.apache.flink.streaming.api.windowing.windows.TimeWindow; import org.apache.flink.util.Collector; import java.time.Duration; import java.util.HashSet; // \u589e\u91cf \u5168\u7a97\u53e3 \u7ec4\u5408 public class UVCntExample { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); // >=1.12 \u4e0d\u9700\u8981\u8bbe\u7f6e\u5f00\u542fwatermark // 100ms \u89e6\u53d1\u4e00\u6b21\u6c34\u4f4d\u7ebf\u751f\u6210 //env.getConfig().setAutoWatermarkInterval(100); DataStream<Event> dataStream = env.addSource(new SourceTest4_UDF.ParallelCustomSource()) .setParallelism(1) // \u4e71\u5e8f \u5ef6\u8fdf .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ZERO) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); dataStream.keyBy(d -> true) .window(TumblingEventTimeWindows.of(Time.seconds(10))) .aggregate(new UvAgg(), new UvCountResult()) .print(); env.execute(); } public static class UvAgg implements AggregateFunction<Event, HashSet<String>, Long> { @Override public HashSet<String> createAccumulator() { return new HashSet<>(); } @Override public HashSet<String> add(Event event, HashSet<String> usernameSet) { usernameSet.add(event.user); return usernameSet; } @Override public Long getResult(HashSet<String> acc) { return (long) acc.size(); } @Override public HashSet<String> merge(HashSet<String> strings, HashSet<String> acc1) { return null; } } public static class UvCountResult extends ProcessWindowFunction<Long, String, Boolean, TimeWindow> { @Override public void process(Boolean aBoolean, ProcessWindowFunction<Long, String, Boolean, TimeWindow>.Context ctx, Iterable<Long> iterable, Collector<String> collector) throws Exception { Long uv = iterable.iterator().next(); collector.collect(ctx.window().getStart() / 1000 + \"-\" + ctx.window().getEnd() / 1000 + \"uv->\" + uv); } } }","title":"ProcessWindowFunction"},{"location":"bigdata/flink/timeWin/#_33","text":"","title":"\u8fdf\u5230\u6570\u636e"},{"location":"bigdata/flink/timeWin/#_34","text":"\u6bd4\u5982\u5f53\u524d\u6c34\u4f4d\u7ebf\u771f\u5b9e\u662f 15s \u90a3\u4e48\u751f\u6548\u540e\u7684\u6c34\u4f4d\u7ebf\u662f10s \uff08\u5ef6\u8fdf5s\uff09 \u6c34\u4f4d\u7ebf = eventTime - watermarkDealy - 1","title":"\u8bbe\u7f6e\u6c34\u4f4d\u7ebf\u5ef6\u8fdf\u65f6\u95f4"},{"location":"bigdata/flink/timeWin/#_35","text":"package com.matt.apitest.window; import com.matt.apitest.beans.Event; import com.matt.apitest.model.UrlCntBO; import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner; import org.apache.flink.api.common.eventtime.WatermarkStrategy; import org.apache.flink.api.common.functions.MapFunction; import org.apache.flink.streaming.api.datastream.DataStream; import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator; import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment; import org.apache.flink.streaming.api.windowing.assigners.TumblingEventTimeWindows; import org.apache.flink.streaming.api.windowing.time.Time; import org.apache.flink.util.OutputTag; import java.time.Duration; // \u5ef6\u8fdf\u5904\u7406 public class LateDataTest { public static void main(String[] args) throws Exception { StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); // >=1.12 \u4e0d\u9700\u8981\u8bbe\u7f6e\u5f00\u542fwatermark // 100ms \u89e6\u53d1\u4e00\u6b21\u6c34\u4f4d\u7ebf\u751f\u6210 //env.getConfig().setAutoWatermarkInterval(100); env.setParallelism(1); DataStream<Event> dataStream = env.socketTextStream(\"localhost\", 777) .map( new MapFunction<String, Event>() { @Override public Event map(String line) throws Exception { String[] fArr = line.split(\" \"); return new Event(fArr[0], fArr[1], Long.valueOf(fArr[2])); } } ) // \u4e71\u5e8f \u5ef6\u8fdf .assignTimestampsAndWatermarks(WatermarkStrategy.<Event>forBoundedOutOfOrderness(Duration.ofSeconds(2L)) .withTimestampAssigner(new SerializableTimestampAssigner<Event>() { @Override public long extractTimestamp(Event event, long l) { return event.timestamp; } })); dataStream.print(\"in\"); // \u6d4b\u8f93\u51fa\u6d41\u6807\u7b7e {} \u9632\u6b62\u6cdb\u578b\u67e5\u51fa \u5185\u90e8\u5217 OutputTag<Event> late = new OutputTag<Event>(\"late\"){}; SingleOutputStreamOperator<UrlCntBO> res = dataStream.keyBy(d -> d.url) .window(TumblingEventTimeWindows.of(Time.seconds(10))) // 1\u5206\u949f\u5ef6\u8fdf \u6c34\u4f4d\u7ebf\u67e560s \u5185 \u4ecd\u7136\u4f1a\u8ba1\u7b97 .allowedLateness(Time.minutes(1L)) // \u6ca1\u6765\u7684\u6570\u636e\u653e\u5230 .sideOutputLateData(late) .aggregate(new UrlCntCase.UrlCntAgg(), new UrlCntCase.UrlCntResult()); res.print(\"res\"); DataStream<Event> sideOutput = res.getSideOutput(late); sideOutput.print(\"late\"); env.execute(); } } \u5982\u4f55\u8bbe\u7f6e\u8fdf\u5230\u65f6\u95f4\u8fc7\u4e86 \u8fd8\u662f\u4f1a\u6709\u90e8\u5206\u6570\u636e\u6ca1\u6765\uff0c \u53ef\u4ee5\u8bbe\u7f6e\u5c06\u8fdf\u5230\u7684\u6570\u636e\u5199\u5230\u4fa7\u8f93\u51fa\u6d41","title":"\u5141\u8bb8\u7a97\u53e3\u5904\u7406\u8fdf\u5230\u7684\u6570\u636e"},{"location":"bigdata/hadoop/hdfs/","text":"overview what hdfs:\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf ad disad ad \u9ad8\u5bb9\u9519\u6027\uff1a\u526f\u672c \u9002\u5408\u5904\u7406\u5927\u6570\u636e:\u53ef\u5904\u7406\u6570\u636e\u89c4\u6a21\u5927 disad \u4e0d\u9002\u5408\u4f4e\u5ef6\u65f6\u6570\u636e\u8bbf\u95ee \u65e0\u6cd5\u9ad8\u6548\u7684\u5bf9\u5927\u91cf\u5c0f\u6587\u4ef6\u8fdb\u884c\u5b58\u50a8\uff1a\u5b58\u50a8\u5927\u91cf\u5c0f\u6587\u4ef6\u7684\u8bdd\uff0c\u5b83\u4f1a\u5360\u7528NameNode\u5927\u91cf\u7684\u5185\u5b58\u6765\u5b58\u50a8\u6587\u4ef6\u76ee\u5f55\u548c \u5757\u4fe1\u606f \u4e0d\u652f\u6301\u5e76\u53d1\u5199\u5165\u3001\u6587\u4ef6\u968f\u673a\u4fee\u6539\uff1a\u4e00\u4e2a\u6587\u4ef6\u53ea\u80fd\u6709\u4e00\u4e2a\u5199\uff0c\u4e0d\u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5199\uff0c\u4ec5\u652f\u6301\u6570\u636e\u7684\u8ffd\u52a0 \u4e0d\u652f\u6301\u4fee\u6539 framework 1.NameNode\uff08nn\uff09\uff1a\u5c31\u662fMaster\uff0c\u5b83\u662f\u4e00\u4e2a\u4e3b\u7ba1\u3001\u7ba1\u7406\u8005\u3002 \uff081\uff09\u7ba1\u7406HDFS\u7684\u540d\u79f0\u7a7a\u95f4\uff1b \uff082\uff09\u914d\u7f6e\u526f\u672c\u7b56\u7565\uff1b(\u6709\u51e0\u4e2a\u526f\u672c) \uff083\uff09\u7ba1\u7406\u6570\u636e\u5757\uff08Block\uff09\u6620\u5c04\u4fe1\u606f\uff1b \uff084\uff09\u5904\u7406\u5ba2\u6237\u7aef\u8bfb\u5199\u8bf7\u6c42\u3002 2.DataNode\uff1a\u5c31\u662fSlave\u3002NameNode\u4e0b\u8fbe\u547d\u4ee4\uff0cDataNode\u6267\u884c\u5b9e\u9645\u7684\u64cd\u4f5c\u3002 \uff081\uff09\u5b58\u50a8\u5b9e\u9645\u7684\u6570\u636e\u5757\uff1b \uff082\uff09\u6267\u884c\u6570\u636e\u5757\u7684\u8bfb/\u5199\u64cd\u4f5c\u3002 3.Client\uff1a\u5c31\u662f\u5ba2\u6237\u7aef\u3002 \uff081\uff09\u6587\u4ef6\u5207\u5206\u3002\u6587\u4ef6\u4e0a\u4f20HDFS\u7684\u65f6\u5019\uff0cClient\u5c06\u6587\u4ef6\u5207\u5206\u6210\u4e00\u4e2a\u4e00\u4e2a\u7684Block\uff0c\u7136\u540e\u8fdb\u884c\u4e0a\u4f20\uff1b // 200mb \u7684\u6587\u4ef6\u5206\u4e3a 128 72 2\u5757 \u9ed8\u8ba4\u6587\u4ef6\u5757\u5927\u5c0f128mb \u53ef\u4ee5\u4fee\u6539 \uff082\uff09\u4e0eNameNode\u4ea4\u4e92\uff0c\u83b7\u53d6\u6587\u4ef6\u7684\u4f4d\u7f6e\u4fe1\u606f\uff1b \uff083\uff09\u4e0eDataNode\u4ea4\u4e92\uff0c\u8bfb\u53d6\u6216\u8005\u5199\u5165\u6570\u636e\uff1b \uff084\uff09Client\u63d0\u4f9b\u4e00\u4e9b\u547d\u4ee4\u6765\u7ba1\u7406HDFS\uff0c\u6bd4\u5982NameNode\u683c\u5f0f\u5316\uff1b \uff085\uff09Client\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u547d\u4ee4\u6765\u8bbf\u95eeHDFS\uff0c\u6bd4\u5982\u5bf9HDFS\u589e\u5220\u67e5\u6539\u64cd\u4f5c\uff1b 4.Secondary NameNode\uff1a\u5e76\u975eNameNode\u7684\u70ed\u5907\u3002\u5f53NameNode\u6302\u6389\u7684\u65f6\u5019\uff0c\u5b83\u5e76\u4e0d\u80fd\u9a6c\u4e0a\u66ff\u6362NameNode\u5e76\u63d0\u4f9b\u670d\u52a1\u3002 \uff081\uff09\u8f85\u52a9NameNode\uff0c\u5206\u62c5\u5176\u5de5\u4f5c\u91cf\uff0c\u6bd4\u5982\u5b9a\u671f\u5408\u5e76Fsimage\uff08\u955c\u50cf\uff09\u548cEdits\uff08\u7f16\u8f91\u65e5\u5fd7\uff09\uff0c\u5e76\u63a8\u9001\u7ed9NameNode\uff1b \uff082\uff09\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\uff0c\u53ef\u8f85\u52a9\u6062\u590dNameNode\u3002 \u6587\u4ef6\u5757\u5927\u5c0f\u662f\u4e0a\u9650 \u5982\u679c\u5c0f\u4e8e128mb\u7684\u6587\u4ef6 \u90a3\u4e48\u6587\u4ef6\u662f100mb \u90a3\u4e48\u5360100mb \u601d\u8003\uff1a\u4e3a\u4ec0\u4e48\u5757\u7684\u5927\u5c0f\u4e0d\u80fd\u8bbe\u7f6e\u592a\u5c0f\uff0c\u4e5f\u4e0d\u80fd\u8bbe\u7f6e\u592a\u5927\uff1f \uff081\uff09HDFS\u7684\u5757\u8bbe\u7f6e\u592a\u5c0f\uff0c\u4f1a\u589e\u52a0\u5bfb\u5740\u65f6\u95f4\uff0c\u7a0b\u5e8f\u4e00\u76f4\u5728\u627e\u5757\u7684\u5f00\u59cb\u4f4d\u7f6e\uff1b \uff082\uff09\u5982\u679c\u5757\u8bbe\u7f6e\u7684\u592a\u5927\uff0c\u4ece\u78c1\u76d8\u4f20\u8f93\u6570\u636e\u7684\u65f6\u95f4\u4f1a\u660e\u663e\u5927\u4e8e\u5b9a\u4f4d\u8fd9\u4e2a\u5757\u5f00 \u59cb\u4f4d\u7f6e\u6240\u9700\u7684\u65f6\u95f4\u3002\u5bfc\u81f4\u7a0b\u5e8f\u5728\u5904\u7406\u8fd9\u5757\u6570\u636e\u65f6\uff0c\u4f1a\u975e\u5e38\u6162\u3002 \u603b\u7ed3\uff1aHDFS\u5757\u7684\u5927\u5c0f\u8bbe\u7f6e\u4e3b\u8981\u53d6\u51b3\u4e8e\u78c1\u76d8\u4f20\u8f93\u901f\u7387\u3002 shell help hadoop fs -help rm \u521b\u5efa\u6587\u4ef6\u5939 hadoop fs -mkdir /sanguo \u526a\u5207 hadoop fs -mv /sanguo/wuguo.txt / \u62f7\u8d1d hadoop fs -cp /sanguo/shuguo.txt /sanguo/jingguo \u4e0a\u4f20 put hadoop fs -put wuguo.txt /sanguo \u4e0b\u8f7d get hadoop fs -get /xiyou/test1 ./ rm hadoop fs -rm /sanguo/shuguo.txt # \u9012\u5f52\u5220\u9664 hadoop fs -rm -r /sanguo/shuguo.txt ls [matt@matt05 stuhadoop]$ hadoop fs -ls / Found 4 items drwxr-xr-x - matt supergroup 0 2021-08-05 23:22 /input drwxr-xr-x - matt supergroup 0 2021-08-05 00:22 /output drwxr-xr-x - matt supergroup 0 2021-08-05 23:50 /sanguo drwx------ - matt supergroup 0 2021-08-05 00:21 /tmp cat [matt@matt05 stuhadoop]$ hadoop fs -cat /sanguo/weiguo.txt 2021-08-06 00:02:01,065 INFO sasl.SaslDataTransferClient: SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false caocao tail -tail\uff1a\u663e\u793a\u4e00\u4e2a\u6587\u4ef6\u7684\u672b\u5c3e 1kb \u7684\u6570\u636e hadoop fs -tail /sanguo/wuguo.txt / \u8bbe\u7f6e\u6743\u9650chmod [matt@matt05 stuhadoop]$ hadoop fs -chmod 777 /sanguo [matt@matt05 stuhadoop]$ hadoop fs -ls / Found 4 items drwxr-xr-x - matt supergroup 0 2021-08-05 23:22 /input drwxr-xr-x - matt supergroup 0 2021-08-05 00:22 /output drwxrwxrwx - matt supergroup 0 2021-08-05 23:50 /sanguo drwx------ - matt supergroup 0 2021-08-05 00:21 /tmp chown hadoop fs -chown matt:matt /sanguo/shuguo.txt chgrp hadoop fs -chgrp matt /sanguo/weiguo.txt \u67e5\u770b\u6587\u4ef6\u5927\u5c0f hadoop fs -du -h -s / \u4e09\u4e2a\u526f\u672c \u66f4\u52a0\u8be6\u7ec6\u5185\u5bb9 hadoop fs -du -h / \u8bbe\u7f6e\u526f\u672c hadoop fs -setrep 10 /sanguo api install \u89e3\u538b \u5982\u679cwin10\u8981\u4f7f\u7528\u8fd8\u9700\u8981\u5b89\u88c5\u4f9d\u8d56\u5e93 \u914d\u7f6e HADOOP_HOME D:\\develop\\env\\hadoop-3.1.0 path: %HADOOP_HOME%\\bin \u590d\u5236\u4e0d\u8981\u5e26\u7a7a\u683c\uff0c\u4e0d\u7136\u5b83\u5c31\u4f1a\u6362\u884c api \u53ef\u4ee5\u53c2\u8003 https://github.com/imattdu/stu-hdfs hdfs\u8bfb\u5199\u6d41\u7a0b \u5199\u6570\u636e\u6d41\u7a0b \u5177\u4f53\u6d41\u7a0b 1.\u5ba2\u6237\u7aef\u901a\u8fc7 Distributed FileSystem \u6a21\u5757\u5411 NameNode \u8bf7\u6c42\u4e0a\u4f20\u6587\u4ef6\uff0cNameNode \u68c0\u67e5\u76ee\u6807\u6587\u4ef6\u662f\u5426\u5df2\u5b58\u5728\uff0c\u7236\u76ee\u5f55\u662f\u5426\u5b58\u5728\u3002 2.NameNode \u8fd4\u56de\u662f\u5426\u53ef\u4ee5\u4e0a\u4f20\u3002 3.\u5ba2\u6237\u7aef\u8bf7\u6c42\u7b2c\u4e00\u4e2a Block \u4e0a\u4f20\u5230\u54ea\u51e0\u4e2a DataNode \u670d\u52a1\u5668\u4e0a\u3002 4.NameNode \u8fd4\u56de 3 \u4e2a DataNode \u8282\u70b9\uff0c\u5206\u522b\u4e3a dn1\u3001dn2\u3001dn3\u3002 5.\u5ba2\u6237\u7aef\u901a\u8fc7 FSDataOutputStream \u6a21\u5757\u8bf7\u6c42 dn1 \u4e0a\u4f20\u6570\u636e\uff0cdn1 \u6536\u5230\u8bf7\u6c42\u4f1a\u7ee7\u7eed\u8c03\u7528 dn2\uff0c\u7136\u540e dn2 \u8c03\u7528 dn3\uff0c\u5c06\u8fd9\u4e2a\u901a\u4fe1\u7ba1\u9053\u5efa\u7acb\u5b8c\u6210\u3002 6.dn1\u3001dn2\u3001dn3 \u9010\u7ea7\u5e94\u7b54\u5ba2\u6237\u7aef\u3002 7.\u5ba2\u6237\u7aef\u5f00\u59cb\u5f80 dn1 \u4e0a\u4f20\u7b2c\u4e00\u4e2a Block\uff08\u5148\u4ece\u78c1\u76d8\u8bfb\u53d6\u6570\u636e\u653e\u5230\u4e00\u4e2a\u672c\u5730\u5185\u5b58\u7f13\u5b58\uff09\uff0c \u4ee5 Packet \u4e3a\u5355\u4f4d\uff0cdn1 \u6536\u5230\u4e00\u4e2a Packet \u5c31\u4f1a\u4f20\u7ed9 dn2\uff0cdn2 \u4f20\u7ed9 dn3\uff1bdn1 \u6bcf\u4f20\u4e00\u4e2a packet \u4f1a\u653e\u5165\u4e00\u4e2a\u5e94\u7b54\u961f\u5217\u7b49\u5f85\u5e94\u7b54\u3002 8.\u5f53\u4e00\u4e2a Block \u4f20\u8f93\u5b8c\u6210\u4e4b\u540e\uff0c\u5ba2\u6237\u7aef\u518d\u6b21\u8bf7\u6c42 NameNode \u4e0a\u4f20\u7b2c\u4e8c\u4e2a Block \u7684\u670d\u52a1 \u5668\u3002\uff08\u91cd\u590d\u6267\u884c 3-7 \u6b65\uff09\u3002 \u7f51\u7edc\u62d3\u6251-\u8282\u70b9\u8ddd\u79bb\u8ba1\u7b97 \u5728 HDFS \u5199\u6570\u636e\u7684\u8fc7\u7a0b\u4e2d\uff0cNameNode \u4f1a\u9009\u62e9\u8ddd\u79bb\u5f85\u4e0a\u4f20\u6570\u636e\u6700\u8fd1\u8ddd\u79bb\u7684 DataNode \u63a5 \u6536\u6570\u636e\u3002\u90a3\u4e48\u8fd9\u4e2a\u6700\u8fd1\u8ddd\u79bb\u600e\u4e48\u8ba1\u7b97\u5462\uff1f \u4fe9\u4e2a\u8282\u70b9\u5230\u6700\u8fd1\u516c\u5171\u7956\u5148\u8282\u70b9\u7684\u8ddd\u79bb\u548c \u526f\u672c\u8282\u70b9\u7684\u9009\u62e9 \u8bfb\u6570\u636e \u5177\u4f53\u6d41\u7a0b 1.\u5ba2\u6237\u7aef\u901a\u8fc7 DistributedFileSystem \u5411 NameNode \u8bf7\u6c42\u4e0b\u8f7d\u6587\u4ef6\uff0cNameNode \u901a\u8fc7\u67e5\u8be2\u5143\u6570\u636e\uff0c\u627e\u5230\u6587\u4ef6\u5757\u6240\u5728\u7684 DataNode \u5730\u5740\u3002 2.\u6311\u9009\u4e00\u53f0 DataNode\uff08\u5c31\u8fd1\u539f\u5219\uff0c\u7136\u540e\u968f\u673a\uff09\u670d\u52a1\u5668\uff0c\u8bf7\u6c42\u8bfb\u53d6\u6570\u636e\u3002 3.DataNode \u5f00\u59cb\u4f20\u8f93\u6570\u636e\u7ed9\u5ba2\u6237\u7aef\uff08\u4ece\u78c1\u76d8\u91cc\u9762\u8bfb\u53d6\u6570\u636e\u8f93\u5165\u6d41\uff0c\u4ee5 Packet \u4e3a\u5355\u4f4d \u6765\u505a\u6821\u9a8c\uff09\u3002 4.\u5ba2\u6237\u7aef\u4ee5 Packet \u4e3a\u5355\u4f4d\u63a5\u6536\uff0c\u5148\u5728\u672c\u5730\u7f13\u5b58\uff0c\u7136\u540e\u5199\u5165\u76ee\u6807\u6587\u4ef6\u3002 NameNode \u548c SecondaryNameNode NN \u548c 2NN \u5de5\u4f5c\u673a\u5236 1.\u7b2c\u4e00\u9636\u6bb5\uff1aNameNode \u542f\u52a8 \uff081\uff09\u7b2c\u4e00\u6b21\u542f\u52a8 NameNode \u683c\u5f0f\u5316\u540e\uff0c\u521b\u5efa Fsimage \u548c Edits \u6587\u4ef6\u3002\u5982\u679c\u4e0d\u662f\u7b2c\u4e00\u6b21\u542f\u52a8\uff0c\u76f4\u63a5\u52a0\u8f7d\u7f16\u8f91\u65e5\u5fd7\u548c\u955c\u50cf\u6587\u4ef6\u5230\u5185\u5b58\u3002 Fsimage \uff1a\u955c\u50cf\u6587\u4ef6 Edits \uff1a\u65e5\u5fd7 \uff082\uff09\u5ba2\u6237\u7aef\u5bf9\u5143\u6570\u636e\u8fdb\u884c\u589e\u5220\u6539\u7684\u8bf7\u6c42\u3002 \uff083\uff09NameNode \u8bb0\u5f55\u64cd\u4f5c\u65e5\u5fd7\uff0c\u66f4\u65b0\u6eda\u52a8\u65e5\u5fd7\u3002 \uff084\uff09NameNode \u5728\u5185\u5b58\u4e2d\u5bf9\u5143\u6570\u636e\u8fdb\u884c\u589e\u5220\u6539\u3002 2.\u7b2c\u4e8c\u9636\u6bb5\uff1aSecondary NameNode \u5de5\u4f5c \uff081\uff09Secondary NameNode \u8be2\u95ee NameNode \u662f\u5426\u9700\u8981 CheckPoint\u3002\u76f4\u63a5\u5e26\u56de NameNode \u662f\u5426\u68c0\u67e5\u7ed3\u679c\u3002 \uff082\uff09Secondary NameNode \u8bf7\u6c42\u6267\u884c CheckPoint\u3002 \uff083\uff09NameNode \u6eda\u52a8\u6b63\u5728\u5199\u7684 Edits \u65e5\u5fd7\u3002 \uff084\uff09\u5c06\u6eda\u52a8\u524d\u7684\u7f16\u8f91\u65e5\u5fd7\u548c\u955c\u50cf\u6587\u4ef6\u62f7\u8d1d\u5230 Secondary NameNode\u3002 \uff085\uff09Secondary NameNode \u52a0\u8f7d\u7f16\u8f91\u65e5\u5fd7\u548c\u955c\u50cf\u6587\u4ef6\u5230\u5185\u5b58\uff0c\u5e76\u5408\u5e76\u3002 \uff086\uff09\u751f\u6210\u65b0\u7684\u955c\u50cf\u6587\u4ef6 fsimage.chkpoint\u3002 \uff087\uff09\u62f7\u8d1d fsimage.chkpoint \u5230 NameNode\u3002 \uff088\uff09NameNode \u5c06 fsimage.chkpoint \u91cd\u65b0\u547d\u540d\u6210 fsimage\u3002 Fsimage \u548c Edits \u89e3\u6790 /opt/module/hadoop-3.1.3/data/dfs/name/current \uff081\uff09Fsimage\u6587\u4ef6\uff1aHDFS\u6587\u4ef6\u7cfb\u7edf\u5143\u6570\u636e\u7684\u4e00\u4e2a\u6c38\u4e45\u6027\u7684\u68c0\u67e5\u70b9\uff0c\u5176\u4e2d\u5305\u542bHDFS\u6587\u4ef6\u7cfb\u7edf\u7684\u6240\u6709\u76ee\u5f55\u548c\u6587\u4ef6inode\u7684\u5e8f\u5217\u5316\u4fe1\u606f\u3002 fsimage_0000000000000000000 fsimage_0000000000000000000.md5 seen_txid VERSION \uff082\uff09Edits\u6587\u4ef6\uff1a\u5b58\u653eHDFS\u6587\u4ef6\u7cfb\u7edf\u7684\u6240\u6709\u66f4\u65b0\u64cd\u4f5c\u7684\u8def\u5f84\uff0c\u6587\u4ef6\u7cfb\u7edf\u5ba2\u6237\u7aef\u6267\u884c\u7684\u6240\u6709\u5199\u64cd\u4f5c\u9996\u5148 \u4f1a\u88ab\u8bb0\u5f55\u5230Edits\u6587\u4ef6\u4e2d\u3002 \uff083\uff09seen_txid\u6587\u4ef6\u4fdd\u5b58\u7684\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u5c31\u662f\u6700\u540e\u4e00\u4e2aedits_\u7684\u6570\u5b57 \uff084\uff09\u6bcf \u6b21NameNode\u542f\u52a8\u7684\u65f6\u5019\u90fd\u4f1a\u5c06Fsimage\u6587\u4ef6\u8bfb\u5165\u5185\u5b58\uff0c\u52a0 \u8f7dEdits\u91cc\u9762\u7684\u66f4\u65b0\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u5185\u5b58 \u4e2d\u7684\u5143\u6570\u636e\u4fe1\u606f\u662f\u6700\u65b0\u7684\u3001\u540c\u6b65\u7684\uff0c\u53ef\u4ee5\u770b\u6210NameNode\u542f\u52a8\u7684\u65f6\u5019\u5c31\u5c06Fsimage\u548cEdits\u6587\u4ef6\u8fdb\u884c\u4e86\u5408\u5e76\u3002 5.2.1 oiv \u67e5\u770b Fsimage \u6587\u4ef6 hdfs oiv -p \u6587\u4ef6\u7c7b\u578b -i \u955c\u50cf\u6587\u4ef6 -o \u8f6c\u6362\u540e\u6587\u4ef6\u8f93\u51fa\u8def\u5f84 cd /opt/module/hadoop-3.1.3/data/dfs/name/current hdfs oiv -p XML -i fsimage_0000000000000009738 -o /opt/module/hadoop-3.1.3/fsimage.xml 5.2.2 oev \u67e5\u770b Edits \u6587\u4ef6 hdfs oev -p \u6587\u4ef6\u7c7b\u578b -i \u955c\u50cf\u6587\u4ef6 -o \u8f6c\u6362\u540e\u6587\u4ef6\u8f93\u51fa\u8def\u5f84 hdfs oev -p XML -i edits_inprogress_0000000000000008686 -o /opt/module/hadoop-3.1.3/edits.xml \u4e0b\u8f7d\u6587\u4ef6\u5230\u672c\u5730 sz fsimage.xml 5.3CheckPoint \u65f6\u95f4\u8bbe\u7f6e 1\uff09\u901a\u5e38\u60c5\u51b5\u4e0b\uff0cSecondaryNameNode \u6bcf\u9694\u4e00\u5c0f\u65f6\u6267\u884c\u4e00\u6b21\u3002 <property> <name>dfs.namenode.checkpoint.period</name> <value>3600s</value> </property> 2\uff09\u4e00\u5206\u949f\u68c0\u67e5\u4e00\u6b21\u64cd\u4f5c\u6b21\u6570\uff0c\u5f53\u64cd\u4f5c\u6b21\u6570\u8fbe\u5230 1 \u767e\u4e07\u65f6\uff0cSecondaryNameNode \u6267\u884c\u4e00\u6b21\u3002 <property> <name>dfs.namenode.checkpoint.txns</name> <value>1000000</value> <description>\u64cd\u4f5c\u52a8\u4f5c\u6b21\u6570</description> </property> <property> <name>dfs.namenode.checkpoint.check.period</name> <value>60s</value> <description> 1 \u5206\u949f\u68c0\u67e5\u4e00\u6b21\u64cd\u4f5c\u6b21\u6570</description> </property> datanode datanode \u5de5\u4f5c\u673a\u5236 1.\u4e00\u4e2a\u6570\u636e\u5757\u5728 DataNode \u4e0a\u4ee5\u6587\u4ef6\u5f62\u5f0f\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\uff0c\u5305\u62ec\u4e24\u4e2a\u6587\u4ef6\uff0c\u4e00\u4e2a\u662f\u6570\u636e \u672c\u8eab\uff0c\u4e00\u4e2a\u662f\u5143\u6570\u636e\u5305\u62ec\u6570\u636e\u5757\u7684\u957f\u5ea6\uff0c\u5757\u6570\u636e\u7684\u6821\u9a8c\u548c\uff0c\u4ee5\u53ca\u65f6\u95f4\u6233\u3002 2.DataNode \u542f\u52a8\u540e\u5411 NameNode \u6ce8\u518c\uff0c\u901a\u8fc7\u540e\uff0c\u5468\u671f\u6027\uff086 \u5c0f\u65f6\uff09\u7684\u5411 NameNode \u4e0a \u62a5\u6240\u6709\u7684\u5757\u4fe1\u606f\u3002 <property> <name>dfs.blockreport.intervalMsec</name> <value>21600000</value> <description>Determines block reporting interval in milliseconds.</description> </property> DN \u626b\u63cf\u81ea\u5df1\u8282\u70b9\u5757\u4fe1\u606f\u5217\u8868\u7684\u65f6\u95f4\uff0c\u9ed8\u8ba4 6 \u5c0f\u65f6 <property> <name>dfs.datanode.directoryscan.interval</name> <value>21600s</value> <description>Interval in seconds for Datanode to scan datadirectories and reconcile the difference between blocks in memory and on the disk. Support multiple time unit suffix(case insensitive), as described in dfs.heartbeat.interval. </description> </property> 3.\u5fc3\u8df3\u662f\u6bcf 3 \u79d2\u4e00\u6b21\uff0c\u5fc3\u8df3\u8fd4\u56de\u7ed3\u679c\u5e26\u6709 NameNode \u7ed9\u8be5 DataNode \u7684\u547d\u4ee4\u5982\u590d\u5236\u5757 \u6570\u636e\u5230\u53e6\u4e00\u53f0\u673a\u5668\uff0c\u6216\u5220\u9664\u67d0\u4e2a\u6570\u636e\u5757\u3002\u5982\u679c\u8d85\u8fc7 10 \u5206\u949f\u6ca1\u6709\u6536\u5230\u67d0\u4e2a DataNode \u7684\u5fc3\u8df3\uff0c \u5219\u8ba4\u4e3a\u8be5\u8282\u70b9\u4e0d\u53ef\u7528\u3002 4.\u96c6\u7fa4\u8fd0\u884c\u4e2d\u53ef\u4ee5\u5b89\u5168\u52a0\u5165\u548c\u9000\u51fa\u4e00\u4e9b\u673a\u5668\u3002 \u6570\u636e\u6821\u9a8c \u4fdd\u8bc1\u6570\u636e\u5b8c\u6574\u6027 \u5982\u4e0b\u662f DataNode \u8282\u70b9\u4fdd\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u7684\u65b9\u6cd5\u3002 1.\u5f53 DataNode \u8bfb\u53d6 Block \u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u8ba1\u7b97 CheckSum\u3002 2.\u5982\u679c\u8ba1\u7b97\u540e\u7684 CheckSum\uff0c\u4e0e Block \u521b\u5efa\u65f6\u503c\u4e0d\u4e00\u6837\uff0c\u8bf4\u660e Block \u5df2\u7ecf\u635f\u574f\u3002 3.Client \u8bfb\u53d6\u5176\u4ed6 DataNode \u4e0a\u7684 Block\u3002 4.\u5e38\u89c1\u7684\u6821\u9a8c\u7b97\u6cd5 crc\uff0832\uff09\uff0cmd5\uff08128\uff09\uff0csha1\uff08160\uff09 5.DataNode \u5728\u5176\u6587\u4ef6\u521b\u5efa\u540e\u5468\u671f\u9a8c\u8bc1 CheckSum\u3002 \u5947\u5076\u6821\u9a8c 1\u7684\u4e2a\u6570 \u5076\u6570\u662f0 \u5426\u5219\u662f1 \u6389\u7ebf\u65f6\u9650\u53c2\u6570\u8bbe\u7f6e 4\u3001\u5982\u679c\u5b9a\u4e49\u8d85\u65f6\u65f6\u95f4\u4e3aTimeOut\uff0c\u5219\u8d85\u65f6\u65f6\u957f\u7684\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1a TimeOut = 2 * dfs.namenode.heartbeat.recheck-interval + 10 * dfs.heartbeat.interval\u3002 \u800c\u9ed8\u8ba4\u7684dfs.namenode.heartbeat.recheck-interval \u5927\u5c0f\u4e3a5\u5206\u949f\uff0cdfs.heartbeat.interval\u9ed8\u8ba4\u4e3a3\u79d2\u3002 <property> <name>dfs.namenode.heartbeat.recheck-interval</name> <value>300000</value> </property> <property> <name>dfs.heartbeat.interval</name> <value>3</value> </property>","title":"hdfs"},{"location":"bigdata/hadoop/hdfs/#overview","text":"","title":"overview"},{"location":"bigdata/hadoop/hdfs/#what","text":"hdfs:\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf","title":"what"},{"location":"bigdata/hadoop/hdfs/#ad-disad","text":"","title":"ad disad"},{"location":"bigdata/hadoop/hdfs/#ad","text":"\u9ad8\u5bb9\u9519\u6027\uff1a\u526f\u672c \u9002\u5408\u5904\u7406\u5927\u6570\u636e:\u53ef\u5904\u7406\u6570\u636e\u89c4\u6a21\u5927","title":"ad"},{"location":"bigdata/hadoop/hdfs/#disad","text":"\u4e0d\u9002\u5408\u4f4e\u5ef6\u65f6\u6570\u636e\u8bbf\u95ee \u65e0\u6cd5\u9ad8\u6548\u7684\u5bf9\u5927\u91cf\u5c0f\u6587\u4ef6\u8fdb\u884c\u5b58\u50a8\uff1a\u5b58\u50a8\u5927\u91cf\u5c0f\u6587\u4ef6\u7684\u8bdd\uff0c\u5b83\u4f1a\u5360\u7528NameNode\u5927\u91cf\u7684\u5185\u5b58\u6765\u5b58\u50a8\u6587\u4ef6\u76ee\u5f55\u548c \u5757\u4fe1\u606f \u4e0d\u652f\u6301\u5e76\u53d1\u5199\u5165\u3001\u6587\u4ef6\u968f\u673a\u4fee\u6539\uff1a\u4e00\u4e2a\u6587\u4ef6\u53ea\u80fd\u6709\u4e00\u4e2a\u5199\uff0c\u4e0d\u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5199\uff0c\u4ec5\u652f\u6301\u6570\u636e\u7684\u8ffd\u52a0 \u4e0d\u652f\u6301\u4fee\u6539","title":"disad"},{"location":"bigdata/hadoop/hdfs/#framework","text":"1.NameNode\uff08nn\uff09\uff1a\u5c31\u662fMaster\uff0c\u5b83\u662f\u4e00\u4e2a\u4e3b\u7ba1\u3001\u7ba1\u7406\u8005\u3002 \uff081\uff09\u7ba1\u7406HDFS\u7684\u540d\u79f0\u7a7a\u95f4\uff1b \uff082\uff09\u914d\u7f6e\u526f\u672c\u7b56\u7565\uff1b(\u6709\u51e0\u4e2a\u526f\u672c) \uff083\uff09\u7ba1\u7406\u6570\u636e\u5757\uff08Block\uff09\u6620\u5c04\u4fe1\u606f\uff1b \uff084\uff09\u5904\u7406\u5ba2\u6237\u7aef\u8bfb\u5199\u8bf7\u6c42\u3002 2.DataNode\uff1a\u5c31\u662fSlave\u3002NameNode\u4e0b\u8fbe\u547d\u4ee4\uff0cDataNode\u6267\u884c\u5b9e\u9645\u7684\u64cd\u4f5c\u3002 \uff081\uff09\u5b58\u50a8\u5b9e\u9645\u7684\u6570\u636e\u5757\uff1b \uff082\uff09\u6267\u884c\u6570\u636e\u5757\u7684\u8bfb/\u5199\u64cd\u4f5c\u3002 3.Client\uff1a\u5c31\u662f\u5ba2\u6237\u7aef\u3002 \uff081\uff09\u6587\u4ef6\u5207\u5206\u3002\u6587\u4ef6\u4e0a\u4f20HDFS\u7684\u65f6\u5019\uff0cClient\u5c06\u6587\u4ef6\u5207\u5206\u6210\u4e00\u4e2a\u4e00\u4e2a\u7684Block\uff0c\u7136\u540e\u8fdb\u884c\u4e0a\u4f20\uff1b // 200mb \u7684\u6587\u4ef6\u5206\u4e3a 128 72 2\u5757 \u9ed8\u8ba4\u6587\u4ef6\u5757\u5927\u5c0f128mb \u53ef\u4ee5\u4fee\u6539 \uff082\uff09\u4e0eNameNode\u4ea4\u4e92\uff0c\u83b7\u53d6\u6587\u4ef6\u7684\u4f4d\u7f6e\u4fe1\u606f\uff1b \uff083\uff09\u4e0eDataNode\u4ea4\u4e92\uff0c\u8bfb\u53d6\u6216\u8005\u5199\u5165\u6570\u636e\uff1b \uff084\uff09Client\u63d0\u4f9b\u4e00\u4e9b\u547d\u4ee4\u6765\u7ba1\u7406HDFS\uff0c\u6bd4\u5982NameNode\u683c\u5f0f\u5316\uff1b \uff085\uff09Client\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u547d\u4ee4\u6765\u8bbf\u95eeHDFS\uff0c\u6bd4\u5982\u5bf9HDFS\u589e\u5220\u67e5\u6539\u64cd\u4f5c\uff1b 4.Secondary NameNode\uff1a\u5e76\u975eNameNode\u7684\u70ed\u5907\u3002\u5f53NameNode\u6302\u6389\u7684\u65f6\u5019\uff0c\u5b83\u5e76\u4e0d\u80fd\u9a6c\u4e0a\u66ff\u6362NameNode\u5e76\u63d0\u4f9b\u670d\u52a1\u3002 \uff081\uff09\u8f85\u52a9NameNode\uff0c\u5206\u62c5\u5176\u5de5\u4f5c\u91cf\uff0c\u6bd4\u5982\u5b9a\u671f\u5408\u5e76Fsimage\uff08\u955c\u50cf\uff09\u548cEdits\uff08\u7f16\u8f91\u65e5\u5fd7\uff09\uff0c\u5e76\u63a8\u9001\u7ed9NameNode\uff1b \uff082\uff09\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\uff0c\u53ef\u8f85\u52a9\u6062\u590dNameNode\u3002 \u6587\u4ef6\u5757\u5927\u5c0f\u662f\u4e0a\u9650 \u5982\u679c\u5c0f\u4e8e128mb\u7684\u6587\u4ef6 \u90a3\u4e48\u6587\u4ef6\u662f100mb \u90a3\u4e48\u5360100mb \u601d\u8003\uff1a\u4e3a\u4ec0\u4e48\u5757\u7684\u5927\u5c0f\u4e0d\u80fd\u8bbe\u7f6e\u592a\u5c0f\uff0c\u4e5f\u4e0d\u80fd\u8bbe\u7f6e\u592a\u5927\uff1f \uff081\uff09HDFS\u7684\u5757\u8bbe\u7f6e\u592a\u5c0f\uff0c\u4f1a\u589e\u52a0\u5bfb\u5740\u65f6\u95f4\uff0c\u7a0b\u5e8f\u4e00\u76f4\u5728\u627e\u5757\u7684\u5f00\u59cb\u4f4d\u7f6e\uff1b \uff082\uff09\u5982\u679c\u5757\u8bbe\u7f6e\u7684\u592a\u5927\uff0c\u4ece\u78c1\u76d8\u4f20\u8f93\u6570\u636e\u7684\u65f6\u95f4\u4f1a\u660e\u663e\u5927\u4e8e\u5b9a\u4f4d\u8fd9\u4e2a\u5757\u5f00 \u59cb\u4f4d\u7f6e\u6240\u9700\u7684\u65f6\u95f4\u3002\u5bfc\u81f4\u7a0b\u5e8f\u5728\u5904\u7406\u8fd9\u5757\u6570\u636e\u65f6\uff0c\u4f1a\u975e\u5e38\u6162\u3002 \u603b\u7ed3\uff1aHDFS\u5757\u7684\u5927\u5c0f\u8bbe\u7f6e\u4e3b\u8981\u53d6\u51b3\u4e8e\u78c1\u76d8\u4f20\u8f93\u901f\u7387\u3002","title":"framework"},{"location":"bigdata/hadoop/hdfs/#shell","text":"","title":"shell"},{"location":"bigdata/hadoop/hdfs/#help","text":"hadoop fs -help rm","title":"help"},{"location":"bigdata/hadoop/hdfs/#_1","text":"hadoop fs -mkdir /sanguo","title":"\u521b\u5efa\u6587\u4ef6\u5939"},{"location":"bigdata/hadoop/hdfs/#_2","text":"hadoop fs -mv /sanguo/wuguo.txt /","title":"\u526a\u5207"},{"location":"bigdata/hadoop/hdfs/#_3","text":"hadoop fs -cp /sanguo/shuguo.txt /sanguo/jingguo","title":"\u62f7\u8d1d"},{"location":"bigdata/hadoop/hdfs/#put","text":"hadoop fs -put wuguo.txt /sanguo","title":"\u4e0a\u4f20 put"},{"location":"bigdata/hadoop/hdfs/#get","text":"hadoop fs -get /xiyou/test1 ./","title":"\u4e0b\u8f7d get"},{"location":"bigdata/hadoop/hdfs/#rm","text":"hadoop fs -rm /sanguo/shuguo.txt # \u9012\u5f52\u5220\u9664 hadoop fs -rm -r /sanguo/shuguo.txt","title":"rm"},{"location":"bigdata/hadoop/hdfs/#ls","text":"[matt@matt05 stuhadoop]$ hadoop fs -ls / Found 4 items drwxr-xr-x - matt supergroup 0 2021-08-05 23:22 /input drwxr-xr-x - matt supergroup 0 2021-08-05 00:22 /output drwxr-xr-x - matt supergroup 0 2021-08-05 23:50 /sanguo drwx------ - matt supergroup 0 2021-08-05 00:21 /tmp","title":"ls"},{"location":"bigdata/hadoop/hdfs/#cat","text":"[matt@matt05 stuhadoop]$ hadoop fs -cat /sanguo/weiguo.txt 2021-08-06 00:02:01,065 INFO sasl.SaslDataTransferClient: SASL encryption trust check: localHostTrusted = false, remoteHostTrusted = false caocao","title":"cat"},{"location":"bigdata/hadoop/hdfs/#tail","text":"-tail\uff1a\u663e\u793a\u4e00\u4e2a\u6587\u4ef6\u7684\u672b\u5c3e 1kb \u7684\u6570\u636e hadoop fs -tail /sanguo/wuguo.txt /","title":"tail"},{"location":"bigdata/hadoop/hdfs/#chmod","text":"[matt@matt05 stuhadoop]$ hadoop fs -chmod 777 /sanguo [matt@matt05 stuhadoop]$ hadoop fs -ls / Found 4 items drwxr-xr-x - matt supergroup 0 2021-08-05 23:22 /input drwxr-xr-x - matt supergroup 0 2021-08-05 00:22 /output drwxrwxrwx - matt supergroup 0 2021-08-05 23:50 /sanguo drwx------ - matt supergroup 0 2021-08-05 00:21 /tmp","title":"\u8bbe\u7f6e\u6743\u9650chmod"},{"location":"bigdata/hadoop/hdfs/#chown","text":"hadoop fs -chown matt:matt /sanguo/shuguo.txt","title":"chown"},{"location":"bigdata/hadoop/hdfs/#chgrp","text":"hadoop fs -chgrp matt /sanguo/weiguo.txt","title":"chgrp"},{"location":"bigdata/hadoop/hdfs/#_4","text":"hadoop fs -du -h -s / \u4e09\u4e2a\u526f\u672c","title":"\u67e5\u770b\u6587\u4ef6\u5927\u5c0f"},{"location":"bigdata/hadoop/hdfs/#_5","text":"hadoop fs -du -h /","title":"\u66f4\u52a0\u8be6\u7ec6\u5185\u5bb9"},{"location":"bigdata/hadoop/hdfs/#_6","text":"hadoop fs -setrep 10 /sanguo","title":"\u8bbe\u7f6e\u526f\u672c"},{"location":"bigdata/hadoop/hdfs/#api","text":"","title":"api"},{"location":"bigdata/hadoop/hdfs/#install","text":"\u89e3\u538b \u5982\u679cwin10\u8981\u4f7f\u7528\u8fd8\u9700\u8981\u5b89\u88c5\u4f9d\u8d56\u5e93","title":"install"},{"location":"bigdata/hadoop/hdfs/#_7","text":"HADOOP_HOME D:\\develop\\env\\hadoop-3.1.0 path: %HADOOP_HOME%\\bin \u590d\u5236\u4e0d\u8981\u5e26\u7a7a\u683c\uff0c\u4e0d\u7136\u5b83\u5c31\u4f1a\u6362\u884c","title":"\u914d\u7f6e"},{"location":"bigdata/hadoop/hdfs/#api_1","text":"\u53ef\u4ee5\u53c2\u8003 https://github.com/imattdu/stu-hdfs","title":"api"},{"location":"bigdata/hadoop/hdfs/#hdfs","text":"","title":"hdfs\u8bfb\u5199\u6d41\u7a0b"},{"location":"bigdata/hadoop/hdfs/#_8","text":"","title":"\u5199\u6570\u636e\u6d41\u7a0b"},{"location":"bigdata/hadoop/hdfs/#_9","text":"1.\u5ba2\u6237\u7aef\u901a\u8fc7 Distributed FileSystem \u6a21\u5757\u5411 NameNode \u8bf7\u6c42\u4e0a\u4f20\u6587\u4ef6\uff0cNameNode \u68c0\u67e5\u76ee\u6807\u6587\u4ef6\u662f\u5426\u5df2\u5b58\u5728\uff0c\u7236\u76ee\u5f55\u662f\u5426\u5b58\u5728\u3002 2.NameNode \u8fd4\u56de\u662f\u5426\u53ef\u4ee5\u4e0a\u4f20\u3002 3.\u5ba2\u6237\u7aef\u8bf7\u6c42\u7b2c\u4e00\u4e2a Block \u4e0a\u4f20\u5230\u54ea\u51e0\u4e2a DataNode \u670d\u52a1\u5668\u4e0a\u3002 4.NameNode \u8fd4\u56de 3 \u4e2a DataNode \u8282\u70b9\uff0c\u5206\u522b\u4e3a dn1\u3001dn2\u3001dn3\u3002 5.\u5ba2\u6237\u7aef\u901a\u8fc7 FSDataOutputStream \u6a21\u5757\u8bf7\u6c42 dn1 \u4e0a\u4f20\u6570\u636e\uff0cdn1 \u6536\u5230\u8bf7\u6c42\u4f1a\u7ee7\u7eed\u8c03\u7528 dn2\uff0c\u7136\u540e dn2 \u8c03\u7528 dn3\uff0c\u5c06\u8fd9\u4e2a\u901a\u4fe1\u7ba1\u9053\u5efa\u7acb\u5b8c\u6210\u3002 6.dn1\u3001dn2\u3001dn3 \u9010\u7ea7\u5e94\u7b54\u5ba2\u6237\u7aef\u3002 7.\u5ba2\u6237\u7aef\u5f00\u59cb\u5f80 dn1 \u4e0a\u4f20\u7b2c\u4e00\u4e2a Block\uff08\u5148\u4ece\u78c1\u76d8\u8bfb\u53d6\u6570\u636e\u653e\u5230\u4e00\u4e2a\u672c\u5730\u5185\u5b58\u7f13\u5b58\uff09\uff0c \u4ee5 Packet \u4e3a\u5355\u4f4d\uff0cdn1 \u6536\u5230\u4e00\u4e2a Packet \u5c31\u4f1a\u4f20\u7ed9 dn2\uff0cdn2 \u4f20\u7ed9 dn3\uff1bdn1 \u6bcf\u4f20\u4e00\u4e2a packet \u4f1a\u653e\u5165\u4e00\u4e2a\u5e94\u7b54\u961f\u5217\u7b49\u5f85\u5e94\u7b54\u3002 8.\u5f53\u4e00\u4e2a Block \u4f20\u8f93\u5b8c\u6210\u4e4b\u540e\uff0c\u5ba2\u6237\u7aef\u518d\u6b21\u8bf7\u6c42 NameNode \u4e0a\u4f20\u7b2c\u4e8c\u4e2a Block \u7684\u670d\u52a1 \u5668\u3002\uff08\u91cd\u590d\u6267\u884c 3-7 \u6b65\uff09\u3002","title":"\u5177\u4f53\u6d41\u7a0b"},{"location":"bigdata/hadoop/hdfs/#-","text":"\u5728 HDFS \u5199\u6570\u636e\u7684\u8fc7\u7a0b\u4e2d\uff0cNameNode \u4f1a\u9009\u62e9\u8ddd\u79bb\u5f85\u4e0a\u4f20\u6570\u636e\u6700\u8fd1\u8ddd\u79bb\u7684 DataNode \u63a5 \u6536\u6570\u636e\u3002\u90a3\u4e48\u8fd9\u4e2a\u6700\u8fd1\u8ddd\u79bb\u600e\u4e48\u8ba1\u7b97\u5462\uff1f \u4fe9\u4e2a\u8282\u70b9\u5230\u6700\u8fd1\u516c\u5171\u7956\u5148\u8282\u70b9\u7684\u8ddd\u79bb\u548c \u526f\u672c\u8282\u70b9\u7684\u9009\u62e9","title":"\u7f51\u7edc\u62d3\u6251-\u8282\u70b9\u8ddd\u79bb\u8ba1\u7b97"},{"location":"bigdata/hadoop/hdfs/#_10","text":"","title":"\u8bfb\u6570\u636e"},{"location":"bigdata/hadoop/hdfs/#_11","text":"1.\u5ba2\u6237\u7aef\u901a\u8fc7 DistributedFileSystem \u5411 NameNode \u8bf7\u6c42\u4e0b\u8f7d\u6587\u4ef6\uff0cNameNode \u901a\u8fc7\u67e5\u8be2\u5143\u6570\u636e\uff0c\u627e\u5230\u6587\u4ef6\u5757\u6240\u5728\u7684 DataNode \u5730\u5740\u3002 2.\u6311\u9009\u4e00\u53f0 DataNode\uff08\u5c31\u8fd1\u539f\u5219\uff0c\u7136\u540e\u968f\u673a\uff09\u670d\u52a1\u5668\uff0c\u8bf7\u6c42\u8bfb\u53d6\u6570\u636e\u3002 3.DataNode \u5f00\u59cb\u4f20\u8f93\u6570\u636e\u7ed9\u5ba2\u6237\u7aef\uff08\u4ece\u78c1\u76d8\u91cc\u9762\u8bfb\u53d6\u6570\u636e\u8f93\u5165\u6d41\uff0c\u4ee5 Packet \u4e3a\u5355\u4f4d \u6765\u505a\u6821\u9a8c\uff09\u3002 4.\u5ba2\u6237\u7aef\u4ee5 Packet \u4e3a\u5355\u4f4d\u63a5\u6536\uff0c\u5148\u5728\u672c\u5730\u7f13\u5b58\uff0c\u7136\u540e\u5199\u5165\u76ee\u6807\u6587\u4ef6\u3002","title":"\u5177\u4f53\u6d41\u7a0b"},{"location":"bigdata/hadoop/hdfs/#namenode-secondarynamenode","text":"","title":"NameNode \u548c SecondaryNameNode"},{"location":"bigdata/hadoop/hdfs/#nn-2nn","text":"1.\u7b2c\u4e00\u9636\u6bb5\uff1aNameNode \u542f\u52a8 \uff081\uff09\u7b2c\u4e00\u6b21\u542f\u52a8 NameNode \u683c\u5f0f\u5316\u540e\uff0c\u521b\u5efa Fsimage \u548c Edits \u6587\u4ef6\u3002\u5982\u679c\u4e0d\u662f\u7b2c\u4e00\u6b21\u542f\u52a8\uff0c\u76f4\u63a5\u52a0\u8f7d\u7f16\u8f91\u65e5\u5fd7\u548c\u955c\u50cf\u6587\u4ef6\u5230\u5185\u5b58\u3002 Fsimage \uff1a\u955c\u50cf\u6587\u4ef6 Edits \uff1a\u65e5\u5fd7 \uff082\uff09\u5ba2\u6237\u7aef\u5bf9\u5143\u6570\u636e\u8fdb\u884c\u589e\u5220\u6539\u7684\u8bf7\u6c42\u3002 \uff083\uff09NameNode \u8bb0\u5f55\u64cd\u4f5c\u65e5\u5fd7\uff0c\u66f4\u65b0\u6eda\u52a8\u65e5\u5fd7\u3002 \uff084\uff09NameNode \u5728\u5185\u5b58\u4e2d\u5bf9\u5143\u6570\u636e\u8fdb\u884c\u589e\u5220\u6539\u3002 2.\u7b2c\u4e8c\u9636\u6bb5\uff1aSecondary NameNode \u5de5\u4f5c \uff081\uff09Secondary NameNode \u8be2\u95ee NameNode \u662f\u5426\u9700\u8981 CheckPoint\u3002\u76f4\u63a5\u5e26\u56de NameNode \u662f\u5426\u68c0\u67e5\u7ed3\u679c\u3002 \uff082\uff09Secondary NameNode \u8bf7\u6c42\u6267\u884c CheckPoint\u3002 \uff083\uff09NameNode \u6eda\u52a8\u6b63\u5728\u5199\u7684 Edits \u65e5\u5fd7\u3002 \uff084\uff09\u5c06\u6eda\u52a8\u524d\u7684\u7f16\u8f91\u65e5\u5fd7\u548c\u955c\u50cf\u6587\u4ef6\u62f7\u8d1d\u5230 Secondary NameNode\u3002 \uff085\uff09Secondary NameNode \u52a0\u8f7d\u7f16\u8f91\u65e5\u5fd7\u548c\u955c\u50cf\u6587\u4ef6\u5230\u5185\u5b58\uff0c\u5e76\u5408\u5e76\u3002 \uff086\uff09\u751f\u6210\u65b0\u7684\u955c\u50cf\u6587\u4ef6 fsimage.chkpoint\u3002 \uff087\uff09\u62f7\u8d1d fsimage.chkpoint \u5230 NameNode\u3002 \uff088\uff09NameNode \u5c06 fsimage.chkpoint \u91cd\u65b0\u547d\u540d\u6210 fsimage\u3002","title":"NN \u548c 2NN \u5de5\u4f5c\u673a\u5236"},{"location":"bigdata/hadoop/hdfs/#fsimage-edits","text":"/opt/module/hadoop-3.1.3/data/dfs/name/current \uff081\uff09Fsimage\u6587\u4ef6\uff1aHDFS\u6587\u4ef6\u7cfb\u7edf\u5143\u6570\u636e\u7684\u4e00\u4e2a\u6c38\u4e45\u6027\u7684\u68c0\u67e5\u70b9\uff0c\u5176\u4e2d\u5305\u542bHDFS\u6587\u4ef6\u7cfb\u7edf\u7684\u6240\u6709\u76ee\u5f55\u548c\u6587\u4ef6inode\u7684\u5e8f\u5217\u5316\u4fe1\u606f\u3002 fsimage_0000000000000000000 fsimage_0000000000000000000.md5 seen_txid VERSION \uff082\uff09Edits\u6587\u4ef6\uff1a\u5b58\u653eHDFS\u6587\u4ef6\u7cfb\u7edf\u7684\u6240\u6709\u66f4\u65b0\u64cd\u4f5c\u7684\u8def\u5f84\uff0c\u6587\u4ef6\u7cfb\u7edf\u5ba2\u6237\u7aef\u6267\u884c\u7684\u6240\u6709\u5199\u64cd\u4f5c\u9996\u5148 \u4f1a\u88ab\u8bb0\u5f55\u5230Edits\u6587\u4ef6\u4e2d\u3002 \uff083\uff09seen_txid\u6587\u4ef6\u4fdd\u5b58\u7684\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u5c31\u662f\u6700\u540e\u4e00\u4e2aedits_\u7684\u6570\u5b57 \uff084\uff09\u6bcf \u6b21NameNode\u542f\u52a8\u7684\u65f6\u5019\u90fd\u4f1a\u5c06Fsimage\u6587\u4ef6\u8bfb\u5165\u5185\u5b58\uff0c\u52a0 \u8f7dEdits\u91cc\u9762\u7684\u66f4\u65b0\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u5185\u5b58 \u4e2d\u7684\u5143\u6570\u636e\u4fe1\u606f\u662f\u6700\u65b0\u7684\u3001\u540c\u6b65\u7684\uff0c\u53ef\u4ee5\u770b\u6210NameNode\u542f\u52a8\u7684\u65f6\u5019\u5c31\u5c06Fsimage\u548cEdits\u6587\u4ef6\u8fdb\u884c\u4e86\u5408\u5e76\u3002","title":"Fsimage \u548c Edits \u89e3\u6790"},{"location":"bigdata/hadoop/hdfs/#521-oiv-fsimage","text":"hdfs oiv -p \u6587\u4ef6\u7c7b\u578b -i \u955c\u50cf\u6587\u4ef6 -o \u8f6c\u6362\u540e\u6587\u4ef6\u8f93\u51fa\u8def\u5f84 cd /opt/module/hadoop-3.1.3/data/dfs/name/current hdfs oiv -p XML -i fsimage_0000000000000009738 -o /opt/module/hadoop-3.1.3/fsimage.xml","title":"5.2.1 oiv \u67e5\u770b Fsimage \u6587\u4ef6"},{"location":"bigdata/hadoop/hdfs/#522-oev-edits","text":"hdfs oev -p \u6587\u4ef6\u7c7b\u578b -i \u955c\u50cf\u6587\u4ef6 -o \u8f6c\u6362\u540e\u6587\u4ef6\u8f93\u51fa\u8def\u5f84 hdfs oev -p XML -i edits_inprogress_0000000000000008686 -o /opt/module/hadoop-3.1.3/edits.xml \u4e0b\u8f7d\u6587\u4ef6\u5230\u672c\u5730 sz fsimage.xml","title":"5.2.2 oev \u67e5\u770b Edits \u6587\u4ef6"},{"location":"bigdata/hadoop/hdfs/#53checkpoint","text":"1\uff09\u901a\u5e38\u60c5\u51b5\u4e0b\uff0cSecondaryNameNode \u6bcf\u9694\u4e00\u5c0f\u65f6\u6267\u884c\u4e00\u6b21\u3002 <property> <name>dfs.namenode.checkpoint.period</name> <value>3600s</value> </property> 2\uff09\u4e00\u5206\u949f\u68c0\u67e5\u4e00\u6b21\u64cd\u4f5c\u6b21\u6570\uff0c\u5f53\u64cd\u4f5c\u6b21\u6570\u8fbe\u5230 1 \u767e\u4e07\u65f6\uff0cSecondaryNameNode \u6267\u884c\u4e00\u6b21\u3002 <property> <name>dfs.namenode.checkpoint.txns</name> <value>1000000</value> <description>\u64cd\u4f5c\u52a8\u4f5c\u6b21\u6570</description> </property> <property> <name>dfs.namenode.checkpoint.check.period</name> <value>60s</value> <description> 1 \u5206\u949f\u68c0\u67e5\u4e00\u6b21\u64cd\u4f5c\u6b21\u6570</description> </property>","title":"5.3CheckPoint \u65f6\u95f4\u8bbe\u7f6e"},{"location":"bigdata/hadoop/hdfs/#datanode","text":"","title":"datanode"},{"location":"bigdata/hadoop/hdfs/#datanode_1","text":"1.\u4e00\u4e2a\u6570\u636e\u5757\u5728 DataNode \u4e0a\u4ee5\u6587\u4ef6\u5f62\u5f0f\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\uff0c\u5305\u62ec\u4e24\u4e2a\u6587\u4ef6\uff0c\u4e00\u4e2a\u662f\u6570\u636e \u672c\u8eab\uff0c\u4e00\u4e2a\u662f\u5143\u6570\u636e\u5305\u62ec\u6570\u636e\u5757\u7684\u957f\u5ea6\uff0c\u5757\u6570\u636e\u7684\u6821\u9a8c\u548c\uff0c\u4ee5\u53ca\u65f6\u95f4\u6233\u3002 2.DataNode \u542f\u52a8\u540e\u5411 NameNode \u6ce8\u518c\uff0c\u901a\u8fc7\u540e\uff0c\u5468\u671f\u6027\uff086 \u5c0f\u65f6\uff09\u7684\u5411 NameNode \u4e0a \u62a5\u6240\u6709\u7684\u5757\u4fe1\u606f\u3002 <property> <name>dfs.blockreport.intervalMsec</name> <value>21600000</value> <description>Determines block reporting interval in milliseconds.</description> </property> DN \u626b\u63cf\u81ea\u5df1\u8282\u70b9\u5757\u4fe1\u606f\u5217\u8868\u7684\u65f6\u95f4\uff0c\u9ed8\u8ba4 6 \u5c0f\u65f6 <property> <name>dfs.datanode.directoryscan.interval</name> <value>21600s</value> <description>Interval in seconds for Datanode to scan datadirectories and reconcile the difference between blocks in memory and on the disk. Support multiple time unit suffix(case insensitive), as described in dfs.heartbeat.interval. </description> </property> 3.\u5fc3\u8df3\u662f\u6bcf 3 \u79d2\u4e00\u6b21\uff0c\u5fc3\u8df3\u8fd4\u56de\u7ed3\u679c\u5e26\u6709 NameNode \u7ed9\u8be5 DataNode \u7684\u547d\u4ee4\u5982\u590d\u5236\u5757 \u6570\u636e\u5230\u53e6\u4e00\u53f0\u673a\u5668\uff0c\u6216\u5220\u9664\u67d0\u4e2a\u6570\u636e\u5757\u3002\u5982\u679c\u8d85\u8fc7 10 \u5206\u949f\u6ca1\u6709\u6536\u5230\u67d0\u4e2a DataNode \u7684\u5fc3\u8df3\uff0c \u5219\u8ba4\u4e3a\u8be5\u8282\u70b9\u4e0d\u53ef\u7528\u3002 4.\u96c6\u7fa4\u8fd0\u884c\u4e2d\u53ef\u4ee5\u5b89\u5168\u52a0\u5165\u548c\u9000\u51fa\u4e00\u4e9b\u673a\u5668\u3002","title":"datanode \u5de5\u4f5c\u673a\u5236"},{"location":"bigdata/hadoop/hdfs/#_12","text":"\u4fdd\u8bc1\u6570\u636e\u5b8c\u6574\u6027 \u5982\u4e0b\u662f DataNode \u8282\u70b9\u4fdd\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u7684\u65b9\u6cd5\u3002 1.\u5f53 DataNode \u8bfb\u53d6 Block \u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u8ba1\u7b97 CheckSum\u3002 2.\u5982\u679c\u8ba1\u7b97\u540e\u7684 CheckSum\uff0c\u4e0e Block \u521b\u5efa\u65f6\u503c\u4e0d\u4e00\u6837\uff0c\u8bf4\u660e Block \u5df2\u7ecf\u635f\u574f\u3002 3.Client \u8bfb\u53d6\u5176\u4ed6 DataNode \u4e0a\u7684 Block\u3002 4.\u5e38\u89c1\u7684\u6821\u9a8c\u7b97\u6cd5 crc\uff0832\uff09\uff0cmd5\uff08128\uff09\uff0csha1\uff08160\uff09 5.DataNode \u5728\u5176\u6587\u4ef6\u521b\u5efa\u540e\u5468\u671f\u9a8c\u8bc1 CheckSum\u3002 \u5947\u5076\u6821\u9a8c 1\u7684\u4e2a\u6570 \u5076\u6570\u662f0 \u5426\u5219\u662f1","title":"\u6570\u636e\u6821\u9a8c"},{"location":"bigdata/hadoop/hdfs/#_13","text":"4\u3001\u5982\u679c\u5b9a\u4e49\u8d85\u65f6\u65f6\u95f4\u4e3aTimeOut\uff0c\u5219\u8d85\u65f6\u65f6\u957f\u7684\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1a TimeOut = 2 * dfs.namenode.heartbeat.recheck-interval + 10 * dfs.heartbeat.interval\u3002 \u800c\u9ed8\u8ba4\u7684dfs.namenode.heartbeat.recheck-interval \u5927\u5c0f\u4e3a5\u5206\u949f\uff0cdfs.heartbeat.interval\u9ed8\u8ba4\u4e3a3\u79d2\u3002 <property> <name>dfs.namenode.heartbeat.recheck-interval</name> <value>300000</value> </property> <property> <name>dfs.heartbeat.interval</name> <value>3</value> </property>","title":"\u6389\u7ebf\u65f6\u9650\u53c2\u6570\u8bbe\u7f6e"},{"location":"bigdata/hadoop/mapreduce/","text":"overview what MapReduce \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u8fd0\u7b97\u7a0b\u5e8f\u7684\u7f16\u7a0b\u6846\u67b6 \uff0c\u662f\u7528\u6237\u5f00\u53d1\u201c\u57fa\u4e8e Hadoop \u7684\u6570\u636e\u5206\u6790\u5e94\u7528\u201d\u7684\u6838\u5fc3\u6846\u67b6\u3002 MapReduce \u6838\u5fc3\u529f\u80fd\u662f\u5c06\u7528\u6237\u7f16\u5199\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\u548c\u81ea\u5e26\u9ed8\u8ba4\u7ec4\u4ef6\u6574\u5408\u6210\u4e00\u4e2a\u5b8c\u6574\u7684 \u5206\u5e03\u5f0f\u8fd0\u7b97\u7a0b\u5e8f\uff0c\u5e76\u53d1\u8fd0\u884c\u5728\u4e00\u4e2a Hadoop \u96c6\u7fa4\u4e0a\u3002 ad disad ad 1.MapReduce \u6613\u4e8e\u7f16\u7a0b \u200b \u5b83\u7b80\u5355\u7684\u5b9e\u73b0\u4e00\u4e9b\u63a5\u53e3\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e00\u4e2a\u5206\u5e03\u5f0f\u7a0b\u5e8f\uff0c 2.\u826f\u597d\u7684\u6269\u5c55\u6027 \u200b \u53ef\u4ee5\u52a8\u6001\u589e\u52a0\u673a\u5668 3.\u9ad8\u5bb9\u9519\u6027 \u200b \u5176\u4e2d\u4e00\u53f0\u673a\u5668\u6302\u4e86\uff0c\u5b83\u53ef\u4ee5\u628a\u4e0a\u9762\u7684\u8ba1\u7b97\u4efb\u52a1\u8f6c\u79fb\u5230\u53e6\u5916\u4e00\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\uff0c \u4e0d\u81f3\u4e8e\u8fd9\u4e2a\u4efb\u52a1\u8fd0\u884c\u5931\u8d25 disad 1.\u4e0d\u64c5\u957f\u5b9e\u65f6\u8ba1\u7b97 \u200b MapReduce \u65e0\u6cd5\u50cf MySQL \u4e00\u6837\uff0c\u5728\u6beb\u79d2\u6216\u8005\u79d2\u7ea7\u5185\u8fd4\u56de\u7ed3\u679c\u3002 2.\u4e0d\u64c5\u957f\u6d41\u5f0f\u8ba1\u7b97 \u200b \u6d41\u5f0f\u8ba1\u7b97\u7684\u8f93\u5165\u6570\u636e\u662f\u52a8\u6001\u7684\uff0c\u800c MapReduce \u7684\u8f93\u5165\u6570\u636e\u96c6\u662f\u9759\u6001\u7684\uff0c\u4e0d\u80fd\u52a8\u6001\u53d8\u5316\u3002 \u8fd9\u662f\u56e0\u4e3a MapReduce \u81ea\u8eab\u7684\u8bbe\u8ba1\u7279\u70b9\u51b3\u5b9a\u4e86\u6570\u636e\u6e90\u5fc5\u987b\u662f\u9759\u6001\u7684\u3002 3.\u4e0d\u64c5\u957f DAG\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\u8ba1\u7b97 \u200b \u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\uff0c\u540e\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u8f93\u5165\u4e3a\u524d\u4e00\u4e2a\u7684\u8f93\u51fa\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c MapReduce \u5e76\u4e0d\u662f\u4e0d\u80fd\u505a\uff0c\u800c\u662f\u4f7f\u7528\u540e\uff0c\u6bcf\u4e2a MapReduce \u4f5c\u4e1a\u7684\u8f93\u51fa\u7ed3\u679c\u90fd\u4f1a\u5199\u5165\u5230\u78c1\u76d8\uff0c \u4f1a\u9020\u6210\u5927\u91cf\u7684\u78c1\u76d8 IO\uff0c\u5bfc\u81f4\u6027\u80fd\u975e\u5e38\u7684\u4f4e\u4e0b\u3002 \u6838\u5fc3\u601d\u60f3 1.\u5206\u5e03\u5f0f\u7684\u8fd0\u7b97\u7a0b\u5e8f\u5f80\u5f80\u9700\u8981\u5206\u6210\u81f3\u5c11 2 \u4e2a\u9636\u6bb5\u3002 2.\u7b2c\u4e00\u4e2a\u9636\u6bb5\u7684 MapTask \u5e76\u53d1\u5b9e\u4f8b\uff0c\u5b8c\u5168\u5e76\u884c\u8fd0\u884c\uff0c\u4e92\u4e0d\u76f8\u5e72\u3002 3.\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u7684 ReduceTask \u5e76\u53d1\u5b9e\u4f8b\u4e92\u4e0d\u76f8\u5e72\uff0c\u4f46\u662f\u4ed6\u4eec\u7684\u6570\u636e\u4f9d\u8d56\u4e8e\u4e0a\u4e00\u4e2a\u9636\u6bb5 \u7684\u6240\u6709 MapTask \u5e76\u53d1\u5b9e\u4f8b\u7684\u8f93\u51fa\u3002 4.MapReduce \u7f16\u7a0b\u6a21\u578b\u53ea\u80fd\u5305\u542b\u4e00\u4e2a Map \u9636\u6bb5\u548c\u4e00\u4e2a Reduce \u9636\u6bb5\uff0c\u5982\u679c\u7528\u6237\u7684\u4e1a \u52a1\u903b\u8f91\u975e\u5e38\u590d\u6742\uff0c\u90a3\u5c31\u53ea\u80fd\u591a\u4e2a MapReduce \u7a0b\u5e8f\uff0c\u4e32\u884c\u8fd0\u884c\u3002 MapReduce\u8fdb\u7a0b \uff081\uff09MrAppMaster\uff1a\u8d1f\u8d23\u6574\u4e2a\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u8c03\u5ea6\u53ca\u72b6\u6001\u534f\u8c03\u3002 \uff082\uff09MapTask\uff1a\u8d1f\u8d23 Map \u9636\u6bb5\u7684\u6574\u4e2a\u6570\u636e\u5904\u7406\u6d41\u7a0b\u3002 \uff083\uff09ReduceTask\uff1a\u8d1f\u8d23 Reduce \u9636\u6bb5\u7684\u6574\u4e2a\u6570\u636e\u5904\u7406\u6d41\u7a0b\u3002 \u5e8f\u5217\u5316\u7c7b\u578b mapreduce\u7f16\u7801\u89c4\u8303 1\uff0eMapper\u9636\u6bb5 \uff081\uff09\u7528\u6237\u81ea\u5b9a\u4e49\u7684Mapper\u8981\u7ee7\u627f\u81ea\u5df1\u7684\u7236\u7c7b \uff082\uff09Mapper\u7684\u8f93\u5165\u6570\u636e\u662fKV\u5bf9\u7684\u5f62\u5f0f\uff08KV\u7684\u7c7b\u578b\u53ef\u81ea\u5b9a\u4e49\uff09 \uff083\uff09Mapper\u4e2d\u7684\u4e1a\u52a1\u903b\u8f91\u5199\u5728map()\u65b9\u6cd5\u4e2d \uff084\uff09Mapper\u7684\u8f93\u51fa\u6570\u636e\u662fKV\u5bf9\u7684\u5f62\u5f0f\uff08KV\u7684\u7c7b\u578b\u53ef\u81ea\u5b9a\u4e49\uff09 \uff085\uff09map()\u65b9\u6cd5\uff08MapTask\u8fdb\u7a0b\uff09\u5bf9\u6bcf\u4e00\u4e2a\u8c03\u7528\u4e00\u6b21 2\uff0eReducer\u9636\u6bb5 \uff081\uff09\u7528\u6237\u81ea\u5b9a\u4e49\u7684Reducer\u8981\u7ee7\u627f\u81ea\u5df1\u7684\u7236\u7c7b \uff082\uff09Reducer\u7684\u8f93\u5165\u6570\u636e\u7c7b\u578b\u5bf9\u5e94Mapper\u7684\u8f93\u51fa\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u662fKV \uff083\uff09Reducer\u7684\u4e1a\u52a1\u903b\u8f91\u5199\u5728reduce()\u65b9\u6cd5\u4e2d \uff084\uff09ReduceTask\u8fdb\u7a0b\u5bf9\u6bcf\u4e00\u7ec4\u76f8\u540ck\u7684\u7ec4\u8c03\u7528\u4e00\u6b21reduce()\u65b9\u6cd5 3\uff0eDriver\u9636\u6bb5 \u76f8\u5f53\u4e8eYARN\u96c6\u7fa4\u7684\u5ba2\u6237\u7aef\uff0c\u7528\u4e8e\u63d0\u4ea4\u6211\u4eec\u6574\u4e2a\u7a0b\u5e8f\u5230YARN\u96c6\u7fa4\uff0c\u63d0\u4ea4\u7684\u662f \u5c01\u88c5\u4e86MapReduce\u7a0b\u5e8f\u76f8\u5173\u8fd0\u884c\u53c2\u6570\u7684job\u5bf9\u8c61 \u5b9e\u64cd demo \u524d\u63d0 \u9700\u8981\u9996\u5148\u914d\u7f6e\u597d HADOOP_HOME \u53d8\u91cf\u4ee5\u53ca Windows \u8fd0\u884c\u4f9d\u8d56\uff08\u53c2\u8003hdfs\uff09 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"> <modelVersion>4.0.0</modelVersion> <groupId>com.matt.stu</groupId> <artifactId>stu-mapreduce</artifactId> <version>1.0-SNAPSHOT</version> <properties> <maven.compiler.source>8</maven.compiler.source> <maven.compiler.target>8</maven.compiler.target> </properties> <dependencies> <dependency> <groupId>org.apache.hadoop</groupId> <artifactId>hadoop-client</artifactId> <version>3.1.3</version> </dependency> <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.12</version> </dependency> <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-log4j12</artifactId> <version>1.7.30</version> </dependency> </dependencies> <build> <plugins> <plugin> <artifactId>maven-compiler-plugin</artifactId> <version>3.6.1</version> <configuration> <source>1.8</source> <target>1.8</target> </configuration> </plugin> <!--\u4f9d\u8d56\u7684jar\u5305\u4e5f\u6253\u8fdb\u53bb--> <plugin> <artifactId>maven-assembly-plugin</artifactId> <configuration> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> </descriptorRefs> </configuration> <executions> <execution> <id>make-assembly</id> <phase>package</phase> <goals> <goal>single</goal> </goals> </execution> </executions> </plugin> </plugins> </build> </project> log4j.properties log4j.rootLogger=INFO, stdout log4j.appender.stdout=org.apache.log4j.ConsoleAppender log4j.appender.stdout.layout=org.apache.log4j.PatternLayout log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n log4j.appender.logfile=org.apache.log4j.FileAppender log4j.appender.logfile.File=target/spring.log log4j.appender.logfile.layout=org.apache.log4j.PatternLayout log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n \u5177\u4f53\u5b9e\u73b0 \u7edf\u8ba1\u6587\u672c\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u6b21\u6570 map:\u5355\u8bcd\u7684\u5207\u5272 reduce:\u5355\u8bcd\u7684\u7edf\u8ba1 driver:\u4efb\u52a1\u7684\u914d\u7f6e \u548c\u63d0\u4ea4 hadoop\u96c6\u7fa4\u8fd0\u884c \u6253\u5305\u4f9d\u8d56 <build> <plugins> <plugin> <artifactId>maven-compiler-plugin</artifactId> <version>3.6.1</version> <configuration> <source>1.8</source> <target>1.8</target> </configuration> </plugin> <!--\u4f9d\u8d56\u7684jar\u5305\u4e5f\u6253\u8fdb\u53bb--> <plugin> <artifactId>maven-assembly-plugin</artifactId> <configuration> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> </descriptorRefs> </configuration> <executions> <execution> <id>make-assembly</id> <phase>package</phase> <goals> <goal>single</goal> </goals> </execution> </executions> </plugin> </plugins> </build> \u8fd0\u884c \u4e0d\u5e26\u4f9d\u8d56\u7684jar\u5305 hadoop jar wc.jar com.matt.mapreduce.wordcount2.WordCountDriver /input /output \u9ed8\u8ba4\u6848\u4f8b /opt/module/hadoop-3.1.3/share/hadoop/mapreduce sz hadoop-mapreduce-examples-3.1.3.jar \u66f4\u591a\u6848\u4f8b \u53c2\u8003 https://github.com/imattdu/stu-mapreduce mapreduce \u539f\u7406 src-\u63d0\u4ea4job 1.\u5efa\u7acb\u8fde\u63a5 835\u5efa\u7acb\u8fde\u63a5 2.\u63d0\u4ea4job 839\u63d0\u4ea4\u4efb\u52a1 -> (1)81\u521b\u5efa\u7ed9\u96c6\u7fa4\u63d0\u4ea4\u6570\u636e\u7684 Stag \u8def\u5f84 (2)90\u83b7\u53d6 jobid \uff0c\u5e76\u521b\u5efa Job \u8def\u5f84 (3)121\u62f7\u8d1d jar \u5305\u5230\u96c6\u7fa4 (4)124\u8ba1\u7b97\u5207\u7247\uff0c\u751f\u6210\u5207\u7247\u89c4\u5212\u6587\u4ef6 (5)153\u5411 Stag \u8def\u5f84\u5199 XML \u914d\u7f6e\u6587\u4ef6 (6)155\u63d0\u4ea4 Job,\u8fd4\u56de\u63d0\u4ea4\u72b6\u6001 src-FileInputFormat src 1.\u7a0b\u5e8f\u5148\u627e\u5230\u4f60\u6570\u636e\u5b58\u50a8\u7684\u76ee\u5f55\u3002 2.\u5f00\u59cb\u904d\u5386\u5904\u7406\uff08\u89c4\u5212\u5207\u7247\uff09\u76ee\u5f55\u4e0b\u7684\u6bcf\u4e00\u4e2a\u6587\u4ef6 3.\u904d\u5386\u7b2c\u4e00\u4e2a\u6587\u4ef6ss.txt \u200b (1)\u83b7\u53d6\u6587\u4ef6\u5927\u5c0ffs.sizeOf(ss.txt) \u200b (2)\u8ba1\u7b97\u5207\u7247\u5927\u5c0f computeSplitSize(Math.max(minSize,Math.min(maxSize,blocksize)))=blocksize=128M \u200b (3)\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5207\u7247\u5927\u5c0f=blocksize \u200b (4)\u5f00\u59cb\u5207\uff0c\u5f62\u6210\u7b2c1\u4e2a\u5207\u7247\uff1ass.txt\u20140:128M \u7b2c2\u4e2a\u5207\u7247ss.txt\u2014128:256M \u7b2c3\u4e2a\u5207\u7247ss.txt\u2014256M:300M \uff08\u6bcf\u6b21\u5207\u7247\u65f6\uff0c\u90fd\u8981\u5224\u65ad\u5207\u5b8c\u5269\u4e0b\u7684\u90e8\u5206\u662f\u5426\u5927\u4e8e\u5757\u76841.1\u500d\uff0c\u4e0d\u5927\u4e8e1.1\u500d\u5c31\u5212\u5206\u4e00\u5757\u5207\u7247\uff09 \u200b (5)\u5c06\u5207\u7247\u4fe1\u606f\u5199\u5230\u4e00\u4e2a\u5207\u7247\u89c4\u5212\u6587\u4ef6\u4e2d \u200b (6)\u6574\u4e2a\u5207\u7247\u7684\u6838\u5fc3\u8fc7\u7a0b\u5728getSplit()\u65b9\u6cd5\u4e2d\u5b8c\u6210 \u200b (7)inputSplit\u53ea\u8bb0\u5f55\u4e86\u5207\u7247\u7684\u5143\u6570\u636e\u4fe1\u606f\uff0c\u6bd4\u5982\u8d77\u59cb\u4f4d\u7f6e\u3001\u957f\u5ea6\u4ee5\u53ca\u6240\u5728\u7684\u8282\u70b9\u5217\u8868\u7b49\u3002 4.\u63d0\u4ea4\u5207\u7247\u89c4\u5212\u6587\u4ef6\u5230YARN\u4e0a\uff0cYARN\u4e0a\u7684MrAppMaster\u5c31\u53ef\u4ee5\u6839\u636e\u5207\u7247\u89c4\u5212\u6587\u4ef6\u8ba1\u7b97\u5f00\u542fMapTask\u4e2a\u6570\u3002 \u5207\u7247\u673a\u5236 1.\u7b80\u5355\u5730\u6309\u7167\u6587\u4ef6\u7684\u5185\u5bb9\u957f\u5ea6\u8fdb\u884c\u5207\u7247 2.\u5207\u7247\u5927\u5c0f\uff0c\u9ed8\u8ba4\u7b49\u4e8eBlock\u5927\u5c0f 3.\u5207\u7247\u65f6\u4e0d\u8003\u8651\u6570\u636e\u96c6\u6574\u4f53\uff0c\u800c\u662f\u9010\u4e2a\u9488\u5bf9\u6bcf\u4e00\u4e2a\u6587\u4ef6\u5355\u72ec\u5207\u7247 \u5207\u7247\u53e3\u5f84 Math.max(minSize, Math.min(maxSize, blockSize)); mapreduce.input.fileinputformat.split.minsize=1 \u9ed8\u8ba4\u503c\u4e3a1 mapreduce.input.fileinputformat.split.maxsize= Long.MAXValue \u9ed8\u8ba4\u503cLong.MAXValue \u83b7\u53d6\u5207\u7247\u4fe1\u606f // \u83b7\u53d6\u5207\u7247\u7684\u6587\u4ef6\u540d\u79f0 String name = inputSplit.getPath().getName(); // \u6839\u636e\u6587\u4ef6\u7c7b\u578b\u83b7\u53d6\u5207\u7247\u4fe1\u606f FileSplit inputSplit = (FileSplit) context.getInputSplit(); FileInputFormat \u5e38\u89c1\u5b9e\u73b0\u7c7b TextInputFormat TextInputFormat \u662f\u9ed8\u8ba4\u7684 FileInputFormat \u5b9e\u73b0\u7c7b\u3002\u6309\u884c\u8bfb\u53d6\u6bcf\u6761\u8bb0\u5f55\u3002\u952e\u662f\u5b58\u50a8\u8be5\u884c\u5728\u6574\u4e2a\u6587\u4ef6\u4e2d\u7684\u8d77\u59cb\u5b57\u8282\u504f\u79fb\u91cf\uff0c LongWritable \u7c7b\u578b\u3002\u503c\u662f\u8fd9\u884c\u7684\u5185\u5bb9\uff0c\u4e0d\u5305\u62ec\u4efb\u4f55\u884c\u7ec8\u6b62 \u7b26\uff08\u6362\u884c\u7b26\u548c\u56de\u8f66\u7b26\uff09\uff0cText \u7c7b\u578b CombineTextInputFormat CombineTextInputFormat \u7528\u4e8e\u5c0f\u6587\u4ef6\u8fc7\u591a\u7684\u573a\u666f\uff0c\u5b83\u53ef\u4ee5\u5c06\u591a\u4e2a\u5c0f\u6587\u4ef6\u4ece\u903b\u8f91\u4e0a\u89c4\u5212\u5230 \u4e00\u4e2a\u5207\u7247\u4e2d\uff0c\u8fd9\u6837\uff0c\u591a\u4e2a\u5c0f\u6587\u4ef6\u5c31\u53ef\u4ee5\u4ea4\u7ed9\u4e00\u4e2a MapTask \u5904\u7406\u3002 \u5207\u7247 \u865a\u62df\u5b58\u50a8 \u5c06\u8f93\u5165\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u5927\u5c0f\uff0c\u4f9d\u6b21\u548c\u8bbe\u7f6e\u7684 setMaxInputSplitSize \u503c\u6bd4\u8f83\uff0c\u5982\u679c\u4e0d\u5927\u4e8e\u8bbe\u7f6e\u7684\u6700\u5927\u503c\uff0c\u903b\u8f91\u4e0a\u5212\u5206\u4e00\u4e2a\u5757\u3002\u5982\u679c\u8f93\u5165\u6587\u4ef6\u5927\u4e8e\u8bbe\u7f6e\u7684\u6700\u5927\u503c\u4e14\u5927\u4e8e\u4e24\u500d\uff0c \u90a3\u4e48\u4ee5\u6700\u5927\u503c\u5207\u5272\u4e00\u5757\uff1b\u5f53\u5269\u4f59\u6570\u636e\u5927\u5c0f\u8d85\u8fc7\u8bbe\u7f6e\u7684\u6700\u5927\u503c\u4e14\u4e0d\u5927\u4e8e\u6700\u5927\u503c 2 \u500d\uff0c\u6b64\u65f6 \u5c06\u6587\u4ef6\u5747\u5206\u6210 2 \u4e2a\u865a\u62df\u5b58\u50a8\u5757\uff08\u9632\u6b62\u51fa\u73b0\u592a\u5c0f\u5207\u7247\uff09\u3002 \u5207\u7247 1.\u5224\u65ad\u865a\u62df\u5b58\u50a8\u7684\u6587\u4ef6\u5927\u5c0f\u662f\u5426\u5927\u4e8e setMaxInputSplitSize \u503c\uff0c\u5927\u4e8e\u7b49\u4e8e\u5219\u5355\u72ec \u5f62\u6210\u4e00\u4e2a\u5207\u7247\u3002 2.\u5982\u679c\u4e0d\u5927\u4e8e\u5219\u8ddf\u4e0b\u4e00\u4e2a\u865a\u62df\u5b58\u50a8\u6587\u4ef6\u8fdb\u884c\u5408\u5e76\uff0c\u5171\u540c\u5f62\u6210\u4e00\u4e2a\u5207\u7247\u3002 mapreduce \u5de5\u4f5c\u6d41\u7a0b 1.MapTask \u6536\u96c6\u6211\u4eec\u7684 map()\u65b9\u6cd5\u8f93\u51fa\u7684 kv \u5bf9\uff0c\u653e\u5230\u5185\u5b58\u7f13\u51b2\u533a\u4e2d 2.\u4ece\u5185\u5b58\u7f13\u51b2\u533a\u4e0d\u65ad\u6ea2\u51fa\u672c\u5730\u78c1\u76d8\u6587\u4ef6\uff0c\u53ef\u80fd\u4f1a\u6ea2\u51fa\u591a\u4e2a\u6587\u4ef6 3.\u591a\u4e2a\u6ea2\u51fa\u6587\u4ef6\u4f1a\u88ab\u5408\u5e76\u6210\u5927\u7684\u6ea2\u51fa\u6587\u4ef6 4.\u5728\u6ea2\u51fa\u8fc7\u7a0b\u53ca\u5408\u5e76\u7684\u8fc7\u7a0b\u4e2d\uff0c\u90fd\u8981\u8c03\u7528 Partitioner \u8fdb\u884c\u5206\u533a\u548c\u9488\u5bf9 key \u8fdb\u884c\u6392\u5e8f 5.ReduceTask \u6839\u636e\u81ea\u5df1\u7684\u5206\u533a\u53f7\uff0c\u53bb\u5404\u4e2a MapTask \u673a\u5668\u4e0a\u53d6\u76f8\u5e94\u7684\u7ed3\u679c\u5206\u533a\u6570\u636e 6.ReduceTask \u4f1a\u6293\u53d6\u5230\u540c\u4e00\u4e2a\u5206\u533a\u7684\u6765\u81ea\u4e0d\u540c MapTask \u7684\u7ed3\u679c\u6587\u4ef6\uff0cReduceTask \u4f1a\u5c06\u8fd9\u4e9b\u6587\u4ef6\u518d\u8fdb\u884c\u5408\u5e76\uff08\u5f52\u5e76\u6392\u5e8f\uff09 7.\u5408\u5e76\u6210\u5927\u6587\u4ef6\u540e\uff0cShuffle \u7684\u8fc7\u7a0b\u4e5f\u5c31\u7ed3\u675f\u4e86\uff0c\u540e\u9762\u8fdb\u5165 ReduceTask \u7684\u903b\u8f91\u8fd0\u7b97\u8fc7 \u7a0b\uff08\u4ece\u6587\u4ef6\u4e2d\u53d6\u51fa\u4e00\u4e2a\u4e00\u4e2a\u7684\u952e\u503c\u5bf9 Group\uff0c\u8c03\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684 reduce()\u65b9\u6cd5\uff09 shuffle map\u4e4b\u540ereduce\u4e4b\u524d -> shuffle \u6392\u5e8f \u5bf9\u4e8eMapTask\uff0c\u5b83\u4f1a\u5c06\u5904\u7406\u7684\u7ed3\u679c\u6682\u65f6\u653e\u5230\u73af\u5f62\u7f13\u51b2\u533a\u4e2d\uff0c\u5f53\u73af\u5f62\u7f13\u51b2\u533a\u4f7f \u7528\u7387\u8fbe\u5230\u4e00\u5b9a\u9608\u503c\u540e\uff0c\u518d\u5bf9\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u5feb\u901f\u6392\u5e8f\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6709\u5e8f\u6570 \u636e\u6ea2\u5199\u5230\u78c1\u76d8\u4e0a\uff0c\u800c\u5f53\u6570\u636e\u5904\u7406\u5b8c\u6bd5\u540e\uff0c\u5b83\u4f1a\u5bf9\u78c1\u76d8\u4e0a\u6240\u6709\u6587\u4ef6\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\u3002 \u5bf9\u4e8eReduceTask\uff0c\u5b83\u4ece\u6bcf\u4e2aMapTask\u4e0a\u8fdc\u7a0b\u62f7\u8d1d\u76f8\u5e94\u7684\u6570\u636e\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5927 \u5c0f\u8d85\u8fc7\u4e00\u5b9a\u9608\u503c\uff0c\u5219\u6ea2\u5199\u78c1\u76d8\u4e0a\uff0c\u5426\u5219\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u3002\u5982\u679c\u78c1\u76d8\u4e0a\u6587\u4ef6\u6570\u76ee\u8fbe\u5230 \u4e00\u5b9a\u9608\u503c\uff0c\u5219\u8fdb\u884c\u4e00\u6b21\u5f52\u5e76\u6392\u5e8f\u4ee5\u751f\u6210\u4e00\u4e2a\u66f4\u5927\u6587\u4ef6\uff1b\u5982\u679c\u5185\u5b58\u4e2d\u6587\u4ef6\u5927\u5c0f\u6216\u8005 \u6570\u76ee\u8d85\u8fc7\u4e00\u5b9a\u9608\u503c\uff0c\u5219\u8fdb\u884c\u4e00\u6b21\u5408\u5e76\u540e\u5c06\u6570\u636e\u6ea2\u5199\u5230\u78c1\u76d8\u4e0a\u3002\u5f53\u6240\u6709\u6570\u636e\u62f7\u8d1d\u5b8c \u6bd5\u540e\uff0cReduceTask\u7edf\u4e00\u5bf9\u5185\u5b58\u548c\u78c1\u76d8\u4e0a\u7684\u6240\u6709\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u5f52\u5e76\u6392\u5e8f\u3002 \uff081\uff09\u90e8\u5206\u6392\u5e8f MapReduce\u6839\u636e\u8f93\u5165\u8bb0\u5f55\u7684\u952e\u5bf9\u6570\u636e\u96c6\u6392\u5e8f\u3002\u4fdd\u8bc1\u8f93\u51fa\u7684\u6bcf\u4e2a\u6587\u4ef6\u5185\u90e8\u6709\u5e8f\u3002 \uff082\uff09\u5168\u6392\u5e8f \u6700\u7ec8\u8f93\u51fa\u7ed3\u679c\u53ea\u6709\u4e00\u4e2a\u6587\u4ef6\uff0c\u4e14\u6587\u4ef6\u5185\u90e8\u6709\u5e8f\u3002\u5b9e\u73b0\u65b9\u5f0f\u662f\u53ea\u8bbe\u7f6e\u4e00\u4e2aReduceTask\u3002\u4f46\u8be5\u65b9\u6cd5\u5728 \u5904\u7406\u5927\u578b\u6587\u4ef6\u65f6\u6548\u7387\u6781\u4f4e\uff0c\u56e0\u4e3a\u4e00\u53f0\u673a\u5668\u5904\u7406\u6240\u6709\u6587\u4ef6\uff0c\u5b8c\u5168\u4e27\u5931\u4e86MapReduce\u6240\u63d0\u4f9b\u7684\u5e76\u884c\u67b6\u6784\u3002 \uff083\uff09\u8f85\u52a9\u6392\u5e8f\uff1a\uff08GroupingComparator\u5206\u7ec4\uff09 \u5728Reduce\u7aef\u5bf9key\u8fdb\u884c\u5206\u7ec4\u3002\u5e94\u7528\u4e8e\uff1a\u5728\u63a5\u6536\u7684key\u4e3abean\u5bf9\u8c61\u65f6\uff0c\u60f3\u8ba9\u4e00\u4e2a\u6216\u51e0\u4e2a\u5b57\u6bb5\u76f8\u540c\uff08\u5168\u90e8 \u5b57\u6bb5\u6bd4\u8f83\u4e0d\u76f8\u540c\uff09\u7684key\u8fdb\u5165\u5230\u540c\u4e00\u4e2areduce\u65b9\u6cd5\u65f6\uff0c\u53ef\u4ee5\u91c7\u7528\u5206\u7ec4\u6392\u5e8f\u3002 \uff084\uff09\u4e8c\u6b21\u6392\u5e8f \u5728\u81ea\u5b9a\u4e49\u6392\u5e8f\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679ccompareTo\u4e2d\u7684\u5224\u65ad\u6761\u4ef6\u4e3a\u4e24\u4e2a\u5373\u4e3a\u4e8c\u6b21\u6392\u5e8f\u3002 \u5f85\u8bb0\u5f55 https://blog.csdn.net/zyw0101/article/details/126626837 src-mapreduce maptask 1.Read \u9636\u6bb5\uff1aMapTask \u901a\u8fc7 InputFormat \u83b7\u5f97\u7684 RecordReader\uff0c\u4ece\u8f93\u5165 InputSplit \u4e2d \u89e3\u6790\u51fa\u4e00\u4e2a\u4e2a key/value\u3002 2.Map \u9636\u6bb5\uff1a\u8be5\u8282\u70b9\u4e3b\u8981\u662f\u5c06\u89e3\u6790\u51fa\u7684 key/value \u4ea4\u7ed9\u7528\u6237\u7f16\u5199 map()\u51fd\u6570\u5904\u7406\uff0c\u5e76 \u4ea7\u751f\u4e00\u7cfb\u5217\u65b0\u7684 key/value\u3002 3.Collect \u6536\u96c6\u9636\u6bb5\uff1a\u5728\u7528\u6237\u7f16\u5199 map()\u51fd\u6570\u4e2d\uff0c\u5f53\u6570\u636e\u5904\u7406\u5b8c\u6210\u540e\uff0c\u4e00\u822c\u4f1a\u8c03\u7528 OutputCollector.collect()\u8f93\u51fa\u7ed3\u679c\u3002\u5728\u8be5\u51fd\u6570\u5185\u90e8\uff0c\u5b83\u4f1a\u5c06\u751f\u6210\u7684 key/value \u5206\u533a\uff08\u8c03\u7528 Partitioner\uff09\uff0c\u5e76\u5199\u5165\u4e00\u4e2a\u73af\u5f62\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\u3002 4.Spill \u9636\u6bb5\uff1a\u5373\u201c\u6ea2\u5199\u201d\uff0c\u5f53\u73af\u5f62\u7f13\u51b2\u533a\u6ee1\u540e\uff0cMapReduce \u4f1a\u5c06\u6570\u636e\u5199\u5230\u672c\u5730\u78c1\u76d8\u4e0a\uff0c \u751f\u6210\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5c06\u6570\u636e\u5199\u5165\u672c\u5730\u78c1\u76d8\u4e4b\u524d\uff0c\u5148\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u672c\u5730\u6392\u5e8f\uff0c\u5e76\u5728\u5fc5\u8981\u65f6\u5bf9\u6570\u636e\u8fdb\u884c\u5408\u5e76\u3001\u538b\u7f29\u7b49\u64cd\u4f5c\u3002 \u6ea2\u5199\u9636\u6bb5\u8be6\u60c5\uff1a \u6b65\u9aa4 1\uff1a\u5229\u7528\u5feb\u901f\u6392\u5e8f\u7b97\u6cd5\u5bf9\u7f13\u5b58\u533a\u5185\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u6392\u5e8f\u65b9\u5f0f\u662f\uff0c\u5148\u6309\u7167\u5206\u533a\u7f16\u53f7 Partition \u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u6309\u7167 key \u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u6837\uff0c\u7ecf\u8fc7\u6392\u5e8f\u540e\uff0c\u6570\u636e\u4ee5\u5206\u533a\u4e3a\u5355\u4f4d\u805a\u96c6\u5728 \u4e00\u8d77\uff0c\u4e14\u540c\u4e00\u5206\u533a\u5185\u6240\u6709\u6570\u636e\u6309\u7167 key \u6709\u5e8f\u3002 \u6b65\u9aa4 2\uff1a\u6309\u7167\u5206\u533a\u7f16\u53f7\u7531\u5c0f\u5230\u5927\u4f9d\u6b21\u5c06\u6bcf\u4e2a\u5206\u533a\u4e2d\u7684\u6570\u636e\u5199\u5165\u4efb\u52a1\u5de5\u4f5c\u76ee\u5f55\u4e0b\u7684\u4e34\u65f6\u6587 \u4ef6 output/spillN.out\uff08N \u8868\u793a\u5f53\u524d\u6ea2\u5199\u6b21\u6570\uff09\u4e2d\u3002\u5982\u679c\u7528\u6237\u8bbe\u7f6e\u4e86 Combiner\uff0c\u5219\u5199\u5165\u6587\u4ef6\u4e4b \u524d\uff0c\u5bf9\u6bcf\u4e2a\u5206\u533a\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u805a\u96c6\u64cd\u4f5c\u3002 \u6b65\u9aa4 3\uff1a\u5c06\u5206\u533a\u6570\u636e\u7684\u5143\u4fe1\u606f\u5199\u5230\u5185\u5b58\u7d22\u5f15\u6570\u636e\u7ed3\u6784 SpillRecord \u4e2d\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5206\u533a\u7684\u5143 \u4fe1\u606f\u5305\u62ec\u5728\u4e34\u65f6\u6587\u4ef6\u4e2d\u7684\u504f\u79fb\u91cf\u3001\u538b\u7f29\u524d\u6570\u636e\u5927\u5c0f\u548c\u538b\u7f29\u540e\u6570\u636e\u5927\u5c0f\u3002\u5982\u679c\u5f53\u524d\u5185\u5b58\u7d22\u5f15\u5927 \u5c0f\u8d85\u8fc7 1MB\uff0c\u5219\u5c06\u5185\u5b58\u7d22\u5f15\u5199\u5230\u6587\u4ef6 output/spillN.out.index \u4e2d\u3002 5.Merge \u9636\u6bb5\uff1a\u5f53\u6240\u6709\u6570\u636e\u5904\u7406\u5b8c\u6210\u540e\uff0cMapTask \u5bf9\u6240\u6709\u4e34\u65f6\u6587\u4ef6\u8fdb\u884c\u4e00\u6b21\u5408\u5e76\uff0c \u4ee5\u786e\u4fdd\u6700\u7ec8\u53ea\u4f1a\u751f\u6210\u4e00\u4e2a\u6570\u636e\u6587\u4ef6\u3002 \u5f53\u6240\u6709\u6570\u636e\u5904\u7406\u5b8c\u540e\uff0cMapTask \u4f1a\u5c06\u6240\u6709\u4e34\u65f6\u6587\u4ef6\u5408\u5e76\u6210\u4e00\u4e2a\u5927\u6587\u4ef6\uff0c\u5e76\u4fdd\u5b58\u5230\u6587\u4ef6 output/file.out \u4e2d\uff0c\u540c\u65f6\u751f\u6210\u76f8\u5e94\u7684\u7d22\u5f15\u6587\u4ef6 output/file.out.index\u3002 \u5728\u8fdb\u884c\u6587\u4ef6\u5408\u5e76\u8fc7\u7a0b\u4e2d\uff0cMapTask \u4ee5\u5206\u533a\u4e3a\u5355\u4f4d\u8fdb\u884c\u5408\u5e76\u3002\u5bf9\u4e8e\u67d0\u4e2a\u5206\u533a\uff0c\u5b83\u5c06\u91c7\u7528\u591a \u8f6e\u9012\u5f52\u5408\u5e76\u7684\u65b9\u5f0f\u3002\u6bcf\u8f6e\u5408\u5e76 mapreduce.task.io.sort.factor\uff08\u9ed8\u8ba4 10\uff09\u4e2a\u6587\u4ef6\uff0c\u5e76\u5c06\u4ea7\u751f\u7684\u6587 \u4ef6\u91cd\u65b0\u52a0\u5165\u5f85\u5408\u5e76\u5217\u8868\u4e2d\uff0c\u5bf9\u6587\u4ef6\u6392\u5e8f\u540e\uff0c\u91cd\u590d\u4ee5\u4e0a\u8fc7\u7a0b\uff0c\u76f4\u5230\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u5927\u6587\u4ef6\u3002 \u8ba9\u6bcf\u4e2a MapTask \u6700\u7ec8\u53ea\u751f\u6210\u4e00\u4e2a\u6570\u636e\u6587\u4ef6\uff0c\u53ef\u907f\u514d\u540c\u65f6\u6253\u5f00\u5927\u91cf\u6587\u4ef6\u548c\u540c\u65f6\u8bfb\u53d6\u5927\u91cf \u5c0f\u6587\u4ef6\u4ea7\u751f\u7684\u968f\u673a\u8bfb\u53d6\u5e26\u6765\u7684\u5f00\u9500\u3002 reduce \u5de5\u4f5c\u673a\u5236 1.Copy \u9636\u6bb5\uff1aReduceTask \u4ece\u5404\u4e2a MapTask \u4e0a\u8fdc\u7a0b\u62f7\u8d1d\u4e00\u7247\u6570\u636e\uff0c\u5e76\u9488\u5bf9\u67d0\u4e00\u7247\u6570 \u636e\uff0c\u5982\u679c\u5176\u5927\u5c0f\u8d85\u8fc7\u4e00\u5b9a\u9608\u503c\uff0c\u5219\u5199\u5230\u78c1\u76d8\u4e0a\uff0c\u5426\u5219\u76f4\u63a5\u653e\u5230\u5185\u5b58\u4e2d\u3002 2.Sort \u9636\u6bb5\uff1a\u5728\u8fdc\u7a0b\u62f7\u8d1d\u6570\u636e\u7684\u540c\u65f6\uff0cReduceTask \u542f\u52a8\u4e86\u4e24\u4e2a\u540e\u53f0\u7ebf\u7a0b\u5bf9\u5185\u5b58\u548c\u78c1 \u76d8\u4e0a\u7684\u6587\u4ef6\u8fdb\u884c\u5408\u5e76\uff0c\u4ee5\u9632\u6b62\u5185\u5b58\u4f7f\u7528\u8fc7\u591a\u6216\u78c1\u76d8\u4e0a\u6587\u4ef6\u8fc7\u591a\u3002\u6309\u7167 MapReduce \u8bed\u4e49\uff0c\u7528 \u6237\u7f16\u5199 reduce()\u51fd\u6570\u8f93\u5165\u6570\u636e\u662f\u6309 key \u8fdb\u884c\u805a\u96c6\u7684\u4e00\u7ec4\u6570\u636e\u3002\u4e3a\u4e86\u5c06 key \u76f8\u540c\u7684\u6570\u636e\u805a\u5728\u4e00 \u8d77\uff0cHadoop \u91c7\u7528\u4e86\u57fa\u4e8e\u6392\u5e8f\u7684\u7b56\u7565\u3002\u7531\u4e8e\u5404\u4e2a MapTask \u5df2\u7ecf\u5b9e\u73b0\u5bf9\u81ea\u5df1\u7684\u5904\u7406\u7ed3\u679c\u8fdb\u884c\u4e86 \u5c40\u90e8\u6392\u5e8f\uff0c\u56e0\u6b64\uff0cReduceTask \u53ea\u9700\u5bf9\u6240\u6709\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u5f52\u5e76\u6392\u5e8f\u5373\u53ef\u3002 3.Reduce \u9636\u6bb5\uff1areduce()\u51fd\u6570\u5c06\u8ba1\u7b97\u7ed3\u679c\u5199\u5230 HDFS \u4e0a\u3002 =================== ReduceTask =================== if (isMapOrReduce()) //reduceTask324 \u884c\uff0c\u63d0\u524d\u6253\u65ad\u70b9 \u538b\u7f29 why ad disad \u538b\u7f29\u7684\u4f18\u70b9\uff1a\u4ee5\u51cf\u5c11\u78c1\u76d8 IO\u3001\u51cf\u5c11\u78c1\u76d8\u5b58\u50a8\u7a7a\u95f4\u3002 \u538b\u7f29\u7684\u7f3a\u70b9\uff1a\u589e\u52a0 CPU \u5f00\u9500\u3002 \u8fd0\u7b97\u5bc6\u96c6\u578b\u7684 Job\uff0c\u5c11\u7528\u538b\u7f29 IO \u5bc6\u96c6\u578b\u7684 Job\uff0c\u591a\u7528\u538b\u7f29 \u538b\u7f29\u7b97\u6cd5\u4ecb\u7ecd \u7b97\u6cd5 \u539f\u59cb\u5927\u5c0f \u538b\u7f29\u5927\u5c0f \u538b\u7f29\u901f\u5ea6 \u89e3\u538b\u901f\u5ea6 gzip 8.3GB 1.8GB 17.5MB/s 58MB/s bzip2 8.3GB 1.1GB 2.4MB/s 9.5MB/s LZO 8.3GB 2.9GB 49.3MB/s 74.6MB/s \u4f4d\u7f6e\u9009\u62e9 1.\u8f93\u5165\u7aef\u91c7\u7528\u538b\u7f29 \u65e0\u987b\u663e\u793a\u6307\u5b9a\u4f7f\u7528\u7684\u7f16\u89e3\u7801\u65b9 \u5f0f\u3002Hadoop\u81ea\u52a8\u68c0\u67e5\u6587\u4ef6\u6269 \u5c55\u540d\uff0c\u5982\u679c\u6269\u5c55\u540d\u80fd\u591f\u5339\u914d\uff0c \u5c31\u4f1a\u7528\u6070\u5f53\u7684\u7f16\u89e3\u7801\u65b9\u5f0f\u5bf9\u6587 \u4ef6\u8fdb\u884c\u538b\u7f29\u548c\u89e3\u538b\u3002 \u4f01\u4e1a\u5f00\u53d1\u4e2d\u5982\u4f55\u9009\u62e9\uff1a\u4e3a\u4e86\u51cf \u5c11MapTask\u548cReduceTask\u4e4b\u95f4\u7684\u7f51\u7edc IO\u3002\u91cd\u70b9\u8003\u8651\u538b\u7f29\u548c\u89e3\u538b\u7f29\u5feb\u7684 LZO\u3001Snappy\u3002 \u770b\u9700\u6c42\uff1a \u5982\u679c\u6570\u636e\u6c38\u4e45\u4fdd\u5b58\uff0c\u8003\u8651\u538b\u7f29 \u7387\u6bd4\u8f83\u9ad8\u7684Bzip2\u548cGzip\u3002 \u5982\u679c\u4f5c\u4e3a\u4e0b\u4e00\u4e2aMapReduce\u8f93 \u5165\uff0c\u9700\u8981\u8003\u8651\u6570\u636e\u91cf\u548c\u662f\u5426\u652f\u6301\u5207 \u4f01\u4e1a\u5f00\u53d1\uff1a 1\uff09\u6570\u636e\u91cf\u5c0f\u4e8e\u5757\u5927\u5c0f\uff0c\u91cd\u70b9 \u8003\u8651\u538b\u7f29\u548c\u89e3\u538b\u7f29\u901f\u5ea6\u6bd4\u8f83\u5feb \u7684LZO/Snappy 2\uff09\u6570\u636e\u91cf\u975e\u5e38\u5927\uff0c\u91cd\u70b9\u8003\u8651 \u652f\u6301\u5207\u7247\u7684Bzip2\u548cLZO 2.map\u8f93\u51fa \u4f01\u4e1a\u5f00\u53d1\u4e2d\u5982\u4f55\u9009\u62e9\uff1a\u4e3a\u4e86\u51cf\u5c11MapTask\u548cReduceTask\u4e4b\u95f4\u7684\u7f51\u7edc IO\u3002\u91cd\u70b9\u8003\u8651\u538b\u7f29\u548c\u89e3\u538b\u7f29\u5feb\u7684 LZO\u3001Snappy\u3002 3.reduce \u8f93\u51fa \u770b\u9700\u6c42\uff1a \u5982\u679c\u6570\u636e\u6c38\u4e45\u4fdd\u5b58\uff0c\u8003\u8651\u538b\u7f29 \u7387\u6bd4\u8f83\u9ad8\u7684Bzip2\u548cGzip\u3002 \u5982\u679c\u4f5c\u4e3a\u4e0b\u4e00\u4e2aMapReduce\u8f93 \u5165\uff0c\u9700\u8981\u8003\u8651\u6570\u636e\u91cf\u548c\u662f\u5426\u652f\u6301\u5207\u7247\u3002 \u538b\u7f29\u914d\u7f6e \u7b97\u6cd5 \u538b\u7f29\u683c\u5f0f \u538b\u7f29\u683c\u5f0f \u5bf9\u5e94\u7684\u7f16\u7801/\u89e3\u7801\u5668 DEFLATE org.apache.hadoop.io.compress.DefaultCodec gzip org.apache.hadoop.io.compress.GzipCodec bzip2 org.apache.hadoop.io.compress.BZip2Codec LZO com.hadoop.compression.lzo.LzopCodec Snappy org.apache.hadoop.io.compress.SnappyCodec hadoop\u542f\u7528 \u53c2\u6570 \u9ed8\u8ba4\u503c \u9636\u6bb5 \u5efa\u8bae io.compression.codecs \uff08\u5728 core-site.xml \u4e2d\u914d\u7f6e\uff09 \u65e0\uff0c\u8fd9\u4e2a\u9700\u8981\u5728\u547d\u4ee4\u884c\u8f93\u5165 hadoop checknative \u67e5\u770b \u8f93\u5165\u538b\u7f29 Hadoop \u4f7f\u7528\u6587\u4ef6\u6269\u5c55 \u540d\u5224\u65ad\u662f\u5426\u652f\u6301\u67d0\u79cd \u7f16\u89e3\u7801\u5668 mapreduce.map.output.compress\uff08\u5728 mapred-site.xml \u4e2d \u914d\u7f6e\uff09 false mapper \u8f93\u51fa \u8fd9\u4e2a\u53c2\u6570\u8bbe\u4e3a true \u542f \u7528\u538b\u7f29 mapreduce.map.output.compress.codec\uff08\u5728 mapredsite.xml \u4e2d\u914d\u7f6e\uff09 org.apache.hadoop.io.com press.DefaultCodec mapper \u8f93\u51fa \u4f01\u4e1a\u591a\u4f7f\u7528 LZO \u6216 Snappy \u7f16\u89e3\u7801\u5668\u5728\u6b64 \u9636\u6bb5\u538b\u7f29\u6570\u636e mapreduce.output.fileoutpu tformat.compress\uff08\u5728 mapred-site.xml \u4e2d\u914d\u7f6e\uff09 false reducer \u8f93\u51fa \u8fd9\u4e2a\u53c2\u6570\u8bbe\u4e3a true \u542f \u7528\u538b\u7f29 mapreduce.output.fileoutpu tformat.compress.codec\uff08\u5728 mapred-site.xml \u4e2d\u914d\u7f6e\uff09 org.apache.hadoop.io.com press.DefaultCodec reducer \u8f93\u51fa \u4f7f\u7528\u6807\u51c6\u5de5\u5177\u6216\u8005\u7f16 \u89e3\u7801\u5668\uff0c\u5982 gzip \u548c bzip2 \u6e90\u7801\u652f\u6301 BZip2Codec\u3001DefaultCodec // \u5f00\u542f map \u7aef\u8f93\u51fa\u538b\u7f29 conf.setBoolean(\"mapreduce.map.output.compress\", true); // \u8bbe\u7f6e map \u7aef\u8f93\u51fa\u538b\u7f29\u65b9\u5f0f conf.setClass(\"mapreduce.map.output.compress.codec\", BZip2Codec.class,CompressionCodec.class); // \u8bbe\u7f6e reduce \u7aef\u8f93\u51fa\u538b\u7f29\u5f00\u542f FileOutputFormat.setCompressOutput(job, true); // \u8bbe\u7f6e\u538b\u7f29\u7684\u65b9\u5f0f FileOutputFormat.setOutputCompressorClass(job, BZip2Codec.class);","title":"mapreduce"},{"location":"bigdata/hadoop/mapreduce/#overview","text":"","title":"overview"},{"location":"bigdata/hadoop/mapreduce/#what","text":"MapReduce \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u8fd0\u7b97\u7a0b\u5e8f\u7684\u7f16\u7a0b\u6846\u67b6 \uff0c\u662f\u7528\u6237\u5f00\u53d1\u201c\u57fa\u4e8e Hadoop \u7684\u6570\u636e\u5206\u6790\u5e94\u7528\u201d\u7684\u6838\u5fc3\u6846\u67b6\u3002 MapReduce \u6838\u5fc3\u529f\u80fd\u662f\u5c06\u7528\u6237\u7f16\u5199\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\u548c\u81ea\u5e26\u9ed8\u8ba4\u7ec4\u4ef6\u6574\u5408\u6210\u4e00\u4e2a\u5b8c\u6574\u7684 \u5206\u5e03\u5f0f\u8fd0\u7b97\u7a0b\u5e8f\uff0c\u5e76\u53d1\u8fd0\u884c\u5728\u4e00\u4e2a Hadoop \u96c6\u7fa4\u4e0a\u3002","title":"what"},{"location":"bigdata/hadoop/mapreduce/#ad-disad","text":"","title":"ad disad"},{"location":"bigdata/hadoop/mapreduce/#ad","text":"1.MapReduce \u6613\u4e8e\u7f16\u7a0b \u200b \u5b83\u7b80\u5355\u7684\u5b9e\u73b0\u4e00\u4e9b\u63a5\u53e3\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e00\u4e2a\u5206\u5e03\u5f0f\u7a0b\u5e8f\uff0c 2.\u826f\u597d\u7684\u6269\u5c55\u6027 \u200b \u53ef\u4ee5\u52a8\u6001\u589e\u52a0\u673a\u5668 3.\u9ad8\u5bb9\u9519\u6027 \u200b \u5176\u4e2d\u4e00\u53f0\u673a\u5668\u6302\u4e86\uff0c\u5b83\u53ef\u4ee5\u628a\u4e0a\u9762\u7684\u8ba1\u7b97\u4efb\u52a1\u8f6c\u79fb\u5230\u53e6\u5916\u4e00\u4e2a\u8282\u70b9\u4e0a\u8fd0\u884c\uff0c \u4e0d\u81f3\u4e8e\u8fd9\u4e2a\u4efb\u52a1\u8fd0\u884c\u5931\u8d25","title":"ad"},{"location":"bigdata/hadoop/mapreduce/#disad","text":"1.\u4e0d\u64c5\u957f\u5b9e\u65f6\u8ba1\u7b97 \u200b MapReduce \u65e0\u6cd5\u50cf MySQL \u4e00\u6837\uff0c\u5728\u6beb\u79d2\u6216\u8005\u79d2\u7ea7\u5185\u8fd4\u56de\u7ed3\u679c\u3002 2.\u4e0d\u64c5\u957f\u6d41\u5f0f\u8ba1\u7b97 \u200b \u6d41\u5f0f\u8ba1\u7b97\u7684\u8f93\u5165\u6570\u636e\u662f\u52a8\u6001\u7684\uff0c\u800c MapReduce \u7684\u8f93\u5165\u6570\u636e\u96c6\u662f\u9759\u6001\u7684\uff0c\u4e0d\u80fd\u52a8\u6001\u53d8\u5316\u3002 \u8fd9\u662f\u56e0\u4e3a MapReduce \u81ea\u8eab\u7684\u8bbe\u8ba1\u7279\u70b9\u51b3\u5b9a\u4e86\u6570\u636e\u6e90\u5fc5\u987b\u662f\u9759\u6001\u7684\u3002 3.\u4e0d\u64c5\u957f DAG\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\u8ba1\u7b97 \u200b \u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\uff0c\u540e\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u8f93\u5165\u4e3a\u524d\u4e00\u4e2a\u7684\u8f93\u51fa\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c MapReduce \u5e76\u4e0d\u662f\u4e0d\u80fd\u505a\uff0c\u800c\u662f\u4f7f\u7528\u540e\uff0c\u6bcf\u4e2a MapReduce \u4f5c\u4e1a\u7684\u8f93\u51fa\u7ed3\u679c\u90fd\u4f1a\u5199\u5165\u5230\u78c1\u76d8\uff0c \u4f1a\u9020\u6210\u5927\u91cf\u7684\u78c1\u76d8 IO\uff0c\u5bfc\u81f4\u6027\u80fd\u975e\u5e38\u7684\u4f4e\u4e0b\u3002","title":"disad"},{"location":"bigdata/hadoop/mapreduce/#_1","text":"1.\u5206\u5e03\u5f0f\u7684\u8fd0\u7b97\u7a0b\u5e8f\u5f80\u5f80\u9700\u8981\u5206\u6210\u81f3\u5c11 2 \u4e2a\u9636\u6bb5\u3002 2.\u7b2c\u4e00\u4e2a\u9636\u6bb5\u7684 MapTask \u5e76\u53d1\u5b9e\u4f8b\uff0c\u5b8c\u5168\u5e76\u884c\u8fd0\u884c\uff0c\u4e92\u4e0d\u76f8\u5e72\u3002 3.\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u7684 ReduceTask \u5e76\u53d1\u5b9e\u4f8b\u4e92\u4e0d\u76f8\u5e72\uff0c\u4f46\u662f\u4ed6\u4eec\u7684\u6570\u636e\u4f9d\u8d56\u4e8e\u4e0a\u4e00\u4e2a\u9636\u6bb5 \u7684\u6240\u6709 MapTask \u5e76\u53d1\u5b9e\u4f8b\u7684\u8f93\u51fa\u3002 4.MapReduce \u7f16\u7a0b\u6a21\u578b\u53ea\u80fd\u5305\u542b\u4e00\u4e2a Map \u9636\u6bb5\u548c\u4e00\u4e2a Reduce \u9636\u6bb5\uff0c\u5982\u679c\u7528\u6237\u7684\u4e1a \u52a1\u903b\u8f91\u975e\u5e38\u590d\u6742\uff0c\u90a3\u5c31\u53ea\u80fd\u591a\u4e2a MapReduce \u7a0b\u5e8f\uff0c\u4e32\u884c\u8fd0\u884c\u3002","title":"\u6838\u5fc3\u601d\u60f3"},{"location":"bigdata/hadoop/mapreduce/#mapreduce","text":"\uff081\uff09MrAppMaster\uff1a\u8d1f\u8d23\u6574\u4e2a\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u8c03\u5ea6\u53ca\u72b6\u6001\u534f\u8c03\u3002 \uff082\uff09MapTask\uff1a\u8d1f\u8d23 Map \u9636\u6bb5\u7684\u6574\u4e2a\u6570\u636e\u5904\u7406\u6d41\u7a0b\u3002 \uff083\uff09ReduceTask\uff1a\u8d1f\u8d23 Reduce \u9636\u6bb5\u7684\u6574\u4e2a\u6570\u636e\u5904\u7406\u6d41\u7a0b\u3002","title":"MapReduce\u8fdb\u7a0b"},{"location":"bigdata/hadoop/mapreduce/#_2","text":"","title":"\u5e8f\u5217\u5316\u7c7b\u578b"},{"location":"bigdata/hadoop/mapreduce/#mapreduce_1","text":"1\uff0eMapper\u9636\u6bb5 \uff081\uff09\u7528\u6237\u81ea\u5b9a\u4e49\u7684Mapper\u8981\u7ee7\u627f\u81ea\u5df1\u7684\u7236\u7c7b \uff082\uff09Mapper\u7684\u8f93\u5165\u6570\u636e\u662fKV\u5bf9\u7684\u5f62\u5f0f\uff08KV\u7684\u7c7b\u578b\u53ef\u81ea\u5b9a\u4e49\uff09 \uff083\uff09Mapper\u4e2d\u7684\u4e1a\u52a1\u903b\u8f91\u5199\u5728map()\u65b9\u6cd5\u4e2d \uff084\uff09Mapper\u7684\u8f93\u51fa\u6570\u636e\u662fKV\u5bf9\u7684\u5f62\u5f0f\uff08KV\u7684\u7c7b\u578b\u53ef\u81ea\u5b9a\u4e49\uff09 \uff085\uff09map()\u65b9\u6cd5\uff08MapTask\u8fdb\u7a0b\uff09\u5bf9\u6bcf\u4e00\u4e2a\u8c03\u7528\u4e00\u6b21 2\uff0eReducer\u9636\u6bb5 \uff081\uff09\u7528\u6237\u81ea\u5b9a\u4e49\u7684Reducer\u8981\u7ee7\u627f\u81ea\u5df1\u7684\u7236\u7c7b \uff082\uff09Reducer\u7684\u8f93\u5165\u6570\u636e\u7c7b\u578b\u5bf9\u5e94Mapper\u7684\u8f93\u51fa\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u662fKV \uff083\uff09Reducer\u7684\u4e1a\u52a1\u903b\u8f91\u5199\u5728reduce()\u65b9\u6cd5\u4e2d \uff084\uff09ReduceTask\u8fdb\u7a0b\u5bf9\u6bcf\u4e00\u7ec4\u76f8\u540ck\u7684\u7ec4\u8c03\u7528\u4e00\u6b21reduce()\u65b9\u6cd5 3\uff0eDriver\u9636\u6bb5 \u76f8\u5f53\u4e8eYARN\u96c6\u7fa4\u7684\u5ba2\u6237\u7aef\uff0c\u7528\u4e8e\u63d0\u4ea4\u6211\u4eec\u6574\u4e2a\u7a0b\u5e8f\u5230YARN\u96c6\u7fa4\uff0c\u63d0\u4ea4\u7684\u662f \u5c01\u88c5\u4e86MapReduce\u7a0b\u5e8f\u76f8\u5173\u8fd0\u884c\u53c2\u6570\u7684job\u5bf9\u8c61","title":"mapreduce\u7f16\u7801\u89c4\u8303"},{"location":"bigdata/hadoop/mapreduce/#_3","text":"","title":"\u5b9e\u64cd"},{"location":"bigdata/hadoop/mapreduce/#demo","text":"","title":"demo"},{"location":"bigdata/hadoop/mapreduce/#_4","text":"\u9700\u8981\u9996\u5148\u914d\u7f6e\u597d HADOOP_HOME \u53d8\u91cf\u4ee5\u53ca Windows \u8fd0\u884c\u4f9d\u8d56\uff08\u53c2\u8003hdfs\uff09 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"> <modelVersion>4.0.0</modelVersion> <groupId>com.matt.stu</groupId> <artifactId>stu-mapreduce</artifactId> <version>1.0-SNAPSHOT</version> <properties> <maven.compiler.source>8</maven.compiler.source> <maven.compiler.target>8</maven.compiler.target> </properties> <dependencies> <dependency> <groupId>org.apache.hadoop</groupId> <artifactId>hadoop-client</artifactId> <version>3.1.3</version> </dependency> <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.12</version> </dependency> <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-log4j12</artifactId> <version>1.7.30</version> </dependency> </dependencies> <build> <plugins> <plugin> <artifactId>maven-compiler-plugin</artifactId> <version>3.6.1</version> <configuration> <source>1.8</source> <target>1.8</target> </configuration> </plugin> <!--\u4f9d\u8d56\u7684jar\u5305\u4e5f\u6253\u8fdb\u53bb--> <plugin> <artifactId>maven-assembly-plugin</artifactId> <configuration> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> </descriptorRefs> </configuration> <executions> <execution> <id>make-assembly</id> <phase>package</phase> <goals> <goal>single</goal> </goals> </execution> </executions> </plugin> </plugins> </build> </project> log4j.properties log4j.rootLogger=INFO, stdout log4j.appender.stdout=org.apache.log4j.ConsoleAppender log4j.appender.stdout.layout=org.apache.log4j.PatternLayout log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n log4j.appender.logfile=org.apache.log4j.FileAppender log4j.appender.logfile.File=target/spring.log log4j.appender.logfile.layout=org.apache.log4j.PatternLayout log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n","title":"\u524d\u63d0"},{"location":"bigdata/hadoop/mapreduce/#_5","text":"\u7edf\u8ba1\u6587\u672c\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u6b21\u6570 map:\u5355\u8bcd\u7684\u5207\u5272 reduce:\u5355\u8bcd\u7684\u7edf\u8ba1 driver:\u4efb\u52a1\u7684\u914d\u7f6e \u548c\u63d0\u4ea4","title":"\u5177\u4f53\u5b9e\u73b0"},{"location":"bigdata/hadoop/mapreduce/#hadoop","text":"","title":"hadoop\u96c6\u7fa4\u8fd0\u884c"},{"location":"bigdata/hadoop/mapreduce/#_6","text":"<build> <plugins> <plugin> <artifactId>maven-compiler-plugin</artifactId> <version>3.6.1</version> <configuration> <source>1.8</source> <target>1.8</target> </configuration> </plugin> <!--\u4f9d\u8d56\u7684jar\u5305\u4e5f\u6253\u8fdb\u53bb--> <plugin> <artifactId>maven-assembly-plugin</artifactId> <configuration> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> </descriptorRefs> </configuration> <executions> <execution> <id>make-assembly</id> <phase>package</phase> <goals> <goal>single</goal> </goals> </execution> </executions> </plugin> </plugins> </build>","title":"\u6253\u5305\u4f9d\u8d56"},{"location":"bigdata/hadoop/mapreduce/#_7","text":"\u4e0d\u5e26\u4f9d\u8d56\u7684jar\u5305 hadoop jar wc.jar com.matt.mapreduce.wordcount2.WordCountDriver /input /output","title":"\u8fd0\u884c"},{"location":"bigdata/hadoop/mapreduce/#_8","text":"/opt/module/hadoop-3.1.3/share/hadoop/mapreduce sz hadoop-mapreduce-examples-3.1.3.jar","title":"\u9ed8\u8ba4\u6848\u4f8b"},{"location":"bigdata/hadoop/mapreduce/#_9","text":"\u53c2\u8003 https://github.com/imattdu/stu-mapreduce","title":"\u66f4\u591a\u6848\u4f8b"},{"location":"bigdata/hadoop/mapreduce/#mapreduce_2","text":"","title":"mapreduce \u539f\u7406"},{"location":"bigdata/hadoop/mapreduce/#src-job","text":"1.\u5efa\u7acb\u8fde\u63a5 835\u5efa\u7acb\u8fde\u63a5 2.\u63d0\u4ea4job 839\u63d0\u4ea4\u4efb\u52a1 -> (1)81\u521b\u5efa\u7ed9\u96c6\u7fa4\u63d0\u4ea4\u6570\u636e\u7684 Stag \u8def\u5f84 (2)90\u83b7\u53d6 jobid \uff0c\u5e76\u521b\u5efa Job \u8def\u5f84 (3)121\u62f7\u8d1d jar \u5305\u5230\u96c6\u7fa4 (4)124\u8ba1\u7b97\u5207\u7247\uff0c\u751f\u6210\u5207\u7247\u89c4\u5212\u6587\u4ef6 (5)153\u5411 Stag \u8def\u5f84\u5199 XML \u914d\u7f6e\u6587\u4ef6 (6)155\u63d0\u4ea4 Job,\u8fd4\u56de\u63d0\u4ea4\u72b6\u6001","title":"src-\u63d0\u4ea4job"},{"location":"bigdata/hadoop/mapreduce/#src-fileinputformat","text":"","title":"src-FileInputFormat"},{"location":"bigdata/hadoop/mapreduce/#src","text":"1.\u7a0b\u5e8f\u5148\u627e\u5230\u4f60\u6570\u636e\u5b58\u50a8\u7684\u76ee\u5f55\u3002 2.\u5f00\u59cb\u904d\u5386\u5904\u7406\uff08\u89c4\u5212\u5207\u7247\uff09\u76ee\u5f55\u4e0b\u7684\u6bcf\u4e00\u4e2a\u6587\u4ef6 3.\u904d\u5386\u7b2c\u4e00\u4e2a\u6587\u4ef6ss.txt \u200b (1)\u83b7\u53d6\u6587\u4ef6\u5927\u5c0ffs.sizeOf(ss.txt) \u200b (2)\u8ba1\u7b97\u5207\u7247\u5927\u5c0f computeSplitSize(Math.max(minSize,Math.min(maxSize,blocksize)))=blocksize=128M \u200b (3)\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5207\u7247\u5927\u5c0f=blocksize \u200b (4)\u5f00\u59cb\u5207\uff0c\u5f62\u6210\u7b2c1\u4e2a\u5207\u7247\uff1ass.txt\u20140:128M \u7b2c2\u4e2a\u5207\u7247ss.txt\u2014128:256M \u7b2c3\u4e2a\u5207\u7247ss.txt\u2014256M:300M \uff08\u6bcf\u6b21\u5207\u7247\u65f6\uff0c\u90fd\u8981\u5224\u65ad\u5207\u5b8c\u5269\u4e0b\u7684\u90e8\u5206\u662f\u5426\u5927\u4e8e\u5757\u76841.1\u500d\uff0c\u4e0d\u5927\u4e8e1.1\u500d\u5c31\u5212\u5206\u4e00\u5757\u5207\u7247\uff09 \u200b (5)\u5c06\u5207\u7247\u4fe1\u606f\u5199\u5230\u4e00\u4e2a\u5207\u7247\u89c4\u5212\u6587\u4ef6\u4e2d \u200b (6)\u6574\u4e2a\u5207\u7247\u7684\u6838\u5fc3\u8fc7\u7a0b\u5728getSplit()\u65b9\u6cd5\u4e2d\u5b8c\u6210 \u200b (7)inputSplit\u53ea\u8bb0\u5f55\u4e86\u5207\u7247\u7684\u5143\u6570\u636e\u4fe1\u606f\uff0c\u6bd4\u5982\u8d77\u59cb\u4f4d\u7f6e\u3001\u957f\u5ea6\u4ee5\u53ca\u6240\u5728\u7684\u8282\u70b9\u5217\u8868\u7b49\u3002 4.\u63d0\u4ea4\u5207\u7247\u89c4\u5212\u6587\u4ef6\u5230YARN\u4e0a\uff0cYARN\u4e0a\u7684MrAppMaster\u5c31\u53ef\u4ee5\u6839\u636e\u5207\u7247\u89c4\u5212\u6587\u4ef6\u8ba1\u7b97\u5f00\u542fMapTask\u4e2a\u6570\u3002","title":"src"},{"location":"bigdata/hadoop/mapreduce/#_10","text":"1.\u7b80\u5355\u5730\u6309\u7167\u6587\u4ef6\u7684\u5185\u5bb9\u957f\u5ea6\u8fdb\u884c\u5207\u7247 2.\u5207\u7247\u5927\u5c0f\uff0c\u9ed8\u8ba4\u7b49\u4e8eBlock\u5927\u5c0f 3.\u5207\u7247\u65f6\u4e0d\u8003\u8651\u6570\u636e\u96c6\u6574\u4f53\uff0c\u800c\u662f\u9010\u4e2a\u9488\u5bf9\u6bcf\u4e00\u4e2a\u6587\u4ef6\u5355\u72ec\u5207\u7247","title":"\u5207\u7247\u673a\u5236"},{"location":"bigdata/hadoop/mapreduce/#_11","text":"Math.max(minSize, Math.min(maxSize, blockSize)); mapreduce.input.fileinputformat.split.minsize=1 \u9ed8\u8ba4\u503c\u4e3a1 mapreduce.input.fileinputformat.split.maxsize= Long.MAXValue \u9ed8\u8ba4\u503cLong.MAXValue","title":"\u5207\u7247\u53e3\u5f84"},{"location":"bigdata/hadoop/mapreduce/#_12","text":"// \u83b7\u53d6\u5207\u7247\u7684\u6587\u4ef6\u540d\u79f0 String name = inputSplit.getPath().getName(); // \u6839\u636e\u6587\u4ef6\u7c7b\u578b\u83b7\u53d6\u5207\u7247\u4fe1\u606f FileSplit inputSplit = (FileSplit) context.getInputSplit();","title":"\u83b7\u53d6\u5207\u7247\u4fe1\u606f"},{"location":"bigdata/hadoop/mapreduce/#fileinputformat","text":"","title":"FileInputFormat \u5e38\u89c1\u5b9e\u73b0\u7c7b"},{"location":"bigdata/hadoop/mapreduce/#textinputformat","text":"TextInputFormat \u662f\u9ed8\u8ba4\u7684 FileInputFormat \u5b9e\u73b0\u7c7b\u3002\u6309\u884c\u8bfb\u53d6\u6bcf\u6761\u8bb0\u5f55\u3002\u952e\u662f\u5b58\u50a8\u8be5\u884c\u5728\u6574\u4e2a\u6587\u4ef6\u4e2d\u7684\u8d77\u59cb\u5b57\u8282\u504f\u79fb\u91cf\uff0c LongWritable \u7c7b\u578b\u3002\u503c\u662f\u8fd9\u884c\u7684\u5185\u5bb9\uff0c\u4e0d\u5305\u62ec\u4efb\u4f55\u884c\u7ec8\u6b62 \u7b26\uff08\u6362\u884c\u7b26\u548c\u56de\u8f66\u7b26\uff09\uff0cText \u7c7b\u578b","title":"TextInputFormat"},{"location":"bigdata/hadoop/mapreduce/#combinetextinputformat","text":"CombineTextInputFormat \u7528\u4e8e\u5c0f\u6587\u4ef6\u8fc7\u591a\u7684\u573a\u666f\uff0c\u5b83\u53ef\u4ee5\u5c06\u591a\u4e2a\u5c0f\u6587\u4ef6\u4ece\u903b\u8f91\u4e0a\u89c4\u5212\u5230 \u4e00\u4e2a\u5207\u7247\u4e2d\uff0c\u8fd9\u6837\uff0c\u591a\u4e2a\u5c0f\u6587\u4ef6\u5c31\u53ef\u4ee5\u4ea4\u7ed9\u4e00\u4e2a MapTask \u5904\u7406\u3002","title":"CombineTextInputFormat"},{"location":"bigdata/hadoop/mapreduce/#_13","text":"\u865a\u62df\u5b58\u50a8 \u5c06\u8f93\u5165\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u5927\u5c0f\uff0c\u4f9d\u6b21\u548c\u8bbe\u7f6e\u7684 setMaxInputSplitSize \u503c\u6bd4\u8f83\uff0c\u5982\u679c\u4e0d\u5927\u4e8e\u8bbe\u7f6e\u7684\u6700\u5927\u503c\uff0c\u903b\u8f91\u4e0a\u5212\u5206\u4e00\u4e2a\u5757\u3002\u5982\u679c\u8f93\u5165\u6587\u4ef6\u5927\u4e8e\u8bbe\u7f6e\u7684\u6700\u5927\u503c\u4e14\u5927\u4e8e\u4e24\u500d\uff0c \u90a3\u4e48\u4ee5\u6700\u5927\u503c\u5207\u5272\u4e00\u5757\uff1b\u5f53\u5269\u4f59\u6570\u636e\u5927\u5c0f\u8d85\u8fc7\u8bbe\u7f6e\u7684\u6700\u5927\u503c\u4e14\u4e0d\u5927\u4e8e\u6700\u5927\u503c 2 \u500d\uff0c\u6b64\u65f6 \u5c06\u6587\u4ef6\u5747\u5206\u6210 2 \u4e2a\u865a\u62df\u5b58\u50a8\u5757\uff08\u9632\u6b62\u51fa\u73b0\u592a\u5c0f\u5207\u7247\uff09\u3002 \u5207\u7247 1.\u5224\u65ad\u865a\u62df\u5b58\u50a8\u7684\u6587\u4ef6\u5927\u5c0f\u662f\u5426\u5927\u4e8e setMaxInputSplitSize \u503c\uff0c\u5927\u4e8e\u7b49\u4e8e\u5219\u5355\u72ec \u5f62\u6210\u4e00\u4e2a\u5207\u7247\u3002 2.\u5982\u679c\u4e0d\u5927\u4e8e\u5219\u8ddf\u4e0b\u4e00\u4e2a\u865a\u62df\u5b58\u50a8\u6587\u4ef6\u8fdb\u884c\u5408\u5e76\uff0c\u5171\u540c\u5f62\u6210\u4e00\u4e2a\u5207\u7247\u3002","title":"\u5207\u7247"},{"location":"bigdata/hadoop/mapreduce/#mapreduce_3","text":"1.MapTask \u6536\u96c6\u6211\u4eec\u7684 map()\u65b9\u6cd5\u8f93\u51fa\u7684 kv \u5bf9\uff0c\u653e\u5230\u5185\u5b58\u7f13\u51b2\u533a\u4e2d 2.\u4ece\u5185\u5b58\u7f13\u51b2\u533a\u4e0d\u65ad\u6ea2\u51fa\u672c\u5730\u78c1\u76d8\u6587\u4ef6\uff0c\u53ef\u80fd\u4f1a\u6ea2\u51fa\u591a\u4e2a\u6587\u4ef6 3.\u591a\u4e2a\u6ea2\u51fa\u6587\u4ef6\u4f1a\u88ab\u5408\u5e76\u6210\u5927\u7684\u6ea2\u51fa\u6587\u4ef6 4.\u5728\u6ea2\u51fa\u8fc7\u7a0b\u53ca\u5408\u5e76\u7684\u8fc7\u7a0b\u4e2d\uff0c\u90fd\u8981\u8c03\u7528 Partitioner \u8fdb\u884c\u5206\u533a\u548c\u9488\u5bf9 key \u8fdb\u884c\u6392\u5e8f 5.ReduceTask \u6839\u636e\u81ea\u5df1\u7684\u5206\u533a\u53f7\uff0c\u53bb\u5404\u4e2a MapTask \u673a\u5668\u4e0a\u53d6\u76f8\u5e94\u7684\u7ed3\u679c\u5206\u533a\u6570\u636e 6.ReduceTask \u4f1a\u6293\u53d6\u5230\u540c\u4e00\u4e2a\u5206\u533a\u7684\u6765\u81ea\u4e0d\u540c MapTask \u7684\u7ed3\u679c\u6587\u4ef6\uff0cReduceTask \u4f1a\u5c06\u8fd9\u4e9b\u6587\u4ef6\u518d\u8fdb\u884c\u5408\u5e76\uff08\u5f52\u5e76\u6392\u5e8f\uff09 7.\u5408\u5e76\u6210\u5927\u6587\u4ef6\u540e\uff0cShuffle \u7684\u8fc7\u7a0b\u4e5f\u5c31\u7ed3\u675f\u4e86\uff0c\u540e\u9762\u8fdb\u5165 ReduceTask \u7684\u903b\u8f91\u8fd0\u7b97\u8fc7 \u7a0b\uff08\u4ece\u6587\u4ef6\u4e2d\u53d6\u51fa\u4e00\u4e2a\u4e00\u4e2a\u7684\u952e\u503c\u5bf9 Group\uff0c\u8c03\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684 reduce()\u65b9\u6cd5\uff09","title":"mapreduce \u5de5\u4f5c\u6d41\u7a0b"},{"location":"bigdata/hadoop/mapreduce/#shuffle","text":"map\u4e4b\u540ereduce\u4e4b\u524d -> shuffle","title":"shuffle"},{"location":"bigdata/hadoop/mapreduce/#_14","text":"\u5bf9\u4e8eMapTask\uff0c\u5b83\u4f1a\u5c06\u5904\u7406\u7684\u7ed3\u679c\u6682\u65f6\u653e\u5230\u73af\u5f62\u7f13\u51b2\u533a\u4e2d\uff0c\u5f53\u73af\u5f62\u7f13\u51b2\u533a\u4f7f \u7528\u7387\u8fbe\u5230\u4e00\u5b9a\u9608\u503c\u540e\uff0c\u518d\u5bf9\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u5feb\u901f\u6392\u5e8f\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6709\u5e8f\u6570 \u636e\u6ea2\u5199\u5230\u78c1\u76d8\u4e0a\uff0c\u800c\u5f53\u6570\u636e\u5904\u7406\u5b8c\u6bd5\u540e\uff0c\u5b83\u4f1a\u5bf9\u78c1\u76d8\u4e0a\u6240\u6709\u6587\u4ef6\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\u3002 \u5bf9\u4e8eReduceTask\uff0c\u5b83\u4ece\u6bcf\u4e2aMapTask\u4e0a\u8fdc\u7a0b\u62f7\u8d1d\u76f8\u5e94\u7684\u6570\u636e\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5927 \u5c0f\u8d85\u8fc7\u4e00\u5b9a\u9608\u503c\uff0c\u5219\u6ea2\u5199\u78c1\u76d8\u4e0a\uff0c\u5426\u5219\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u3002\u5982\u679c\u78c1\u76d8\u4e0a\u6587\u4ef6\u6570\u76ee\u8fbe\u5230 \u4e00\u5b9a\u9608\u503c\uff0c\u5219\u8fdb\u884c\u4e00\u6b21\u5f52\u5e76\u6392\u5e8f\u4ee5\u751f\u6210\u4e00\u4e2a\u66f4\u5927\u6587\u4ef6\uff1b\u5982\u679c\u5185\u5b58\u4e2d\u6587\u4ef6\u5927\u5c0f\u6216\u8005 \u6570\u76ee\u8d85\u8fc7\u4e00\u5b9a\u9608\u503c\uff0c\u5219\u8fdb\u884c\u4e00\u6b21\u5408\u5e76\u540e\u5c06\u6570\u636e\u6ea2\u5199\u5230\u78c1\u76d8\u4e0a\u3002\u5f53\u6240\u6709\u6570\u636e\u62f7\u8d1d\u5b8c \u6bd5\u540e\uff0cReduceTask\u7edf\u4e00\u5bf9\u5185\u5b58\u548c\u78c1\u76d8\u4e0a\u7684\u6240\u6709\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u5f52\u5e76\u6392\u5e8f\u3002 \uff081\uff09\u90e8\u5206\u6392\u5e8f MapReduce\u6839\u636e\u8f93\u5165\u8bb0\u5f55\u7684\u952e\u5bf9\u6570\u636e\u96c6\u6392\u5e8f\u3002\u4fdd\u8bc1\u8f93\u51fa\u7684\u6bcf\u4e2a\u6587\u4ef6\u5185\u90e8\u6709\u5e8f\u3002 \uff082\uff09\u5168\u6392\u5e8f \u6700\u7ec8\u8f93\u51fa\u7ed3\u679c\u53ea\u6709\u4e00\u4e2a\u6587\u4ef6\uff0c\u4e14\u6587\u4ef6\u5185\u90e8\u6709\u5e8f\u3002\u5b9e\u73b0\u65b9\u5f0f\u662f\u53ea\u8bbe\u7f6e\u4e00\u4e2aReduceTask\u3002\u4f46\u8be5\u65b9\u6cd5\u5728 \u5904\u7406\u5927\u578b\u6587\u4ef6\u65f6\u6548\u7387\u6781\u4f4e\uff0c\u56e0\u4e3a\u4e00\u53f0\u673a\u5668\u5904\u7406\u6240\u6709\u6587\u4ef6\uff0c\u5b8c\u5168\u4e27\u5931\u4e86MapReduce\u6240\u63d0\u4f9b\u7684\u5e76\u884c\u67b6\u6784\u3002 \uff083\uff09\u8f85\u52a9\u6392\u5e8f\uff1a\uff08GroupingComparator\u5206\u7ec4\uff09 \u5728Reduce\u7aef\u5bf9key\u8fdb\u884c\u5206\u7ec4\u3002\u5e94\u7528\u4e8e\uff1a\u5728\u63a5\u6536\u7684key\u4e3abean\u5bf9\u8c61\u65f6\uff0c\u60f3\u8ba9\u4e00\u4e2a\u6216\u51e0\u4e2a\u5b57\u6bb5\u76f8\u540c\uff08\u5168\u90e8 \u5b57\u6bb5\u6bd4\u8f83\u4e0d\u76f8\u540c\uff09\u7684key\u8fdb\u5165\u5230\u540c\u4e00\u4e2areduce\u65b9\u6cd5\u65f6\uff0c\u53ef\u4ee5\u91c7\u7528\u5206\u7ec4\u6392\u5e8f\u3002 \uff084\uff09\u4e8c\u6b21\u6392\u5e8f \u5728\u81ea\u5b9a\u4e49\u6392\u5e8f\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679ccompareTo\u4e2d\u7684\u5224\u65ad\u6761\u4ef6\u4e3a\u4e24\u4e2a\u5373\u4e3a\u4e8c\u6b21\u6392\u5e8f\u3002 \u5f85\u8bb0\u5f55 https://blog.csdn.net/zyw0101/article/details/126626837","title":"\u6392\u5e8f"},{"location":"bigdata/hadoop/mapreduce/#src-mapreduce","text":"","title":"src-mapreduce"},{"location":"bigdata/hadoop/mapreduce/#maptask","text":"1.Read \u9636\u6bb5\uff1aMapTask \u901a\u8fc7 InputFormat \u83b7\u5f97\u7684 RecordReader\uff0c\u4ece\u8f93\u5165 InputSplit \u4e2d \u89e3\u6790\u51fa\u4e00\u4e2a\u4e2a key/value\u3002 2.Map \u9636\u6bb5\uff1a\u8be5\u8282\u70b9\u4e3b\u8981\u662f\u5c06\u89e3\u6790\u51fa\u7684 key/value \u4ea4\u7ed9\u7528\u6237\u7f16\u5199 map()\u51fd\u6570\u5904\u7406\uff0c\u5e76 \u4ea7\u751f\u4e00\u7cfb\u5217\u65b0\u7684 key/value\u3002 3.Collect \u6536\u96c6\u9636\u6bb5\uff1a\u5728\u7528\u6237\u7f16\u5199 map()\u51fd\u6570\u4e2d\uff0c\u5f53\u6570\u636e\u5904\u7406\u5b8c\u6210\u540e\uff0c\u4e00\u822c\u4f1a\u8c03\u7528 OutputCollector.collect()\u8f93\u51fa\u7ed3\u679c\u3002\u5728\u8be5\u51fd\u6570\u5185\u90e8\uff0c\u5b83\u4f1a\u5c06\u751f\u6210\u7684 key/value \u5206\u533a\uff08\u8c03\u7528 Partitioner\uff09\uff0c\u5e76\u5199\u5165\u4e00\u4e2a\u73af\u5f62\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\u3002 4.Spill \u9636\u6bb5\uff1a\u5373\u201c\u6ea2\u5199\u201d\uff0c\u5f53\u73af\u5f62\u7f13\u51b2\u533a\u6ee1\u540e\uff0cMapReduce \u4f1a\u5c06\u6570\u636e\u5199\u5230\u672c\u5730\u78c1\u76d8\u4e0a\uff0c \u751f\u6210\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5c06\u6570\u636e\u5199\u5165\u672c\u5730\u78c1\u76d8\u4e4b\u524d\uff0c\u5148\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u672c\u5730\u6392\u5e8f\uff0c\u5e76\u5728\u5fc5\u8981\u65f6\u5bf9\u6570\u636e\u8fdb\u884c\u5408\u5e76\u3001\u538b\u7f29\u7b49\u64cd\u4f5c\u3002 \u6ea2\u5199\u9636\u6bb5\u8be6\u60c5\uff1a \u6b65\u9aa4 1\uff1a\u5229\u7528\u5feb\u901f\u6392\u5e8f\u7b97\u6cd5\u5bf9\u7f13\u5b58\u533a\u5185\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u6392\u5e8f\u65b9\u5f0f\u662f\uff0c\u5148\u6309\u7167\u5206\u533a\u7f16\u53f7 Partition \u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u6309\u7167 key \u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u6837\uff0c\u7ecf\u8fc7\u6392\u5e8f\u540e\uff0c\u6570\u636e\u4ee5\u5206\u533a\u4e3a\u5355\u4f4d\u805a\u96c6\u5728 \u4e00\u8d77\uff0c\u4e14\u540c\u4e00\u5206\u533a\u5185\u6240\u6709\u6570\u636e\u6309\u7167 key \u6709\u5e8f\u3002 \u6b65\u9aa4 2\uff1a\u6309\u7167\u5206\u533a\u7f16\u53f7\u7531\u5c0f\u5230\u5927\u4f9d\u6b21\u5c06\u6bcf\u4e2a\u5206\u533a\u4e2d\u7684\u6570\u636e\u5199\u5165\u4efb\u52a1\u5de5\u4f5c\u76ee\u5f55\u4e0b\u7684\u4e34\u65f6\u6587 \u4ef6 output/spillN.out\uff08N \u8868\u793a\u5f53\u524d\u6ea2\u5199\u6b21\u6570\uff09\u4e2d\u3002\u5982\u679c\u7528\u6237\u8bbe\u7f6e\u4e86 Combiner\uff0c\u5219\u5199\u5165\u6587\u4ef6\u4e4b \u524d\uff0c\u5bf9\u6bcf\u4e2a\u5206\u533a\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u805a\u96c6\u64cd\u4f5c\u3002 \u6b65\u9aa4 3\uff1a\u5c06\u5206\u533a\u6570\u636e\u7684\u5143\u4fe1\u606f\u5199\u5230\u5185\u5b58\u7d22\u5f15\u6570\u636e\u7ed3\u6784 SpillRecord \u4e2d\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5206\u533a\u7684\u5143 \u4fe1\u606f\u5305\u62ec\u5728\u4e34\u65f6\u6587\u4ef6\u4e2d\u7684\u504f\u79fb\u91cf\u3001\u538b\u7f29\u524d\u6570\u636e\u5927\u5c0f\u548c\u538b\u7f29\u540e\u6570\u636e\u5927\u5c0f\u3002\u5982\u679c\u5f53\u524d\u5185\u5b58\u7d22\u5f15\u5927 \u5c0f\u8d85\u8fc7 1MB\uff0c\u5219\u5c06\u5185\u5b58\u7d22\u5f15\u5199\u5230\u6587\u4ef6 output/spillN.out.index \u4e2d\u3002 5.Merge \u9636\u6bb5\uff1a\u5f53\u6240\u6709\u6570\u636e\u5904\u7406\u5b8c\u6210\u540e\uff0cMapTask \u5bf9\u6240\u6709\u4e34\u65f6\u6587\u4ef6\u8fdb\u884c\u4e00\u6b21\u5408\u5e76\uff0c \u4ee5\u786e\u4fdd\u6700\u7ec8\u53ea\u4f1a\u751f\u6210\u4e00\u4e2a\u6570\u636e\u6587\u4ef6\u3002 \u5f53\u6240\u6709\u6570\u636e\u5904\u7406\u5b8c\u540e\uff0cMapTask \u4f1a\u5c06\u6240\u6709\u4e34\u65f6\u6587\u4ef6\u5408\u5e76\u6210\u4e00\u4e2a\u5927\u6587\u4ef6\uff0c\u5e76\u4fdd\u5b58\u5230\u6587\u4ef6 output/file.out \u4e2d\uff0c\u540c\u65f6\u751f\u6210\u76f8\u5e94\u7684\u7d22\u5f15\u6587\u4ef6 output/file.out.index\u3002 \u5728\u8fdb\u884c\u6587\u4ef6\u5408\u5e76\u8fc7\u7a0b\u4e2d\uff0cMapTask \u4ee5\u5206\u533a\u4e3a\u5355\u4f4d\u8fdb\u884c\u5408\u5e76\u3002\u5bf9\u4e8e\u67d0\u4e2a\u5206\u533a\uff0c\u5b83\u5c06\u91c7\u7528\u591a \u8f6e\u9012\u5f52\u5408\u5e76\u7684\u65b9\u5f0f\u3002\u6bcf\u8f6e\u5408\u5e76 mapreduce.task.io.sort.factor\uff08\u9ed8\u8ba4 10\uff09\u4e2a\u6587\u4ef6\uff0c\u5e76\u5c06\u4ea7\u751f\u7684\u6587 \u4ef6\u91cd\u65b0\u52a0\u5165\u5f85\u5408\u5e76\u5217\u8868\u4e2d\uff0c\u5bf9\u6587\u4ef6\u6392\u5e8f\u540e\uff0c\u91cd\u590d\u4ee5\u4e0a\u8fc7\u7a0b\uff0c\u76f4\u5230\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u5927\u6587\u4ef6\u3002 \u8ba9\u6bcf\u4e2a MapTask \u6700\u7ec8\u53ea\u751f\u6210\u4e00\u4e2a\u6570\u636e\u6587\u4ef6\uff0c\u53ef\u907f\u514d\u540c\u65f6\u6253\u5f00\u5927\u91cf\u6587\u4ef6\u548c\u540c\u65f6\u8bfb\u53d6\u5927\u91cf \u5c0f\u6587\u4ef6\u4ea7\u751f\u7684\u968f\u673a\u8bfb\u53d6\u5e26\u6765\u7684\u5f00\u9500\u3002","title":"maptask"},{"location":"bigdata/hadoop/mapreduce/#reduce","text":"1.Copy \u9636\u6bb5\uff1aReduceTask \u4ece\u5404\u4e2a MapTask \u4e0a\u8fdc\u7a0b\u62f7\u8d1d\u4e00\u7247\u6570\u636e\uff0c\u5e76\u9488\u5bf9\u67d0\u4e00\u7247\u6570 \u636e\uff0c\u5982\u679c\u5176\u5927\u5c0f\u8d85\u8fc7\u4e00\u5b9a\u9608\u503c\uff0c\u5219\u5199\u5230\u78c1\u76d8\u4e0a\uff0c\u5426\u5219\u76f4\u63a5\u653e\u5230\u5185\u5b58\u4e2d\u3002 2.Sort \u9636\u6bb5\uff1a\u5728\u8fdc\u7a0b\u62f7\u8d1d\u6570\u636e\u7684\u540c\u65f6\uff0cReduceTask \u542f\u52a8\u4e86\u4e24\u4e2a\u540e\u53f0\u7ebf\u7a0b\u5bf9\u5185\u5b58\u548c\u78c1 \u76d8\u4e0a\u7684\u6587\u4ef6\u8fdb\u884c\u5408\u5e76\uff0c\u4ee5\u9632\u6b62\u5185\u5b58\u4f7f\u7528\u8fc7\u591a\u6216\u78c1\u76d8\u4e0a\u6587\u4ef6\u8fc7\u591a\u3002\u6309\u7167 MapReduce \u8bed\u4e49\uff0c\u7528 \u6237\u7f16\u5199 reduce()\u51fd\u6570\u8f93\u5165\u6570\u636e\u662f\u6309 key \u8fdb\u884c\u805a\u96c6\u7684\u4e00\u7ec4\u6570\u636e\u3002\u4e3a\u4e86\u5c06 key \u76f8\u540c\u7684\u6570\u636e\u805a\u5728\u4e00 \u8d77\uff0cHadoop \u91c7\u7528\u4e86\u57fa\u4e8e\u6392\u5e8f\u7684\u7b56\u7565\u3002\u7531\u4e8e\u5404\u4e2a MapTask \u5df2\u7ecf\u5b9e\u73b0\u5bf9\u81ea\u5df1\u7684\u5904\u7406\u7ed3\u679c\u8fdb\u884c\u4e86 \u5c40\u90e8\u6392\u5e8f\uff0c\u56e0\u6b64\uff0cReduceTask \u53ea\u9700\u5bf9\u6240\u6709\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u5f52\u5e76\u6392\u5e8f\u5373\u53ef\u3002 3.Reduce \u9636\u6bb5\uff1areduce()\u51fd\u6570\u5c06\u8ba1\u7b97\u7ed3\u679c\u5199\u5230 HDFS \u4e0a\u3002 =================== ReduceTask =================== if (isMapOrReduce()) //reduceTask324 \u884c\uff0c\u63d0\u524d\u6253\u65ad\u70b9","title":"reduce \u5de5\u4f5c\u673a\u5236"},{"location":"bigdata/hadoop/mapreduce/#_15","text":"","title":"\u538b\u7f29"},{"location":"bigdata/hadoop/mapreduce/#why","text":"","title":"why"},{"location":"bigdata/hadoop/mapreduce/#ad-disad_1","text":"\u538b\u7f29\u7684\u4f18\u70b9\uff1a\u4ee5\u51cf\u5c11\u78c1\u76d8 IO\u3001\u51cf\u5c11\u78c1\u76d8\u5b58\u50a8\u7a7a\u95f4\u3002 \u538b\u7f29\u7684\u7f3a\u70b9\uff1a\u589e\u52a0 CPU \u5f00\u9500\u3002 \u8fd0\u7b97\u5bc6\u96c6\u578b\u7684 Job\uff0c\u5c11\u7528\u538b\u7f29 IO \u5bc6\u96c6\u578b\u7684 Job\uff0c\u591a\u7528\u538b\u7f29","title":"ad disad"},{"location":"bigdata/hadoop/mapreduce/#_16","text":"\u7b97\u6cd5 \u539f\u59cb\u5927\u5c0f \u538b\u7f29\u5927\u5c0f \u538b\u7f29\u901f\u5ea6 \u89e3\u538b\u901f\u5ea6 gzip 8.3GB 1.8GB 17.5MB/s 58MB/s bzip2 8.3GB 1.1GB 2.4MB/s 9.5MB/s LZO 8.3GB 2.9GB 49.3MB/s 74.6MB/s","title":"\u538b\u7f29\u7b97\u6cd5\u4ecb\u7ecd"},{"location":"bigdata/hadoop/mapreduce/#_17","text":"1.\u8f93\u5165\u7aef\u91c7\u7528\u538b\u7f29 \u65e0\u987b\u663e\u793a\u6307\u5b9a\u4f7f\u7528\u7684\u7f16\u89e3\u7801\u65b9 \u5f0f\u3002Hadoop\u81ea\u52a8\u68c0\u67e5\u6587\u4ef6\u6269 \u5c55\u540d\uff0c\u5982\u679c\u6269\u5c55\u540d\u80fd\u591f\u5339\u914d\uff0c \u5c31\u4f1a\u7528\u6070\u5f53\u7684\u7f16\u89e3\u7801\u65b9\u5f0f\u5bf9\u6587 \u4ef6\u8fdb\u884c\u538b\u7f29\u548c\u89e3\u538b\u3002 \u4f01\u4e1a\u5f00\u53d1\u4e2d\u5982\u4f55\u9009\u62e9\uff1a\u4e3a\u4e86\u51cf \u5c11MapTask\u548cReduceTask\u4e4b\u95f4\u7684\u7f51\u7edc IO\u3002\u91cd\u70b9\u8003\u8651\u538b\u7f29\u548c\u89e3\u538b\u7f29\u5feb\u7684 LZO\u3001Snappy\u3002 \u770b\u9700\u6c42\uff1a \u5982\u679c\u6570\u636e\u6c38\u4e45\u4fdd\u5b58\uff0c\u8003\u8651\u538b\u7f29 \u7387\u6bd4\u8f83\u9ad8\u7684Bzip2\u548cGzip\u3002 \u5982\u679c\u4f5c\u4e3a\u4e0b\u4e00\u4e2aMapReduce\u8f93 \u5165\uff0c\u9700\u8981\u8003\u8651\u6570\u636e\u91cf\u548c\u662f\u5426\u652f\u6301\u5207 \u4f01\u4e1a\u5f00\u53d1\uff1a 1\uff09\u6570\u636e\u91cf\u5c0f\u4e8e\u5757\u5927\u5c0f\uff0c\u91cd\u70b9 \u8003\u8651\u538b\u7f29\u548c\u89e3\u538b\u7f29\u901f\u5ea6\u6bd4\u8f83\u5feb \u7684LZO/Snappy 2\uff09\u6570\u636e\u91cf\u975e\u5e38\u5927\uff0c\u91cd\u70b9\u8003\u8651 \u652f\u6301\u5207\u7247\u7684Bzip2\u548cLZO 2.map\u8f93\u51fa \u4f01\u4e1a\u5f00\u53d1\u4e2d\u5982\u4f55\u9009\u62e9\uff1a\u4e3a\u4e86\u51cf\u5c11MapTask\u548cReduceTask\u4e4b\u95f4\u7684\u7f51\u7edc IO\u3002\u91cd\u70b9\u8003\u8651\u538b\u7f29\u548c\u89e3\u538b\u7f29\u5feb\u7684 LZO\u3001Snappy\u3002 3.reduce \u8f93\u51fa \u770b\u9700\u6c42\uff1a \u5982\u679c\u6570\u636e\u6c38\u4e45\u4fdd\u5b58\uff0c\u8003\u8651\u538b\u7f29 \u7387\u6bd4\u8f83\u9ad8\u7684Bzip2\u548cGzip\u3002 \u5982\u679c\u4f5c\u4e3a\u4e0b\u4e00\u4e2aMapReduce\u8f93 \u5165\uff0c\u9700\u8981\u8003\u8651\u6570\u636e\u91cf\u548c\u662f\u5426\u652f\u6301\u5207\u7247\u3002","title":"\u4f4d\u7f6e\u9009\u62e9"},{"location":"bigdata/hadoop/mapreduce/#_18","text":"","title":"\u538b\u7f29\u914d\u7f6e"},{"location":"bigdata/hadoop/mapreduce/#_19","text":"\u538b\u7f29\u683c\u5f0f \u538b\u7f29\u683c\u5f0f \u5bf9\u5e94\u7684\u7f16\u7801/\u89e3\u7801\u5668 DEFLATE org.apache.hadoop.io.compress.DefaultCodec gzip org.apache.hadoop.io.compress.GzipCodec bzip2 org.apache.hadoop.io.compress.BZip2Codec LZO com.hadoop.compression.lzo.LzopCodec Snappy org.apache.hadoop.io.compress.SnappyCodec","title":"\u7b97\u6cd5"},{"location":"bigdata/hadoop/mapreduce/#hadoop_1","text":"\u53c2\u6570 \u9ed8\u8ba4\u503c \u9636\u6bb5 \u5efa\u8bae io.compression.codecs \uff08\u5728 core-site.xml \u4e2d\u914d\u7f6e\uff09 \u65e0\uff0c\u8fd9\u4e2a\u9700\u8981\u5728\u547d\u4ee4\u884c\u8f93\u5165 hadoop checknative \u67e5\u770b \u8f93\u5165\u538b\u7f29 Hadoop \u4f7f\u7528\u6587\u4ef6\u6269\u5c55 \u540d\u5224\u65ad\u662f\u5426\u652f\u6301\u67d0\u79cd \u7f16\u89e3\u7801\u5668 mapreduce.map.output.compress\uff08\u5728 mapred-site.xml \u4e2d \u914d\u7f6e\uff09 false mapper \u8f93\u51fa \u8fd9\u4e2a\u53c2\u6570\u8bbe\u4e3a true \u542f \u7528\u538b\u7f29 mapreduce.map.output.compress.codec\uff08\u5728 mapredsite.xml \u4e2d\u914d\u7f6e\uff09 org.apache.hadoop.io.com press.DefaultCodec mapper \u8f93\u51fa \u4f01\u4e1a\u591a\u4f7f\u7528 LZO \u6216 Snappy \u7f16\u89e3\u7801\u5668\u5728\u6b64 \u9636\u6bb5\u538b\u7f29\u6570\u636e mapreduce.output.fileoutpu tformat.compress\uff08\u5728 mapred-site.xml \u4e2d\u914d\u7f6e\uff09 false reducer \u8f93\u51fa \u8fd9\u4e2a\u53c2\u6570\u8bbe\u4e3a true \u542f \u7528\u538b\u7f29 mapreduce.output.fileoutpu tformat.compress.codec\uff08\u5728 mapred-site.xml \u4e2d\u914d\u7f6e\uff09 org.apache.hadoop.io.com press.DefaultCodec reducer \u8f93\u51fa \u4f7f\u7528\u6807\u51c6\u5de5\u5177\u6216\u8005\u7f16 \u89e3\u7801\u5668\uff0c\u5982 gzip \u548c bzip2 \u6e90\u7801\u652f\u6301 BZip2Codec\u3001DefaultCodec // \u5f00\u542f map \u7aef\u8f93\u51fa\u538b\u7f29 conf.setBoolean(\"mapreduce.map.output.compress\", true); // \u8bbe\u7f6e map \u7aef\u8f93\u51fa\u538b\u7f29\u65b9\u5f0f conf.setClass(\"mapreduce.map.output.compress.codec\", BZip2Codec.class,CompressionCodec.class); // \u8bbe\u7f6e reduce \u7aef\u8f93\u51fa\u538b\u7f29\u5f00\u542f FileOutputFormat.setCompressOutput(job, true); // \u8bbe\u7f6e\u538b\u7f29\u7684\u65b9\u5f0f FileOutputFormat.setOutputCompressorClass(job, BZip2Codec.class);","title":"hadoop\u542f\u7528"},{"location":"bigdata/hadoop/overview/","text":"what \u5927\u6570\u636e\u4e3b\u8981\u89e3\u51b3\uff0c\u6d77\u91cf\u6570\u636e\u7684\u91c7\u96c6\u3001\u5b58\u50a8\u548c\u5206\u6790\u8ba1\u7b97\u95ee\u9898\u3002 feature \u6570\u636e\u5927\u91cf\u3001\u9ad8\u901f\u4ea7\u751f\u3001\u6570\u636e\u683c\u5f0f\u591a\u6837\u3001\u4f4e\u4ef7\u503c\u5bc6\u5ea6\uff08\u53ef\u80fd\u5927\u591a\u6570\u6570\u636e\u5e76\u4e0d\u662f\u6211\u4eec\u5173\u5fc3\u7684\uff09 scene \u667a\u80fd\u63a8\u8350\uff1a\u63a8\u8350\u4f60\u559c\u6b22\u7684 \u7269\u6d41\u4ed3\u5e93\u6b21\u65e5\u8fbe\uff1a\u667a\u80fd\u9009\u62e9\u79bb\u4f60\u8fd1\u7684\u4ed3\u5e93","title":"overview"},{"location":"bigdata/hadoop/overview/#what","text":"\u5927\u6570\u636e\u4e3b\u8981\u89e3\u51b3\uff0c\u6d77\u91cf\u6570\u636e\u7684\u91c7\u96c6\u3001\u5b58\u50a8\u548c\u5206\u6790\u8ba1\u7b97\u95ee\u9898\u3002","title":"what"},{"location":"bigdata/hadoop/overview/#feature","text":"\u6570\u636e\u5927\u91cf\u3001\u9ad8\u901f\u4ea7\u751f\u3001\u6570\u636e\u683c\u5f0f\u591a\u6837\u3001\u4f4e\u4ef7\u503c\u5bc6\u5ea6\uff08\u53ef\u80fd\u5927\u591a\u6570\u6570\u636e\u5e76\u4e0d\u662f\u6211\u4eec\u5173\u5fc3\u7684\uff09","title":"feature"},{"location":"bigdata/hadoop/overview/#scene","text":"\u667a\u80fd\u63a8\u8350\uff1a\u63a8\u8350\u4f60\u559c\u6b22\u7684 \u7269\u6d41\u4ed3\u5e93\u6b21\u65e5\u8fbe\uff1a\u667a\u80fd\u9009\u62e9\u79bb\u4f60\u8fd1\u7684\u4ed3\u5e93","title":"scene"},{"location":"bigdata/hadoop/quickstart/","text":"what what hadoop \u5206\u5e03\u5f0f\u57fa\u7840\u67b6\u6784 \u4e3b\u8981\u89e3\u51b3\uff0c\u6d77\u91cf\u6570\u636e\u7684\u5b58\u50a8\u548c\u6d77\u91cf\u6570\u636e\u7684\u5206\u6790\u8ba1\u7b97\u95ee\u9898\u3002 3.1.3 http://hadoop.apache.org/ advantage 1.\u9ad8\u53ef\u9760\u6027\uff1aHadoop\u5e95\u5c42\u7ef4\u62a4\u591a\u4e2a\u6570\u636e\u526f\u672c\uff0c\u6240\u4ee5\u5373\u4f7fHadoop\u67d0\u4e2a\u8ba1\u7b97\u5143 \u7d20\u6216\u5b58\u50a8\u6545\u969c\uff0c\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u6570\u636e\u7684\u4e22\u5931\u3002 2.\u9ad8\u6269\u5c55\u6027\uff1a\u5728\u96c6\u7fa4\u95f4\u5206\u914d\u4efb\u52a1\u6570\u636e\uff0c\u53ef\u65b9\u4fbf\u7684\u6269\u5c55\u6570\u4ee5\u5343\u8ba1\u7684\u8282\u70b9\u3002 3.\u9ad8\u6548\u6027\uff1a\u5728MapReduce\u7684\u601d\u60f3\u4e0b\uff0cHadoop\u662f\u5e76\u884c\u5de5\u4f5c\u7684\uff0c\u4ee5\u52a0\u5feb\u4efb\u52a1\u5904 \u7406\u901f\u5ea6\u3002 4.\u9ad8\u5bb9\u9519\u6027\uff1a\u80fd\u591f\u81ea\u52a8\u5c06\u5931\u8d25\u7684\u4efb\u52a1\u91cd\u65b0\u5206\u914d\u3002 framework \u5728 Hadoop1.x \u65f6 \u4ee3 \uff0cHadoop\u4e2d\u7684MapReduce\u540c\u65f6\u5904\u7406\u4e1a\u52a1\u903b\u8f91\u8fd0\u7b97\u548c\u8d44\u6e90\u7684\u8c03\u5ea6\uff0c\u8026\u5408\u6027\u8f83\u5927\u3002\u5728Hadoop2.x\u65f6\u4ee3\uff0c\u589e\u52a0\u4e86Yarn\u3002Yarn\u53ea\u8d1f\u8d23\u8d44\u6e90\u7684\u8c03\u5ea6\uff0cMapReduce \u53ea\u8d1f\u8d23\u8fd0\u7b97 \u3002Hadoop3.x\u5728\u7ec4\u6210\u4e0a\u6ca1\u6709\u53d8\u5316\u3002 hdfs \u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf 1.NameNode\uff08nn\uff09\uff1a\u5b58\u50a8\u6587\u4ef6\u7684\u5143\u6570\u636e\uff0c\u5982\u6587\u4ef6\u540d\uff0c\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\uff0c\u6587\u4ef6\u5c5e\u6027\uff08\u751f\u6210\u65f6\u95f4\u3001\u526f\u672c\u6570\u3001 \u6587\u4ef6\u6743\u9650\uff09\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u6587\u4ef6\u7684\u5757\u5217\u8868\u548c\u5757\u6240\u5728\u7684DataNode\u7b49\u3002 2.DataNode(dn)\uff1a\u5728\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u5b58\u50a8\u6587\u4ef6\u5757\u6570\u636e\uff0c\u4ee5\u53ca\u5757\u6570\u636e\u7684\u6821\u9a8c\u548c\u3002 3.Secondary NameNode(2nn)\uff1a\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u5bf9NameNode\u5143\u6570\u636e\u5907\u4efd\u3002 yarn \u8d44\u6e90\u7ba1\u7406\u8005 ResourceManager\uff08RM\uff09\uff1a\u6574\u4e2a\u96c6\u7fa4\u8d44\u6e90\uff08\u5185\u5b58\u3001CPU\u7b49\uff09\u7684\u8001\u5927 NodeManager\uff08NM\uff09\uff1a\u5355\u4e2a\u8282\u70b9\u670d\u52a1\u5668\u8d44\u6e90\u8001\u5927 ApplicationMaster\uff08AM\uff09\uff1a\u5355\u4e2a\u4efb\u52a1\u8fd0\u884c\u7684\u8001\u5927 Container\uff1a\u5bb9\u5668\uff0c\u76f8\u5f53\u4e00\u53f0\u72ec\u7acb\u7684\u670d\u52a1\u5668\uff0c\u91cc\u9762\u5c01\u88c5\u4e86\u4efb\u52a1\u8fd0\u884c\u6240\u9700\u8981\u7684\u8d44\u6e90\uff0c\u5982\u5185\u5b58\u3001CPU\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u7b49\u3002 mapreduce MapReduce \u5c06\u8ba1\u7b97\u8fc7\u7a0b\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1aMap \u548c Reduce 1\uff09Map \u9636\u6bb5\u5e76\u884c\u5904\u7406\u8f93\u5165\u6570\u636e 2\uff09Reduce \u9636\u6bb5\u5bf9 Map \u7ed3\u679c\u8fdb\u884c\u6c47\u603b \u4e09\u8005\u5173\u7cfb install install centos \u53c2\u8003\u5b89\u88c5centos7.5(4g+50g) \u5b89\u88c5centos\u3001\u8bbe\u7f6e\u7f51\u7edc\u3001\u5173\u95ed\u9632\u706b\u5899\u8bbe\u7f6e\u4e3b\u673a\u540d\u3001\u5b89\u88c5\u5e38\u89c1\u8f6f\u4ef6\u5305(\u5b89\u88c5epel-release,jdk,gcc,g++)\u3001\u8bbe\u7f6e\u4e3b\u673a\u540dip\u6620\u5c04\u3001\u521b\u5efamatt\u7528\u6237\u5e76\u914d\u7f6e sudo \uff0c\u521b\u5efa\u8f6f\u4ef6\u76ee\u5f55\uff0c\u4fee\u6539\u6587\u4ef6\u6240\u6709\u8005\uff0c\u5b89\u88c5jdk,\u865a\u62df\u673a\u514b\u9686\u7b49\u3002 \u5982\u679c\u662f\u6700\u5c0f\u5316\u5b89\u88c5\u5219\u9700\u8981\u5b89\u88c5net-tool,vim yum install -y net-tools yum install -y vim matt05 matt06 matt07 \u5355\u673a\u5b89\u88c5hadoop \u5b89\u88c5 \u89e3\u538b hadoop-3.1.3.tar.gz tar -zxvf hadoop-3.1.3.tar.gz -C /opt/module/ hadoop version \u914d\u7f6e \u7f16\u5199\u914d\u7f6epath sudo vim /etc/profile.d/my_env.sh \u914d\u7f6epath #HADOOP_HOME export HADOOP_HOME=/opt/module/hadoop-3.1.3 export PATH=$PATH:$HADOOP_HOME/bin export PATH=$PATH:$HADOOP_HOME/sbin \u914d\u7f6e\u751f\u6548 source /etc/profile \u9a8c\u8bc1 hadoop version \u76ee\u5f55\u7ed3\u6784 bin \u76ee\u5f55:\u5b58\u653e\u5bf9 Hadoop \u76f8\u5173\u670d\u52a1(hdfs\uff0cyarn\uff0cmapred)\u8fdb\u884c\u64cd\u4f5c\u7684\u811a\u672c etc \u76ee\u5f55:Hadoop \u7684\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\uff0c\u5b58\u653e Hadoop \u7684\u914d\u7f6e\u6587\u4ef6 lib \u76ee\u5f55:\u5b58\u653e Hadoop \u7684\u672c\u5730\u5e93(\u5bf9\u6570\u636e\u8fdb\u884c\u538b\u7f29\u89e3\u538b\u7f29\u529f\u80fd) sbin \u76ee\u5f55:\u5b58\u653e\u542f\u52a8\u6216\u505c\u6b62 Hadoop \u76f8\u5173\u670d\u52a1\u7684\u811a\u672c share \u76ee\u5f55:\u5b58\u653e Hadoop \u7684\u4f9d\u8d56 jar \u5305\u3001\u6587\u6863\u3001\u548c\u5b98\u65b9\u6848\u4f8b hadoop\u8fd0\u884c\u6a21\u5f0f \u4e09\u79cd\u6a21\u5f0f Hadoop \u8fd0\u884c\u6a21\u5f0f\u5305\u62ec:\u672c\u5730\u6a21\u5f0f\u3001\u4f2a\u5206\u5e03\u5f0f\u6a21\u5f0f\u4ee5\u53ca\u5b8c\u5168\u5206\u5e03\u5f0f\u6a21\u5f0f\u3002 \u672c\u5730\u6a21\u5f0f:\u5355\u673a\u8fd0\u884c\uff0c\u53ea\u662f\u7528\u6765\u6f14\u793a\u4e00\u4e0b\u5b98\u65b9\u6848\u4f8b\u3002\u751f\u4ea7\u73af\u5883\u4e0d\u7528\u3002 \u4f2a\u5206\u5e03\u5f0f\u6a21\u5f0f:\u4e5f\u662f\u5355\u673a\u8fd0\u884c\uff0c\u4f46\u662f\u5177\u5907Hadoop\u96c6\u7fa4\u7684\u6240\u6709\u529f\u80fd\uff0c\u4e00\u53f0\u670d\u52a1\u5668\u6a21 \u62df\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u73af\u5883\u3002 \u5b8c\u5168\u5206\u5e03\u5f0f\u6a21\u5f0f:\u591a\u53f0\u670d\u52a1\u5668\u7ec4\u6210\u5206\u5e03\u5f0f\u73af\u5883\u3002\u751f\u4ea7\u73af\u5883\u4f7f\u7528\u3002 \u672c\u5730\u6a21\u5f0f\u4f7f\u7528 \u5728hadoop\u5b89\u88c5\u76ee\u5f55\u4e0b mkdir wcinput cd wcinput vim hello.txt a a b c a d \u8f93\u51fa\u76ee\u5f55\u4e0d\u53ef\u4ee5\u5b58\u5728 hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount wcinput wcoutput \u67e5\u770b\u7ed3\u679c cat wcoutput/part-r-00000 \u5b8c\u5168\u5206\u5e03\u5f0f\u5b89\u88c5 \u6d41\u7a0b \u51c6\u5907 3 \u53f0\u5ba2\u6237\u673a(\u5173\u95ed\u9632\u706b\u5899\u3001\u9759\u6001 IP\u3001\u4e3b\u673a\u540d\u79f0) \u5b89\u88c5 JDK \u914d\u7f6e\u73af\u5883\u53d8\u91cf \u5b89\u88c5 Hadoop \u914d\u7f6e\u73af\u5883\u53d8\u91cf \u914d\u7f6e\u96c6\u7fa4 \u5355\u70b9\u542f\u52a8 \u914d\u7f6essh \u7fa4\u8d77\u5e76\u6d4b\u8bd5\u96c6\u7fa4 \u6587\u4ef6\u4f20\u8f93 scp \u6982\u5ff5 scp \u53ef\u4ee5\u5b9e\u73b0\u670d\u52a1\u5668\u4e0e\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6570\u636e\u62f7\u8d1d\u3002 \u8bed\u6cd5 scp -r $pdir/$fname $user@$host:$pdir/$fname \u547d\u4ee4 \u9012\u5f52 \u8981\u62f7\u8d1d\u7684\u6587\u4ef6\u8def\u5f84/\u540d\u79f0 \u76ee\u7684\u5730\u7528\u6237@\u4e3b\u673a:\u76ee\u7684\u5730\u8def\u5f84/\u540d\u79f0 \u53ef\u4ee5\u6307\u5b9a\u76ee\u6807\u4f4d\u7f6e\u7684\u6587\u4ef6\u540d\u4e5f\u53ef\u4ee5\u4e0d\u6307\u5b9a scp -r /opt/software/aa.txt matt@123.56.135.43:/matt/opt/software scp -r /opt/module/jdk1.8.0_212 matt@192.168.96.132:/opt/module rsync \u8fdc\u7a0b\u540c\u6b65\u5de5\u5177 what rsync \u4e3b\u8981\u7528\u4e8e\u5907\u4efd\u548c\u955c\u50cf\u3002\u5177\u6709\u901f\u5ea6\u5feb\u3001\u907f\u514d\u590d\u5236\u76f8\u540c\u5185\u5bb9\u548c\u652f\u6301\u7b26\u53f7\u94fe\u63a5\u7684\u4f18\u70b9\u3002 rsync \u548c scp \u533a\u522b:\u7528 rsync \u505a\u6587\u4ef6\u7684\u590d\u5236\u8981\u6bd4 scp \u7684\u901f\u5ea6\u5feb\uff0crsync \u53ea\u5bf9\u5dee\u5f02\u6587\u4ef6\u505a\u66f4\u65b0\u3002scp \u662f\u628a\u6240\u6709\u6587\u4ef6\u90fd\u590d\u5236\u8fc7\u53bb\u3002 how rsync -av $pdir/$fname $user@$host:$pdir/$fname \u547d\u4ee4 \u9009\u9879\u53c2\u6570 \u8981\u62f7\u8d1d\u7684\u6587\u4ef6\u8def\u5f84/\u540d\u79f0 \u76ee\u7684\u5730\u7528\u6237@\u4e3b\u673a:\u76ee\u7684\u5730\u8def\u5f84/\u540d\u79f0 a --archive \uff1a\u5f52\u6863\u6a21\u5f0f\uff0c\u8868\u793a\u9012\u5f52\u4f20\u8f93\u5e76\u4fdd\u6301\u6587\u4ef6\u5c5e\u6027\u3002\u7b49\u540c\u4e8e\"-rtopgDl\"\u3002 rsync -av /home/matt/hello.txt matt@192.168.96.135:/home/matt xsync\u5206\u53d1\u96c6\u7fa4\u811a\u672c \u5e95\u5c42\u4f7f\u7528rxync \u8fdb\u5165\u5f53\u524d\u5bb6\u76ee\u5f55\u7684bin\u76ee\u5f55\u4e0b cd ~/bin vim xsync \u7f16\u5199\u811a\u672c \u8bb0\u5f97\u4fee\u6539ip #!/bin/bash #1. \u5224\u65ad\u53c2\u6570\u4e2a\u6570 if [ $# -lt 1 ] then echo Not Enough Arguement! exit; fi #2. \u904d\u5386\u96c6\u7fa4\u6240\u6709\u673a\u5668 for host in matt05 matt06 matt07 do echo ==================== $host ==================== #3. \u904d\u5386\u6240\u6709\u76ee\u5f55\uff0c\u6328\u4e2a\u53d1\u9001 for file in $@ do #4. \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728 if [ -e $file ] then #5. \u83b7\u53d6\u7236\u76ee\u5f55 pdir=$(cd -P $(dirname $file); pwd) #6. \u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u7684\u540d\u79f0 fname=$(basename $file) ssh $host \"mkdir -p $pdir\" rsync -av $pdir/$fname $host:$pdir else echo $file does not exists! fi done done \u6dfb\u52a0\u6267\u884c\u6743\u9650 chmod u+x xsync \u914d\u7f6e\u73af\u5883 echo $PATH vim /etc/profile.d/my_env.sh \u811a\u672c\u590d\u5236\u5230bin\u76ee\u5f55\u4e0b \u4f7f\u7528sudo\u9700\u8981\u4f7f\u7528\u5168\u8def\u5f84\u3002\u4e0d\u8981\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84 sudo cp /home/matt/bin/xsync /bin \u5206\u53d1\u811a\u672c\u73af\u5883\u53d8\u91cf\u751f\u6548 sudo xsync /home/matt/bin/xsync /bin/xsync /etc/profile.d/my_env.sh source /etc/profile ssh ssh \u7528\u6237\u540d@ip ssh root@123.56.135.43 \u514d\u5bc6\u767b\u5f55 cd ~/.ssh ls -a \u751f\u6210\u516c\u94a5\u79c1\u94a5 ssh-keygen -t rsa \u7136\u540e\u6572(\u4e09\u4e2a\u56de\u8f66)\uff0c\u5c31\u4f1a\u751f\u6210\u4e24\u4e2a\u6587\u4ef6 id_rsa(\u79c1\u94a5)\u3001id_rsa.pub(\u516c\u94a5) \u5c06\u516c\u94a5\u62f7\u8d1d\u5230\u8981\u514d\u5bc6\u767b\u5f55\u7684\u76ee\u6807\u673a\u5668\u4e0a ssh-copy-id -i id_rsa.pub matt@192.168.96.128 .ssh \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u89e3\u91ca a\u7ed9b\u516c\u94a5 a\u5c31\u53ef\u4ee5\u514d\u5bc6\u767b\u5f55b \u5206\u522b\u914d\u7f6ematt,root\u7528\u6237\u514d\u5bc6\u767b\u5f55\u5176\u4ed6\u670d\u52a1\u5668 \u96c6\u7fa4\u90e8\u7f72 \u96c6\u7fa4\u89c4\u5212 NameNode\u548cSecondaryNameNode\u4e0d\u8981\u5b89\u88c5\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668 ResourceManager\u4e5f\u5f88\u6d88\u8017\u5185\u5b58\uff0c\u4e0d\u8981\u548cNameNode\u3001SecondaryNameNode\u914d\u7f6e\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a \u914d\u7f6e\u6587\u4ef6\u8bf4\u660e Hadoop \u914d\u7f6e\u6587\u4ef6\u5206\u4e24\u7c7b:\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u548c\u81ea\u5b9a\u4e49\u914d\u7f6e\u6587\u4ef6\uff0c\u53ea\u6709\u7528\u6237\u60f3\u4fee\u6539\u67d0\u4e00\u9ed8\u8ba4\u914d\u7f6e\u503c\u65f6\uff0c\u624d\u9700\u8981\u4fee\u6539\u81ea\u5b9a\u4e49\u914d\u7f6e\u6587\u4ef6\uff0c\u66f4\u6539\u76f8\u5e94\u5c5e\u6027\u503c\u3002 \u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6 \u81ea\u5b9a\u4e49\u914d\u7f6e\u6587\u4ef6 core-site.xml \u3001 hdfs-site.xml \u3001 yarn-site.xml \u3001 mapred-site.xml \u56db\u4e2a\u914d\u7f6e\u6587\u4ef6\u5b58\u653e\u5728 $HADOOP_HOME/etc/hadoop \u8fd9\u4e2a\u8def\u5f84\u4e0a\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u9879\u76ee\u9700\u6c42\u91cd\u65b0\u8fdb\u884c\u4fee\u6539\u914d\u7f6e\u3002 \u914d\u7f6e\u96c6\u7fa4 1.\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6-matt05 \u914d\u7f6e core-site.xml vim core-site.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?> <configuration> <!-- \u6307\u5b9a NameNode \u7684\u5730\u5740 --> <property> <name>fs.defaultFS</name> <value>hdfs://matt05:8020</value> </property> <!-- \u6307\u5b9a hadoop \u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55 --> <property> <name>hadoop.tmp.dir</name> <value>/opt/module/hadoop-3.1.3/data</value> </property> <!-- \u914d\u7f6e HDFS \u7f51\u9875\u767b\u5f55\u4f7f\u7528\u7684\u9759\u6001\u7528\u6237\u4e3a matt --> <property> <name>hadoop.http.staticuser.user</name> <value>matt</value> </property> </configuration> 2.HDFS \u914d\u7f6e\u6587\u4ef6-matt05 \u914d\u7f6e hdfs-site.xml vim hdfs-site.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?> <configuration> <!-- nn web \u7aef\u8bbf\u95ee\u5730\u5740--> <property> <name>dfs.namenode.http-address</name> <value>matt05:9870</value> </property> <!-- 2nn web \u7aef\u8bbf\u95ee\u5730\u5740--> <property> <name>dfs.namenode.secondary.http-address</name> <value>matt07:9868</value> </property> </configuration> 3.YARN \u914d\u7f6e\u6587\u4ef6-matt05 vim yarn-site.xml <configuration> <!-- \u6307\u5b9a MR \u8d70 shuffle --> <property> <name>yarn.nodemanager.aux-services</name> <value>mapreduce_shuffle</value> </property> <!-- \u6307\u5b9a ResourceManager \u7684\u5730\u5740--> <property> <name>yarn.resourcemanager.hostname</name> <value>matt06</value> </property> <!-- \u73af\u5883\u53d8\u91cf\u7684\u7ee7\u627f --> <property> <name>yarn.nodemanager.env-whitelist</name> <value>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME</value> </property> </configuration> 4.MapReduce \u914d\u7f6e\u6587\u4ef6-matt05 vim mapred-site.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?> <configuration> <!-- \u6307\u5b9a MapReduce \u7a0b\u5e8f\u8fd0\u884c\u5728 Yarn \u4e0a --> <property> <name>mapreduce.framework.name</name> <value>yarn</value> </property> </configuration> \u5206\u53d1\u914d\u7f6e\u6587\u4ef6 xsync /opt/module/hadoop-3.1.3/etc/hadoop/ \u7fa4\u8d77 \u914d\u7f6eworkers vim /opt/module/hadoop-3.1.3/etc/hadoop/workers \u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9 matt05 matt06 matt07 \u5206\u53d1\u914d\u7f6e\u6587\u4ef6 xsync /opt/module/hadoop-3.1.3/etc \u542f\u52a8\u96c6\u7fa4 \u683c\u5f0f\u5316 1.\u5982\u679c\u96c6\u7fa4\u662f\u7b2c\u4e00\u6b21\u542f\u52a8\uff0c\u9700\u8981\u5728 matt05 \u8282\u70b9\u683c\u5f0f\u5316 NameNode(\u6ce8\u610f:\u683c\u5f0f\u5316 NameNode\uff0c\u4f1a\u4ea7\u751f\u65b0\u7684\u96c6\u7fa4 id\uff0c\u5bfc\u81f4 NameNode \u548c DataNode \u7684\u96c6\u7fa4 id \u4e0d\u4e00\u81f4\uff0c\u96c6\u7fa4\u627e \u4e0d\u5230\u5df2\u5f80\u6570\u636e\u3002\u5982\u679c\u96c6\u7fa4\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u62a5\u9519\uff0c\u9700\u8981\u91cd\u65b0\u683c\u5f0f\u5316 NameNode \u7684\u8bdd\uff0c\u4e00\u5b9a\u8981\u5148\u505c \u6b62 namenode \u548c datanode \u7a0b\uff0c\u5e76\u4e14\u8981\u5220\u9664\u6240\u6709\u673a\u5668\u7684 data \u548c logs \u76ee\u5f55\uff0c\u7136\u540e\u518d\u8fdb\u884c\u683c\u5f0f\u5316\u3002) hdfs namenode -format \u542f\u52a8hdfs sbin/start-dfs.sh \u542f\u52a8yarn \u5728\u914d\u7f6e\u4e86 ResourceManager \u7684\u8282\u70b9( matt06 )\u542f\u52a8 YARN yarn:\u5fc5\u987b\u5728matt06\u5f00\u542f\u5173\u95ed sbin/start-yarn.sh \u9a8c\u8bc1 web Web \u7aef\u67e5\u770b HDFS \u7684 NameNode (a)\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165:http://matt05:9870 (b)\u67e5\u770b HDFS \u4e0a\u5b58\u50a8\u7684\u6570\u636e\u4fe1\u606f Web \u7aef\u67e5\u770b YARN \u7684 ResourceManager (a)\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165:http://matt06:8088 (b)\u67e5\u770b YARN \u4e0a\u8fd0\u884c\u7684 Job \u4fe1\u606f \u6d4b\u8bd5\u914d\u7f6e\u662f\u5426\u6210\u529f \u521b\u5efa\u6587\u4ef6\u5939\u5e76\u4e0a\u4f20 hadoop fs -mkdir /input hadoop fs -put $HADOOP_HOME/wcinput/word.txt /input hadoop\u6587\u4ef6\u5b58\u50a8\u8def\u5f84 /opt/module/hadoop-3.1.3/data/dfs/data/current/BP-1436128598- 192.168.10.102-1610603650062/current/finalized/subdir0/subdir0 \u4e0b\u8f7d\u6587\u4ef6 hadoop fs -get /jdk-8u212-linux- x64.tar.gz ./ [matt@matt05 subdir0]$ cat blk_1073741825 hello word hello matt tencent [matt@matt05 subdir0]$ pwd /opt/module/hadoop-3.1.3/data/dfs/data/current/BP-1324950131-192.168.96.135-1628037446040/current/finalized/subdir0/subdir0 [matt@matt05 subdir0]$ [atguigu@hadoop102 subdir0]$ cat blk_1073741836>>tmp.tar.gz [atguigu@hadoop102 subdir0]$ cat blk_1073741837>>tmp.tar.gz [atguigu@hadoop102 subdir0]$ tar -zxvf tmp.tar.gz \u6267\u884cjar\u5305 hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount /input /output \u914d\u7f6e\u5386\u53f2\u670d\u52a1\u5668 \u53ef\u4ee5\u67e5\u770b\u5386\u53f2\u8fd0\u884c\u60c5\u51b5 \u7f16\u5199\u914d\u7f6e\u6587\u4ef6 vim mapred-site.xml <!-- \u5386\u53f2\u670d\u52a1\u5668\u7aef\u5730\u5740 --> <property> <name>mapreduce.jobhistory.address</name> <value>matt05:10020</value> </property> <!-- \u5386\u53f2\u670d\u52a1\u5668 web \u7aef\u5730\u5740 --> <property> <name>mapreduce.jobhistory.webapp.address</name> <value>matt05:19888</value> </property> \u5206\u53d1\u914d\u7f6e xsync $HADOOP_HOME/etc/hadoop/mapred-site.xml matt05\u542f\u52a8\u5386\u53f2\u670d\u52a1\u5668 $HADOOP_HOME/bin [matt@matt05 bin]$ mapred --daemon start historyserver \u6d4b\u8bd5 jps \u65e5\u5fd7\u805a\u96c6 \u65e5\u5fd7\u805a\u96c6\u6982\u5ff5\uff1a\u5e94\u7528\u8fd0\u884c\u5b8c\u6210\u4ee5\u540e\uff0c\u5c06\u7a0b\u5e8f\u8fd0\u884c\u65e5\u5fd7\u4fe1\u606f\u4e0a\u4f20\u5230 HDFS \u7cfb\u7edf\u4e0a\u3002 \u7f16\u5199\u914d\u7f6e\u6587\u4ef6matt05 vim yarn-site.xml <!-- \u5f00\u542f\u65e5\u5fd7\u805a\u96c6\u529f\u80fd --> <property> <name>yarn.log-aggregation-enable</name> <value>true</value> </property> <!-- \u8bbe\u7f6e\u65e5\u5fd7\u805a\u96c6\u670d\u52a1\u5668\u5730\u5740 --> <property> <name>yarn.log.server.url</name> <value>http://matt05:19888/jobhistory/logs</value> </property> <!-- \u8bbe\u7f6e\u65e5\u5fd7\u4fdd\u7559\u65f6\u95f4\u4e3a 7 \u5929 --> <property> <name>yarn.log-aggregation.retain-seconds</name> <value>604800</value> </property> \u5206\u53d1\u914d\u7f6e\u6587\u4ef6 xsync $HADOOP_HOME/etc/hadoop/yarn-site.xml \u5173\u95ed NodeManager \u3001ResourceManager \u548c HistoryServer # matt06\u670d\u52a1\u5668 sbin/stop-yarn.sh # matt05\u670d\u52a1\u5668 mapred --daemon stop historyserver \u542f\u52a8 NodeManager \u3001ResourceManage \u548c HistoryServer ./start-yarn.sh mapred --daemon start historyserver how \u6574\u4f53\u542f\u52a8 \u6574\u4f53\u542f\u52a8/\u505c\u6b62 HDFS start-dfs.sh/stop-dfs.sh \u6574\u4f53\u542f\u52a8/\u505c\u6b62 YARN start-yarn.sh/stop-yarn.sh \u5404\u4e2a\u670d\u52a1\u7ec4\u4ef6\u9010\u4e00\u542f\u52a8/\u505c\u6b62 \u5206\u522b\u542f\u52a8/\u505c\u6b62 HDFS \u7ec4\u4ef6 hdfs --daemon start/stop namenode/datanode/secondarynamenode \u542f\u52a8/\u505c\u6b62 YARN yarn --daemon start/stop resourcemanager/nodemanager matt\u7528\u6237\u4e0b\u542f\u52a8 \u542f\u52a8\u811a\u672c myhadoop.sh cd ~/bin vim myhadoop.sh #!/bin/bash if [ $# -lt 1 ] then echo \"No Args Input...\" exit ; fi case $1 in \"start\") echo \" =================== \u542f\u52a8 hadoop \u96c6\u7fa4 ===================\" echo \" --------------- \u542f\u52a8 hdfs ---------------\" ssh matt05 \"/opt/module/hadoop-3.1.3/sbin/start-dfs.sh\" echo \" --------------- \u542f\u52a8 yarn ---------------\" ssh matt06 \"/opt/module/hadoop-3.1.3/sbin/start-yarn.sh\" echo \" --------------- \u542f\u52a8 historyserver ---------------\" ssh matt05 \"/opt/module/hadoop-3.1.3/bin/mapred --daemon start historyserver\" ;; \"stop\") echo \" =================== \u5173\u95ed hadoop \u96c6\u7fa4 ===================\" echo \" --------------- \u5173\u95ed historyserver ---------------\" ssh matt05 \"/opt/module/hadoop-3.1.3/bin/mapred --daemon stop historyserver\" echo \" --------------- \u5173\u95ed yarn ---------------\" ssh matt06 \"/opt/module/hadoop-3.1.3/sbin/stop-yarn.sh\" echo \" --------------- \u5173\u95ed hdfs ---------------\" ssh matt05 \"/opt/module/hadoop-3.1.3/sbin/stop-dfs.sh\" ;; *) echo \"Input Args Error...\" ;; esac \u6dfb\u52a0\u6743\u9650 chmod 777 myhadoop.sh \u811a\u672c\u590d\u5236\u5230bin\u76ee\u5f55\u4e0b \u4f7f\u7528sudo\u9700\u8981\u4f7f\u7528\u5168\u8def\u5f84\u3002\u4e0d\u8981\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84 sudo cp /home/matt/bin/xsync /bin \u5206\u53d1\u811a\u672c sudo xsync /home/matt/bin/xsync /bin/xsync /etc/profile.d/my_env.sh \u73af\u5883\u53d8\u91cf\u751f\u6548 source /etc/profile JPSALL vim jpsall #!/bin/bash for host in matt05 matt06 matt07 do echo =============== $host =============== ssh $host jps done chmod 777 jpsall \u5e38\u7528\u7aef\u53e3\u53f7 \u5e38\u7528\u914d\u7f6e\u6587\u4ef6 \u65f6\u95f4\u540c\u6b65 \u9700\u6c42 \u5982\u679c\u670d\u52a1\u5668\u5728\u516c\u7f51\u73af\u5883\uff08\u80fd\u8fde\u63a5\u5916\u7f51\uff09\uff0c\u53ef\u4ee5\u4e0d\u91c7\u7528\u96c6\u7fa4\u65f6\u95f4\u540c\u6b65\uff0c\u56e0\u4e3a\u670d\u52a1\u5668\u4f1a\u5b9a\u671f \u548c\u516c\u7f51\u65f6\u95f4\u8fdb\u884c\u6821\u51c6\uff1b \u5982\u679c\u670d\u52a1\u5668\u5728\u5185\u7f51\u73af\u5883\uff0c\u5fc5\u987b\u8981\u914d\u7f6e\u96c6\u7fa4\u65f6\u95f4\u540c\u6b65\uff0c\u5426\u5219\u65f6\u95f4\u4e45\u4e86\uff0c\u4f1a\u4ea7\u751f\u65f6\u95f4\u504f\u5dee\uff0c \u5bfc\u81f4\u96c6\u7fa4\u6267\u884c\u4efb\u52a1\u65f6\u95f4\u4e0d\u540c\u6b65 \u627e\u4e00\u4e2a\u673a\u5668\uff0c\u4f5c\u4e3a\u65f6\u95f4\u670d\u52a1\u5668\uff0c\u6240\u6709\u7684\u673a\u5668\u4e0e\u8fd9\u53f0\u96c6\u7fa4\u65f6\u95f4\u8fdb\u884c\u5b9a\u65f6\u7684\u540c\u6b65\uff0c\u751f\u4ea7\u73af\u5883 \u6839\u636e\u4efb\u52a1\u5bf9\u65f6\u95f4\u7684\u51c6\u786e\u7a0b\u5ea6\u8981\u6c42\u5468\u671f\u540c\u6b65\u3002\u6d4b\u8bd5\u73af\u5883\u4e3a\u4e86\u5c3d\u5feb\u770b\u5230\u6548\u679c\uff0c\u91c7\u7528 1 \u5206\u949f\u540c\u6b65\u4e00 \u6b21\u3002 config \u67e5\u770b\u6240\u6709\u8282\u70b9 ntpd \u670d\u52a1\u72b6\u6001\u548c\u5f00\u673a\u81ea\u542f\u52a8\u72b6\u6001 sudo su root systemctl status ntpd systemctl start ntpd systemctl is-enabled ntpd \u4fee\u6539 hadoop102 \u7684 ntp.conf \u914d\u7f6e\u6587\u4ef6 vim /etc/ntp.conf \u4fee\u6539 1\uff08\u6388\u6743 192.168.96.0-192.168.10.255 \u7f51\u6bb5\u4e0a\u7684\u6240\u6709\u673a\u5668\u53ef\u4ee5\u4ece\u8fd9\u53f0\u673a\u5668\u4e0a\u67e5 \u8be2\u548c\u540c\u6b65\u65f6\u95f4\uff09 estrict 192.168.96.0 mask 255.255.255.0 nomodify notrap \u4fee\u6539 2\uff08\u96c6\u7fa4\u5728\u5c40\u57df\u7f51\u4e2d\uff0c\u4e0d\u4f7f\u7528\u5176\u4ed6\u4e92\u8054\u7f51\u4e0a\u7684\u65f6\u95f4\uff09 #server 0.centos.pool.ntp.org iburst #server 1.centos.pool.ntp.org iburst #server 2.centos.pool.ntp.org iburst #server 3.centos.pool.ntp.org iburst \u6dfb\u52a0 3\uff08\u5f53\u8be5\u8282\u70b9\u4e22\u5931\u7f51\u7edc\u8fde\u63a5\uff0c\u4f9d\u7136\u53ef\u4ee5\u91c7\u7528\u672c\u5730\u65f6\u95f4\u4f5c\u4e3a\u65f6\u95f4\u670d\u52a1\u5668\u4e3a\u96c6\u7fa4\u4e2d \u7684\u5176\u4ed6\u8282\u70b9\u63d0\u4f9b\u65f6\u95f4\u540c\u6b65\uff09 server 127.127.1.0 fudge 127.127.1.0 stratum 10 \u4fee\u6539 matt05 \u7684/etc/sysconfig/ntpd \u6587\u4ef6 vim /etc/sysconfig/ntpd \u589e\u52a0\u5185\u5bb9\u5982\u4e0b\uff08\u8ba9\u786c\u4ef6\u65f6\u95f4\u4e0e\u7cfb\u7edf\u65f6\u95f4\u4e00\u8d77\u540c\u6b65\uff09 SYNC_HWCLOCK=yes \u91cd\u65b0\u542f\u52a8 ntpd \u670d\u52a1 systemctl start ntpd systemctl enable ntpd \u5176\u4ed6\u673a\u5668\u914d\u7f6e root\u7528\u6237\u4e0b\u5173\u95ed\u6240\u6709\u8282\u70b9\u4e0a ntp \u670d\u52a1\u548c\u81ea\u542f\u52a8 systemctl stop ntpd systemctl disable ntpd \u5728\u5176\u4ed6\u673a\u5668\u914d\u7f6e 1 \u5206\u949f\u4e0e\u65f6\u95f4\u670d\u52a1\u5668\u540c\u6b65\u4e00\u6b21 crontab -e \u7f16\u5199\u5b9a\u65f6\u4efb\u52a1\u5982\u4e0b\uff1a */1 * * * * /usr/sbin/ntpdate matt05 \u6d4b\u8bd5 date -s \"2021-9-11 11:11:11\" date \u6587\u4ef6\u5757\u5927\u5c0f\uff1a128m \u4e0a\u9650\u662f128m \u5982\u679c\u662f1kb\u7684\u6587\u4ef6\u90a3\u4e48\u5269\u4f59\u7684\u7a7a\u95f4\u8fd8\u53ef\u4ee5\u4e3a\u5176\u4ed6\u6587\u4ef6\u5b58\u50a8 \u95ee\u9898 \u7248\u672c\u4e0d\u4e00\u81f4 \u56e0\u4e3a\u6bcf\u4e2adatanode\u8282\u70b9\u90fd\u6709\u7248\u672c\u53f7\uff0c\u5982\u679c\u4e0d\u4e00\u81f4\u5c31\u4f1a\u542f\u52a8\u62a5\u9519 sbin/stop-dfs.sh \u5220\u9664\u6bcf\u4e2a\u8282\u70b9\u7684data logs \u5373\u53ef rm -rvf data rm -rvf logs \u683c\u5f0f\u5316 hdfs namenode -format \u542f\u52a8 sbin/start-dfs.sh http://matt05:9870/ \u5176\u4ed6\u9519\u8bef 1\uff09\u9632\u706b\u5899\u6ca1\u5173\u95ed\u3001\u6216\u8005\u6ca1\u6709\u542f\u52a8 YARN INFO client.RMProxy: Connecting to ResourceManager at hadoop108/192.168.10.108:8032 2\uff09root \u7528\u6237\u548c matt05 \u4e24\u4e2a\u7528\u6237\u542f\u52a8\u96c6\u7fa4\u4e0d\u7edf\u4e00 3\uff09\u4e0d\u8bc6\u522b\u4e3b\u673a\u540d\u79f0 java.net.UnknownHostException: hadoop102: hadoop102 at java.net.InetAddress.getLocalHost(InetAddress.java:1475) at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(Job Submitter.java:146) at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1290) at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1287) at java.security.AccessController.doPrivileged(Native Method) at javax.security.auth.Subject.doAs(Subject.java:415) \u89e3\u51b3\u529e\u6cd5\uff1a \u200b \uff081\uff09\u5728/etc/hosts \u6587\u4ef6\u4e2d\u6dfb\u52a0 192.168.10.102 hadoop102 \u200b \uff082\uff09\u4e3b\u673a\u540d\u79f0\u4e0d\u8981\u8d77 hadoop hadoop000 \u7b49\u7279\u6b8a\u540d\u79f0 4\uff09jps \u53d1\u73b0\u8fdb\u7a0b\u5df2\u7ecf\u6ca1\u6709\uff0c\u4f46\u662f\u91cd\u65b0\u542f\u52a8\u96c6\u7fa4\uff0c\u63d0\u793a\u8fdb\u7a0b\u5df2\u7ecf\u5f00\u542f\u3002 \u539f\u56e0\u662f\u5728 Linux \u7684\u6839\u76ee\u5f55\u4e0b/tmp \u76ee\u5f55\u4e2d\u5b58\u5728\u542f\u52a8\u7684\u8fdb\u7a0b\u4e34\u65f6\u6587\u4ef6\uff0c\u5c06\u96c6\u7fa4\u76f8\u5173\u8fdb\u7a0b\u5220 \u9664\u6389\uff0c\u518d\u91cd\u65b0\u542f\u52a8\u96c6\u7fa4\u3002 5\uff09jps \u4e0d\u751f\u6548 \u539f\u56e0\uff1a\u5168\u5c40\u53d8\u91cf hadoop java \u6ca1\u6709\u751f\u6548\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a\u9700\u8981 source /etc/profile \u6587\u4ef6\u3002 6\uff098088 \u7aef\u53e3\u8fde\u63a5\u4e0d\u4e0a bash cat /etc/hosts \u6ce8\u91ca\u6389\u5982\u4e0b\u4ee3\u7801 #127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 #::1 matt05","title":"quickstart"},{"location":"bigdata/hadoop/quickstart/#what","text":"","title":"what"},{"location":"bigdata/hadoop/quickstart/#what-hadoop","text":"\u5206\u5e03\u5f0f\u57fa\u7840\u67b6\u6784 \u4e3b\u8981\u89e3\u51b3\uff0c\u6d77\u91cf\u6570\u636e\u7684\u5b58\u50a8\u548c\u6d77\u91cf\u6570\u636e\u7684\u5206\u6790\u8ba1\u7b97\u95ee\u9898\u3002 3.1.3 http://hadoop.apache.org/","title":"what hadoop"},{"location":"bigdata/hadoop/quickstart/#advantage","text":"1.\u9ad8\u53ef\u9760\u6027\uff1aHadoop\u5e95\u5c42\u7ef4\u62a4\u591a\u4e2a\u6570\u636e\u526f\u672c\uff0c\u6240\u4ee5\u5373\u4f7fHadoop\u67d0\u4e2a\u8ba1\u7b97\u5143 \u7d20\u6216\u5b58\u50a8\u6545\u969c\uff0c\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u6570\u636e\u7684\u4e22\u5931\u3002 2.\u9ad8\u6269\u5c55\u6027\uff1a\u5728\u96c6\u7fa4\u95f4\u5206\u914d\u4efb\u52a1\u6570\u636e\uff0c\u53ef\u65b9\u4fbf\u7684\u6269\u5c55\u6570\u4ee5\u5343\u8ba1\u7684\u8282\u70b9\u3002 3.\u9ad8\u6548\u6027\uff1a\u5728MapReduce\u7684\u601d\u60f3\u4e0b\uff0cHadoop\u662f\u5e76\u884c\u5de5\u4f5c\u7684\uff0c\u4ee5\u52a0\u5feb\u4efb\u52a1\u5904 \u7406\u901f\u5ea6\u3002 4.\u9ad8\u5bb9\u9519\u6027\uff1a\u80fd\u591f\u81ea\u52a8\u5c06\u5931\u8d25\u7684\u4efb\u52a1\u91cd\u65b0\u5206\u914d\u3002","title":"advantage"},{"location":"bigdata/hadoop/quickstart/#framework","text":"\u5728 Hadoop1.x \u65f6 \u4ee3 \uff0cHadoop\u4e2d\u7684MapReduce\u540c\u65f6\u5904\u7406\u4e1a\u52a1\u903b\u8f91\u8fd0\u7b97\u548c\u8d44\u6e90\u7684\u8c03\u5ea6\uff0c\u8026\u5408\u6027\u8f83\u5927\u3002\u5728Hadoop2.x\u65f6\u4ee3\uff0c\u589e\u52a0\u4e86Yarn\u3002Yarn\u53ea\u8d1f\u8d23\u8d44\u6e90\u7684\u8c03\u5ea6\uff0cMapReduce \u53ea\u8d1f\u8d23\u8fd0\u7b97 \u3002Hadoop3.x\u5728\u7ec4\u6210\u4e0a\u6ca1\u6709\u53d8\u5316\u3002","title":"framework"},{"location":"bigdata/hadoop/quickstart/#hdfs","text":"\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf 1.NameNode\uff08nn\uff09\uff1a\u5b58\u50a8\u6587\u4ef6\u7684\u5143\u6570\u636e\uff0c\u5982\u6587\u4ef6\u540d\uff0c\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\uff0c\u6587\u4ef6\u5c5e\u6027\uff08\u751f\u6210\u65f6\u95f4\u3001\u526f\u672c\u6570\u3001 \u6587\u4ef6\u6743\u9650\uff09\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u6587\u4ef6\u7684\u5757\u5217\u8868\u548c\u5757\u6240\u5728\u7684DataNode\u7b49\u3002 2.DataNode(dn)\uff1a\u5728\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u5b58\u50a8\u6587\u4ef6\u5757\u6570\u636e\uff0c\u4ee5\u53ca\u5757\u6570\u636e\u7684\u6821\u9a8c\u548c\u3002 3.Secondary NameNode(2nn)\uff1a\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u5bf9NameNode\u5143\u6570\u636e\u5907\u4efd\u3002","title":"hdfs"},{"location":"bigdata/hadoop/quickstart/#yarn","text":"\u8d44\u6e90\u7ba1\u7406\u8005 ResourceManager\uff08RM\uff09\uff1a\u6574\u4e2a\u96c6\u7fa4\u8d44\u6e90\uff08\u5185\u5b58\u3001CPU\u7b49\uff09\u7684\u8001\u5927 NodeManager\uff08NM\uff09\uff1a\u5355\u4e2a\u8282\u70b9\u670d\u52a1\u5668\u8d44\u6e90\u8001\u5927 ApplicationMaster\uff08AM\uff09\uff1a\u5355\u4e2a\u4efb\u52a1\u8fd0\u884c\u7684\u8001\u5927 Container\uff1a\u5bb9\u5668\uff0c\u76f8\u5f53\u4e00\u53f0\u72ec\u7acb\u7684\u670d\u52a1\u5668\uff0c\u91cc\u9762\u5c01\u88c5\u4e86\u4efb\u52a1\u8fd0\u884c\u6240\u9700\u8981\u7684\u8d44\u6e90\uff0c\u5982\u5185\u5b58\u3001CPU\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u7b49\u3002","title":"yarn"},{"location":"bigdata/hadoop/quickstart/#mapreduce","text":"MapReduce \u5c06\u8ba1\u7b97\u8fc7\u7a0b\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1aMap \u548c Reduce 1\uff09Map \u9636\u6bb5\u5e76\u884c\u5904\u7406\u8f93\u5165\u6570\u636e 2\uff09Reduce \u9636\u6bb5\u5bf9 Map \u7ed3\u679c\u8fdb\u884c\u6c47\u603b","title":"mapreduce"},{"location":"bigdata/hadoop/quickstart/#_1","text":"","title":"\u4e09\u8005\u5173\u7cfb"},{"location":"bigdata/hadoop/quickstart/#install","text":"","title":"install"},{"location":"bigdata/hadoop/quickstart/#install-centos","text":"\u53c2\u8003\u5b89\u88c5centos7.5(4g+50g) \u5b89\u88c5centos\u3001\u8bbe\u7f6e\u7f51\u7edc\u3001\u5173\u95ed\u9632\u706b\u5899\u8bbe\u7f6e\u4e3b\u673a\u540d\u3001\u5b89\u88c5\u5e38\u89c1\u8f6f\u4ef6\u5305(\u5b89\u88c5epel-release,jdk,gcc,g++)\u3001\u8bbe\u7f6e\u4e3b\u673a\u540dip\u6620\u5c04\u3001\u521b\u5efamatt\u7528\u6237\u5e76\u914d\u7f6e sudo \uff0c\u521b\u5efa\u8f6f\u4ef6\u76ee\u5f55\uff0c\u4fee\u6539\u6587\u4ef6\u6240\u6709\u8005\uff0c\u5b89\u88c5jdk,\u865a\u62df\u673a\u514b\u9686\u7b49\u3002 \u5982\u679c\u662f\u6700\u5c0f\u5316\u5b89\u88c5\u5219\u9700\u8981\u5b89\u88c5net-tool,vim yum install -y net-tools yum install -y vim matt05 matt06 matt07","title":"install centos"},{"location":"bigdata/hadoop/quickstart/#hadoop","text":"","title":"\u5355\u673a\u5b89\u88c5hadoop"},{"location":"bigdata/hadoop/quickstart/#_2","text":"\u89e3\u538b hadoop-3.1.3.tar.gz tar -zxvf hadoop-3.1.3.tar.gz -C /opt/module/ hadoop version","title":"\u5b89\u88c5"},{"location":"bigdata/hadoop/quickstart/#_3","text":"","title":"\u914d\u7f6e"},{"location":"bigdata/hadoop/quickstart/#path","text":"sudo vim /etc/profile.d/my_env.sh","title":"\u7f16\u5199\u914d\u7f6epath"},{"location":"bigdata/hadoop/quickstart/#path_1","text":"#HADOOP_HOME export HADOOP_HOME=/opt/module/hadoop-3.1.3 export PATH=$PATH:$HADOOP_HOME/bin export PATH=$PATH:$HADOOP_HOME/sbin","title":"\u914d\u7f6epath"},{"location":"bigdata/hadoop/quickstart/#_4","text":"source /etc/profile","title":"\u914d\u7f6e\u751f\u6548"},{"location":"bigdata/hadoop/quickstart/#_5","text":"hadoop version","title":"\u9a8c\u8bc1"},{"location":"bigdata/hadoop/quickstart/#_6","text":"bin \u76ee\u5f55:\u5b58\u653e\u5bf9 Hadoop \u76f8\u5173\u670d\u52a1(hdfs\uff0cyarn\uff0cmapred)\u8fdb\u884c\u64cd\u4f5c\u7684\u811a\u672c etc \u76ee\u5f55:Hadoop \u7684\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\uff0c\u5b58\u653e Hadoop \u7684\u914d\u7f6e\u6587\u4ef6 lib \u76ee\u5f55:\u5b58\u653e Hadoop \u7684\u672c\u5730\u5e93(\u5bf9\u6570\u636e\u8fdb\u884c\u538b\u7f29\u89e3\u538b\u7f29\u529f\u80fd) sbin \u76ee\u5f55:\u5b58\u653e\u542f\u52a8\u6216\u505c\u6b62 Hadoop \u76f8\u5173\u670d\u52a1\u7684\u811a\u672c share \u76ee\u5f55:\u5b58\u653e Hadoop \u7684\u4f9d\u8d56 jar \u5305\u3001\u6587\u6863\u3001\u548c\u5b98\u65b9\u6848\u4f8b","title":"\u76ee\u5f55\u7ed3\u6784"},{"location":"bigdata/hadoop/quickstart/#hadoop_1","text":"","title":"hadoop\u8fd0\u884c\u6a21\u5f0f"},{"location":"bigdata/hadoop/quickstart/#_7","text":"Hadoop \u8fd0\u884c\u6a21\u5f0f\u5305\u62ec:\u672c\u5730\u6a21\u5f0f\u3001\u4f2a\u5206\u5e03\u5f0f\u6a21\u5f0f\u4ee5\u53ca\u5b8c\u5168\u5206\u5e03\u5f0f\u6a21\u5f0f\u3002 \u672c\u5730\u6a21\u5f0f:\u5355\u673a\u8fd0\u884c\uff0c\u53ea\u662f\u7528\u6765\u6f14\u793a\u4e00\u4e0b\u5b98\u65b9\u6848\u4f8b\u3002\u751f\u4ea7\u73af\u5883\u4e0d\u7528\u3002 \u4f2a\u5206\u5e03\u5f0f\u6a21\u5f0f:\u4e5f\u662f\u5355\u673a\u8fd0\u884c\uff0c\u4f46\u662f\u5177\u5907Hadoop\u96c6\u7fa4\u7684\u6240\u6709\u529f\u80fd\uff0c\u4e00\u53f0\u670d\u52a1\u5668\u6a21 \u62df\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u73af\u5883\u3002 \u5b8c\u5168\u5206\u5e03\u5f0f\u6a21\u5f0f:\u591a\u53f0\u670d\u52a1\u5668\u7ec4\u6210\u5206\u5e03\u5f0f\u73af\u5883\u3002\u751f\u4ea7\u73af\u5883\u4f7f\u7528\u3002","title":"\u4e09\u79cd\u6a21\u5f0f"},{"location":"bigdata/hadoop/quickstart/#_8","text":"\u5728hadoop\u5b89\u88c5\u76ee\u5f55\u4e0b mkdir wcinput cd wcinput vim hello.txt a a b c a d \u8f93\u51fa\u76ee\u5f55\u4e0d\u53ef\u4ee5\u5b58\u5728 hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount wcinput wcoutput \u67e5\u770b\u7ed3\u679c cat wcoutput/part-r-00000","title":"\u672c\u5730\u6a21\u5f0f\u4f7f\u7528"},{"location":"bigdata/hadoop/quickstart/#_9","text":"","title":"\u5b8c\u5168\u5206\u5e03\u5f0f\u5b89\u88c5"},{"location":"bigdata/hadoop/quickstart/#_10","text":"\u51c6\u5907 3 \u53f0\u5ba2\u6237\u673a(\u5173\u95ed\u9632\u706b\u5899\u3001\u9759\u6001 IP\u3001\u4e3b\u673a\u540d\u79f0) \u5b89\u88c5 JDK \u914d\u7f6e\u73af\u5883\u53d8\u91cf \u5b89\u88c5 Hadoop \u914d\u7f6e\u73af\u5883\u53d8\u91cf \u914d\u7f6e\u96c6\u7fa4 \u5355\u70b9\u542f\u52a8 \u914d\u7f6essh \u7fa4\u8d77\u5e76\u6d4b\u8bd5\u96c6\u7fa4","title":"\u6d41\u7a0b"},{"location":"bigdata/hadoop/quickstart/#_11","text":"","title":"\u6587\u4ef6\u4f20\u8f93"},{"location":"bigdata/hadoop/quickstart/#scp","text":"","title":"scp"},{"location":"bigdata/hadoop/quickstart/#_12","text":"scp \u53ef\u4ee5\u5b9e\u73b0\u670d\u52a1\u5668\u4e0e\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6570\u636e\u62f7\u8d1d\u3002","title":"\u6982\u5ff5"},{"location":"bigdata/hadoop/quickstart/#_13","text":"scp -r $pdir/$fname $user@$host:$pdir/$fname \u547d\u4ee4 \u9012\u5f52 \u8981\u62f7\u8d1d\u7684\u6587\u4ef6\u8def\u5f84/\u540d\u79f0 \u76ee\u7684\u5730\u7528\u6237@\u4e3b\u673a:\u76ee\u7684\u5730\u8def\u5f84/\u540d\u79f0 \u53ef\u4ee5\u6307\u5b9a\u76ee\u6807\u4f4d\u7f6e\u7684\u6587\u4ef6\u540d\u4e5f\u53ef\u4ee5\u4e0d\u6307\u5b9a scp -r /opt/software/aa.txt matt@123.56.135.43:/matt/opt/software scp -r /opt/module/jdk1.8.0_212 matt@192.168.96.132:/opt/module","title":"\u8bed\u6cd5"},{"location":"bigdata/hadoop/quickstart/#rsync","text":"","title":"rsync \u8fdc\u7a0b\u540c\u6b65\u5de5\u5177"},{"location":"bigdata/hadoop/quickstart/#what_1","text":"rsync \u4e3b\u8981\u7528\u4e8e\u5907\u4efd\u548c\u955c\u50cf\u3002\u5177\u6709\u901f\u5ea6\u5feb\u3001\u907f\u514d\u590d\u5236\u76f8\u540c\u5185\u5bb9\u548c\u652f\u6301\u7b26\u53f7\u94fe\u63a5\u7684\u4f18\u70b9\u3002 rsync \u548c scp \u533a\u522b:\u7528 rsync \u505a\u6587\u4ef6\u7684\u590d\u5236\u8981\u6bd4 scp \u7684\u901f\u5ea6\u5feb\uff0crsync \u53ea\u5bf9\u5dee\u5f02\u6587\u4ef6\u505a\u66f4\u65b0\u3002scp \u662f\u628a\u6240\u6709\u6587\u4ef6\u90fd\u590d\u5236\u8fc7\u53bb\u3002","title":"what"},{"location":"bigdata/hadoop/quickstart/#how","text":"rsync -av $pdir/$fname $user@$host:$pdir/$fname \u547d\u4ee4 \u9009\u9879\u53c2\u6570 \u8981\u62f7\u8d1d\u7684\u6587\u4ef6\u8def\u5f84/\u540d\u79f0 \u76ee\u7684\u5730\u7528\u6237@\u4e3b\u673a:\u76ee\u7684\u5730\u8def\u5f84/\u540d\u79f0 a --archive \uff1a\u5f52\u6863\u6a21\u5f0f\uff0c\u8868\u793a\u9012\u5f52\u4f20\u8f93\u5e76\u4fdd\u6301\u6587\u4ef6\u5c5e\u6027\u3002\u7b49\u540c\u4e8e\"-rtopgDl\"\u3002 rsync -av /home/matt/hello.txt matt@192.168.96.135:/home/matt","title":"how"},{"location":"bigdata/hadoop/quickstart/#xsync","text":"\u5e95\u5c42\u4f7f\u7528rxync","title":"xsync\u5206\u53d1\u96c6\u7fa4\u811a\u672c"},{"location":"bigdata/hadoop/quickstart/#bin","text":"cd ~/bin vim xsync","title":"\u8fdb\u5165\u5f53\u524d\u5bb6\u76ee\u5f55\u7684bin\u76ee\u5f55\u4e0b"},{"location":"bigdata/hadoop/quickstart/#_14","text":"\u8bb0\u5f97\u4fee\u6539ip #!/bin/bash #1. \u5224\u65ad\u53c2\u6570\u4e2a\u6570 if [ $# -lt 1 ] then echo Not Enough Arguement! exit; fi #2. \u904d\u5386\u96c6\u7fa4\u6240\u6709\u673a\u5668 for host in matt05 matt06 matt07 do echo ==================== $host ==================== #3. \u904d\u5386\u6240\u6709\u76ee\u5f55\uff0c\u6328\u4e2a\u53d1\u9001 for file in $@ do #4. \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728 if [ -e $file ] then #5. \u83b7\u53d6\u7236\u76ee\u5f55 pdir=$(cd -P $(dirname $file); pwd) #6. \u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u7684\u540d\u79f0 fname=$(basename $file) ssh $host \"mkdir -p $pdir\" rsync -av $pdir/$fname $host:$pdir else echo $file does not exists! fi done done","title":"\u7f16\u5199\u811a\u672c"},{"location":"bigdata/hadoop/quickstart/#_15","text":"chmod u+x xsync","title":"\u6dfb\u52a0\u6267\u884c\u6743\u9650"},{"location":"bigdata/hadoop/quickstart/#_16","text":"echo $PATH vim /etc/profile.d/my_env.sh","title":"\u914d\u7f6e\u73af\u5883"},{"location":"bigdata/hadoop/quickstart/#bin_1","text":"\u4f7f\u7528sudo\u9700\u8981\u4f7f\u7528\u5168\u8def\u5f84\u3002\u4e0d\u8981\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84 sudo cp /home/matt/bin/xsync /bin","title":"\u811a\u672c\u590d\u5236\u5230bin\u76ee\u5f55\u4e0b"},{"location":"bigdata/hadoop/quickstart/#_17","text":"sudo xsync /home/matt/bin/xsync /bin/xsync /etc/profile.d/my_env.sh source /etc/profile","title":"\u5206\u53d1\u811a\u672c\u73af\u5883\u53d8\u91cf\u751f\u6548"},{"location":"bigdata/hadoop/quickstart/#ssh","text":"ssh \u7528\u6237\u540d@ip ssh root@123.56.135.43","title":"ssh"},{"location":"bigdata/hadoop/quickstart/#_18","text":"cd ~/.ssh ls -a","title":"\u514d\u5bc6\u767b\u5f55"},{"location":"bigdata/hadoop/quickstart/#_19","text":"ssh-keygen -t rsa \u7136\u540e\u6572(\u4e09\u4e2a\u56de\u8f66)\uff0c\u5c31\u4f1a\u751f\u6210\u4e24\u4e2a\u6587\u4ef6 id_rsa(\u79c1\u94a5)\u3001id_rsa.pub(\u516c\u94a5)","title":"\u751f\u6210\u516c\u94a5\u79c1\u94a5"},{"location":"bigdata/hadoop/quickstart/#_20","text":"ssh-copy-id -i id_rsa.pub matt@192.168.96.128","title":"\u5c06\u516c\u94a5\u62f7\u8d1d\u5230\u8981\u514d\u5bc6\u767b\u5f55\u7684\u76ee\u6807\u673a\u5668\u4e0a"},{"location":"bigdata/hadoop/quickstart/#ssh_1","text":"a\u7ed9b\u516c\u94a5 a\u5c31\u53ef\u4ee5\u514d\u5bc6\u767b\u5f55b \u5206\u522b\u914d\u7f6ematt,root\u7528\u6237\u514d\u5bc6\u767b\u5f55\u5176\u4ed6\u670d\u52a1\u5668","title":".ssh \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u89e3\u91ca"},{"location":"bigdata/hadoop/quickstart/#_21","text":"\u96c6\u7fa4\u89c4\u5212 NameNode\u548cSecondaryNameNode\u4e0d\u8981\u5b89\u88c5\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668 ResourceManager\u4e5f\u5f88\u6d88\u8017\u5185\u5b58\uff0c\u4e0d\u8981\u548cNameNode\u3001SecondaryNameNode\u914d\u7f6e\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a","title":"\u96c6\u7fa4\u90e8\u7f72"},{"location":"bigdata/hadoop/quickstart/#_22","text":"Hadoop \u914d\u7f6e\u6587\u4ef6\u5206\u4e24\u7c7b:\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u548c\u81ea\u5b9a\u4e49\u914d\u7f6e\u6587\u4ef6\uff0c\u53ea\u6709\u7528\u6237\u60f3\u4fee\u6539\u67d0\u4e00\u9ed8\u8ba4\u914d\u7f6e\u503c\u65f6\uff0c\u624d\u9700\u8981\u4fee\u6539\u81ea\u5b9a\u4e49\u914d\u7f6e\u6587\u4ef6\uff0c\u66f4\u6539\u76f8\u5e94\u5c5e\u6027\u503c\u3002","title":"\u914d\u7f6e\u6587\u4ef6\u8bf4\u660e"},{"location":"bigdata/hadoop/quickstart/#_23","text":"","title":"\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6"},{"location":"bigdata/hadoop/quickstart/#_24","text":"core-site.xml \u3001 hdfs-site.xml \u3001 yarn-site.xml \u3001 mapred-site.xml \u56db\u4e2a\u914d\u7f6e\u6587\u4ef6\u5b58\u653e\u5728 $HADOOP_HOME/etc/hadoop \u8fd9\u4e2a\u8def\u5f84\u4e0a\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u9879\u76ee\u9700\u6c42\u91cd\u65b0\u8fdb\u884c\u4fee\u6539\u914d\u7f6e\u3002","title":"\u81ea\u5b9a\u4e49\u914d\u7f6e\u6587\u4ef6"},{"location":"bigdata/hadoop/quickstart/#_25","text":"","title":"\u914d\u7f6e\u96c6\u7fa4"},{"location":"bigdata/hadoop/quickstart/#1-matt05","text":"\u914d\u7f6e core-site.xml vim core-site.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?> <configuration> <!-- \u6307\u5b9a NameNode \u7684\u5730\u5740 --> <property> <name>fs.defaultFS</name> <value>hdfs://matt05:8020</value> </property> <!-- \u6307\u5b9a hadoop \u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55 --> <property> <name>hadoop.tmp.dir</name> <value>/opt/module/hadoop-3.1.3/data</value> </property> <!-- \u914d\u7f6e HDFS \u7f51\u9875\u767b\u5f55\u4f7f\u7528\u7684\u9759\u6001\u7528\u6237\u4e3a matt --> <property> <name>hadoop.http.staticuser.user</name> <value>matt</value> </property> </configuration>","title":"1.\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6-matt05"},{"location":"bigdata/hadoop/quickstart/#2hdfs-matt05","text":"\u914d\u7f6e hdfs-site.xml vim hdfs-site.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?> <configuration> <!-- nn web \u7aef\u8bbf\u95ee\u5730\u5740--> <property> <name>dfs.namenode.http-address</name> <value>matt05:9870</value> </property> <!-- 2nn web \u7aef\u8bbf\u95ee\u5730\u5740--> <property> <name>dfs.namenode.secondary.http-address</name> <value>matt07:9868</value> </property> </configuration>","title":"2.HDFS \u914d\u7f6e\u6587\u4ef6-matt05"},{"location":"bigdata/hadoop/quickstart/#3yarn-matt05","text":"vim yarn-site.xml <configuration> <!-- \u6307\u5b9a MR \u8d70 shuffle --> <property> <name>yarn.nodemanager.aux-services</name> <value>mapreduce_shuffle</value> </property> <!-- \u6307\u5b9a ResourceManager \u7684\u5730\u5740--> <property> <name>yarn.resourcemanager.hostname</name> <value>matt06</value> </property> <!-- \u73af\u5883\u53d8\u91cf\u7684\u7ee7\u627f --> <property> <name>yarn.nodemanager.env-whitelist</name> <value>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME</value> </property> </configuration>","title":"3.YARN \u914d\u7f6e\u6587\u4ef6-matt05"},{"location":"bigdata/hadoop/quickstart/#4mapreduce-matt05","text":"vim mapred-site.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?> <configuration> <!-- \u6307\u5b9a MapReduce \u7a0b\u5e8f\u8fd0\u884c\u5728 Yarn \u4e0a --> <property> <name>mapreduce.framework.name</name> <value>yarn</value> </property> </configuration>","title":"4.MapReduce \u914d\u7f6e\u6587\u4ef6-matt05"},{"location":"bigdata/hadoop/quickstart/#_26","text":"xsync /opt/module/hadoop-3.1.3/etc/hadoop/","title":"\u5206\u53d1\u914d\u7f6e\u6587\u4ef6"},{"location":"bigdata/hadoop/quickstart/#_27","text":"","title":"\u7fa4\u8d77"},{"location":"bigdata/hadoop/quickstart/#workers","text":"vim /opt/module/hadoop-3.1.3/etc/hadoop/workers \u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9 matt05 matt06 matt07","title":"\u914d\u7f6eworkers"},{"location":"bigdata/hadoop/quickstart/#_28","text":"xsync /opt/module/hadoop-3.1.3/etc","title":"\u5206\u53d1\u914d\u7f6e\u6587\u4ef6"},{"location":"bigdata/hadoop/quickstart/#_29","text":"","title":"\u542f\u52a8\u96c6\u7fa4"},{"location":"bigdata/hadoop/quickstart/#_30","text":"1.\u5982\u679c\u96c6\u7fa4\u662f\u7b2c\u4e00\u6b21\u542f\u52a8\uff0c\u9700\u8981\u5728 matt05 \u8282\u70b9\u683c\u5f0f\u5316 NameNode(\u6ce8\u610f:\u683c\u5f0f\u5316 NameNode\uff0c\u4f1a\u4ea7\u751f\u65b0\u7684\u96c6\u7fa4 id\uff0c\u5bfc\u81f4 NameNode \u548c DataNode \u7684\u96c6\u7fa4 id \u4e0d\u4e00\u81f4\uff0c\u96c6\u7fa4\u627e \u4e0d\u5230\u5df2\u5f80\u6570\u636e\u3002\u5982\u679c\u96c6\u7fa4\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u62a5\u9519\uff0c\u9700\u8981\u91cd\u65b0\u683c\u5f0f\u5316 NameNode \u7684\u8bdd\uff0c\u4e00\u5b9a\u8981\u5148\u505c \u6b62 namenode \u548c datanode \u7a0b\uff0c\u5e76\u4e14\u8981\u5220\u9664\u6240\u6709\u673a\u5668\u7684 data \u548c logs \u76ee\u5f55\uff0c\u7136\u540e\u518d\u8fdb\u884c\u683c\u5f0f\u5316\u3002) hdfs namenode -format","title":"\u683c\u5f0f\u5316"},{"location":"bigdata/hadoop/quickstart/#hdfs_1","text":"sbin/start-dfs.sh","title":"\u542f\u52a8hdfs"},{"location":"bigdata/hadoop/quickstart/#yarn_1","text":"\u5728\u914d\u7f6e\u4e86 ResourceManager \u7684\u8282\u70b9( matt06 )\u542f\u52a8 YARN yarn:\u5fc5\u987b\u5728matt06\u5f00\u542f\u5173\u95ed sbin/start-yarn.sh","title":"\u542f\u52a8yarn"},{"location":"bigdata/hadoop/quickstart/#_31","text":"","title":"\u9a8c\u8bc1"},{"location":"bigdata/hadoop/quickstart/#web","text":"Web \u7aef\u67e5\u770b HDFS \u7684 NameNode (a)\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165:http://matt05:9870 (b)\u67e5\u770b HDFS \u4e0a\u5b58\u50a8\u7684\u6570\u636e\u4fe1\u606f Web \u7aef\u67e5\u770b YARN \u7684 ResourceManager (a)\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165:http://matt06:8088 (b)\u67e5\u770b YARN \u4e0a\u8fd0\u884c\u7684 Job \u4fe1\u606f","title":"web"},{"location":"bigdata/hadoop/quickstart/#_32","text":"\u521b\u5efa\u6587\u4ef6\u5939\u5e76\u4e0a\u4f20 hadoop fs -mkdir /input hadoop fs -put $HADOOP_HOME/wcinput/word.txt /input hadoop\u6587\u4ef6\u5b58\u50a8\u8def\u5f84 /opt/module/hadoop-3.1.3/data/dfs/data/current/BP-1436128598- 192.168.10.102-1610603650062/current/finalized/subdir0/subdir0 \u4e0b\u8f7d\u6587\u4ef6 hadoop fs -get /jdk-8u212-linux- x64.tar.gz ./ [matt@matt05 subdir0]$ cat blk_1073741825 hello word hello matt tencent [matt@matt05 subdir0]$ pwd /opt/module/hadoop-3.1.3/data/dfs/data/current/BP-1324950131-192.168.96.135-1628037446040/current/finalized/subdir0/subdir0 [matt@matt05 subdir0]$ [atguigu@hadoop102 subdir0]$ cat blk_1073741836>>tmp.tar.gz [atguigu@hadoop102 subdir0]$ cat blk_1073741837>>tmp.tar.gz [atguigu@hadoop102 subdir0]$ tar -zxvf tmp.tar.gz \u6267\u884cjar\u5305 hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount /input /output","title":"\u6d4b\u8bd5\u914d\u7f6e\u662f\u5426\u6210\u529f"},{"location":"bigdata/hadoop/quickstart/#_33","text":"\u53ef\u4ee5\u67e5\u770b\u5386\u53f2\u8fd0\u884c\u60c5\u51b5","title":"\u914d\u7f6e\u5386\u53f2\u670d\u52a1\u5668"},{"location":"bigdata/hadoop/quickstart/#_34","text":"vim mapred-site.xml <!-- \u5386\u53f2\u670d\u52a1\u5668\u7aef\u5730\u5740 --> <property> <name>mapreduce.jobhistory.address</name> <value>matt05:10020</value> </property> <!-- \u5386\u53f2\u670d\u52a1\u5668 web \u7aef\u5730\u5740 --> <property> <name>mapreduce.jobhistory.webapp.address</name> <value>matt05:19888</value> </property>","title":"\u7f16\u5199\u914d\u7f6e\u6587\u4ef6"},{"location":"bigdata/hadoop/quickstart/#_35","text":"xsync $HADOOP_HOME/etc/hadoop/mapred-site.xml","title":"\u5206\u53d1\u914d\u7f6e"},{"location":"bigdata/hadoop/quickstart/#matt05","text":"$HADOOP_HOME/bin [matt@matt05 bin]$ mapred --daemon start historyserver","title":"matt05\u542f\u52a8\u5386\u53f2\u670d\u52a1\u5668"},{"location":"bigdata/hadoop/quickstart/#_36","text":"jps","title":"\u6d4b\u8bd5"},{"location":"bigdata/hadoop/quickstart/#_37","text":"\u65e5\u5fd7\u805a\u96c6\u6982\u5ff5\uff1a\u5e94\u7528\u8fd0\u884c\u5b8c\u6210\u4ee5\u540e\uff0c\u5c06\u7a0b\u5e8f\u8fd0\u884c\u65e5\u5fd7\u4fe1\u606f\u4e0a\u4f20\u5230 HDFS \u7cfb\u7edf\u4e0a\u3002","title":"\u65e5\u5fd7\u805a\u96c6"},{"location":"bigdata/hadoop/quickstart/#matt05_1","text":"vim yarn-site.xml <!-- \u5f00\u542f\u65e5\u5fd7\u805a\u96c6\u529f\u80fd --> <property> <name>yarn.log-aggregation-enable</name> <value>true</value> </property> <!-- \u8bbe\u7f6e\u65e5\u5fd7\u805a\u96c6\u670d\u52a1\u5668\u5730\u5740 --> <property> <name>yarn.log.server.url</name> <value>http://matt05:19888/jobhistory/logs</value> </property> <!-- \u8bbe\u7f6e\u65e5\u5fd7\u4fdd\u7559\u65f6\u95f4\u4e3a 7 \u5929 --> <property> <name>yarn.log-aggregation.retain-seconds</name> <value>604800</value> </property>","title":"\u7f16\u5199\u914d\u7f6e\u6587\u4ef6matt05"},{"location":"bigdata/hadoop/quickstart/#_38","text":"xsync $HADOOP_HOME/etc/hadoop/yarn-site.xml","title":"\u5206\u53d1\u914d\u7f6e\u6587\u4ef6"},{"location":"bigdata/hadoop/quickstart/#nodemanager-resourcemanager-historyserver","text":"# matt06\u670d\u52a1\u5668 sbin/stop-yarn.sh # matt05\u670d\u52a1\u5668 mapred --daemon stop historyserver","title":"\u5173\u95ed NodeManager \u3001ResourceManager \u548c HistoryServer"},{"location":"bigdata/hadoop/quickstart/#nodemanager-resourcemanage-historyserver","text":"./start-yarn.sh mapred --daemon start historyserver","title":"\u542f\u52a8 NodeManager \u3001ResourceManage \u548c HistoryServer"},{"location":"bigdata/hadoop/quickstart/#how_1","text":"","title":"how"},{"location":"bigdata/hadoop/quickstart/#_39","text":"","title":"\u6574\u4f53\u542f\u52a8"},{"location":"bigdata/hadoop/quickstart/#hdfs_2","text":"start-dfs.sh/stop-dfs.sh","title":"\u6574\u4f53\u542f\u52a8/\u505c\u6b62 HDFS"},{"location":"bigdata/hadoop/quickstart/#yarn_2","text":"start-yarn.sh/stop-yarn.sh","title":"\u6574\u4f53\u542f\u52a8/\u505c\u6b62 YARN"},{"location":"bigdata/hadoop/quickstart/#_40","text":"","title":"\u5404\u4e2a\u670d\u52a1\u7ec4\u4ef6\u9010\u4e00\u542f\u52a8/\u505c\u6b62"},{"location":"bigdata/hadoop/quickstart/#hdfs_3","text":"hdfs --daemon start/stop namenode/datanode/secondarynamenode","title":"\u5206\u522b\u542f\u52a8/\u505c\u6b62 HDFS \u7ec4\u4ef6"},{"location":"bigdata/hadoop/quickstart/#yarn_3","text":"yarn --daemon start/stop resourcemanager/nodemanager matt\u7528\u6237\u4e0b\u542f\u52a8","title":"\u542f\u52a8/\u505c\u6b62 YARN"},{"location":"bigdata/hadoop/quickstart/#_41","text":"myhadoop.sh cd ~/bin vim myhadoop.sh #!/bin/bash if [ $# -lt 1 ] then echo \"No Args Input...\" exit ; fi case $1 in \"start\") echo \" =================== \u542f\u52a8 hadoop \u96c6\u7fa4 ===================\" echo \" --------------- \u542f\u52a8 hdfs ---------------\" ssh matt05 \"/opt/module/hadoop-3.1.3/sbin/start-dfs.sh\" echo \" --------------- \u542f\u52a8 yarn ---------------\" ssh matt06 \"/opt/module/hadoop-3.1.3/sbin/start-yarn.sh\" echo \" --------------- \u542f\u52a8 historyserver ---------------\" ssh matt05 \"/opt/module/hadoop-3.1.3/bin/mapred --daemon start historyserver\" ;; \"stop\") echo \" =================== \u5173\u95ed hadoop \u96c6\u7fa4 ===================\" echo \" --------------- \u5173\u95ed historyserver ---------------\" ssh matt05 \"/opt/module/hadoop-3.1.3/bin/mapred --daemon stop historyserver\" echo \" --------------- \u5173\u95ed yarn ---------------\" ssh matt06 \"/opt/module/hadoop-3.1.3/sbin/stop-yarn.sh\" echo \" --------------- \u5173\u95ed hdfs ---------------\" ssh matt05 \"/opt/module/hadoop-3.1.3/sbin/stop-dfs.sh\" ;; *) echo \"Input Args Error...\" ;; esac","title":"\u542f\u52a8\u811a\u672c"},{"location":"bigdata/hadoop/quickstart/#_42","text":"chmod 777 myhadoop.sh","title":"\u6dfb\u52a0\u6743\u9650"},{"location":"bigdata/hadoop/quickstart/#bin_2","text":"\u4f7f\u7528sudo\u9700\u8981\u4f7f\u7528\u5168\u8def\u5f84\u3002\u4e0d\u8981\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84 sudo cp /home/matt/bin/xsync /bin","title":"\u811a\u672c\u590d\u5236\u5230bin\u76ee\u5f55\u4e0b"},{"location":"bigdata/hadoop/quickstart/#_43","text":"sudo xsync /home/matt/bin/xsync /bin/xsync /etc/profile.d/my_env.sh","title":"\u5206\u53d1\u811a\u672c"},{"location":"bigdata/hadoop/quickstart/#_44","text":"source /etc/profile","title":"\u73af\u5883\u53d8\u91cf\u751f\u6548"},{"location":"bigdata/hadoop/quickstart/#jpsall","text":"vim jpsall #!/bin/bash for host in matt05 matt06 matt07 do echo =============== $host =============== ssh $host jps done chmod 777 jpsall","title":"JPSALL"},{"location":"bigdata/hadoop/quickstart/#_45","text":"\u5e38\u7528\u914d\u7f6e\u6587\u4ef6","title":"\u5e38\u7528\u7aef\u53e3\u53f7"},{"location":"bigdata/hadoop/quickstart/#_46","text":"","title":"\u65f6\u95f4\u540c\u6b65"},{"location":"bigdata/hadoop/quickstart/#_47","text":"\u5982\u679c\u670d\u52a1\u5668\u5728\u516c\u7f51\u73af\u5883\uff08\u80fd\u8fde\u63a5\u5916\u7f51\uff09\uff0c\u53ef\u4ee5\u4e0d\u91c7\u7528\u96c6\u7fa4\u65f6\u95f4\u540c\u6b65\uff0c\u56e0\u4e3a\u670d\u52a1\u5668\u4f1a\u5b9a\u671f \u548c\u516c\u7f51\u65f6\u95f4\u8fdb\u884c\u6821\u51c6\uff1b \u5982\u679c\u670d\u52a1\u5668\u5728\u5185\u7f51\u73af\u5883\uff0c\u5fc5\u987b\u8981\u914d\u7f6e\u96c6\u7fa4\u65f6\u95f4\u540c\u6b65\uff0c\u5426\u5219\u65f6\u95f4\u4e45\u4e86\uff0c\u4f1a\u4ea7\u751f\u65f6\u95f4\u504f\u5dee\uff0c \u5bfc\u81f4\u96c6\u7fa4\u6267\u884c\u4efb\u52a1\u65f6\u95f4\u4e0d\u540c\u6b65 \u627e\u4e00\u4e2a\u673a\u5668\uff0c\u4f5c\u4e3a\u65f6\u95f4\u670d\u52a1\u5668\uff0c\u6240\u6709\u7684\u673a\u5668\u4e0e\u8fd9\u53f0\u96c6\u7fa4\u65f6\u95f4\u8fdb\u884c\u5b9a\u65f6\u7684\u540c\u6b65\uff0c\u751f\u4ea7\u73af\u5883 \u6839\u636e\u4efb\u52a1\u5bf9\u65f6\u95f4\u7684\u51c6\u786e\u7a0b\u5ea6\u8981\u6c42\u5468\u671f\u540c\u6b65\u3002\u6d4b\u8bd5\u73af\u5883\u4e3a\u4e86\u5c3d\u5feb\u770b\u5230\u6548\u679c\uff0c\u91c7\u7528 1 \u5206\u949f\u540c\u6b65\u4e00 \u6b21\u3002","title":"\u9700\u6c42"},{"location":"bigdata/hadoop/quickstart/#config","text":"","title":"config"},{"location":"bigdata/hadoop/quickstart/#ntpd","text":"sudo su root systemctl status ntpd systemctl start ntpd systemctl is-enabled ntpd","title":"\u67e5\u770b\u6240\u6709\u8282\u70b9 ntpd \u670d\u52a1\u72b6\u6001\u548c\u5f00\u673a\u81ea\u542f\u52a8\u72b6\u6001"},{"location":"bigdata/hadoop/quickstart/#hadoop102-ntpconf","text":"vim /etc/ntp.conf","title":"\u4fee\u6539 hadoop102 \u7684 ntp.conf \u914d\u7f6e\u6587\u4ef6"},{"location":"bigdata/hadoop/quickstart/#1-192168960-19216810255","text":"\u8be2\u548c\u540c\u6b65\u65f6\u95f4\uff09 estrict 192.168.96.0 mask 255.255.255.0 nomodify notrap","title":"\u4fee\u6539 1\uff08\u6388\u6743 192.168.96.0-192.168.10.255 \u7f51\u6bb5\u4e0a\u7684\u6240\u6709\u673a\u5668\u53ef\u4ee5\u4ece\u8fd9\u53f0\u673a\u5668\u4e0a\u67e5"},{"location":"bigdata/hadoop/quickstart/#2","text":"#server 0.centos.pool.ntp.org iburst #server 1.centos.pool.ntp.org iburst #server 2.centos.pool.ntp.org iburst #server 3.centos.pool.ntp.org iburst","title":"\u4fee\u6539 2\uff08\u96c6\u7fa4\u5728\u5c40\u57df\u7f51\u4e2d\uff0c\u4e0d\u4f7f\u7528\u5176\u4ed6\u4e92\u8054\u7f51\u4e0a\u7684\u65f6\u95f4\uff09"},{"location":"bigdata/hadoop/quickstart/#3","text":"\u7684\u5176\u4ed6\u8282\u70b9\u63d0\u4f9b\u65f6\u95f4\u540c\u6b65\uff09 server 127.127.1.0 fudge 127.127.1.0 stratum 10","title":"\u6dfb\u52a0 3\uff08\u5f53\u8be5\u8282\u70b9\u4e22\u5931\u7f51\u7edc\u8fde\u63a5\uff0c\u4f9d\u7136\u53ef\u4ee5\u91c7\u7528\u672c\u5730\u65f6\u95f4\u4f5c\u4e3a\u65f6\u95f4\u670d\u52a1\u5668\u4e3a\u96c6\u7fa4\u4e2d"},{"location":"bigdata/hadoop/quickstart/#matt05-etcsysconfigntpd","text":"vim /etc/sysconfig/ntpd","title":"\u4fee\u6539 matt05 \u7684/etc/sysconfig/ntpd \u6587\u4ef6"},{"location":"bigdata/hadoop/quickstart/#_48","text":"SYNC_HWCLOCK=yes","title":"\u589e\u52a0\u5185\u5bb9\u5982\u4e0b\uff08\u8ba9\u786c\u4ef6\u65f6\u95f4\u4e0e\u7cfb\u7edf\u65f6\u95f4\u4e00\u8d77\u540c\u6b65\uff09"},{"location":"bigdata/hadoop/quickstart/#ntpd_1","text":"systemctl start ntpd systemctl enable ntpd","title":"\u91cd\u65b0\u542f\u52a8 ntpd \u670d\u52a1"},{"location":"bigdata/hadoop/quickstart/#root-ntp","text":"systemctl stop ntpd systemctl disable ntpd","title":"\u5176\u4ed6\u673a\u5668\u914d\u7f6eroot\u7528\u6237\u4e0b\u5173\u95ed\u6240\u6709\u8282\u70b9\u4e0a ntp \u670d\u52a1\u548c\u81ea\u542f\u52a8"},{"location":"bigdata/hadoop/quickstart/#1","text":"crontab -e","title":"\u5728\u5176\u4ed6\u673a\u5668\u914d\u7f6e 1 \u5206\u949f\u4e0e\u65f6\u95f4\u670d\u52a1\u5668\u540c\u6b65\u4e00\u6b21"},{"location":"bigdata/hadoop/quickstart/#_49","text":"*/1 * * * * /usr/sbin/ntpdate matt05","title":"\u7f16\u5199\u5b9a\u65f6\u4efb\u52a1\u5982\u4e0b\uff1a"},{"location":"bigdata/hadoop/quickstart/#_50","text":"date -s \"2021-9-11 11:11:11\" date \u6587\u4ef6\u5757\u5927\u5c0f\uff1a128m \u4e0a\u9650\u662f128m \u5982\u679c\u662f1kb\u7684\u6587\u4ef6\u90a3\u4e48\u5269\u4f59\u7684\u7a7a\u95f4\u8fd8\u53ef\u4ee5\u4e3a\u5176\u4ed6\u6587\u4ef6\u5b58\u50a8","title":"\u6d4b\u8bd5"},{"location":"bigdata/hadoop/quickstart/#_51","text":"","title":"\u95ee\u9898"},{"location":"bigdata/hadoop/quickstart/#_52","text":"\u56e0\u4e3a\u6bcf\u4e2adatanode\u8282\u70b9\u90fd\u6709\u7248\u672c\u53f7\uff0c\u5982\u679c\u4e0d\u4e00\u81f4\u5c31\u4f1a\u542f\u52a8\u62a5\u9519 sbin/stop-dfs.sh \u5220\u9664\u6bcf\u4e2a\u8282\u70b9\u7684data logs \u5373\u53ef rm -rvf data rm -rvf logs \u683c\u5f0f\u5316 hdfs namenode -format \u542f\u52a8 sbin/start-dfs.sh http://matt05:9870/","title":"\u7248\u672c\u4e0d\u4e00\u81f4"},{"location":"bigdata/hadoop/quickstart/#_53","text":"1\uff09\u9632\u706b\u5899\u6ca1\u5173\u95ed\u3001\u6216\u8005\u6ca1\u6709\u542f\u52a8 YARN INFO client.RMProxy: Connecting to ResourceManager at hadoop108/192.168.10.108:8032 2\uff09root \u7528\u6237\u548c matt05 \u4e24\u4e2a\u7528\u6237\u542f\u52a8\u96c6\u7fa4\u4e0d\u7edf\u4e00 3\uff09\u4e0d\u8bc6\u522b\u4e3b\u673a\u540d\u79f0 java.net.UnknownHostException: hadoop102: hadoop102 at java.net.InetAddress.getLocalHost(InetAddress.java:1475) at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(Job Submitter.java:146) at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1290) at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1287) at java.security.AccessController.doPrivileged(Native Method) at javax.security.auth.Subject.doAs(Subject.java:415) \u89e3\u51b3\u529e\u6cd5\uff1a \u200b \uff081\uff09\u5728/etc/hosts \u6587\u4ef6\u4e2d\u6dfb\u52a0 192.168.10.102 hadoop102 \u200b \uff082\uff09\u4e3b\u673a\u540d\u79f0\u4e0d\u8981\u8d77 hadoop hadoop000 \u7b49\u7279\u6b8a\u540d\u79f0 4\uff09jps \u53d1\u73b0\u8fdb\u7a0b\u5df2\u7ecf\u6ca1\u6709\uff0c\u4f46\u662f\u91cd\u65b0\u542f\u52a8\u96c6\u7fa4\uff0c\u63d0\u793a\u8fdb\u7a0b\u5df2\u7ecf\u5f00\u542f\u3002 \u539f\u56e0\u662f\u5728 Linux \u7684\u6839\u76ee\u5f55\u4e0b/tmp \u76ee\u5f55\u4e2d\u5b58\u5728\u542f\u52a8\u7684\u8fdb\u7a0b\u4e34\u65f6\u6587\u4ef6\uff0c\u5c06\u96c6\u7fa4\u76f8\u5173\u8fdb\u7a0b\u5220 \u9664\u6389\uff0c\u518d\u91cd\u65b0\u542f\u52a8\u96c6\u7fa4\u3002 5\uff09jps \u4e0d\u751f\u6548 \u539f\u56e0\uff1a\u5168\u5c40\u53d8\u91cf hadoop java \u6ca1\u6709\u751f\u6548\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a\u9700\u8981 source /etc/profile \u6587\u4ef6\u3002 6\uff098088 \u7aef\u53e3\u8fde\u63a5\u4e0d\u4e0a bash cat /etc/hosts \u6ce8\u91ca\u6389\u5982\u4e0b\u4ee3\u7801 #127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 #::1 matt05","title":"\u5176\u4ed6\u9519\u8bef"},{"location":"bigdata/hadoop/yarn/","text":"\u9759\u6001\u6570\u636e matt DAG\u6709\u5411\u65e0\u73af\u56fe:\u4efb\u52a11\u6267\u884c\u8f93\u51fa\u7684\u7ed3\u679c\u4f5c\u4e3a\u4efb\u52a12\u7684\u8f93\u5165 \u3002\u3002\u3002\u3002\u3002 cd /opt/module/hadoop-3.1.3/share/hadoop/mapreduce sz hadoop-mapreduce-examples-3.1.3.jar FIFO\u8c03\u5ea6\u5668:job1\u8fd0\u884c\u5b8c\u624d\u53ef\u4ee5\u8fd0\u884cjob2 c7\u5173\u95ed \u865a\u62df\u5185\u5b58\u68c0\u67e5 <!-- \u9009\u62e9\u8c03\u5ea6\u5668\uff0c\u9ed8\u8ba4\u5bb9\u91cf --> <property> <description>The class to use as the resource scheduler.</description> <name>yarn.resourcemanager.scheduler.class</name> <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.capaci ty.CapacityScheduler</value> </property> <!-- ResourceManager \u5904\u7406\u8c03\u5ea6\u5668\u8bf7\u6c42\u7684\u7ebf\u7a0b\u6570\u91cf,\u9ed8\u8ba4 50\uff1b\u5982\u679c\u63d0\u4ea4\u7684\u4efb\u52a1\u6570\u5927\u4e8e 50\uff0c\u53ef\u4ee5 \u589e\u52a0\u8be5\u503c\uff0c\u4f46\u662f\u4e0d\u80fd\u8d85\u8fc7 3 \u53f0 * 4 \u7ebf\u7a0b = 12 \u7ebf\u7a0b\uff08\u53bb\u9664\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u5b9e\u9645\u4e0d\u80fd\u8d85\u8fc7 8\uff09 --> <property> <description>Number of threads to handle scheduler interface.</description> <name>yarn.resourcemanager.scheduler.client.thread-count</name> <value>8</value> </property> <!-- \u662f\u5426\u8ba9 yarn \u81ea\u52a8\u68c0\u6d4b\u786c\u4ef6\u8fdb\u884c\u914d\u7f6e\uff0c\u9ed8\u8ba4\u662f false\uff0c\u5982\u679c\u8be5\u8282\u70b9\u6709\u5f88\u591a\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\uff0c\u5efa\u8bae \u624b\u52a8\u914d\u7f6e\u3002\u5982\u679c\u8be5\u8282\u70b9\u6ca1\u6709\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u91c7\u7528\u81ea\u52a8 --> <property> <description>Enable auto-detection of node capabilities such as memory and CPU. </description> <name>yarn.nodemanager.resource.detect-hardware-capabilities</name> <value>false</value> </property> <!-- \u662f\u5426\u5c06\u865a\u62df\u6838\u6570\u5f53\u4f5c CPU \u6838\u6570\uff0c\u9ed8\u8ba4\u662f false\uff0c\u91c7\u7528\u7269\u7406 CPU \u6838\u6570 --> <property> <description>Flag to determine if logical processors(such as hyperthreads) should be counted as cores. Only applicable on Linux when yarn.nodemanager.resource.cpu-vcores is set to -1 and yarn.nodemanager.resource.detect-hardware-capabilities is true. </description> <name>yarn.nodemanager.resource.count-logical-processors-ascores</name> <value>false</value> </property> <!-- \u865a\u62df\u6838\u6570\u548c\u7269\u7406\u6838\u6570\u4e58\u6570\uff0c\u9ed8\u8ba4\u662f 1.0 --> <property> <description>Multiplier to determine how to convert phyiscal cores to vcores. This value is used if yarn.nodemanager.resource.cpu-vcores is set to -1(which implies auto-calculate vcores) and yarn.nodemanager.resource.detect-hardware-capabilities is set to true. The number of vcores will be calculated as number of CPUs * multiplier. </description> <name>yarn.nodemanager.resource.pcores-vcores-multiplier</name> <value>1.0</value> </property> <!-- NodeManager \u4f7f\u7528\u5185\u5b58\u6570\uff0c\u9ed8\u8ba4 8G\uff0c\u4fee\u6539\u4e3a 4G \u5185\u5b58 --> <property> <description>Amount of physical memory, in MB, that can be allocated for containers. If set to -1 and yarn.nodemanager.resource.detect-hardware-capabilities is true, it is automatically calculated(in case of Windows and Linux). In other cases, the default is 8192MB. </description> <name>yarn.nodemanager.resource.memory-mb</name> <value>2048</value> </property> <!-- nodemanager \u7684 CPU \u6838\u6570\uff0c\u4e0d\u6309\u7167\u786c\u4ef6\u73af\u5883\u81ea\u52a8\u8bbe\u5b9a\u65f6\u9ed8\u8ba4\u662f 8 \u4e2a\uff0c\u4fee\u6539\u4e3a 4 \u4e2a --> <property> <description>Number of vcores that can be allocated for containers. This is used by the RM scheduler when allocating resources for containers. This is not used to limit the number of CPUs used by YARN containers. If it is set to -1 and yarn.nodemanager.resource.detect-hardware-capabilities is true, it is automatically determined from the hardware in case of Windows and Linux. In other cases, number of vcores is 8 by default.</description> <name>yarn.nodemanager.resource.cpu-vcores</name> <value>2</value> </property> <!-- \u5bb9\u5668\u6700\u5c0f\u5185\u5b58\uff0c\u9ed8\u8ba4 1G --> <property> <description>The minimum allocation for every container request at theRM in MBs. Memory requests lower than this will be set to the value of this property. Additionally, a node manager that is configured to have less memory than this value will be shut down by the resource manager. </description> <name>yarn.scheduler.minimum-allocation-mb</name> <value>1024</value> </property> <!-- \u5bb9\u5668\u6700\u5927\u5185\u5b58\uff0c\u9ed8\u8ba4 8G\uff0c\u4fee\u6539\u4e3a 2G --> <property> <description>The maximum allocation for every container request at the RM in MBs. Memory requests higher than this will throw an InvalidResourceRequestException. </description> <name>yarn.scheduler.maximum-allocation-mb</name> <value>2048</value> </property> <!-- \u5bb9\u5668\u6700\u5c0f CPU \u6838\u6570\uff0c\u9ed8\u8ba4 1 \u4e2a --> <property> <description>The minimum allocation for every container request at the RM in terms of virtual CPU cores. Requests lower than this will be set to the value of this property. Additionally, a node manager that is configured to have fewer virtual cores than this value will be shut down by the resource manager. </description> <name>yarn.scheduler.minimum-allocation-vcores</name> <value>1</value> </property> <!-- \u5bb9\u5668\u6700\u5927 CPU \u6838\u6570\uff0c\u9ed8\u8ba4 4 \u4e2a\uff0c\u4fee\u6539\u4e3a 2 \u4e2a --> <property> <description>The maximum allocation for every container request at the RM in terms of virtual CPU cores. Requests higher than this will throw an InvalidResourceRequestException.</description> <name>yarn.scheduler.maximum-allocation-vcores</name> <value>2</value> </property> <!-- \u865a\u62df\u5185\u5b58\u68c0\u67e5\uff0c\u9ed8\u8ba4\u6253\u5f00\uff0c\u4fee\u6539\u4e3a\u5173\u95ed --> <property> <description>Whether virtual memory limits will be enforced for containers.</description> <name>yarn.nodemanager.vmem-check-enabled</name> <value>false</value> </property> <!-- \u865a\u62df\u5185\u5b58\u548c\u7269\u7406\u5185\u5b58\u8bbe\u7f6e\u6bd4\u4f8b,\u9ed8\u8ba4 2.1 --> <property> <description>Ratio between virtual memory to physical memory when setting memory limits for containers. Container allocations are expressed in terms of physical memory, and virtual memory usage is allowed to exceed this allocation by this ratio. </description> <name>yarn.nodemanager.vmem-pmem-ratio</name> <value>2.1</value> </property> hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount /input /o2 <!-- \u6307\u5b9a\u591a\u961f\u5217\uff0c\u589e\u52a0 hive \u961f\u5217 --> <property> <name>yarn.scheduler.capacity.root.queues</name> <value>default,hive</value> <description> The queues at the this level (root is the root queue). </description> </property> <!-- \u964d\u4f4e default \u961f\u5217\u8d44\u6e90\u989d\u5b9a\u5bb9\u91cf\u4e3a 40%\uff0c\u9ed8\u8ba4 100% --> <property> <name>yarn.scheduler.capacity.root.default.capacity</name> <value>40</value> </property> <!-- \u964d\u4f4e default \u961f\u5217\u8d44\u6e90\u6700\u5927\u5bb9\u91cf\u4e3a 60%\uff0c\u9ed8\u8ba4 100% --> <property> <name>yarn.scheduler.capacity.root.default.maximum-capacity</name> <value>60</value> </property> <!-- \u6307\u5b9a hive \u961f\u5217\u7684\u8d44\u6e90\u989d\u5b9a\u5bb9\u91cf --> <property> <name>yarn.scheduler.capacity.root.hive.capacity</name> <value>60</value> </property> <!-- \u7528\u6237\u6700\u591a\u53ef\u4ee5\u4f7f\u7528\u961f\u5217\u591a\u5c11\u8d44\u6e90\uff0c1 \u8868\u793a --> <property> <name>yarn.scheduler.capacity.root.hive.user-limit-factor</name> <value>1</value> </property> <!-- \u6307\u5b9a hive \u961f\u5217\u7684\u8d44\u6e90\u6700\u5927\u5bb9\u91cf --> <property> <name>yarn.scheduler.capacity.root.hive.maximum-capacity</name> <value>80</value> </property> <!-- \u542f\u52a8 hive \u961f\u5217 --> <property> <name>yarn.scheduler.capacity.root.hive.state</name> <value>RUNNING</value> </property> <!-- \u54ea\u4e9b\u7528\u6237\u6709\u6743\u5411\u961f\u5217\u63d0\u4ea4\u4f5c\u4e1a --> <property> <name>yarn.scheduler.capacity.root.hive.acl_submit_applications</name> <value>*</value> </property> <!-- \u54ea\u4e9b\u7528\u6237\u6709\u6743\u64cd\u4f5c\u961f\u5217\uff0c\u7ba1\u7406\u5458\u6743\u9650\uff08\u67e5\u770b/\u6740\u6b7b\uff09 --> <property> <name>yarn.scheduler.capacity.root.hive.acl_administer_queue</name> <value>*</value> </property> <!-- \u54ea\u4e9b\u7528\u6237\u6709\u6743\u914d\u7f6e\u63d0\u4ea4\u4efb\u52a1\u4f18\u5148\u7ea7 --> <property> <name>yarn.scheduler.capacity.root.hive.acl_application_max_priority</nam e> <value>*</value> </property> <!-- \u4efb\u52a1\u7684\u8d85\u65f6\u65f6\u95f4\u8bbe\u7f6e\uff1ayarn application -appId appId -updateLifetime Timeout \u53c2\u8003\u8d44\u6599\uff1a https://blog.cloudera.com/enforcing-application-lifetime-slasyarn/ --> <!-- \u5982\u679c application \u6307\u5b9a\u4e86\u8d85\u65f6\u65f6\u95f4\uff0c\u5219\u63d0\u4ea4\u5230\u8be5\u961f\u5217\u7684 application \u80fd\u591f\u6307\u5b9a\u7684\u6700\u5927\u8d85\u65f6 \u65f6\u95f4\u4e0d\u80fd\u8d85\u8fc7\u8be5\u503c\u3002 --> <property> <name>yarn.scheduler.capacity.root.hive.maximum-applicationlifetime</name> <value>-1</value> </property> <!-- \u5982\u679c application \u6ca1\u6307\u5b9a\u8d85\u65f6\u65f6\u95f4\uff0c\u5219\u7528 default-application-lifetime \u4f5c\u4e3a\u9ed8\u8ba4 \u503c --> <property> <name>yarn.scheduler.capacity.root.hive.default-applicationlifetime</name> <value>-1</value> </property> vim capacity-scheduler.xml hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount -D mapreduce.job.queuename=hive /input /o3 \u4f18\u5148\u7ea7 hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar pi 5 2000000 # \u4f18\u5148\u7ea7\u9ad8 hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar pi -D mapreduce.job.priority=5 5 2000000 yarn tool \u89e3\u51b3\u81ea\u5b9a\u4e49\u7a0b\u5e8f\u65e0\u6cd5\u6307\u5b9ayarn\u53c2\u6570 yarn jar stu-yarn-1.0-SNAPSHOT.jar com.matt.yarn.WordCountDriver wordcount /input /o4 yarn jar stu-yarn-1.0-SNAPSHOT.jar com.matt.yarn.WordCountDriver wordcount -Dmapreduce.job.priority=5 /input /041 yarn jar stu-yarn-1.0-SNAPSHOT.jar com.matt.yarn.WordCountDriver wordcount -D mapreduce.job.priority=5 /input /042 stu-yarn-1.0-SNAPSHOT.jar","title":"Yarn"},{"location":"bigdata/hadoop/yarn/#matt","text":"DAG\u6709\u5411\u65e0\u73af\u56fe:\u4efb\u52a11\u6267\u884c\u8f93\u51fa\u7684\u7ed3\u679c\u4f5c\u4e3a\u4efb\u52a12\u7684\u8f93\u5165 \u3002\u3002\u3002\u3002\u3002 cd /opt/module/hadoop-3.1.3/share/hadoop/mapreduce sz hadoop-mapreduce-examples-3.1.3.jar FIFO\u8c03\u5ea6\u5668:job1\u8fd0\u884c\u5b8c\u624d\u53ef\u4ee5\u8fd0\u884cjob2 c7\u5173\u95ed \u865a\u62df\u5185\u5b58\u68c0\u67e5 <!-- \u9009\u62e9\u8c03\u5ea6\u5668\uff0c\u9ed8\u8ba4\u5bb9\u91cf --> <property> <description>The class to use as the resource scheduler.</description> <name>yarn.resourcemanager.scheduler.class</name> <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.capaci ty.CapacityScheduler</value> </property> <!-- ResourceManager \u5904\u7406\u8c03\u5ea6\u5668\u8bf7\u6c42\u7684\u7ebf\u7a0b\u6570\u91cf,\u9ed8\u8ba4 50\uff1b\u5982\u679c\u63d0\u4ea4\u7684\u4efb\u52a1\u6570\u5927\u4e8e 50\uff0c\u53ef\u4ee5 \u589e\u52a0\u8be5\u503c\uff0c\u4f46\u662f\u4e0d\u80fd\u8d85\u8fc7 3 \u53f0 * 4 \u7ebf\u7a0b = 12 \u7ebf\u7a0b\uff08\u53bb\u9664\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u5b9e\u9645\u4e0d\u80fd\u8d85\u8fc7 8\uff09 --> <property> <description>Number of threads to handle scheduler interface.</description> <name>yarn.resourcemanager.scheduler.client.thread-count</name> <value>8</value> </property> <!-- \u662f\u5426\u8ba9 yarn \u81ea\u52a8\u68c0\u6d4b\u786c\u4ef6\u8fdb\u884c\u914d\u7f6e\uff0c\u9ed8\u8ba4\u662f false\uff0c\u5982\u679c\u8be5\u8282\u70b9\u6709\u5f88\u591a\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\uff0c\u5efa\u8bae \u624b\u52a8\u914d\u7f6e\u3002\u5982\u679c\u8be5\u8282\u70b9\u6ca1\u6709\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u91c7\u7528\u81ea\u52a8 --> <property> <description>Enable auto-detection of node capabilities such as memory and CPU. </description> <name>yarn.nodemanager.resource.detect-hardware-capabilities</name> <value>false</value> </property> <!-- \u662f\u5426\u5c06\u865a\u62df\u6838\u6570\u5f53\u4f5c CPU \u6838\u6570\uff0c\u9ed8\u8ba4\u662f false\uff0c\u91c7\u7528\u7269\u7406 CPU \u6838\u6570 --> <property> <description>Flag to determine if logical processors(such as hyperthreads) should be counted as cores. Only applicable on Linux when yarn.nodemanager.resource.cpu-vcores is set to -1 and yarn.nodemanager.resource.detect-hardware-capabilities is true. </description> <name>yarn.nodemanager.resource.count-logical-processors-ascores</name> <value>false</value> </property> <!-- \u865a\u62df\u6838\u6570\u548c\u7269\u7406\u6838\u6570\u4e58\u6570\uff0c\u9ed8\u8ba4\u662f 1.0 --> <property> <description>Multiplier to determine how to convert phyiscal cores to vcores. This value is used if yarn.nodemanager.resource.cpu-vcores is set to -1(which implies auto-calculate vcores) and yarn.nodemanager.resource.detect-hardware-capabilities is set to true. The number of vcores will be calculated as number of CPUs * multiplier. </description> <name>yarn.nodemanager.resource.pcores-vcores-multiplier</name> <value>1.0</value> </property> <!-- NodeManager \u4f7f\u7528\u5185\u5b58\u6570\uff0c\u9ed8\u8ba4 8G\uff0c\u4fee\u6539\u4e3a 4G \u5185\u5b58 --> <property> <description>Amount of physical memory, in MB, that can be allocated for containers. If set to -1 and yarn.nodemanager.resource.detect-hardware-capabilities is true, it is automatically calculated(in case of Windows and Linux). In other cases, the default is 8192MB. </description> <name>yarn.nodemanager.resource.memory-mb</name> <value>2048</value> </property> <!-- nodemanager \u7684 CPU \u6838\u6570\uff0c\u4e0d\u6309\u7167\u786c\u4ef6\u73af\u5883\u81ea\u52a8\u8bbe\u5b9a\u65f6\u9ed8\u8ba4\u662f 8 \u4e2a\uff0c\u4fee\u6539\u4e3a 4 \u4e2a --> <property> <description>Number of vcores that can be allocated for containers. This is used by the RM scheduler when allocating resources for containers. This is not used to limit the number of CPUs used by YARN containers. If it is set to -1 and yarn.nodemanager.resource.detect-hardware-capabilities is true, it is automatically determined from the hardware in case of Windows and Linux. In other cases, number of vcores is 8 by default.</description> <name>yarn.nodemanager.resource.cpu-vcores</name> <value>2</value> </property> <!-- \u5bb9\u5668\u6700\u5c0f\u5185\u5b58\uff0c\u9ed8\u8ba4 1G --> <property> <description>The minimum allocation for every container request at theRM in MBs. Memory requests lower than this will be set to the value of this property. Additionally, a node manager that is configured to have less memory than this value will be shut down by the resource manager. </description> <name>yarn.scheduler.minimum-allocation-mb</name> <value>1024</value> </property> <!-- \u5bb9\u5668\u6700\u5927\u5185\u5b58\uff0c\u9ed8\u8ba4 8G\uff0c\u4fee\u6539\u4e3a 2G --> <property> <description>The maximum allocation for every container request at the RM in MBs. Memory requests higher than this will throw an InvalidResourceRequestException. </description> <name>yarn.scheduler.maximum-allocation-mb</name> <value>2048</value> </property> <!-- \u5bb9\u5668\u6700\u5c0f CPU \u6838\u6570\uff0c\u9ed8\u8ba4 1 \u4e2a --> <property> <description>The minimum allocation for every container request at the RM in terms of virtual CPU cores. Requests lower than this will be set to the value of this property. Additionally, a node manager that is configured to have fewer virtual cores than this value will be shut down by the resource manager. </description> <name>yarn.scheduler.minimum-allocation-vcores</name> <value>1</value> </property> <!-- \u5bb9\u5668\u6700\u5927 CPU \u6838\u6570\uff0c\u9ed8\u8ba4 4 \u4e2a\uff0c\u4fee\u6539\u4e3a 2 \u4e2a --> <property> <description>The maximum allocation for every container request at the RM in terms of virtual CPU cores. Requests higher than this will throw an InvalidResourceRequestException.</description> <name>yarn.scheduler.maximum-allocation-vcores</name> <value>2</value> </property> <!-- \u865a\u62df\u5185\u5b58\u68c0\u67e5\uff0c\u9ed8\u8ba4\u6253\u5f00\uff0c\u4fee\u6539\u4e3a\u5173\u95ed --> <property> <description>Whether virtual memory limits will be enforced for containers.</description> <name>yarn.nodemanager.vmem-check-enabled</name> <value>false</value> </property> <!-- \u865a\u62df\u5185\u5b58\u548c\u7269\u7406\u5185\u5b58\u8bbe\u7f6e\u6bd4\u4f8b,\u9ed8\u8ba4 2.1 --> <property> <description>Ratio between virtual memory to physical memory when setting memory limits for containers. Container allocations are expressed in terms of physical memory, and virtual memory usage is allowed to exceed this allocation by this ratio. </description> <name>yarn.nodemanager.vmem-pmem-ratio</name> <value>2.1</value> </property> hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount /input /o2 <!-- \u6307\u5b9a\u591a\u961f\u5217\uff0c\u589e\u52a0 hive \u961f\u5217 --> <property> <name>yarn.scheduler.capacity.root.queues</name> <value>default,hive</value> <description> The queues at the this level (root is the root queue). </description> </property> <!-- \u964d\u4f4e default \u961f\u5217\u8d44\u6e90\u989d\u5b9a\u5bb9\u91cf\u4e3a 40%\uff0c\u9ed8\u8ba4 100% --> <property> <name>yarn.scheduler.capacity.root.default.capacity</name> <value>40</value> </property> <!-- \u964d\u4f4e default \u961f\u5217\u8d44\u6e90\u6700\u5927\u5bb9\u91cf\u4e3a 60%\uff0c\u9ed8\u8ba4 100% --> <property> <name>yarn.scheduler.capacity.root.default.maximum-capacity</name> <value>60</value> </property> <!-- \u6307\u5b9a hive \u961f\u5217\u7684\u8d44\u6e90\u989d\u5b9a\u5bb9\u91cf --> <property> <name>yarn.scheduler.capacity.root.hive.capacity</name> <value>60</value> </property> <!-- \u7528\u6237\u6700\u591a\u53ef\u4ee5\u4f7f\u7528\u961f\u5217\u591a\u5c11\u8d44\u6e90\uff0c1 \u8868\u793a --> <property> <name>yarn.scheduler.capacity.root.hive.user-limit-factor</name> <value>1</value> </property> <!-- \u6307\u5b9a hive \u961f\u5217\u7684\u8d44\u6e90\u6700\u5927\u5bb9\u91cf --> <property> <name>yarn.scheduler.capacity.root.hive.maximum-capacity</name> <value>80</value> </property> <!-- \u542f\u52a8 hive \u961f\u5217 --> <property> <name>yarn.scheduler.capacity.root.hive.state</name> <value>RUNNING</value> </property> <!-- \u54ea\u4e9b\u7528\u6237\u6709\u6743\u5411\u961f\u5217\u63d0\u4ea4\u4f5c\u4e1a --> <property> <name>yarn.scheduler.capacity.root.hive.acl_submit_applications</name> <value>*</value> </property> <!-- \u54ea\u4e9b\u7528\u6237\u6709\u6743\u64cd\u4f5c\u961f\u5217\uff0c\u7ba1\u7406\u5458\u6743\u9650\uff08\u67e5\u770b/\u6740\u6b7b\uff09 --> <property> <name>yarn.scheduler.capacity.root.hive.acl_administer_queue</name> <value>*</value> </property> <!-- \u54ea\u4e9b\u7528\u6237\u6709\u6743\u914d\u7f6e\u63d0\u4ea4\u4efb\u52a1\u4f18\u5148\u7ea7 --> <property> <name>yarn.scheduler.capacity.root.hive.acl_application_max_priority</nam e> <value>*</value> </property> <!-- \u4efb\u52a1\u7684\u8d85\u65f6\u65f6\u95f4\u8bbe\u7f6e\uff1ayarn application -appId appId -updateLifetime Timeout \u53c2\u8003\u8d44\u6599\uff1a https://blog.cloudera.com/enforcing-application-lifetime-slasyarn/ --> <!-- \u5982\u679c application \u6307\u5b9a\u4e86\u8d85\u65f6\u65f6\u95f4\uff0c\u5219\u63d0\u4ea4\u5230\u8be5\u961f\u5217\u7684 application \u80fd\u591f\u6307\u5b9a\u7684\u6700\u5927\u8d85\u65f6 \u65f6\u95f4\u4e0d\u80fd\u8d85\u8fc7\u8be5\u503c\u3002 --> <property> <name>yarn.scheduler.capacity.root.hive.maximum-applicationlifetime</name> <value>-1</value> </property> <!-- \u5982\u679c application \u6ca1\u6307\u5b9a\u8d85\u65f6\u65f6\u95f4\uff0c\u5219\u7528 default-application-lifetime \u4f5c\u4e3a\u9ed8\u8ba4 \u503c --> <property> <name>yarn.scheduler.capacity.root.hive.default-applicationlifetime</name> <value>-1</value> </property> vim capacity-scheduler.xml hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount -D mapreduce.job.queuename=hive /input /o3 \u4f18\u5148\u7ea7 hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar pi 5 2000000 # \u4f18\u5148\u7ea7\u9ad8 hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar pi -D mapreduce.job.priority=5 5 2000000 yarn tool \u89e3\u51b3\u81ea\u5b9a\u4e49\u7a0b\u5e8f\u65e0\u6cd5\u6307\u5b9ayarn\u53c2\u6570 yarn jar stu-yarn-1.0-SNAPSHOT.jar com.matt.yarn.WordCountDriver wordcount /input /o4 yarn jar stu-yarn-1.0-SNAPSHOT.jar com.matt.yarn.WordCountDriver wordcount -Dmapreduce.job.priority=5 /input /041 yarn jar stu-yarn-1.0-SNAPSHOT.jar com.matt.yarn.WordCountDriver wordcount -D mapreduce.job.priority=5 /input /042 stu-yarn-1.0-SNAPSHOT.jar","title":"matt"},{"location":"bigdata/hbase/111/","text":"4.hbase\u8fdb\u9636 4.1\u8be6\u7ec6\u67b6\u6784\u56fe 1.StoreFile \u4fdd\u5b58\u5b9e\u9645\u6570\u636e\u7684\u7269\u7406\u6587\u4ef6\uff0cStoreFile \u4ee5 HFile \u7684\u5f62\u5f0f\u5b58\u50a8\u5728 HDFS \u4e0a\u3002\u6bcf\u4e2a Store \u4f1a\u6709 \u4e00\u4e2a\u6216\u591a\u4e2a StoreFile\uff08HFile\uff09\uff0c\u6570\u636e\u5728\u6bcf\u4e2a StoreFile \u4e2d\u90fd\u662f\u6709\u5e8f\u7684\u3002 2.MemStore \u5199\u7f13\u5b58\uff0c\u7531\u4e8e HFile \u4e2d\u7684\u6570\u636e\u8981\u6c42\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u6570\u636e\u662f\u5148\u5b58\u50a8\u5728 MemStore \u4e2d\uff0c\u6392\u597d\u5e8f\u540e\uff0c\u7b49\u5230\u8fbe\u5237\u5199\u65f6\u673a\u624d\u4f1a\u5237\u5199\u5230 HFile\uff0c\u6bcf\u6b21\u5237\u5199\u90fd\u4f1a\u5f62\u6210\u4e00\u4e2a\u65b0\u7684 HFile\u3002 3.WAL \u7531\u4e8e\u6570\u636e\u8981\u7ecf MemStore \u6392\u5e8f\u540e\u624d\u80fd\u5237\u5199\u5230 HFile\uff0c\u4f46\u628a\u6570\u636e\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u4f1a\u6709\u5f88\u9ad8\u7684 \u6982\u7387\u5bfc\u81f4\u6570\u636e\u4e22\u5931\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6570\u636e\u4f1a\u5148\u5199\u5728\u4e00\u4e2a\u53eb\u505a Write-Ahead logfile \u7684\u6587\u4ef6 \u4e2d\uff0c\u7136\u540e\u518d\u5199\u5165 MemStore \u4e2d\u3002\u6240\u4ee5\u5728\u7cfb\u7edf\u51fa\u73b0\u6545\u969c\u7684\u65f6\u5019\uff0c\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u65e5\u5fd7\u6587\u4ef6\u91cd \u5efa\u3002 4.2\u5199\u6570\u636e \u539f\u7406\u56fe \u5199\u6d41\u7a0b\uff1a 1.Client \u5148\u8bbf\u95ee zookeeper\uff0c\u83b7\u53d6 hbase:meta \u8868\u4f4d\u4e8e\u54ea\u4e2a Region Server\u3002 2.\u8bbf\u95ee\u5bf9\u5e94\u7684 Region Server\uff0c\u83b7\u53d6 hbase:meta \u8868\uff0c\u6839\u636e\u8bfb\u8bf7\u6c42\u7684 namespace:table/rowkey\uff0c\u67e5\u8be2\u51fa\u76ee\u6807\u6570\u636e\u4f4d\u4e8e\u54ea\u4e2a Region Server \u4e2d\u7684\u54ea\u4e2a Region \u4e2d\u3002\u5e76\u5c06\u8be5 table \u7684 region \u4fe1\u606f\u4ee5\u53ca meta \u8868\u7684\u4f4d\u7f6e\u4fe1\u606f\u7f13\u5b58\u5728\u5ba2\u6237\u7aef\u7684 meta cache\uff0c\u65b9\u4fbf\u4e0b\u6b21\u8bbf\u95ee\u3002 3.\u4e0e\u76ee\u6807 Region Server \u8fdb\u884c\u901a\u8baf\uff1b 4.\u5c06\u6570\u636e\u987a\u5e8f\u5199\u5165\uff08\u8ffd\u52a0\uff09\u5230 WAL\uff1b 5.\u5c06\u6570\u636e\u5199\u5165\u5bf9\u5e94\u7684 MemStore\uff0c\u6570\u636e\u4f1a\u5728 MemStore \u8fdb\u884c\u6392\u5e8f\uff1b 6.\u5411\u5ba2\u6237\u7aef\u53d1\u9001 ack\uff1b 7.\u7b49\u8fbe\u5230 MemStore \u7684\u5237\u5199\u65f6\u673a\u540e\uff0c\u5c06\u6570\u636e\u5237\u5199\u5230 HFile\u3002 \u83b7\u53d6\u9501 \u6dfb\u52a0\u65f6\u95f4\u6233 \u6784\u5efawal,\u5e76\u6ca1\u6709\u5199\u5165\u78c1\u76d8 \u5185\u5b58\u4e2d\u6dfb\u52a0wal \u5199\u5165\u5185\u5b58 \u91ca\u653e\u9501 \u540c\u6b65wal(\u5224\u65ad\u662f\u5426\u51fa\u9519\uff0c\u51fa\u9519\u5219\u56de\u6eda) \u5224\u65ad\u540c\u6b65\u662f\u5426\u5931\u8d25 4.\u8001\u7248\u672c\uff0c\u73b0\u5728\u4e0d\u63d0\u4f9b\u7ed9\u7528\u6237 \u5f53 WAL \u6587\u4ef6\u7684\u6570\u91cf\u8d85\u8fc7 hbase.regionserver.max.logs\uff0cregion \u4f1a\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u4f9d\u6b21\u8fdb \u884c\u5237\u5199\uff0c\u76f4\u5230 WAL \u6587\u4ef6\u6570\u91cf\u51cf\u5c0f\u5230 hbase.regionserver.max.log \u4ee5\u4e0b\uff08\u8be5\u5c5e\u6027\u540d\u5df2\u7ecf\u5e9f\u5f03\uff0c \u73b0\u65e0\u9700\u624b\u52a8\u8bbe\u7f6e\uff0c\u6700\u5927\u503c\u4e3a 32\uff09\u3002 \u6587\u4ef6\u6570\u5c0f\u4e8e\u4e09\u4e2a\u5c0f\u5408\u5e76\u76f8\u5f53\u4e8e\u5927\u5408\u5e76 compact:\u5c0f\u5408\u5e76 compactmajor:\u5927\u5408\u5e76 \u5199\u5165\u65e5\u5fd7 \u5199\u5165\u7f13\u5b58 \u65e5\u5fd7\u5199\u5165\u6587\u4ef6 \u4e0d\u540c\u5217ddf 0.4:\u963b\u585e 0.4*0.95:\u4e0d\u963b\u585e \u6700\u540e\u4e00\u6761\u5230\u8fbe1h\u5c31\u4f1a\u5199\u5165\u78c1\u76d8\u4e2d \u6bcf\u6b21flush\u90fd\u4f1a\u751f\u6210\u4e00\u4e2ahfile\u6587\u4ef6 flush:\u90fd\u5728\u5185\u5b58\u4e2d\u5219\u4f1a\u5220\u9664 \u5927\u5408\u5e76 R:region\u6570 \u5b98\u7f51\u4e0d\u63a8\u8350\u4f7f\u7528\u591a\u5217\u7ec4\u5408 \u5982\u679c\u6709n1, n2, n3 n2, n3\u5217\u7ec4\u6570\u636e\u5c11\uff0c\u6bcf\u6b21flush n2, n3 \u5c31\u4f1a\u6709\u5f88\u591a\u5c0f\u6587\u4ef6 \u200b","title":"4.hbase\u8fdb\u9636"},{"location":"bigdata/hbase/111/#4hbase","text":"","title":"4.hbase\u8fdb\u9636"},{"location":"bigdata/hbase/111/#41","text":"1.StoreFile \u4fdd\u5b58\u5b9e\u9645\u6570\u636e\u7684\u7269\u7406\u6587\u4ef6\uff0cStoreFile \u4ee5 HFile \u7684\u5f62\u5f0f\u5b58\u50a8\u5728 HDFS \u4e0a\u3002\u6bcf\u4e2a Store \u4f1a\u6709 \u4e00\u4e2a\u6216\u591a\u4e2a StoreFile\uff08HFile\uff09\uff0c\u6570\u636e\u5728\u6bcf\u4e2a StoreFile \u4e2d\u90fd\u662f\u6709\u5e8f\u7684\u3002 2.MemStore \u5199\u7f13\u5b58\uff0c\u7531\u4e8e HFile \u4e2d\u7684\u6570\u636e\u8981\u6c42\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u6570\u636e\u662f\u5148\u5b58\u50a8\u5728 MemStore \u4e2d\uff0c\u6392\u597d\u5e8f\u540e\uff0c\u7b49\u5230\u8fbe\u5237\u5199\u65f6\u673a\u624d\u4f1a\u5237\u5199\u5230 HFile\uff0c\u6bcf\u6b21\u5237\u5199\u90fd\u4f1a\u5f62\u6210\u4e00\u4e2a\u65b0\u7684 HFile\u3002 3.WAL \u7531\u4e8e\u6570\u636e\u8981\u7ecf MemStore \u6392\u5e8f\u540e\u624d\u80fd\u5237\u5199\u5230 HFile\uff0c\u4f46\u628a\u6570\u636e\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u4f1a\u6709\u5f88\u9ad8\u7684 \u6982\u7387\u5bfc\u81f4\u6570\u636e\u4e22\u5931\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6570\u636e\u4f1a\u5148\u5199\u5728\u4e00\u4e2a\u53eb\u505a Write-Ahead logfile \u7684\u6587\u4ef6 \u4e2d\uff0c\u7136\u540e\u518d\u5199\u5165 MemStore \u4e2d\u3002\u6240\u4ee5\u5728\u7cfb\u7edf\u51fa\u73b0\u6545\u969c\u7684\u65f6\u5019\uff0c\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u65e5\u5fd7\u6587\u4ef6\u91cd \u5efa\u3002","title":"4.1\u8be6\u7ec6\u67b6\u6784\u56fe"},{"location":"bigdata/hbase/111/#42","text":"","title":"4.2\u5199\u6570\u636e"},{"location":"bigdata/hbase/111/#_1","text":"\u5199\u6d41\u7a0b\uff1a 1.Client \u5148\u8bbf\u95ee zookeeper\uff0c\u83b7\u53d6 hbase:meta \u8868\u4f4d\u4e8e\u54ea\u4e2a Region Server\u3002 2.\u8bbf\u95ee\u5bf9\u5e94\u7684 Region Server\uff0c\u83b7\u53d6 hbase:meta \u8868\uff0c\u6839\u636e\u8bfb\u8bf7\u6c42\u7684 namespace:table/rowkey\uff0c\u67e5\u8be2\u51fa\u76ee\u6807\u6570\u636e\u4f4d\u4e8e\u54ea\u4e2a Region Server \u4e2d\u7684\u54ea\u4e2a Region \u4e2d\u3002\u5e76\u5c06\u8be5 table \u7684 region \u4fe1\u606f\u4ee5\u53ca meta \u8868\u7684\u4f4d\u7f6e\u4fe1\u606f\u7f13\u5b58\u5728\u5ba2\u6237\u7aef\u7684 meta cache\uff0c\u65b9\u4fbf\u4e0b\u6b21\u8bbf\u95ee\u3002 3.\u4e0e\u76ee\u6807 Region Server \u8fdb\u884c\u901a\u8baf\uff1b 4.\u5c06\u6570\u636e\u987a\u5e8f\u5199\u5165\uff08\u8ffd\u52a0\uff09\u5230 WAL\uff1b 5.\u5c06\u6570\u636e\u5199\u5165\u5bf9\u5e94\u7684 MemStore\uff0c\u6570\u636e\u4f1a\u5728 MemStore \u8fdb\u884c\u6392\u5e8f\uff1b 6.\u5411\u5ba2\u6237\u7aef\u53d1\u9001 ack\uff1b 7.\u7b49\u8fbe\u5230 MemStore \u7684\u5237\u5199\u65f6\u673a\u540e\uff0c\u5c06\u6570\u636e\u5237\u5199\u5230 HFile\u3002 \u83b7\u53d6\u9501 \u6dfb\u52a0\u65f6\u95f4\u6233 \u6784\u5efawal,\u5e76\u6ca1\u6709\u5199\u5165\u78c1\u76d8 \u5185\u5b58\u4e2d\u6dfb\u52a0wal \u5199\u5165\u5185\u5b58 \u91ca\u653e\u9501 \u540c\u6b65wal(\u5224\u65ad\u662f\u5426\u51fa\u9519\uff0c\u51fa\u9519\u5219\u56de\u6eda) \u5224\u65ad\u540c\u6b65\u662f\u5426\u5931\u8d25 4.\u8001\u7248\u672c\uff0c\u73b0\u5728\u4e0d\u63d0\u4f9b\u7ed9\u7528\u6237 \u5f53 WAL \u6587\u4ef6\u7684\u6570\u91cf\u8d85\u8fc7 hbase.regionserver.max.logs\uff0cregion \u4f1a\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u4f9d\u6b21\u8fdb \u884c\u5237\u5199\uff0c\u76f4\u5230 WAL \u6587\u4ef6\u6570\u91cf\u51cf\u5c0f\u5230 hbase.regionserver.max.log \u4ee5\u4e0b\uff08\u8be5\u5c5e\u6027\u540d\u5df2\u7ecf\u5e9f\u5f03\uff0c \u73b0\u65e0\u9700\u624b\u52a8\u8bbe\u7f6e\uff0c\u6700\u5927\u503c\u4e3a 32\uff09\u3002 \u6587\u4ef6\u6570\u5c0f\u4e8e\u4e09\u4e2a\u5c0f\u5408\u5e76\u76f8\u5f53\u4e8e\u5927\u5408\u5e76 compact:\u5c0f\u5408\u5e76 compactmajor:\u5927\u5408\u5e76 \u5199\u5165\u65e5\u5fd7 \u5199\u5165\u7f13\u5b58 \u65e5\u5fd7\u5199\u5165\u6587\u4ef6 \u4e0d\u540c\u5217ddf 0.4:\u963b\u585e 0.4*0.95:\u4e0d\u963b\u585e \u6700\u540e\u4e00\u6761\u5230\u8fbe1h\u5c31\u4f1a\u5199\u5165\u78c1\u76d8\u4e2d \u6bcf\u6b21flush\u90fd\u4f1a\u751f\u6210\u4e00\u4e2ahfile\u6587\u4ef6 flush:\u90fd\u5728\u5185\u5b58\u4e2d\u5219\u4f1a\u5220\u9664 \u5927\u5408\u5e76 R:region\u6570 \u5b98\u7f51\u4e0d\u63a8\u8350\u4f7f\u7528\u591a\u5217\u7ec4\u5408 \u5982\u679c\u6709n1, n2, n3 n2, n3\u5217\u7ec4\u6570\u636e\u5c11\uff0c\u6bcf\u6b21flush n2, n3 \u5c31\u4f1a\u6709\u5f88\u591a\u5c0f\u6587\u4ef6 \u200b","title":"\u539f\u7406\u56fe"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/","text":"1.hbase\u7b80\u4ecb 1.1\u5b9a\u4e49 HBase \u662f\u4e00\u79cd\u5206\u5e03\u5f0f\u3001\u53ef\u6269\u5c55\u3001\u652f\u6301\u6d77\u91cf\u6570\u636e\u5b58\u50a8\u7684 NoSQL\uff08\u975e\u5173\u7cfb\u578b\uff09 \u6570\u636e\u5e93\u3002 1.2\u6570\u636e\u6a21\u578b \u903b\u8f91\u4e0a\uff0cHBase \u7684\u6570\u636e\u6a21\u578b\u540c\u5173\u7cfb\u578b\u6570\u636e\u5e93\u5f88\u7c7b\u4f3c\uff0c\u6570\u636e\u5b58\u50a8\u5728\u4e00\u5f20\u8868\u4e2d\uff0c\u6709\u884c\u6709\u5217\u3002 \u4f46\u4ece HBase \u7684\u5e95\u5c42\u7269\u7406\u5b58\u50a8\u7ed3\u6784\uff08K-V\uff09\u6765\u770b\uff0cHBase \u66f4\u50cf\u662f\u4e00\u4e2a multi-dimensional map\u3002 1.2.1\u903b\u8f91\u7ed3\u6784 store:\u771f\u6b63\u5b58\u50a8\u7684\u4e1c\u897f 1.2.2\u7269\u7406\u7ed3\u6784 1.2.3\u6570\u636e\u6a21\u578b 1.Name Space \u547d\u540d\u7a7a\u95f4\uff0c\u7c7b\u4f3c\u4e8e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684 DatabBase \u6982\u5ff5\uff0c\u6bcf\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u6709\u591a\u4e2a\u8868\u3002HBase \u6709\u4e24\u4e2a\u81ea\u5e26\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u5206\u522b\u662f hbase \u548c default\uff0chbase \u4e2d\u5b58\u653e\u7684\u662f HBase \u5185\u7f6e\u7684\u8868\uff0c default \u8868\u662f\u7528\u6237\u9ed8\u8ba4\u4f7f\u7528\u7684\u547d\u540d\u7a7a\u95f4\u3002 2.Region \u7c7b\u4f3c\u4e8e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u8868\u6982\u5ff5\u3002\u4e0d\u540c\u7684\u662f\uff0cHBase \u5b9a\u4e49\u8868\u65f6\u53ea\u9700\u8981\u58f0\u660e\u5217\u65cf\u5373\u53ef\uff0c\u4e0d\u9700 \u8981\u58f0\u660e\u5177\u4f53\u7684\u5217\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5f80 HBase \u5199\u5165\u6570\u636e\u65f6\uff0c\u5b57\u6bb5\u53ef\u4ee5\u52a8\u6001\u3001\u6309\u9700\u6307\u5b9a\u3002\u56e0\u6b64\uff0c\u548c\u5173 \u7cfb\u578b\u6570\u636e\u5e93\u76f8\u6bd4\uff0cHBase \u80fd\u591f\u8f7b\u677e\u5e94\u5bf9\u5b57\u6bb5\u53d8\u66f4\u7684\u573a\u666f\u3002 3.Row HBase \u8868\u4e2d\u7684\u6bcf\u884c\u6570\u636e\u90fd\u7531\u4e00\u4e2a RowKey \u548c\u591a\u4e2a Column\uff08\u5217\uff09\u7ec4\u6210\uff0c\u6570\u636e\u662f\u6309\u7167 RowKey \u7684\u5b57\u5178\u987a\u5e8f\u5b58\u50a8\u7684\uff0c\u5e76\u4e14\u67e5\u8be2\u6570\u636e\u65f6\u53ea\u80fd\u6839\u636e RowKey \u8fdb\u884c\u68c0\u7d22\uff0c\u6240\u4ee5 RowKey \u7684\u8bbe\u8ba1\u5341\u5206\u91cd \u8981\u3002 4.Column HBase \u4e2d\u7684\u6bcf\u4e2a\u5217\u90fd\u7531 Column Family(\u5217\u65cf)\u548c Column Qualifier\uff08\u5217\u9650\u5b9a\u7b26\uff09\u8fdb\u884c\u9650 \u5b9a\uff0c\u4f8b\u5982 info\uff1aname\uff0cinfo\uff1aage\u3002\u5efa\u8868\u65f6\uff0c\u53ea\u9700\u6307\u660e\u5217\u65cf\uff0c\u800c\u5217\u9650\u5b9a\u7b26\u65e0\u9700\u9884\u5148\u5b9a\u4e49\u3002 5.Time Stamp \u7528\u4e8e\u6807\u8bc6\u6570\u636e\u7684\u4e0d\u540c\u7248\u672c\uff08version\uff09\uff0c\u6bcf\u6761\u6570\u636e\u5199\u5165\u65f6\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u65f6\u95f4\u6233\uff0c\u7cfb\u7edf\u4f1a \u81ea\u52a8\u4e3a\u5176\u52a0\u4e0a\u8be5\u5b57\u6bb5\uff0c\u5176\u503c\u4e3a\u5199\u5165 HBase \u7684\u65f6\u95f4\u3002 6.Cell \u7531{rowkey, column Family\uff1acolumn Qualifier, time Stamp} \u552f\u4e00\u786e\u5b9a\u7684\u5355\u5143\u3002cell \u4e2d\u7684\u6570\u636e\u662f\u6ca1\u6709\u7c7b\u578b\u7684\uff0c\u5168\u90e8\u662f\u5b57\u8282\u7801\u5f62\u5f0f\u5b58\u8d2e\u3002 1.3\u57fa\u7840\u67b6\u6784 \u67b6\u6784\u89d2\u8272\uff1a 1.Region Server Region Server \u4e3a Region \u7684\u7ba1\u7406\u8005\uff0c\u5176\u5b9e\u73b0\u7c7b\u4e3a HRegionServer\uff0c\u4e3b\u8981\u4f5c\u7528\u5982\u4e0b: \u5bf9\u4e8e\u6570\u636e\u7684\u64cd\u4f5c\uff1aget, put, delete\uff1b \u5bf9\u4e8e Region \u7684\u64cd\u4f5c\uff1asplitRegion\u3001compactRegion\u3002 2.Master Master \u662f\u6240\u6709 Region Server \u7684\u7ba1\u7406\u8005\uff0c\u5176\u5b9e\u73b0\u7c7b\u4e3a HMaster\uff0c\u4e3b\u8981\u4f5c\u7528\u5982\u4e0b\uff1a \u5bf9\u4e8e\u8868\u7684\u64cd\u4f5c\uff1acreate, delete, alter \u5bf9\u4e8e RegionServer \u7684\u64cd\u4f5c\uff1a\u5206\u914d regions \u5230\u6bcf\u4e2a RegionServer\uff0c\u76d1\u63a7\u6bcf\u4e2a RegionServer\u7684\u72b6\u6001\uff0c\u8d1f\u8f7d\u5747\u8861\u548c\u6545\u969c\u8f6c\u79fb\u3002 3.Zookeeper HBase \u901a\u8fc7 Zookeeper \u6765\u505a Master \u7684\u9ad8\u53ef\u7528\u3001RegionServer \u7684\u76d1\u63a7\u3001\u5143\u6570\u636e\u7684\u5165\u53e3\u4ee5\u53ca\u96c6\u7fa4\u914d\u7f6e\u7684\u7ef4\u62a4\u7b49\u5de5\u4f5c\u3002 4.HDFS HDFS \u4e3a HBase \u63d0\u4f9b\u6700\u7ec8\u7684\u5e95\u5c42\u6570\u636e\u5b58\u50a8\u670d\u52a1\uff0c\u540c\u65f6\u4e3a HBase \u63d0\u4f9b\u9ad8\u53ef\u7528\u7684\u652f\u6301\u3002 2.\u5b89\u88c5 \u63d0\u524d\u5b89\u88c5zk,hadoop\u3002\u4e8c\u8005\u90fd\u4e3a\u96c6\u7fa4 2.1\u5b89\u88c5 1.\u89e3\u538b tar -zxvf hbase-1.3.1-bin.tar.gz -C /opt/module/ 2.2\u914d\u7f6e 1.\u8fdb\u5165\u914d\u7f6e\u76ee\u5f55 /opt/module/hbase-1.3.1/conf 2.\u8bb0\u5f55 JAVA_HOME \u8def\u5f84 echo $JAVA_HOME /opt/module/jdk1.8.0_212 3.\u7f16\u5199\u914d\u7f6e\u6587\u4ef6hbase-env.sh vim hbase-env.sh // The java implementation to use. Java 1.7+ required. export JAVA_HOME=/opt/module/jdk1.8.0_212 // hbase \u6709\u81ea\u5e26\u7684zk,\u4e0d\u8981\u4f7f\u7528\u81ea\u5e26\u7684 // Tell HBase whether it should manage it's own instance of Zookeeper or not. export HBASE_MANAGES_ZK=false 4.hbase-site.xml vim hbase-site.xml hbase-site.xml=core-site.xml hbase.rootdir=fs.defaultFS <property> <name>fs.defaultFS</name> <value>hdfs://matt05:8020</value> </property> <configuration> <property> <name>hbase.rootdir</name> <value>hdfs://matt05:8020/HBase</value> </property> <property> <name>hbase.cluster.distributed</name> <value>true</value> </property> <!-- 0.98 \u540e\u7684\u65b0\u53d8\u52a8\uff0c\u4e4b\u524d\u7248\u672c\u6ca1\u6709.port,\u9ed8\u8ba4\u7aef\u53e3\u4e3a 60000 --> <property> <name>hbase.master.port</name> <value>16000</value> </property> <property> <name>hbase.zookeeper.property.dataDir</name> <value>/opt/module/zookeeper-3.5.7/zkData</value> </property> <property> <name>hbase.zookeeper.quorum</name> <value>matt05,matt06,matt07</value> </property> </configuration> 5.\u96c6\u7fa4\u6587\u4ef6regionservers vim regionservers matt05 matt06 matt07 6\u5efa\u7acbhadoop\u5feb\u6377\u65b9\u5f0f ln -s /opt/module/hadoop-3.1.3/etc/hadoop/core-site.xml /opt/module/hbase-1.3.1/conf/core-site.xml ln -s /opt/module/hadoop-3.1.3/etc/hadoop/hdfs-site.xml /opt/module/hbase-1.3.1/conf/hdfs-site.xml 7.\u5206\u53d1\u5b89\u88c5 xsync hbase-1.3.1/ 2.3\u542f\u52a8 \u8bb0\u5f97\u5f00\u542f\u540c\u6b65\u65f6\u95f4 \u65b9\u5f0f\u4e00 [matt@matt05 bin]$ ./hbase-daemon.sh start master ./hbase-daemon.sh start regionserver \u65b9\u5f0f\u4e8c bin/start-hbase.sh bin/stop-hbase.sh 2.4\u8bbf\u95ee web\u9875\u9762 ip:port 192.168.96.135:16010 3.\u4f7f\u7528 3.1\u57fa\u7840 \u8fdb\u5165hbase shell ./hbase shell quit exit \u9000\u51fa\uff1b \u5e2e\u52a9 help \u67e5\u770b\u6709\u54ea\u4e9b\u8868 list \u547d\u540d\u76f8\u5173 // \u521b\u5efa\u547d\u540d\u7a7a\u95f4 create_namespace 'test1' create 'test1:student','info1' // \u9700\u8981\u5148\u5220\u9664\u8be5\u547d\u540d\u7a7a\u95f4\u4e0b\u7684\u8868 drop_namespace 'test1' list_namespace \u8868\u76f8\u5173ddl hbase(main):023:0> create ERROR: wrong number of arguments (0 for 1) Here is some help for this command: Creates a table. Pass a table name, and a set of column family specifications (at least one), and, optionally, table configuration. Column specification can be a simple string (name), or a dictionary (dictionaries are described below in main help output), necessarily including NAME attribute. Examples: Create a table with namespace=ns1 and table qualifier=t1 hbase> create 'ns1:t1', {NAME => 'f1', VERSIONS => 5} \u521b\u5efa\u8868 create 't2','info' \u5220\u9664\u8868 disable 'test' drop 'test' \u4fee\u6539\u5217\u7ec4\u7248\u672c alter 't1', {NAME => 'info', VERSIONS => 1} \u67e5\u770b\u8868\u7684\u4fe1\u606f describe 't1' \u67e5\u770b\u6240\u6709\u8868 list dml crud put 'student','1001','info1:name','matt' scan 'student' // \u8868\u540d rowKey get 'student','1001' scan 'student',{COLUMNS => ['info1:name', 'info2:sex'], LIMIT => 10, STARTROW => '1001',STOPROW => '1003'} scan 'student', {RAW => true, VERSIONS => 3} hbase(main):010:0> scan 't2', {RAW => true, VERSIONS => 3} ROW COLUMN+CELL 1001 column=info:, timestamp=1630203659417, type=DeleteColumn 1001 column=info:name, timestamp=1630203905379, type=DeleteColumn 1001 column=info:name, timestamp=1630203448221, value=b 1001 column=info:name, timestamp=1630203437357, value=a 1 row(s) in 0.0240 seconds // update put 'student','1001','info1:name','matt1' // \u6307\u5b9a\u5230\u5217\u7ec4\u5219\u4e0d\u4f1a\u5220\u9664 delete 'student','1001','info1:sex' deleteall 'student','1002' truncate 'student'","title":"1.hbase\u7b80\u4ecb"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#1hbase","text":"","title":"1.hbase\u7b80\u4ecb"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#11","text":"HBase \u662f\u4e00\u79cd\u5206\u5e03\u5f0f\u3001\u53ef\u6269\u5c55\u3001\u652f\u6301\u6d77\u91cf\u6570\u636e\u5b58\u50a8\u7684 NoSQL\uff08\u975e\u5173\u7cfb\u578b\uff09 \u6570\u636e\u5e93\u3002","title":"1.1\u5b9a\u4e49"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#12","text":"\u903b\u8f91\u4e0a\uff0cHBase \u7684\u6570\u636e\u6a21\u578b\u540c\u5173\u7cfb\u578b\u6570\u636e\u5e93\u5f88\u7c7b\u4f3c\uff0c\u6570\u636e\u5b58\u50a8\u5728\u4e00\u5f20\u8868\u4e2d\uff0c\u6709\u884c\u6709\u5217\u3002 \u4f46\u4ece HBase \u7684\u5e95\u5c42\u7269\u7406\u5b58\u50a8\u7ed3\u6784\uff08K-V\uff09\u6765\u770b\uff0cHBase \u66f4\u50cf\u662f\u4e00\u4e2a multi-dimensional map\u3002","title":"1.2\u6570\u636e\u6a21\u578b"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#121","text":"store:\u771f\u6b63\u5b58\u50a8\u7684\u4e1c\u897f","title":"1.2.1\u903b\u8f91\u7ed3\u6784"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#122","text":"","title":"1.2.2\u7269\u7406\u7ed3\u6784"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#123","text":"1.Name Space \u547d\u540d\u7a7a\u95f4\uff0c\u7c7b\u4f3c\u4e8e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684 DatabBase \u6982\u5ff5\uff0c\u6bcf\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u6709\u591a\u4e2a\u8868\u3002HBase \u6709\u4e24\u4e2a\u81ea\u5e26\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u5206\u522b\u662f hbase \u548c default\uff0chbase \u4e2d\u5b58\u653e\u7684\u662f HBase \u5185\u7f6e\u7684\u8868\uff0c default \u8868\u662f\u7528\u6237\u9ed8\u8ba4\u4f7f\u7528\u7684\u547d\u540d\u7a7a\u95f4\u3002 2.Region \u7c7b\u4f3c\u4e8e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u8868\u6982\u5ff5\u3002\u4e0d\u540c\u7684\u662f\uff0cHBase \u5b9a\u4e49\u8868\u65f6\u53ea\u9700\u8981\u58f0\u660e\u5217\u65cf\u5373\u53ef\uff0c\u4e0d\u9700 \u8981\u58f0\u660e\u5177\u4f53\u7684\u5217\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5f80 HBase \u5199\u5165\u6570\u636e\u65f6\uff0c\u5b57\u6bb5\u53ef\u4ee5\u52a8\u6001\u3001\u6309\u9700\u6307\u5b9a\u3002\u56e0\u6b64\uff0c\u548c\u5173 \u7cfb\u578b\u6570\u636e\u5e93\u76f8\u6bd4\uff0cHBase \u80fd\u591f\u8f7b\u677e\u5e94\u5bf9\u5b57\u6bb5\u53d8\u66f4\u7684\u573a\u666f\u3002 3.Row HBase \u8868\u4e2d\u7684\u6bcf\u884c\u6570\u636e\u90fd\u7531\u4e00\u4e2a RowKey \u548c\u591a\u4e2a Column\uff08\u5217\uff09\u7ec4\u6210\uff0c\u6570\u636e\u662f\u6309\u7167 RowKey \u7684\u5b57\u5178\u987a\u5e8f\u5b58\u50a8\u7684\uff0c\u5e76\u4e14\u67e5\u8be2\u6570\u636e\u65f6\u53ea\u80fd\u6839\u636e RowKey \u8fdb\u884c\u68c0\u7d22\uff0c\u6240\u4ee5 RowKey \u7684\u8bbe\u8ba1\u5341\u5206\u91cd \u8981\u3002 4.Column HBase \u4e2d\u7684\u6bcf\u4e2a\u5217\u90fd\u7531 Column Family(\u5217\u65cf)\u548c Column Qualifier\uff08\u5217\u9650\u5b9a\u7b26\uff09\u8fdb\u884c\u9650 \u5b9a\uff0c\u4f8b\u5982 info\uff1aname\uff0cinfo\uff1aage\u3002\u5efa\u8868\u65f6\uff0c\u53ea\u9700\u6307\u660e\u5217\u65cf\uff0c\u800c\u5217\u9650\u5b9a\u7b26\u65e0\u9700\u9884\u5148\u5b9a\u4e49\u3002 5.Time Stamp \u7528\u4e8e\u6807\u8bc6\u6570\u636e\u7684\u4e0d\u540c\u7248\u672c\uff08version\uff09\uff0c\u6bcf\u6761\u6570\u636e\u5199\u5165\u65f6\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u65f6\u95f4\u6233\uff0c\u7cfb\u7edf\u4f1a \u81ea\u52a8\u4e3a\u5176\u52a0\u4e0a\u8be5\u5b57\u6bb5\uff0c\u5176\u503c\u4e3a\u5199\u5165 HBase \u7684\u65f6\u95f4\u3002 6.Cell \u7531{rowkey, column Family\uff1acolumn Qualifier, time Stamp} \u552f\u4e00\u786e\u5b9a\u7684\u5355\u5143\u3002cell \u4e2d\u7684\u6570\u636e\u662f\u6ca1\u6709\u7c7b\u578b\u7684\uff0c\u5168\u90e8\u662f\u5b57\u8282\u7801\u5f62\u5f0f\u5b58\u8d2e\u3002","title":"1.2.3\u6570\u636e\u6a21\u578b"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#13","text":"\u67b6\u6784\u89d2\u8272\uff1a 1.Region Server Region Server \u4e3a Region \u7684\u7ba1\u7406\u8005\uff0c\u5176\u5b9e\u73b0\u7c7b\u4e3a HRegionServer\uff0c\u4e3b\u8981\u4f5c\u7528\u5982\u4e0b: \u5bf9\u4e8e\u6570\u636e\u7684\u64cd\u4f5c\uff1aget, put, delete\uff1b \u5bf9\u4e8e Region \u7684\u64cd\u4f5c\uff1asplitRegion\u3001compactRegion\u3002 2.Master Master \u662f\u6240\u6709 Region Server \u7684\u7ba1\u7406\u8005\uff0c\u5176\u5b9e\u73b0\u7c7b\u4e3a HMaster\uff0c\u4e3b\u8981\u4f5c\u7528\u5982\u4e0b\uff1a \u5bf9\u4e8e\u8868\u7684\u64cd\u4f5c\uff1acreate, delete, alter \u5bf9\u4e8e RegionServer \u7684\u64cd\u4f5c\uff1a\u5206\u914d regions \u5230\u6bcf\u4e2a RegionServer\uff0c\u76d1\u63a7\u6bcf\u4e2a RegionServer\u7684\u72b6\u6001\uff0c\u8d1f\u8f7d\u5747\u8861\u548c\u6545\u969c\u8f6c\u79fb\u3002 3.Zookeeper HBase \u901a\u8fc7 Zookeeper \u6765\u505a Master \u7684\u9ad8\u53ef\u7528\u3001RegionServer \u7684\u76d1\u63a7\u3001\u5143\u6570\u636e\u7684\u5165\u53e3\u4ee5\u53ca\u96c6\u7fa4\u914d\u7f6e\u7684\u7ef4\u62a4\u7b49\u5de5\u4f5c\u3002 4.HDFS HDFS \u4e3a HBase \u63d0\u4f9b\u6700\u7ec8\u7684\u5e95\u5c42\u6570\u636e\u5b58\u50a8\u670d\u52a1\uff0c\u540c\u65f6\u4e3a HBase \u63d0\u4f9b\u9ad8\u53ef\u7528\u7684\u652f\u6301\u3002","title":"1.3\u57fa\u7840\u67b6\u6784"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#2","text":"\u63d0\u524d\u5b89\u88c5zk,hadoop\u3002\u4e8c\u8005\u90fd\u4e3a\u96c6\u7fa4","title":"2.\u5b89\u88c5"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#21","text":"","title":"2.1\u5b89\u88c5"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#1","text":"tar -zxvf hbase-1.3.1-bin.tar.gz -C /opt/module/","title":"1.\u89e3\u538b"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#22","text":"","title":"2.2\u914d\u7f6e"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#1_1","text":"/opt/module/hbase-1.3.1/conf","title":"1.\u8fdb\u5165\u914d\u7f6e\u76ee\u5f55"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#2-java_home","text":"echo $JAVA_HOME /opt/module/jdk1.8.0_212","title":"2.\u8bb0\u5f55 JAVA_HOME \u8def\u5f84"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#3hbase-envsh","text":"vim hbase-env.sh // The java implementation to use. Java 1.7+ required. export JAVA_HOME=/opt/module/jdk1.8.0_212 // hbase \u6709\u81ea\u5e26\u7684zk,\u4e0d\u8981\u4f7f\u7528\u81ea\u5e26\u7684 // Tell HBase whether it should manage it's own instance of Zookeeper or not. export HBASE_MANAGES_ZK=false","title":"3.\u7f16\u5199\u914d\u7f6e\u6587\u4ef6hbase-env.sh"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#4hbase-sitexml","text":"vim hbase-site.xml hbase-site.xml=core-site.xml hbase.rootdir=fs.defaultFS <property> <name>fs.defaultFS</name> <value>hdfs://matt05:8020</value> </property> <configuration> <property> <name>hbase.rootdir</name> <value>hdfs://matt05:8020/HBase</value> </property> <property> <name>hbase.cluster.distributed</name> <value>true</value> </property> <!-- 0.98 \u540e\u7684\u65b0\u53d8\u52a8\uff0c\u4e4b\u524d\u7248\u672c\u6ca1\u6709.port,\u9ed8\u8ba4\u7aef\u53e3\u4e3a 60000 --> <property> <name>hbase.master.port</name> <value>16000</value> </property> <property> <name>hbase.zookeeper.property.dataDir</name> <value>/opt/module/zookeeper-3.5.7/zkData</value> </property> <property> <name>hbase.zookeeper.quorum</name> <value>matt05,matt06,matt07</value> </property> </configuration>","title":"4.hbase-site.xml"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#5regionservers","text":"vim regionservers matt05 matt06 matt07","title":"5.\u96c6\u7fa4\u6587\u4ef6regionservers"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#6hadoop","text":"ln -s /opt/module/hadoop-3.1.3/etc/hadoop/core-site.xml /opt/module/hbase-1.3.1/conf/core-site.xml ln -s /opt/module/hadoop-3.1.3/etc/hadoop/hdfs-site.xml /opt/module/hbase-1.3.1/conf/hdfs-site.xml","title":"6\u5efa\u7acbhadoop\u5feb\u6377\u65b9\u5f0f"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#7","text":"xsync hbase-1.3.1/","title":"7.\u5206\u53d1\u5b89\u88c5"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#23","text":"\u8bb0\u5f97\u5f00\u542f\u540c\u6b65\u65f6\u95f4","title":"2.3\u542f\u52a8"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#_1","text":"[matt@matt05 bin]$ ./hbase-daemon.sh start master ./hbase-daemon.sh start regionserver","title":"\u65b9\u5f0f\u4e00"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#_2","text":"bin/start-hbase.sh bin/stop-hbase.sh","title":"\u65b9\u5f0f\u4e8c"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#24","text":"","title":"2.4\u8bbf\u95ee"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#web","text":"ip:port 192.168.96.135:16010","title":"web\u9875\u9762"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#3","text":"","title":"3.\u4f7f\u7528"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#31","text":"","title":"3.1\u57fa\u7840"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#hbase-shell","text":"./hbase shell quit exit \u9000\u51fa\uff1b","title":"\u8fdb\u5165hbase shell"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#_3","text":"help","title":"\u5e2e\u52a9"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#_4","text":"list","title":"\u67e5\u770b\u6709\u54ea\u4e9b\u8868"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#_5","text":"// \u521b\u5efa\u547d\u540d\u7a7a\u95f4 create_namespace 'test1' create 'test1:student','info1' // \u9700\u8981\u5148\u5220\u9664\u8be5\u547d\u540d\u7a7a\u95f4\u4e0b\u7684\u8868 drop_namespace 'test1' list_namespace","title":"\u547d\u540d\u76f8\u5173"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#ddl","text":"hbase(main):023:0> create ERROR: wrong number of arguments (0 for 1) Here is some help for this command: Creates a table. Pass a table name, and a set of column family specifications (at least one), and, optionally, table configuration. Column specification can be a simple string (name), or a dictionary (dictionaries are described below in main help output), necessarily including NAME attribute. Examples: Create a table with namespace=ns1 and table qualifier=t1 hbase> create 'ns1:t1', {NAME => 'f1', VERSIONS => 5}","title":"\u8868\u76f8\u5173ddl"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#_6","text":"create 't2','info'","title":"\u521b\u5efa\u8868"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#_7","text":"disable 'test' drop 'test'","title":"\u5220\u9664\u8868"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#_8","text":"alter 't1', {NAME => 'info', VERSIONS => 1}","title":"\u4fee\u6539\u5217\u7ec4\u7248\u672c"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#_9","text":"describe 't1'","title":"\u67e5\u770b\u8868\u7684\u4fe1\u606f"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#_10","text":"list","title":"\u67e5\u770b\u6240\u6709\u8868"},{"location":"bigdata/hbase/hbase%E6%A6%82%E8%BF%B0/#dml-crud","text":"put 'student','1001','info1:name','matt' scan 'student' // \u8868\u540d rowKey get 'student','1001' scan 'student',{COLUMNS => ['info1:name', 'info2:sex'], LIMIT => 10, STARTROW => '1001',STOPROW => '1003'} scan 'student', {RAW => true, VERSIONS => 3} hbase(main):010:0> scan 't2', {RAW => true, VERSIONS => 3} ROW COLUMN+CELL 1001 column=info:, timestamp=1630203659417, type=DeleteColumn 1001 column=info:name, timestamp=1630203905379, type=DeleteColumn 1001 column=info:name, timestamp=1630203448221, value=b 1001 column=info:name, timestamp=1630203437357, value=a 1 row(s) in 0.0240 seconds // update put 'student','1001','info1:name','matt1' // \u6307\u5b9a\u5230\u5217\u7ec4\u5219\u4e0d\u4f1a\u5220\u9664 delete 'student','1001','info1:sex' deleteall 'student','1002' truncate 'student'","title":"dml crud"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/","text":"\u6982\u8ff0 \u6301\u4e45\u5316 \u6301\u4e45\u5316(persistence): \u628a\u6570\u636e\u4fdd\u5b58\u5230\u53ef\u6389\u7535\u5f0f\u5b58\u50a8\u8bbe\u5907\u4e2d\u4ee5\u4f9b\u4e4b\u540e\u4f7f\u7528 \u6389\u7535\u8bbe\u5907\uff1a\u6570\u636e\u5e93\u3001\u6587\u4ef6\u3001\u5176\u4ed6 \u6570\u636e\u5e93\u6982\u5ff5 \u6570\u636e\u5e93 db \u5b58\u50a8\u6570\u636e DBMS :\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf( Database Management System ) \u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\u548c\u63a7\u5236 SQL :\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00( Structured Query Language ) \u4e13\u95e8\u7528\u6765\u4e0e\u6570\u636e\u5e93\u901a\u4fe1\u7684\u8bed\u8a00 \u6570\u636e\u5e93\u5206\u7c7b \u5173\u7cfb\u578b\u6570\u636e\u5e93 \u6982\u8ff0 \u8fd9\u79cd\u7c7b\u578b\u7684\u6570\u636e\u5e93\u662f \u6700\u53e4\u8001 \u7684\u6570\u636e\u5e93\u7c7b\u578b\uff0c\u5173\u7cfb\u578b\u6570\u636e\u5e93\u6a21\u578b\u662f\u628a\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\u5f52\u7ed3\u4e3a\u7b80\u5355\u7684 \u4e8c\u5143\u5173\u7cfb (\u5373\u4e8c\u7ef4\u8868\u683c\u5f62\u5f0f)\u3002 \u4f18\u7f3a\u70b9 \u590d\u6742\u67e5\u8be2 \u53ef\u4ee5\u7528SQL\u8bed\u53e5\u65b9\u4fbf\u7684\u5728\u4e00\u4e2a\u8868\u4ee5\u53ca\u591a\u4e2a\u8868\u4e4b\u95f4\u505a\u975e\u5e38\u590d\u6742\u7684\u6570\u636e\u67e5\u8be2\u3002 \u4e8b\u52a1\u652f\u6301 \u4f7f\u5f97\u5bf9\u4e8e\u5b89\u5168\u6027\u80fd\u5f88\u9ad8\u7684\u6570\u636e\u8bbf\u95ee\u8981\u6c42\u5f97\u4ee5\u5b9e\u73b0\u3002 \u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93 \u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93 \uff0c\u53ef\u770b\u6210\u4f20\u7edf\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u529f\u80fd \u9609\u5272\u7248\u672c \uff0c\u57fa\u4e8e\u952e\u503c\u5bf9\u5b58\u50a8\u6570\u636e\uff0c\u4e0d\u9700\u8981\u7ecf\u8fc7SQL\u5c42 \u7684\u89e3\u6790\uff0c \u6027\u80fd\u975e\u5e38\u9ad8 \u3002\u540c\u65f6\uff0c\u901a\u8fc7\u51cf\u5c11\u4e0d\u5e38\u7528\u7684\u529f\u80fd\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u6027\u80fd\u3002 \u952e\u503c\u6570\u636e\u5e93 \u6587\u6863\u6570\u636e\u5e93 \u641c\u7d22\u5f15\u64ce\u6570\u636e\u5e93 \u5217\u5f0f\u6570\u636e\u5e93 \u5b89\u88c5 mac \u5b89\u88c5 \u5b98\u7f51\uff1ahttps://dev.mysql.com/downloads/mysql/ \u4e00\u6b65\u4e00\u6b65\u5b89\u88c5\u5373\u53ef \u8fd9\u91cc\u9009\u62e95.x\u52a0\u5bc6 \u8bbe\u7f6eroot\u5bc6\u7801 \u542f\u52a8 \u5728\u7cfb\u7edf\u504f\u597d\u8bbe\u7f6e\u91cc\u542f\u52a8\u6216\u8005\u5173\u95ed\u670d\u52a1 \u914d\u7f6e vim .zshrc # mysql PATH=$PATH:/usr/local/mysql/bin export PATH mysql -h \u4e3b\u673a\u540d -P \u7aef\u53e3\u53f7 -u \u7528\u6237\u540d -p\u5bc6\u7801 mysql -h localhost -P 3306 -u root -prootroot mysql -u root -prootroot exit \u9ed8\u8ba4\u7684\u5e93\u4ecb\u7ecd \u201cinformation_schema\u201d\u662f MySQL \u7cfb\u7edf\u81ea\u5e26\u7684\u6570\u636e\u5e93\uff0c\u4e3b\u8981\u4fdd\u5b58 MySQL \u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u7cfb\u7edf\u4fe1\u606f\uff0c\u6bd4\u5982\u6570\u636e\u5e93\u7684\u540d\u79f0\u3001\u6570\u636e\u8868\u7684\u540d\u79f0\u3001\u5b57\u6bb5\u540d\u79f0\u3001\u5b58\u53d6\u6743\u9650\u3001\u6570\u636e\u6587\u4ef6 \u6240\u5728\u7684\u6587\u4ef6\u5939\u548c\u7cfb\u7edf\u4f7f\u7528\u7684\u6587\u4ef6\u5939\uff0c\u7b49\u7b49 \u201cperformance_schema\u201d\u662f MySQL \u7cfb\u7edf\u81ea\u5e26\u7684\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u7528\u6765\u76d1\u63a7 MySQL \u7684\u5404\u7c7b\u6027\u80fd\u6307\u6807\u3002 \u201csys\u201d\u6570\u636e\u5e93\u662f MySQL \u7cfb\u7edf\u81ea\u5e26\u7684\u6570\u636e\u5e93\uff0c\u4e3b\u8981\u4f5c\u7528\u662f\u4ee5\u4e00\u79cd\u66f4\u5bb9\u6613\u88ab\u7406\u89e3\u7684\u65b9\u5f0f\u5c55\u793a MySQL \u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u5404\u7c7b\u6027\u80fd\u6307\u6807\uff0c\u5e2e\u52a9\u7cfb\u7edf\u7ba1\u7406\u5458\u548c\u5f00\u53d1\u4eba\u5458\u76d1\u63a7 MySQL \u7684\u6280\u672f\u6027\u80fd\u3002 \u201cmysql\u201d\u6570\u636e\u5e93\u4fdd\u5b58\u4e86 MySQL \u6570\u636e\u5e93\u670d\u52a1\u5668\u8fd0\u884c\u65f6\u9700\u8981\u7684\u7cfb\u7edf\u4fe1\u606f\uff0c\u6bd4\u5982\u6570\u636e\u6587\u4ef6\u5939\u3001\u5f53\u524d\u4f7f\u7528\u7684\u5b57\u7b26\u96c6\u3001\u7ea6\u675f\u68c0\u67e5\u4fe1\u606f\uff0c\u7b49\u7b49 \u7f16\u7801 show variables like 'character_%'; show variables like 'collation_%'; mysql8.0\u4ee5\u4e0a\u9ed8\u8ba4\u4f1a\u91c7\u7528utf8 \u5982\u679c\u4e0d\u662f8.0 \u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u6587\u7ae0\u8fdb\u884c\u4fee\u6539 Mac MySql - \u67e5\u770b\u4ee5\u53ca\u4fee\u6539\u7f16\u7801\u683c\u5f0f - \u6398\u91d1 \u767b\u5f55 - MySQL\u5185\u90e8 mysql -u root -p MySQL\u5185\u90e8 - \u67e5\u770b\u6570\u636e\u5e93\u7f16\u7801\u683c\u5f0f \uff08\u63a8\u8350\u7528\u8fd9\u4e2a\uff0c\u6211\u7528\u7684\u8fd9\u4e2a\uff01\uff09 show variables like 'character%'; MySQL\u5185\u90e8 - \u67e5\u770b\u6570\u636e\u5e93\u7f16\u7801\u683c\u5f0f \uff08\u8fd9\u4e24\u4e2a\u90fd\u53ef\u4ee5\u67e5\u770b\u6570\u636e\u5e93\u7f16\u7801\u683c\u5f0f\uff09 show variables like \u2018collation%\u2019; character_set_database \u548c character_set_server \u662f latin1 \u7684\u5b57\u7b26\u96c6\uff0c\u4e5f\u5c31\u662f\u8bf4 mysql \u540e\u7eed\u521b\u5efa\u7684\u8868\u90fd\u662f latin1 \u5b57\u7b26\u96c6\u7684\uff0c\u4e0d\u662f utf8 \uff0c\u4f1a\u9020\u6210\u4e00\u4e9b\u9ebb\u70e6\u3002 \u4ece\u4ee5\u4e0a\u4fe1\u606f\u53ef\u77e5\u6570\u636e\u5e93\u7684\u7f16\u7801\u4e3a latin1 \uff0c\u9700\u8981\u4fee\u6539\u4e3a gbk \u6216\u8005\u662f utf8 \uff1b character_set_client \uff1a\u4e3a\u5ba2\u6237\u7aef\u7f16\u7801\u65b9\u5f0f\uff1b character_set_connection \uff1a\u4e3a\u5efa\u7acb\u8fde\u63a5\u4f7f\u7528\u7684\u7f16\u7801\uff1b character_set_database \uff1a\u6570\u636e\u5e93\u7684\u7f16\u7801\uff1b character_set_results \uff1a\u7ed3\u679c\u96c6\u7684\u7f16\u7801\uff1b character_set_server \uff1a\u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u7f16\u7801\uff1b \u53ea\u8981\u4fdd\u8bc1\u4ee5\u4e0a\u4e94\u4e2a\u91c7\u7528\u7684\u7f16\u7801\u65b9\u5f0f\u4e00\u6837\uff0c\u5c31\u4e0d\u4f1a\u51fa\u73b0\u4e71\u7801\u95ee\u9898\u3002 \u60f3\u8981\u4fee\u6539\u7f16\u7801, \u5c31\u9700\u8981\u4fee\u6539 mysql \u7684\u914d\u7f6e\u6587\u4ef6 my.cnf \u3002 \u91cd\u8981\u95ee\u9898\uff1a\u5728\u4fee\u6539 my.cnf \u4e4b\u524d\u4e00\u5b9a\u8981\u5173\u95ed mysql \u8fdb\u7a0b\uff0c\u5173\u95ed mysql \uff0c\u4e0d\u7136\u4f1a\u9047\u5230 mysql \u7684 sock \u4e0d\u80fd\u8fde\u63a5\u7684\u95ee\u9898! \u627e\u5230\u4e0b\u9762\u8def\u5f84 /usr/local/mysql/support-files \u5728\u6587\u4ef6\u5939\u91cc\u9762\u627e\u5230 my-default.cnf \u6216\u8005 my-default \u7684\u6587\u4ef6\u3002 \u5c06\u5176\u590d\u5236\u5230\u684c\u9762\u4e0a\uff0c\u6539\u540d\u4e3a my.cnf \uff0c\u5982\u679c\u6ca1\u6709\uff0c\u76f4\u63a5\u684c\u9762\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u6587\u4ef6\u6539\u4e3a my.cnf [mysqld] default-storage-engine=INNODB character-set-server=utf8 port = 3306 [client] default-character-set=utf8 \u4fdd\u5b58\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230 /etc \u8def\u5f84, \u5c06 my.cnf \u590d\u5236\u8d34\u8d34\u5230 /etc \u8fd9\u4e2a\u76ee\u5f55\u4e0b\u3002\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5feb\u6377\u952e command + shift + G \u524d\u9762\u6587\u4ef6: \u91cd\u542f\u7535\u8111\u67e5\u770bmysql\u7f16\u7801\u683c\u5f0f command + shift + G\uff1a\u79fb\u52a8\u6587\u4ef6","title":"\u5b89\u88c5"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#_1","text":"","title":"\u6982\u8ff0"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#_2","text":"\u6301\u4e45\u5316(persistence): \u628a\u6570\u636e\u4fdd\u5b58\u5230\u53ef\u6389\u7535\u5f0f\u5b58\u50a8\u8bbe\u5907\u4e2d\u4ee5\u4f9b\u4e4b\u540e\u4f7f\u7528 \u6389\u7535\u8bbe\u5907\uff1a\u6570\u636e\u5e93\u3001\u6587\u4ef6\u3001\u5176\u4ed6","title":"\u6301\u4e45\u5316"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#_3","text":"","title":"\u6570\u636e\u5e93\u6982\u5ff5"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#db","text":"\u5b58\u50a8\u6570\u636e","title":"\u6570\u636e\u5e93 db"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#dbmsdatabase-management-system","text":"\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\u548c\u63a7\u5236","title":"DBMS:\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf(Database Management System)"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#sqlstructured-query-language","text":"\u4e13\u95e8\u7528\u6765\u4e0e\u6570\u636e\u5e93\u901a\u4fe1\u7684\u8bed\u8a00","title":"SQL:\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00(Structured Query Language)"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#_4","text":"","title":"\u6570\u636e\u5e93\u5206\u7c7b"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#_5","text":"","title":"\u5173\u7cfb\u578b\u6570\u636e\u5e93"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#_6","text":"\u8fd9\u79cd\u7c7b\u578b\u7684\u6570\u636e\u5e93\u662f \u6700\u53e4\u8001 \u7684\u6570\u636e\u5e93\u7c7b\u578b\uff0c\u5173\u7cfb\u578b\u6570\u636e\u5e93\u6a21\u578b\u662f\u628a\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\u5f52\u7ed3\u4e3a\u7b80\u5355\u7684 \u4e8c\u5143\u5173\u7cfb (\u5373\u4e8c\u7ef4\u8868\u683c\u5f62\u5f0f)\u3002","title":"\u6982\u8ff0"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#_7","text":"\u590d\u6742\u67e5\u8be2 \u53ef\u4ee5\u7528SQL\u8bed\u53e5\u65b9\u4fbf\u7684\u5728\u4e00\u4e2a\u8868\u4ee5\u53ca\u591a\u4e2a\u8868\u4e4b\u95f4\u505a\u975e\u5e38\u590d\u6742\u7684\u6570\u636e\u67e5\u8be2\u3002 \u4e8b\u52a1\u652f\u6301 \u4f7f\u5f97\u5bf9\u4e8e\u5b89\u5168\u6027\u80fd\u5f88\u9ad8\u7684\u6570\u636e\u8bbf\u95ee\u8981\u6c42\u5f97\u4ee5\u5b9e\u73b0\u3002","title":"\u4f18\u7f3a\u70b9"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#_8","text":"\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93 \uff0c\u53ef\u770b\u6210\u4f20\u7edf\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u529f\u80fd \u9609\u5272\u7248\u672c \uff0c\u57fa\u4e8e\u952e\u503c\u5bf9\u5b58\u50a8\u6570\u636e\uff0c\u4e0d\u9700\u8981\u7ecf\u8fc7SQL\u5c42 \u7684\u89e3\u6790\uff0c \u6027\u80fd\u975e\u5e38\u9ad8 \u3002\u540c\u65f6\uff0c\u901a\u8fc7\u51cf\u5c11\u4e0d\u5e38\u7528\u7684\u529f\u80fd\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u6027\u80fd\u3002 \u952e\u503c\u6570\u636e\u5e93 \u6587\u6863\u6570\u636e\u5e93 \u641c\u7d22\u5f15\u64ce\u6570\u636e\u5e93 \u5217\u5f0f\u6570\u636e\u5e93","title":"\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#_9","text":"","title":"\u5b89\u88c5"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#mac","text":"","title":"mac"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#_10","text":"\u5b98\u7f51\uff1ahttps://dev.mysql.com/downloads/mysql/ \u4e00\u6b65\u4e00\u6b65\u5b89\u88c5\u5373\u53ef \u8fd9\u91cc\u9009\u62e95.x\u52a0\u5bc6 \u8bbe\u7f6eroot\u5bc6\u7801","title":"\u5b89\u88c5"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#_11","text":"\u5728\u7cfb\u7edf\u504f\u597d\u8bbe\u7f6e\u91cc\u542f\u52a8\u6216\u8005\u5173\u95ed\u670d\u52a1","title":"\u542f\u52a8"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#_12","text":"vim .zshrc # mysql PATH=$PATH:/usr/local/mysql/bin export PATH mysql -h \u4e3b\u673a\u540d -P \u7aef\u53e3\u53f7 -u \u7528\u6237\u540d -p\u5bc6\u7801 mysql -h localhost -P 3306 -u root -prootroot mysql -u root -prootroot exit","title":"\u914d\u7f6e"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#_13","text":"\u201cinformation_schema\u201d\u662f MySQL \u7cfb\u7edf\u81ea\u5e26\u7684\u6570\u636e\u5e93\uff0c\u4e3b\u8981\u4fdd\u5b58 MySQL \u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u7cfb\u7edf\u4fe1\u606f\uff0c\u6bd4\u5982\u6570\u636e\u5e93\u7684\u540d\u79f0\u3001\u6570\u636e\u8868\u7684\u540d\u79f0\u3001\u5b57\u6bb5\u540d\u79f0\u3001\u5b58\u53d6\u6743\u9650\u3001\u6570\u636e\u6587\u4ef6 \u6240\u5728\u7684\u6587\u4ef6\u5939\u548c\u7cfb\u7edf\u4f7f\u7528\u7684\u6587\u4ef6\u5939\uff0c\u7b49\u7b49 \u201cperformance_schema\u201d\u662f MySQL \u7cfb\u7edf\u81ea\u5e26\u7684\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u7528\u6765\u76d1\u63a7 MySQL \u7684\u5404\u7c7b\u6027\u80fd\u6307\u6807\u3002 \u201csys\u201d\u6570\u636e\u5e93\u662f MySQL \u7cfb\u7edf\u81ea\u5e26\u7684\u6570\u636e\u5e93\uff0c\u4e3b\u8981\u4f5c\u7528\u662f\u4ee5\u4e00\u79cd\u66f4\u5bb9\u6613\u88ab\u7406\u89e3\u7684\u65b9\u5f0f\u5c55\u793a MySQL \u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u5404\u7c7b\u6027\u80fd\u6307\u6807\uff0c\u5e2e\u52a9\u7cfb\u7edf\u7ba1\u7406\u5458\u548c\u5f00\u53d1\u4eba\u5458\u76d1\u63a7 MySQL \u7684\u6280\u672f\u6027\u80fd\u3002 \u201cmysql\u201d\u6570\u636e\u5e93\u4fdd\u5b58\u4e86 MySQL \u6570\u636e\u5e93\u670d\u52a1\u5668\u8fd0\u884c\u65f6\u9700\u8981\u7684\u7cfb\u7edf\u4fe1\u606f\uff0c\u6bd4\u5982\u6570\u636e\u6587\u4ef6\u5939\u3001\u5f53\u524d\u4f7f\u7528\u7684\u5b57\u7b26\u96c6\u3001\u7ea6\u675f\u68c0\u67e5\u4fe1\u606f\uff0c\u7b49\u7b49","title":"\u9ed8\u8ba4\u7684\u5e93\u4ecb\u7ecd"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/0-init/#_14","text":"show variables like 'character_%'; show variables like 'collation_%'; mysql8.0\u4ee5\u4e0a\u9ed8\u8ba4\u4f1a\u91c7\u7528utf8 \u5982\u679c\u4e0d\u662f8.0 \u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u6587\u7ae0\u8fdb\u884c\u4fee\u6539 Mac MySql - \u67e5\u770b\u4ee5\u53ca\u4fee\u6539\u7f16\u7801\u683c\u5f0f - \u6398\u91d1 \u767b\u5f55 - MySQL\u5185\u90e8 mysql -u root -p MySQL\u5185\u90e8 - \u67e5\u770b\u6570\u636e\u5e93\u7f16\u7801\u683c\u5f0f \uff08\u63a8\u8350\u7528\u8fd9\u4e2a\uff0c\u6211\u7528\u7684\u8fd9\u4e2a\uff01\uff09 show variables like 'character%'; MySQL\u5185\u90e8 - \u67e5\u770b\u6570\u636e\u5e93\u7f16\u7801\u683c\u5f0f \uff08\u8fd9\u4e24\u4e2a\u90fd\u53ef\u4ee5\u67e5\u770b\u6570\u636e\u5e93\u7f16\u7801\u683c\u5f0f\uff09 show variables like \u2018collation%\u2019; character_set_database \u548c character_set_server \u662f latin1 \u7684\u5b57\u7b26\u96c6\uff0c\u4e5f\u5c31\u662f\u8bf4 mysql \u540e\u7eed\u521b\u5efa\u7684\u8868\u90fd\u662f latin1 \u5b57\u7b26\u96c6\u7684\uff0c\u4e0d\u662f utf8 \uff0c\u4f1a\u9020\u6210\u4e00\u4e9b\u9ebb\u70e6\u3002 \u4ece\u4ee5\u4e0a\u4fe1\u606f\u53ef\u77e5\u6570\u636e\u5e93\u7684\u7f16\u7801\u4e3a latin1 \uff0c\u9700\u8981\u4fee\u6539\u4e3a gbk \u6216\u8005\u662f utf8 \uff1b character_set_client \uff1a\u4e3a\u5ba2\u6237\u7aef\u7f16\u7801\u65b9\u5f0f\uff1b character_set_connection \uff1a\u4e3a\u5efa\u7acb\u8fde\u63a5\u4f7f\u7528\u7684\u7f16\u7801\uff1b character_set_database \uff1a\u6570\u636e\u5e93\u7684\u7f16\u7801\uff1b character_set_results \uff1a\u7ed3\u679c\u96c6\u7684\u7f16\u7801\uff1b character_set_server \uff1a\u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u7f16\u7801\uff1b \u53ea\u8981\u4fdd\u8bc1\u4ee5\u4e0a\u4e94\u4e2a\u91c7\u7528\u7684\u7f16\u7801\u65b9\u5f0f\u4e00\u6837\uff0c\u5c31\u4e0d\u4f1a\u51fa\u73b0\u4e71\u7801\u95ee\u9898\u3002 \u60f3\u8981\u4fee\u6539\u7f16\u7801, \u5c31\u9700\u8981\u4fee\u6539 mysql \u7684\u914d\u7f6e\u6587\u4ef6 my.cnf \u3002 \u91cd\u8981\u95ee\u9898\uff1a\u5728\u4fee\u6539 my.cnf \u4e4b\u524d\u4e00\u5b9a\u8981\u5173\u95ed mysql \u8fdb\u7a0b\uff0c\u5173\u95ed mysql \uff0c\u4e0d\u7136\u4f1a\u9047\u5230 mysql \u7684 sock \u4e0d\u80fd\u8fde\u63a5\u7684\u95ee\u9898! \u627e\u5230\u4e0b\u9762\u8def\u5f84 /usr/local/mysql/support-files \u5728\u6587\u4ef6\u5939\u91cc\u9762\u627e\u5230 my-default.cnf \u6216\u8005 my-default \u7684\u6587\u4ef6\u3002 \u5c06\u5176\u590d\u5236\u5230\u684c\u9762\u4e0a\uff0c\u6539\u540d\u4e3a my.cnf \uff0c\u5982\u679c\u6ca1\u6709\uff0c\u76f4\u63a5\u684c\u9762\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u6587\u4ef6\u6539\u4e3a my.cnf [mysqld] default-storage-engine=INNODB character-set-server=utf8 port = 3306 [client] default-character-set=utf8 \u4fdd\u5b58\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230 /etc \u8def\u5f84, \u5c06 my.cnf \u590d\u5236\u8d34\u8d34\u5230 /etc \u8fd9\u4e2a\u76ee\u5f55\u4e0b\u3002\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5feb\u6377\u952e command + shift + G \u524d\u9762\u6587\u4ef6: \u91cd\u542f\u7535\u8111\u67e5\u770bmysql\u7f16\u7801\u683c\u5f0f command + shift + G\uff1a\u79fb\u52a8\u6587\u4ef6","title":"\u7f16\u7801"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/","text":"sql\u4ecb\u7ecd sql\u5206\u7c7b SQL\u8bed\u8a00\u5728\u529f\u80fd\u4e0a\u4e3b\u8981\u5206\u4e3a\u5982\u4e0b3\u5927\u7c7b: DDL ( Data Definition Languages \u3001\u6570\u636e\u5b9a\u4e49\u8bed\u8a00) \uff0c\u8fd9\u4e9b\u8bed\u53e5\u5b9a\u4e49\u4e86\u4e0d\u540c\u7684\u6570\u636e\u5e93\u3001\u8868\u3001\u89c6\u56fe\u3001\u7d22 \u5f15\u7b49\u6570\u636e\u5e93\u5bf9\u8c61\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u3001\u5220\u9664\u3001\u4fee\u6539\u6570\u636e\u5e93\u548c\u6570\u636e\u8868\u7684\u7ed3\u6784\u3002 \u4e3b\u8981\u7684\u8bed\u53e5\u5173\u952e\u5b57\u5305\u62ec CREATE \u3001 DROP \u3001 ALTER \u7b49\u3002 DML ( Data Manipulation Language \u3001\u6570\u636e\u64cd\u4f5c\u8bed\u8a00) \uff0c\u7528\u4e8e\u6dfb\u52a0\u3001\u5220\u9664\u3001\u66f4\u65b0\u548c\u67e5\u8be2\u6570\u636e\u5e93\u8bb0 \u5f55\uff0c\u5e76\u68c0\u67e5\u6570\u636e\u5b8c\u6574\u6027\u3002 \u4e3b\u8981\u7684\u8bed\u53e5\u5173\u952e\u5b57\u5305\u62ec INSERT \u3001 DELETE \u3001 UPDATE \u3001 SELECT \u7b49\u3002 SELECT \u662f SQL \u8bed\u8a00\u7684\u57fa\u7840\uff0c\u6700\u4e3a\u91cd\u8981\u3002 DCL ( Data Control Language \u3001\u6570\u636e\u63a7\u5236\u8bed\u8a00) \uff0c\u7528\u4e8e\u5b9a\u4e49\u6570\u636e\u5e93\u3001\u8868\u3001\u5b57\u6bb5\u3001\u7528\u6237\u7684\u8bbf\u95ee\u6743\u9650\u548c \u5b89\u5168\u7ea7\u522b\u3002 \u4e3b\u8981\u7684\u8bed\u53e5\u5173\u952e\u5b57\u5305\u62ec GRANT \u3001 REVOKE \u3001 COMMIT \u3001 ROLLBACK \u3001 SAVEPOINT \u7b49\u3002 \u56e0\u4e3a\u67e5\u8be2\u8bed\u53e5\u4f7f\u7528\u7684\u975e\u5e38\u7684\u9891\u7e41\uff0c\u6240\u4ee5\u5f88\u591a\u4eba\u628a\u67e5\u8be2\u8bed\u53e5\u5355\u62ce\u51fa\u6765\u4e00\u7c7b:DQL(\u6570\u636e\u67e5\u8be2\u8bed\u8a00)\u3002 \u8fd8\u6709\u5355\u72ec\u5c06 COMMIT \u3001 ROLLBACK \u53d6\u51fa\u6765\u79f0\u4e3aTCL (Transaction Control Language\uff0c\u4e8b\u52a1\u63a7\u5236\u8bed\u8a00)\u3002 \u89c4\u8303 \u5fc5\u987b\u4f7f\u7528\u82f1\u6587\u72b6\u6001\u4e0b\u7684\u534a\u89d2\u8f93\u5165\u65b9\u5f0f \u5b57\u7b26\u4e32\u578b\u548c\u65e5\u671f\u65f6\u95f4\u7c7b\u578b\u7684\u6570\u636e\u53ef\u4ee5\u4f7f\u7528\u5355\u5f15\u53f7(' ')\u8868\u793a \u5217\u7684\u522b\u540d\uff0c\u5c3d\u91cf\u4f7f\u7528\u53cc\u5f15\u53f7(\" \")\uff0c\u800c\u4e14\u4e0d\u5efa\u8bae\u7701\u7565as \u6570\u636e\u5e93\u540d\u3001\u8868\u540d\u3001\u8868\u522b\u540d\u3001\u5b57\u6bb5\u540d\u3001\u5b57\u6bb5\u522b\u540d\u7b49\u90fd\u5c0f\u5199 SQL \u5173\u952e\u5b57\u3001\u51fd\u6570\u540d\u3001\u7ed1\u5b9a\u53d8\u91cf\u7b49\u90fd\u5927\u5199 \u5355\u884c\u6ce8\u91ca: #\u6ce8\u91ca\u6587\u5b57(MySQL\u7279\u6709\u7684\u65b9\u5f0f) \u5355\u884c\u6ce8\u91ca:-- \u6ce8\u91ca\u6587\u5b57(--\u540e\u9762\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u7a7a\u683c\u3002) \u591a\u884c\u6ce8\u91ca:/ \u6ce8\u91ca\u6587\u5b57 / \u57fa\u7840\u64cd\u4f5c \u5bfc\u5165 source xxx.sql \u57fa\u7840\u67e5\u8be2 SELECT * FROM `user`; SELECT `name` FROM `user`; # \u522b\u540d SELECT id, `name` as \"\u59d3\u540d\" FROM user; # \u53bb\u91cd select DISTINCT id from `user`; \u53bb\u91cd DISTINCT \u5176\u5b9e\u662f\u5bf9\u540e\u9762\u6240\u6709\u5217\u540d\u7684\u7ec4\u5408\u8fdb\u884c\u53bb\u91cd\uff0c\u4f60\u80fd\u770b\u5230\u6700\u540e\u7684\u7ed3\u679c\u662f 74 \u6761\uff0c\u56e0\u4e3a\u8fd9 74 \u4e2aa\u4e0d\u540c\uff0c\u90fd\u6709 b \u8fd9\u4e2a\u5c5e\u6027\u503c\u3002\u5982\u679c\u4f60\u60f3\u8981\u770b\u90fd\u6709\u54ea\u4e9b\u4e0d\u540c\u7684a\uff0c\u53ea\u9700\u8981\u5199 a\u5373\u53ef\uff0c\u540e\u9762\u4e0d\u9700\u8981\u518d\u52a0\u5176\u4ed6\u7684\u5217\u540d\u4e86\u3002 \u7a7a\u503c null \u5728 MySQL \u91cc\u9762\uff0c \u7a7a\u503c\u4e0d\u7b49\u4e8e\u7a7a\u5b57\u7b26\u4e32\u3002\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u662f 0\uff0c\u800c\u4e00\u4e2a\u7a7a\u503c\u7684\u957f\u5ea6\u662f\u7a7a\u3002\u800c\u4e14\uff0c\u5728 MySQL \u91cc\u9762\uff0c\u7a7a\u503c\u662f\u5360\u7528\u7a7a\u95f4\u7684\u3002 \u6240\u6709\u8fd0\u7b97\u7b26\u6216\u5217\u503c\u9047\u5230null\u503c\uff0c\u8fd0\u7b97\u7684\u7ed3\u679c\u90fd\u4e3anull \u53cd\u5f15\u53f7 \u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u8868\u4e2d\u7684\u5b57\u6bb5\u3001\u8868\u540d\u7b49\u6ca1\u6709\u548c\u4fdd\u7559\u5b57\u3001\u6570\u636e\u5e93\u7cfb\u7edf\u6216\u5e38\u7528\u65b9\u6cd5\u51b2\u7a81\u3002\u5982\u679c\u771f\u7684\u76f8\u540c\uff0c\u8bf7\u5728 SQL\u8bed\u53e5\u4e2d\u4f7f\u7528\u4e00\u5bf9``(\u7740\u91cd\u53f7)\u5f15\u8d77\u6765\u3002 \u5e38\u6570\u5217 SELECT id, `name`, 'matt' FROM `user` desc desc user; Field:\u8868\u793a\u5b57\u6bb5\u540d\u79f0\u3002 Type:\u8868\u793a\u5b57\u6bb5\u7c7b\u578b\uff0c\u8fd9\u91cc barcode\u3001goodsname \u662f\u6587\u672c\u578b\u7684\uff0cprice \u662f\u6574\u6570\u7c7b\u578b\u7684\u3002 Null:\u8868\u793a\u8be5\u5217\u662f\u5426\u53ef\u4ee5\u5b58\u50a8NULL\u503c\u3002 Key:\u8868\u793a\u8be5\u5217\u662f\u5426\u5df2\u7f16\u5236\u7d22\u5f15\u3002PRI\u8868\u793a\u8be5\u5217\u662f\u8868\u4e3b\u952e\u7684\u4e00\u90e8\u5206;UNI\u8868\u793a\u8be5\u5217\u662fUNIQUE\u7d22\u5f15\u7684\u4e00\u90e8\u5206;MUL\u8868\u793a\u5728\u5217\u4e2d\u67d0\u4e2a\u7ed9\u5b9a\u503c\u5141\u8bb8\u51fa\u73b0\u591a\u6b21\u3002 Default:\u8868\u793a\u8be5\u5217\u662f\u5426\u6709\u9ed8\u8ba4\u503c\uff0c\u5982\u679c\u6709\uff0c\u90a3\u4e48\u503c\u662f\u591a\u5c11\u3002 Extra:\u8868\u793a\u53ef\u4ee5\u83b7\u53d6\u7684\u4e0e\u7ed9\u5b9a\u5217\u6709\u5173\u7684\u9644\u52a0\u4fe1\u606f\uff0c\u4f8b\u5982AUTO_INCREMENT\u7b49\u3002 \u8fd0\u7b97\u7b26 \u7b97\u6570\u8fd0\u7b97\u7b26 + - * / % \u5728Java\u4e2d\uff0c+\u7684\u5de6\u53f3\u4e24\u8fb9\u5982\u679c\u6709\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u8868\u793a\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u3002\u4f46\u662f\u5728MySQL\u4e2d+\u53ea\u8868\u793a\u6570 \u503c\u76f8\u52a0\u3002\u5982\u679c\u9047\u5230\u975e\u6570\u503c\u7c7b\u578b\uff0c\u5148\u5c1d\u8bd5\u8f6c\u6210\u6570\u503c\uff0c\u5982\u679c\u8f6c\u5931\u8d25\uff0c\u5c31\u63090\u8ba1\u7b97\u3002(\u8865\u5145:MySQL \u4e2d\u5b57\u7b26\u4e32\u62fc\u63a5\u8981\u4f7f\u7528\u5b57\u7b26\u4e32\u51fd\u6570CONCAT()\u5b9e\u73b0) \u4e00\u4e2a\u6570\u9664\u4ee5\u6574\u6570\u540e\uff0c\u4e0d\u7ba1\u662f\u5426\u80fd\u9664\u5c3d\uff0c\u7ed3\u679c\u90fd\u4e3a\u4e00\u4e2a\u6d6e\u70b9\u6570; \u4e00\u4e2a\u6570\u9664\u4ee5\u53e6\u4e00\u4e2a\u6570\uff0c\u9664\u4e0d\u5c3d\u65f6\uff0c\u7ed3\u679c\u4e3a\u4e00\u4e2a\u6d6e\u70b9\u6570\uff0c\u5e76\u4fdd\u7559\u5230\u5c0f\u6570\u70b9\u540e4\u4f4d; \u5728\u6570\u5b66\u8fd0\u7b97\u4e2d\uff0c0\u4e0d\u80fd\u7528\u4f5c\u9664\u6570\uff0c\u5728MySQL\u4e2d\uff0c\u4e00\u4e2a\u6570\u9664\u4ee50\u4e3aNULL\u3002 \u6bd4\u8f83\u8fd0\u7b97\u7b26 > >= < <= != = # \u4e0d\u7b49\u4e8e <> # \u5b89\u5168\u7b49\u4e8e <=> \u7b49\u53f7 \u5982\u679c\u7b49\u53f7\u4e24\u8fb9\u7684\u503c\u3001\u5b57\u7b26\u4e32\u6216\u8868\u8fbe\u5f0f\u90fd\u4e3a\u5b57\u7b26\u4e32\uff0c\u5219MySQL\u4f1a\u6309\u7167\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83\uff0c\u5176\u6bd4\u8f83\u7684 \u662f\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684ANSI\u7f16\u7801\u662f\u5426\u76f8\u7b49\u3002 \u5982\u679c\u7b49\u53f7\u4e24\u8fb9\u7684\u503c\u90fd\u662f\u6574\u6570\uff0c\u5219MySQL\u4f1a\u6309\u7167\u6574\u6570\u6765\u6bd4\u8f83\u4e24\u4e2a\u503c\u7684\u5927\u5c0f\u3002 \u5982\u679c\u7b49\u53f7\u4e24\u8fb9\u7684\u503c\u4e00\u4e2a\u662f\u6574\u6570\uff0c\u53e6\u4e00\u4e2a\u662f\u5b57\u7b26\u4e32\uff0c\u5219MySQL\u4f1a\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u6570\u5b57\u8fdb\u884c\u6bd4\u8f83\u3002 \u5982\u679c\u7b49\u53f7\u4e24\u8fb9\u7684\u503c\u3001\u5b57\u7b26\u4e32\u6216\u8868\u8fbe\u5f0f\u4e2d\u6709\u4e00\u4e2a\u4e3aNULL\uff0c\u5219\u6bd4\u8f83\u7ed3\u679c\u4e3aNULL\u3002 null SELECT 1 is NULL, 1 is NOT NULL least greatest \u6700\u5c0f\u503c \u6700\u5927\u503c SELECT LEAST(1,2), GREATEST(1, 2) \u53c2\u6570\u662f\u6574\u6570\u6216\u8005\u6d6e\u70b9\u6570\u65f6\uff0cLEAST\u5c06\u8fd4\u56de\u5176\u4e2d\u6700\u5c0f\u7684\u503c;\u5f53\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\u65f6\uff0c\u8fd4\u56de\u5b57 \u6bcd\u8868\u4e2d\u987a\u5e8f\u6700\u9760\u524d\u7684\u5b57\u7b26;\u5f53\u6bd4\u8f83\u503c\u5217\u8868\u4e2d\u6709NULL\u65f6\uff0c\u4e0d\u80fd\u5224\u65ad\u5927\u5c0f\uff0c\u8fd4\u56de\u503c\u4e3aNULL\u3002 between and # 1 <= id <= 3 SELECT * FROM `user` WHERE id BETWEEN 1 AND 3 in not in in:\u5728 not in:\u4e0d\u5728 SELECT * FROM `user` WHERE id in(2, 4) like \u6a21\u7cca\u5339\u914d SELECT * FROM `user` WHERE `name` like '%m%' \u201c%\u201d:\u5339\u914d0\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u3002 \u201c_\u201d:\u53ea\u80fd\u5339\u914d\u4e00\u4e2a\u5b57\u7b26\u3002 ESCAPE SELECT job_id FROM jobs WHERE job_id LIKE \u2018IT\\_%\u2018; \u5982\u679c\u4f7f\u7528\\\u8868\u793a\u8f6c\u4e49\uff0c\u8981\u7701\u7565ESCAPE\u3002\u5982\u679c\u4e0d\u662f\\\uff0c\u5219\u8981\u52a0\u4e0aESCAPE\u3002 SELECT job_id FROM jobs WHERE job_id LIKE \u2018IT$_%\u2018 escape \u2018$\u2018; REGEXP\u8fd0\u7b97\u7b26 \uff081\uff09\u2018^\u2019\u5339\u914d\u4ee5\u8be5\u5b57\u7b26\u540e\u9762\u7684\u5b57\u7b26\u5f00\u5934\u7684\u5b57\u7b26\u4e32\u3002 \uff082\uff09\u2018$\u2019\u5339\u914d\u4ee5\u8be5\u5b57\u7b26\u524d\u9762\u7684\u5b57\u7b26\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u3002 \uff083\uff09\u2018.\u2019\u5339\u914d\u4efb\u4f55\u4e00\u4e2a\u5355\u5b57\u7b26\u3002 \uff084\uff09\u201c[...]\u201d\u5339\u914d\u5728\u65b9\u62ec\u53f7\u5185\u7684\u4efb\u4f55\u5b57\u7b26\u3002\u4f8b\u5982\uff0c\u201c[abc]\u201d\u5339\u914d\u201ca\u201d\u6216\u201cb\u201d\u6216\u201cc\u201d\u3002\u4e3a\u4e86\u547d\u540d\u5b57\u7b26\u7684\u8303\u56f4\uff0c\u4f7f\u7528\u4e00 \u4e2a\u2018-\u2019\u3002\u201c[a-z]\u201d\u5339\u914d\u4efb\u4f55\u5b57\u6bcd\uff0c\u800c\u201c[0-9]\u201d\u5339\u914d\u4efb\u4f55\u6570\u5b57\u3002 \uff085\uff09\u2018 \u2019\u5339\u914d\u96f6\u4e2a\u6216\u591a\u4e2a\u5728\u5b83\u524d\u9762\u7684\u5b57\u7b26\u3002\u4f8b\u5982\uff0c\u201cx \u201d\u5339\u914d\u4efb\u4f55\u6570\u91cf\u7684\u2018x\u2019\u5b57\u7b26\uff0c\u201c[0-9] \u201d\u5339\u914d\u4efb\u4f55\u6570\u91cf\u7684\u6570\u5b57\uff0c \u800c\u201c \u201d\u5339\u914d\u4efb\u4f55\u6570\u91cf\u7684\u4efb\u4f55\u5b57\u7b26\u3002 SELECT 'shkstart' REGEXP '^s', 'shkstart' REGEXP 't$', 'shkstart' REGEXP 'hk'; SELECT * FROM `user` WHERE `name` REGEXP 'Lo' \u903b\u8f91\u8fd0\u7b97\u7b26 and \u4e0e or \u6216 not \u975e xor \u5f02\u6216 \u4f4d\u8fd0\u7b97 \u8fd0\u7b97\u7b26 \u4f5c\u7528 & \u6309\u4f4d\u4e0e | \u6309\u4f4d\u6216 ^ \u6309\u4f4d\u5f02\u6216 ~ \u6309\u4f4d\u53d6\u53cd >> \u53f3\u79fb << \u5de6\u79fb \u6392\u5e8f \u5206\u9875 \u6392\u5e8f select * from `user` order by id desc, name desc \u5206\u9875 LIMIT [\u4f4d\u7f6e\u504f\u79fb\u91cf,] \u884c\u6570 \u4ece0\u5f00\u59cb 10\uff1a10\u6761\u8bb0\u5f55 0 9 select * from `user` order by id desc, name desc LIMIT 0, 10 \u591a\u8868\u67e5\u8be2 \u57fa\u7840 \u7b49\u503c\u8fde\u63a5 SELECT a.a1, b.b1, b.a1 FROM ABC a, BCD b WHERE a.a1 = b.a1 \u591a\u4e2a\u8868\u4e2d\u6709\u76f8\u540c\u5217\u65f6\uff0c\u5fc5\u987b\u5728\u5217\u540d\u4e4b\u524d\u52a0\u4e0a\u8868\u540d\u524d\u7f00\u3002 \u975e\u7b49\u503c\u8fde\u63a5 SELECT a.a1, b.b1, b.a1 FROM ABC a, BCD b WHERE a.a1 > b.a1 \u81ea\u8fde\u63a5 \u975e\u81ea\u8fde\u63a5 \u4e00\u5f20\u8868 \u4fe9\u5f20\u53ca\u4ee5\u4e0a\u7684\u8868\u8fdb\u884c\u8fde\u63a5 \u5185\u8fde\u63a5 \u5916\u8fde\u63a5 1.\u5185\u8fde\u63a5\u5c31\u662f\u53d6\u4ea4\u96c6\u7684\u90e8\u5206\u3002 2.\u5de6\u8fde\u63a5\u5c31\u662f\u5de6\u8868\u5168\u90e8\u7684\u6570\u636e\u52a0\u4e0a\u4ea4\u96c6\u7684\u6570\u636e\u3002 3.\u53f3\u8fde\u63a5\u5c31\u662f\u53f3\u8868\u5168\u90e8\u7684\u6570\u636e\u52a0\u4e0a\u4ea4\u96c6\u7684\u6570\u636e\u3002 4.\u4ea4\u53c9\u8fde\u63a5\u5c31\u662f\u5168\u90fd\u8981 \u5de6\u5916\u8fde\u63a5\uff1a\u5de6\u8868\u662f\u4e3b\u8868 c99 SELECT a.* FROM A a INNER JOIN B b ON a.id = b.id INNER JOIN C c ON c.id = b.id SELECT a.* FROM A a LEFT OUTER JOIN B b ON a.id = b.id SELECT a.* FROM A a RIGHT OUTER JOIN B b ON a.id = b.id \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cLEFT JOIN \u548c RIGHT JOIN \u53ea\u5b58\u5728\u4e8e SQL99 \u53ca\u4ee5\u540e\u7684\u6807\u51c6\u4e2d\uff0c\u5728 SQL92 \u4e2d\u4e0d\u5b58\u5728\uff0c \u53ea\u80fd\u7528 (+) \u8868\u793a\u3002 \u6ee1\u5916\u8fde\u63a5\u7684\u7ed3\u679c = \u5de6\u53f3\u8868\u5339\u914d\u7684\u6570\u636e + \u5de6\u8868\u6ca1\u6709\u5339\u914d\u5230\u7684\u6570\u636e + \u53f3\u8868\u6ca1\u6709\u5339\u914d\u5230\u7684\u6570\u636e\u3002 SQL99\u662f\u652f\u6301\u6ee1\u5916\u8fde\u63a5\u7684\u3002\u4f7f\u7528FULL JOIN \u6216 FULL OUTER JOIN\u6765\u5b9e\u73b0\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cMySQL\u4e0d\u652f\u6301FULL JOIN\uff0c\u4f46\u662f\u53ef\u4ee5\u7528 LEFT JOIN UNION RIGHT join\u4ee3\u66ff\u3002 union union:\u53bb\u91cd (a, b, ab) union all:\u4e0d\u53bb\u91cd (a, b, ab, ab) select * from a union select * from b \u5de6\u4e2d\u56fe #\u5b9e\u73b0A - A\u2229B select \u5b57\u6bb5\u5217\u8868 from A\u8868 left join B\u8868 on \u5173\u8054\u6761\u4ef6 where \u4ece\u8868\u5173\u8054\u5b57\u6bb5 is null and \u7b49\u5176\u4ed6\u5b50\u53e5; \u53f3\u4e2d\u56fe #\u5b9e\u73b0B - A\u2229B select \u5b57\u6bb5\u5217\u8868 from A\u8868 right join B\u8868 on \u5173\u8054\u6761\u4ef6 where \u4ece\u8868\u5173\u8054\u5b57\u6bb5 is null and \u7b49\u5176\u4ed6\u5b50\u53e5; \u5de6\u4e0b\u56fe \u5b9e\u73b0\u67e5\u8be2\u7ed3\u679c\u662fA\u222aB #\u7528\u5de6\u5916\u7684A\uff0cunion \u53f3\u5916\u7684B select \u5b57\u6bb5\u5217\u8868 from A\u8868 left join B\u8868 on \u5173\u8054\u6761\u4ef6 where \u7b49\u5176\u4ed6\u5b50\u53e5 union select \u5b57\u6bb5\u5217\u8868 from A\u8868 right join B\u8868 on \u5173\u8054\u6761\u4ef6 where \u7b49\u5176\u4ed6\u5b50\u53e5; #\u5b9e\u73b0A\u222aB - A\u2229B \u6216 (A - A\u2229B) \u222a \uff08B - A\u2229B\uff09 #\u4f7f\u7528\u5de6\u5916\u7684 (A - A\u2229B) union \u53f3\u5916\u7684\uff08B - A\u2229B\uff09 select \u5b57\u6bb5\u5217\u8868 from A\u8868 left join B\u8868 on \u5173\u8054\u6761\u4ef6 where \u4ece\u8868\u5173\u8054\u5b57\u6bb5 is null and \u7b49\u5176\u4ed6\u5b50\u53e5 union select \u5b57\u6bb5\u5217\u8868 from A\u8868 right join B\u8868 on \u5173\u8054\u6761\u4ef6 where \u4ece\u8868\u5173\u8054\u5b57\u6bb5 is null and \u7b49\u5176\u4ed6\u5b50\u53e5 \u805a\u5408\u51fd\u6570 \u51fd\u6570\u4ecb\u7ecd AVG SUM \u53ef\u4ee5\u5bf9\u6570\u503c\u578b\u6570\u636e\u4f7f\u7528AVG \u548c SUM \u51fd\u6570 MIN MAX \u53ef\u4ee5\u5bf9\u4efb\u610f\u6570\u636e\u7c7b\u578b\u7684\u6570\u636e\u4f7f\u7528 MIN \u548c MAX \u51fd\u6570\u3002 COUNT COUNT(*)\u8fd4\u56de\u8868\u4e2d\u8bb0\u5f55\u603b\u6570\uff0c\u9002\u7528\u4e8e\u4efb\u610f\u6570\u636e\u7c7b\u578b\u3002 COUNT(expr) \u8fd4\u56deexpr\u4e0d\u4e3a\u7a7a\u7684\u8bb0\u5f55\u603b\u6570\u3002 \u95ee\u9898\uff1a\u7528count(*)\uff0ccount(1)\uff0ccount(\u5217\u540d)\u8c01\u597d\u5462? \u5bf9\u4e8eMyISAM\u5f15\u64ce\u7684\u8868\u662f\u6ca1\u6709\u533a\u522b\u7684\u3002\u8fd9\u79cd\u5f15\u64ce\u5185\u90e8\u6709\u4e00\u8ba1\u6570\u5668\u5728\u7ef4\u62a4\u7740\u884c\u6570\u3002 Innodb\u5f15\u64ce\u7684\u8868\u7528count(*),count(1)\u76f4\u63a5\u8bfb\u884c\u6570\uff0c\u590d\u6742\u5ea6\u662fO(n)\uff0c\u56e0\u4e3ainnodb\u771f\u7684\u8981\u53bb\u6570\u4e00\u904d\u3002\u4f46\u597d \u4e8e\u5177\u4f53\u7684count(\u5217\u540d)\u3002 \u95ee\u9898\uff1a\u80fd\u4e0d\u80fd\u4f7f\u7528count(\u5217\u540d)\u66ff\u6362count(*)? * \u4e0d\u8981\u4f7f\u7528 count(\u5217\u540d)\u6765\u66ff\u4ee3 count( ) \uff0c count( ) \u662f SQL92 \u5b9a\u4e49\u7684\u6807\u51c6\u7edf\u8ba1\u884c\u6570\u7684\u8bed\u6cd5\uff0c\u8ddf\u6570 \u636e\u5e93\u65e0\u5173\uff0c\u8ddf NULL \u548c\u975e NULL \u65e0\u5173\u3002 \u8bf4\u660e\uff1acount(*)\u4f1a\u7edf\u8ba1\u503c\u4e3a NULL \u7684\u884c\uff0c\u800c count(\u5217\u540d)\u4e0d\u4f1a\u7edf\u8ba1\u6b64\u5217\u4e3a NULL \u503c\u7684\u884c\u3002 GROUP BY SELECT id, `name`, SUM(id) FROM user where age > 18 GROUP BY id, name \u5728SELECT\u5217\u8868\u4e2d\u6240\u6709\u672a\u5305\u542b\u5728\u7ec4\u51fd\u6570\u4e2d\u7684\u5217\u90fd\u5e94\u8be5\u5305\u542b\u5728 GROUP BY\u5b50\u53e5\u4e2d SELECT id, `name`, SUM(id) FROM user where age > 18 GROUP BY id, name WITH ROLLUP WITH ROLLUP:\u6240\u6709\u8bb0\u5f55\u6c42\u805a\u5408, \u5f53\u4f7f\u7528ROLLUP\u65f6\uff0c\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528ORDER BY\u5b50\u53e5\u8fdb\u884c\u7ed3\u679c\u6392\u5e8f\uff0c\u5373ROLLUP\u548cORDER BY\u662f\u4e92\u76f8\u6392\u65a5 \u7684\u3002 HAVING having \u9700\u8981\u548cgroup by\u642d\u914d\u4f7f\u7528 SELECT `name` ,max(id) FROM `user` GROUP BY name HAVING max(ID) > 1 \u533a\u522b1\uff1aWHERE \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8868\u4e2d\u7684\u5b57\u6bb5\u4f5c\u4e3a\u7b5b\u9009\u6761\u4ef6\uff0c\u4f46\u4e0d\u80fd\u4f7f\u7528\u5206\u7ec4\u4e2d\u7684\u8ba1\u7b97\u51fd\u6570\u4f5c\u4e3a\u7b5b\u9009 \u533a\u522b2\uff1a\u5982\u679c\u9700\u8981\u901a\u8fc7\u8fde\u63a5\u4ece\u5173\u8054\u8868\u4e2d\u83b7\u53d6\u9700\u8981\u7684\u6570\u636e\uff0cWHERE \u662f\u5148\u7b5b\u9009\u540e\u8fde\u63a5\uff0c\u800c HAVING \u662f\u5148\u8fde\u63a5 \u540e\u7b5b\u9009\u3002 \u5b50\u67e5\u8be2 \u5355\u884c\u5b50\u67e5\u8be2 operator op meaning = \u7b49\u4e8e > \u5927\u4e8e >= \u5927\u4e8e\u7b49\u4e8e < \u5c0f\u4e8e <= \u5c0f\u4e8e\u7b49\u4e8e <> \u4e0d\u7b49\u4e8e \u6848\u4f8b \u8fd4\u56de\u516c\u53f8\u5de5\u8d44\u6700\u5c11\u7684\u5458\u5de5\u7684last_name,job_id\u548csalary SELECT last_name, job_ib, salary FROM employees WHERE salary = ( SELECT MIN(salary) FROM employees ) AND employee_id NOT IN (174, 141) \u67e5\u8be2\u4e0e141\u53f7\u6216174\u53f7\u5458\u5de5\u7684manager_id\u548cdepartment_id\u76f8\u540c\u7684\u5176\u4ed6\u5458\u5de5\u7684employee_id\uff0c manager_id\uff0cdepartment_id \u4e0d\u6210\u5bf9\u6bd4\u8f83 SELECT employee_id, manager_id, department_id FROM employees WHERE manager_id in ( SELECT manager_id FROM employees WHERE employee_id IN (174, 141) ) AND department_id IN ( SELECT department_id FROM employees WHERE employee_id IN (174, 141) ) AND employee_id NOT IN (174, 141) case \u5b50\u67e5\u8be2 \u663e\u5f0f\u5458\u5de5\u7684employee_id,last_name\u548clocation\u3002\u5176\u4e2d\uff0c\u82e5\u5458\u5de5department_id\u4e0elocation_id\u4e3a1800 \u7684department_id\u76f8\u540c\uff0c\u5219location\u4e3a\u2019Canada\u2019\uff0c\u5176\u4f59\u5219\u4e3a\u2019USA\u2019\u3002 SELECT employee_id, last_name, ( CASE department_id WHEN (SELECT department_id FROM departments WHERE location_id = 1800) THEN 'Canada' ELSE 'USA' END ) ) location FROM employees \u6ce8\u610f\u4e8b\u9879 \u5982\u679c\u5b50\u67e5\u8be2\u8fd4\u56de\u7a7a\u5219\u4e3b\u67e5\u8be2\u4e5f\u6ca1\u6570\u636e \u591a\u884c\u5b50\u67e5\u8be2\u4f7f\u7528\u5355\u884c\u6bd4\u8f83\u7b26 \u591a\u884c\u5b50\u67e5\u8be2 \u64cd\u4f5c\u7b26 op meaning \u542b\u4e49 IN \u4efb\u610f\u4e00\u4e2a ANY \u9700\u8981\u548c\u5355\u884c\u6bd4\u8f83\u64cd\u4f5c\u7b26\u4e00\u8d77\u4f7f\u7528\uff0c\u548c\u5b50\u67e5\u8be2\u8fd4\u56de\u7684\u67d0\u4e00\u4e2a\u503c\u6bd4\u8f83 ALL \u9700\u8981\u548c\u5355\u884c\u6bd4\u8f83\u64cd\u4f5c\u7b26\u4e00\u8d77\u4f7f\u7528\uff0c\u548c\u5b50\u67e5\u8be2\u8fd4\u56de\u7684\u6240\u6709\u503c\u6bd4\u8f83 SOME \u5b9e\u9645\u4e0a\u662fANY\u7684\u522b\u540d\uff0c\u4f5c\u7528\u76f8\u540c\uff0c\u4e00\u822c\u5e38\u4f7f\u7528ANY \u6848\u4f8b \u8fd4\u56de\u5176\u5b83job_id\u4e2d\u6bd4job_id\u4e3a'IT_PROG'\u90e8\u95e8 \u4efb\u4e00 \u5de5\u8d44\u4f4e\u7684\u5458\u5de5\u7684\u5458\u5de5\u53f7\u3001\u59d3\u540d\u3001job_id \u4ee5\u53casalary SELECT employee_id, last_name, job_id, salary FROM employee WHERE salary < ANY ( SELECT salary FROM employees WHERE job_id = 'IT_PROG' ) \u8fd4\u56de\u5176\u5b83job_id\u4e2d\u6bd4job_id\u4e3a'IT_PROG'\u90e8\u95e8 \u6240\u6709 \u5de5\u8d44\u4f4e\u7684\u5458\u5de5\u7684\u5458\u5de5\u53f7\u3001\u59d3\u540d\u3001job_id \u4ee5\u53casalary SELECT employee_id, last_name, job_id, salary FROM employee WHERE salary < ALL ( SELECT salary FROM employees WHERE job_id = 'IT_PROG' ) \u67e5\u8be2\u5e73\u5747\u5de5\u8d44\u6700\u4f4e\u7684\u90e8\u95e8id \u65b9\u5f0f\u4e00 SELECT department_id FROM employee GROUP BY department_id HAVING AVG(salary) = ( SELECT MIN(avg_sal) FROM ( SELECT department_id, AVG(salary) avg_sal FROM employees GROUP BY department_id ) dept_avg_sal ) \u65b9\u5f0f\u4e8c <= ALL SELECT department_id FROM employee GROUP BY department_id HAVING AVG(salary) <= ALL ( SELECT avg_sal FROM ( SELECT department_id, AVG(salary) avg_sal FROM employees GROUP BY department_id ) dept_avg_sal ) \u5173\u8054\u67e5\u8be2 definition/define \u5b9a\u4e49 \u5173\u8054\u5b50\u67e5\u8be2\uff1a\u6bcf\u6267\u884c\u4e00\u6b21\u5916\u90e8\u67e5\u8be2\uff0c\u5b50\u67e5\u8be2\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u4e00\u6b21 \u57fa\u7840\u6848\u4f8b \u67e5\u8be2\u5458\u5de5\u4e2d\u5de5\u8d44\u5927\u4e8e\u672c\u90e8\u95e8\u5e73\u5747\u5de5\u8d44\u7684\u5458\u5de5\u7684last_name,salary\u548c\u5176department_id \u76f8\u5173\u5b50\u67e5\u8be2 SELECT last_name, salary, department_id FROM employees emp_out WHERE salary > ( SELECT AVG(salary) FROM employee WHERE department_id = emp_out.deparment_id ) from\u5b50\u67e5\u8be2 SELECT e1.last_name, e1.salary, e1.department_id FROM employees e1, ( SELECT deaparment_id, AVG(salary) avg_sal_dept FROM employeees GROUP BY deparment_id ) e2 WHERE e1.department_id = e2.department_id AND e1.salary > e2.avg_sal_dept order by \u5b50\u67e5\u8be2 \u67e5\u8be2\u5458\u5de5\u7684id,salary,\u6309\u7167department_name \u6392\u5e8f SELECT employee_id, salary FROM employee e ORDER BY ( SELECT department_name FROM departments d where e.department_id = d.department_id ) exists what EXISTS \u5b58\u5728\u5219\u4e0d\u7ee7\u7eed\u67e5\u627e\u4e86\uff0c\u5e76\u8fd4\u56deTRUE NOT EXISTS \u5b58\u5728\u5219\u4e0d\u7ee7\u7eed\u67e5\u627e\u4e86\uff0c\u5e76\u8fd4\u56deTRUE how \u67e5\u8be2\u516c\u53f8\u7ba1\u7406\u8005\u7684employee_id\uff0clast_name\uff0cjob_id\uff0cdepartment_id\u4fe1\u606f SELECT employee_id, last_name, department_id FROM employees e1 WHERE EXISTS ( SELECT * FROM employee e2 WHERE e1.manager_id = e2.employee_id )","title":"1-\u57fa\u7840"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#sql","text":"","title":"sql\u4ecb\u7ecd"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#sql_1","text":"SQL\u8bed\u8a00\u5728\u529f\u80fd\u4e0a\u4e3b\u8981\u5206\u4e3a\u5982\u4e0b3\u5927\u7c7b: DDL ( Data Definition Languages \u3001\u6570\u636e\u5b9a\u4e49\u8bed\u8a00) \uff0c\u8fd9\u4e9b\u8bed\u53e5\u5b9a\u4e49\u4e86\u4e0d\u540c\u7684\u6570\u636e\u5e93\u3001\u8868\u3001\u89c6\u56fe\u3001\u7d22 \u5f15\u7b49\u6570\u636e\u5e93\u5bf9\u8c61\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u3001\u5220\u9664\u3001\u4fee\u6539\u6570\u636e\u5e93\u548c\u6570\u636e\u8868\u7684\u7ed3\u6784\u3002 \u4e3b\u8981\u7684\u8bed\u53e5\u5173\u952e\u5b57\u5305\u62ec CREATE \u3001 DROP \u3001 ALTER \u7b49\u3002 DML ( Data Manipulation Language \u3001\u6570\u636e\u64cd\u4f5c\u8bed\u8a00) \uff0c\u7528\u4e8e\u6dfb\u52a0\u3001\u5220\u9664\u3001\u66f4\u65b0\u548c\u67e5\u8be2\u6570\u636e\u5e93\u8bb0 \u5f55\uff0c\u5e76\u68c0\u67e5\u6570\u636e\u5b8c\u6574\u6027\u3002 \u4e3b\u8981\u7684\u8bed\u53e5\u5173\u952e\u5b57\u5305\u62ec INSERT \u3001 DELETE \u3001 UPDATE \u3001 SELECT \u7b49\u3002 SELECT \u662f SQL \u8bed\u8a00\u7684\u57fa\u7840\uff0c\u6700\u4e3a\u91cd\u8981\u3002 DCL ( Data Control Language \u3001\u6570\u636e\u63a7\u5236\u8bed\u8a00) \uff0c\u7528\u4e8e\u5b9a\u4e49\u6570\u636e\u5e93\u3001\u8868\u3001\u5b57\u6bb5\u3001\u7528\u6237\u7684\u8bbf\u95ee\u6743\u9650\u548c \u5b89\u5168\u7ea7\u522b\u3002 \u4e3b\u8981\u7684\u8bed\u53e5\u5173\u952e\u5b57\u5305\u62ec GRANT \u3001 REVOKE \u3001 COMMIT \u3001 ROLLBACK \u3001 SAVEPOINT \u7b49\u3002 \u56e0\u4e3a\u67e5\u8be2\u8bed\u53e5\u4f7f\u7528\u7684\u975e\u5e38\u7684\u9891\u7e41\uff0c\u6240\u4ee5\u5f88\u591a\u4eba\u628a\u67e5\u8be2\u8bed\u53e5\u5355\u62ce\u51fa\u6765\u4e00\u7c7b:DQL(\u6570\u636e\u67e5\u8be2\u8bed\u8a00)\u3002 \u8fd8\u6709\u5355\u72ec\u5c06 COMMIT \u3001 ROLLBACK \u53d6\u51fa\u6765\u79f0\u4e3aTCL (Transaction Control Language\uff0c\u4e8b\u52a1\u63a7\u5236\u8bed\u8a00)\u3002","title":"sql\u5206\u7c7b"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_1","text":"\u5fc5\u987b\u4f7f\u7528\u82f1\u6587\u72b6\u6001\u4e0b\u7684\u534a\u89d2\u8f93\u5165\u65b9\u5f0f \u5b57\u7b26\u4e32\u578b\u548c\u65e5\u671f\u65f6\u95f4\u7c7b\u578b\u7684\u6570\u636e\u53ef\u4ee5\u4f7f\u7528\u5355\u5f15\u53f7(' ')\u8868\u793a \u5217\u7684\u522b\u540d\uff0c\u5c3d\u91cf\u4f7f\u7528\u53cc\u5f15\u53f7(\" \")\uff0c\u800c\u4e14\u4e0d\u5efa\u8bae\u7701\u7565as \u6570\u636e\u5e93\u540d\u3001\u8868\u540d\u3001\u8868\u522b\u540d\u3001\u5b57\u6bb5\u540d\u3001\u5b57\u6bb5\u522b\u540d\u7b49\u90fd\u5c0f\u5199 SQL \u5173\u952e\u5b57\u3001\u51fd\u6570\u540d\u3001\u7ed1\u5b9a\u53d8\u91cf\u7b49\u90fd\u5927\u5199 \u5355\u884c\u6ce8\u91ca: #\u6ce8\u91ca\u6587\u5b57(MySQL\u7279\u6709\u7684\u65b9\u5f0f) \u5355\u884c\u6ce8\u91ca:-- \u6ce8\u91ca\u6587\u5b57(--\u540e\u9762\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u7a7a\u683c\u3002) \u591a\u884c\u6ce8\u91ca:/ \u6ce8\u91ca\u6587\u5b57 /","title":"\u89c4\u8303"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_2","text":"","title":"\u57fa\u7840\u64cd\u4f5c"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_3","text":"source xxx.sql","title":"\u5bfc\u5165"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_4","text":"SELECT * FROM `user`; SELECT `name` FROM `user`; # \u522b\u540d SELECT id, `name` as \"\u59d3\u540d\" FROM user; # \u53bb\u91cd select DISTINCT id from `user`;","title":"\u57fa\u7840\u67e5\u8be2"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_5","text":"DISTINCT \u5176\u5b9e\u662f\u5bf9\u540e\u9762\u6240\u6709\u5217\u540d\u7684\u7ec4\u5408\u8fdb\u884c\u53bb\u91cd\uff0c\u4f60\u80fd\u770b\u5230\u6700\u540e\u7684\u7ed3\u679c\u662f 74 \u6761\uff0c\u56e0\u4e3a\u8fd9 74 \u4e2aa\u4e0d\u540c\uff0c\u90fd\u6709 b \u8fd9\u4e2a\u5c5e\u6027\u503c\u3002\u5982\u679c\u4f60\u60f3\u8981\u770b\u90fd\u6709\u54ea\u4e9b\u4e0d\u540c\u7684a\uff0c\u53ea\u9700\u8981\u5199 a\u5373\u53ef\uff0c\u540e\u9762\u4e0d\u9700\u8981\u518d\u52a0\u5176\u4ed6\u7684\u5217\u540d\u4e86\u3002","title":"\u53bb\u91cd"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#null","text":"\u5728 MySQL \u91cc\u9762\uff0c \u7a7a\u503c\u4e0d\u7b49\u4e8e\u7a7a\u5b57\u7b26\u4e32\u3002\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u662f 0\uff0c\u800c\u4e00\u4e2a\u7a7a\u503c\u7684\u957f\u5ea6\u662f\u7a7a\u3002\u800c\u4e14\uff0c\u5728 MySQL \u91cc\u9762\uff0c\u7a7a\u503c\u662f\u5360\u7528\u7a7a\u95f4\u7684\u3002 \u6240\u6709\u8fd0\u7b97\u7b26\u6216\u5217\u503c\u9047\u5230null\u503c\uff0c\u8fd0\u7b97\u7684\u7ed3\u679c\u90fd\u4e3anull","title":"\u7a7a\u503c null"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_6","text":"\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u8868\u4e2d\u7684\u5b57\u6bb5\u3001\u8868\u540d\u7b49\u6ca1\u6709\u548c\u4fdd\u7559\u5b57\u3001\u6570\u636e\u5e93\u7cfb\u7edf\u6216\u5e38\u7528\u65b9\u6cd5\u51b2\u7a81\u3002\u5982\u679c\u771f\u7684\u76f8\u540c\uff0c\u8bf7\u5728 SQL\u8bed\u53e5\u4e2d\u4f7f\u7528\u4e00\u5bf9``(\u7740\u91cd\u53f7)\u5f15\u8d77\u6765\u3002","title":"\u53cd\u5f15\u53f7"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_7","text":"SELECT id, `name`, 'matt' FROM `user`","title":"\u5e38\u6570\u5217"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#desc","text":"desc user; Field:\u8868\u793a\u5b57\u6bb5\u540d\u79f0\u3002 Type:\u8868\u793a\u5b57\u6bb5\u7c7b\u578b\uff0c\u8fd9\u91cc barcode\u3001goodsname \u662f\u6587\u672c\u578b\u7684\uff0cprice \u662f\u6574\u6570\u7c7b\u578b\u7684\u3002 Null:\u8868\u793a\u8be5\u5217\u662f\u5426\u53ef\u4ee5\u5b58\u50a8NULL\u503c\u3002 Key:\u8868\u793a\u8be5\u5217\u662f\u5426\u5df2\u7f16\u5236\u7d22\u5f15\u3002PRI\u8868\u793a\u8be5\u5217\u662f\u8868\u4e3b\u952e\u7684\u4e00\u90e8\u5206;UNI\u8868\u793a\u8be5\u5217\u662fUNIQUE\u7d22\u5f15\u7684\u4e00\u90e8\u5206;MUL\u8868\u793a\u5728\u5217\u4e2d\u67d0\u4e2a\u7ed9\u5b9a\u503c\u5141\u8bb8\u51fa\u73b0\u591a\u6b21\u3002 Default:\u8868\u793a\u8be5\u5217\u662f\u5426\u6709\u9ed8\u8ba4\u503c\uff0c\u5982\u679c\u6709\uff0c\u90a3\u4e48\u503c\u662f\u591a\u5c11\u3002 Extra:\u8868\u793a\u53ef\u4ee5\u83b7\u53d6\u7684\u4e0e\u7ed9\u5b9a\u5217\u6709\u5173\u7684\u9644\u52a0\u4fe1\u606f\uff0c\u4f8b\u5982AUTO_INCREMENT\u7b49\u3002","title":"desc"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_8","text":"","title":"\u8fd0\u7b97\u7b26"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_9","text":"+ - * / % \u5728Java\u4e2d\uff0c+\u7684\u5de6\u53f3\u4e24\u8fb9\u5982\u679c\u6709\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u8868\u793a\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u3002\u4f46\u662f\u5728MySQL\u4e2d+\u53ea\u8868\u793a\u6570 \u503c\u76f8\u52a0\u3002\u5982\u679c\u9047\u5230\u975e\u6570\u503c\u7c7b\u578b\uff0c\u5148\u5c1d\u8bd5\u8f6c\u6210\u6570\u503c\uff0c\u5982\u679c\u8f6c\u5931\u8d25\uff0c\u5c31\u63090\u8ba1\u7b97\u3002(\u8865\u5145:MySQL \u4e2d\u5b57\u7b26\u4e32\u62fc\u63a5\u8981\u4f7f\u7528\u5b57\u7b26\u4e32\u51fd\u6570CONCAT()\u5b9e\u73b0) \u4e00\u4e2a\u6570\u9664\u4ee5\u6574\u6570\u540e\uff0c\u4e0d\u7ba1\u662f\u5426\u80fd\u9664\u5c3d\uff0c\u7ed3\u679c\u90fd\u4e3a\u4e00\u4e2a\u6d6e\u70b9\u6570; \u4e00\u4e2a\u6570\u9664\u4ee5\u53e6\u4e00\u4e2a\u6570\uff0c\u9664\u4e0d\u5c3d\u65f6\uff0c\u7ed3\u679c\u4e3a\u4e00\u4e2a\u6d6e\u70b9\u6570\uff0c\u5e76\u4fdd\u7559\u5230\u5c0f\u6570\u70b9\u540e4\u4f4d; \u5728\u6570\u5b66\u8fd0\u7b97\u4e2d\uff0c0\u4e0d\u80fd\u7528\u4f5c\u9664\u6570\uff0c\u5728MySQL\u4e2d\uff0c\u4e00\u4e2a\u6570\u9664\u4ee50\u4e3aNULL\u3002","title":"\u7b97\u6570\u8fd0\u7b97\u7b26"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_10","text":"> >= < <= != = # \u4e0d\u7b49\u4e8e <> # \u5b89\u5168\u7b49\u4e8e <=>","title":"\u6bd4\u8f83\u8fd0\u7b97\u7b26"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_11","text":"\u5982\u679c\u7b49\u53f7\u4e24\u8fb9\u7684\u503c\u3001\u5b57\u7b26\u4e32\u6216\u8868\u8fbe\u5f0f\u90fd\u4e3a\u5b57\u7b26\u4e32\uff0c\u5219MySQL\u4f1a\u6309\u7167\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83\uff0c\u5176\u6bd4\u8f83\u7684 \u662f\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684ANSI\u7f16\u7801\u662f\u5426\u76f8\u7b49\u3002 \u5982\u679c\u7b49\u53f7\u4e24\u8fb9\u7684\u503c\u90fd\u662f\u6574\u6570\uff0c\u5219MySQL\u4f1a\u6309\u7167\u6574\u6570\u6765\u6bd4\u8f83\u4e24\u4e2a\u503c\u7684\u5927\u5c0f\u3002 \u5982\u679c\u7b49\u53f7\u4e24\u8fb9\u7684\u503c\u4e00\u4e2a\u662f\u6574\u6570\uff0c\u53e6\u4e00\u4e2a\u662f\u5b57\u7b26\u4e32\uff0c\u5219MySQL\u4f1a\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u6570\u5b57\u8fdb\u884c\u6bd4\u8f83\u3002 \u5982\u679c\u7b49\u53f7\u4e24\u8fb9\u7684\u503c\u3001\u5b57\u7b26\u4e32\u6216\u8868\u8fbe\u5f0f\u4e2d\u6709\u4e00\u4e2a\u4e3aNULL\uff0c\u5219\u6bd4\u8f83\u7ed3\u679c\u4e3aNULL\u3002","title":"\u7b49\u53f7"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#null_1","text":"SELECT 1 is NULL, 1 is NOT NULL","title":"null"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#least-greatest","text":"\u6700\u5c0f\u503c \u6700\u5927\u503c SELECT LEAST(1,2), GREATEST(1, 2) \u53c2\u6570\u662f\u6574\u6570\u6216\u8005\u6d6e\u70b9\u6570\u65f6\uff0cLEAST\u5c06\u8fd4\u56de\u5176\u4e2d\u6700\u5c0f\u7684\u503c;\u5f53\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\u65f6\uff0c\u8fd4\u56de\u5b57 \u6bcd\u8868\u4e2d\u987a\u5e8f\u6700\u9760\u524d\u7684\u5b57\u7b26;\u5f53\u6bd4\u8f83\u503c\u5217\u8868\u4e2d\u6709NULL\u65f6\uff0c\u4e0d\u80fd\u5224\u65ad\u5927\u5c0f\uff0c\u8fd4\u56de\u503c\u4e3aNULL\u3002","title":"least greatest"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#between-and","text":"# 1 <= id <= 3 SELECT * FROM `user` WHERE id BETWEEN 1 AND 3","title":"between and"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#in-not-in","text":"in:\u5728 not in:\u4e0d\u5728 SELECT * FROM `user` WHERE id in(2, 4)","title":"in not in"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#like","text":"\u6a21\u7cca\u5339\u914d SELECT * FROM `user` WHERE `name` like '%m%' \u201c%\u201d:\u5339\u914d0\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u3002 \u201c_\u201d:\u53ea\u80fd\u5339\u914d\u4e00\u4e2a\u5b57\u7b26\u3002","title":"like"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#escape","text":"SELECT job_id FROM jobs WHERE job_id LIKE \u2018IT\\_%\u2018; \u5982\u679c\u4f7f\u7528\\\u8868\u793a\u8f6c\u4e49\uff0c\u8981\u7701\u7565ESCAPE\u3002\u5982\u679c\u4e0d\u662f\\\uff0c\u5219\u8981\u52a0\u4e0aESCAPE\u3002 SELECT job_id FROM jobs WHERE job_id LIKE \u2018IT$_%\u2018 escape \u2018$\u2018;","title":"ESCAPE"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#regexp","text":"\uff081\uff09\u2018^\u2019\u5339\u914d\u4ee5\u8be5\u5b57\u7b26\u540e\u9762\u7684\u5b57\u7b26\u5f00\u5934\u7684\u5b57\u7b26\u4e32\u3002 \uff082\uff09\u2018$\u2019\u5339\u914d\u4ee5\u8be5\u5b57\u7b26\u524d\u9762\u7684\u5b57\u7b26\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u3002 \uff083\uff09\u2018.\u2019\u5339\u914d\u4efb\u4f55\u4e00\u4e2a\u5355\u5b57\u7b26\u3002 \uff084\uff09\u201c[...]\u201d\u5339\u914d\u5728\u65b9\u62ec\u53f7\u5185\u7684\u4efb\u4f55\u5b57\u7b26\u3002\u4f8b\u5982\uff0c\u201c[abc]\u201d\u5339\u914d\u201ca\u201d\u6216\u201cb\u201d\u6216\u201cc\u201d\u3002\u4e3a\u4e86\u547d\u540d\u5b57\u7b26\u7684\u8303\u56f4\uff0c\u4f7f\u7528\u4e00 \u4e2a\u2018-\u2019\u3002\u201c[a-z]\u201d\u5339\u914d\u4efb\u4f55\u5b57\u6bcd\uff0c\u800c\u201c[0-9]\u201d\u5339\u914d\u4efb\u4f55\u6570\u5b57\u3002 \uff085\uff09\u2018 \u2019\u5339\u914d\u96f6\u4e2a\u6216\u591a\u4e2a\u5728\u5b83\u524d\u9762\u7684\u5b57\u7b26\u3002\u4f8b\u5982\uff0c\u201cx \u201d\u5339\u914d\u4efb\u4f55\u6570\u91cf\u7684\u2018x\u2019\u5b57\u7b26\uff0c\u201c[0-9] \u201d\u5339\u914d\u4efb\u4f55\u6570\u91cf\u7684\u6570\u5b57\uff0c \u800c\u201c \u201d\u5339\u914d\u4efb\u4f55\u6570\u91cf\u7684\u4efb\u4f55\u5b57\u7b26\u3002 SELECT 'shkstart' REGEXP '^s', 'shkstart' REGEXP 't$', 'shkstart' REGEXP 'hk'; SELECT * FROM `user` WHERE `name` REGEXP 'Lo'","title":"REGEXP\u8fd0\u7b97\u7b26"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_12","text":"and \u4e0e or \u6216 not \u975e xor \u5f02\u6216","title":"\u903b\u8f91\u8fd0\u7b97\u7b26"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_13","text":"\u8fd0\u7b97\u7b26 \u4f5c\u7528 & \u6309\u4f4d\u4e0e | \u6309\u4f4d\u6216 ^ \u6309\u4f4d\u5f02\u6216 ~ \u6309\u4f4d\u53d6\u53cd >> \u53f3\u79fb << \u5de6\u79fb","title":"\u4f4d\u8fd0\u7b97"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_14","text":"","title":"\u6392\u5e8f \u5206\u9875"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_15","text":"select * from `user` order by id desc, name desc","title":"\u6392\u5e8f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_16","text":"LIMIT [\u4f4d\u7f6e\u504f\u79fb\u91cf,] \u884c\u6570 \u4ece0\u5f00\u59cb 10\uff1a10\u6761\u8bb0\u5f55 0 9 select * from `user` order by id desc, name desc LIMIT 0, 10","title":"\u5206\u9875"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_17","text":"","title":"\u591a\u8868\u67e5\u8be2"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_18","text":"","title":"\u57fa\u7840"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_19","text":"SELECT a.a1, b.b1, b.a1 FROM ABC a, BCD b WHERE a.a1 = b.a1 \u591a\u4e2a\u8868\u4e2d\u6709\u76f8\u540c\u5217\u65f6\uff0c\u5fc5\u987b\u5728\u5217\u540d\u4e4b\u524d\u52a0\u4e0a\u8868\u540d\u524d\u7f00\u3002","title":"\u7b49\u503c\u8fde\u63a5"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_20","text":"SELECT a.a1, b.b1, b.a1 FROM ABC a, BCD b WHERE a.a1 > b.a1","title":"\u975e\u7b49\u503c\u8fde\u63a5"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_21","text":"\u4e00\u5f20\u8868 \u4fe9\u5f20\u53ca\u4ee5\u4e0a\u7684\u8868\u8fdb\u884c\u8fde\u63a5","title":"\u81ea\u8fde\u63a5 \u975e\u81ea\u8fde\u63a5"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_22","text":"1.\u5185\u8fde\u63a5\u5c31\u662f\u53d6\u4ea4\u96c6\u7684\u90e8\u5206\u3002 2.\u5de6\u8fde\u63a5\u5c31\u662f\u5de6\u8868\u5168\u90e8\u7684\u6570\u636e\u52a0\u4e0a\u4ea4\u96c6\u7684\u6570\u636e\u3002 3.\u53f3\u8fde\u63a5\u5c31\u662f\u53f3\u8868\u5168\u90e8\u7684\u6570\u636e\u52a0\u4e0a\u4ea4\u96c6\u7684\u6570\u636e\u3002 4.\u4ea4\u53c9\u8fde\u63a5\u5c31\u662f\u5168\u90fd\u8981 \u5de6\u5916\u8fde\u63a5\uff1a\u5de6\u8868\u662f\u4e3b\u8868","title":"\u5185\u8fde\u63a5 \u5916\u8fde\u63a5"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#c99","text":"SELECT a.* FROM A a INNER JOIN B b ON a.id = b.id INNER JOIN C c ON c.id = b.id SELECT a.* FROM A a LEFT OUTER JOIN B b ON a.id = b.id SELECT a.* FROM A a RIGHT OUTER JOIN B b ON a.id = b.id \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cLEFT JOIN \u548c RIGHT JOIN \u53ea\u5b58\u5728\u4e8e SQL99 \u53ca\u4ee5\u540e\u7684\u6807\u51c6\u4e2d\uff0c\u5728 SQL92 \u4e2d\u4e0d\u5b58\u5728\uff0c \u53ea\u80fd\u7528 (+) \u8868\u793a\u3002 \u6ee1\u5916\u8fde\u63a5\u7684\u7ed3\u679c = \u5de6\u53f3\u8868\u5339\u914d\u7684\u6570\u636e + \u5de6\u8868\u6ca1\u6709\u5339\u914d\u5230\u7684\u6570\u636e + \u53f3\u8868\u6ca1\u6709\u5339\u914d\u5230\u7684\u6570\u636e\u3002 SQL99\u662f\u652f\u6301\u6ee1\u5916\u8fde\u63a5\u7684\u3002\u4f7f\u7528FULL JOIN \u6216 FULL OUTER JOIN\u6765\u5b9e\u73b0\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cMySQL\u4e0d\u652f\u6301FULL JOIN\uff0c\u4f46\u662f\u53ef\u4ee5\u7528 LEFT JOIN UNION RIGHT join\u4ee3\u66ff\u3002","title":"c99"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#union","text":"union:\u53bb\u91cd (a, b, ab) union all:\u4e0d\u53bb\u91cd (a, b, ab, ab) select * from a union select * from b \u5de6\u4e2d\u56fe #\u5b9e\u73b0A - A\u2229B select \u5b57\u6bb5\u5217\u8868 from A\u8868 left join B\u8868 on \u5173\u8054\u6761\u4ef6 where \u4ece\u8868\u5173\u8054\u5b57\u6bb5 is null and \u7b49\u5176\u4ed6\u5b50\u53e5; \u53f3\u4e2d\u56fe #\u5b9e\u73b0B - A\u2229B select \u5b57\u6bb5\u5217\u8868 from A\u8868 right join B\u8868 on \u5173\u8054\u6761\u4ef6 where \u4ece\u8868\u5173\u8054\u5b57\u6bb5 is null and \u7b49\u5176\u4ed6\u5b50\u53e5; \u5de6\u4e0b\u56fe \u5b9e\u73b0\u67e5\u8be2\u7ed3\u679c\u662fA\u222aB #\u7528\u5de6\u5916\u7684A\uff0cunion \u53f3\u5916\u7684B select \u5b57\u6bb5\u5217\u8868 from A\u8868 left join B\u8868 on \u5173\u8054\u6761\u4ef6 where \u7b49\u5176\u4ed6\u5b50\u53e5 union select \u5b57\u6bb5\u5217\u8868 from A\u8868 right join B\u8868 on \u5173\u8054\u6761\u4ef6 where \u7b49\u5176\u4ed6\u5b50\u53e5; #\u5b9e\u73b0A\u222aB - A\u2229B \u6216 (A - A\u2229B) \u222a \uff08B - A\u2229B\uff09 #\u4f7f\u7528\u5de6\u5916\u7684 (A - A\u2229B) union \u53f3\u5916\u7684\uff08B - A\u2229B\uff09 select \u5b57\u6bb5\u5217\u8868 from A\u8868 left join B\u8868 on \u5173\u8054\u6761\u4ef6 where \u4ece\u8868\u5173\u8054\u5b57\u6bb5 is null and \u7b49\u5176\u4ed6\u5b50\u53e5 union select \u5b57\u6bb5\u5217\u8868 from A\u8868 right join B\u8868 on \u5173\u8054\u6761\u4ef6 where \u4ece\u8868\u5173\u8054\u5b57\u6bb5 is null and \u7b49\u5176\u4ed6\u5b50\u53e5","title":"union"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_23","text":"","title":"\u805a\u5408\u51fd\u6570"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_24","text":"","title":"\u51fd\u6570\u4ecb\u7ecd"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#avg-sum","text":"\u53ef\u4ee5\u5bf9\u6570\u503c\u578b\u6570\u636e\u4f7f\u7528AVG \u548c SUM \u51fd\u6570","title":"AVG SUM"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#min-max","text":"\u53ef\u4ee5\u5bf9\u4efb\u610f\u6570\u636e\u7c7b\u578b\u7684\u6570\u636e\u4f7f\u7528 MIN \u548c MAX \u51fd\u6570\u3002","title":"MIN MAX"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#count","text":"COUNT(*)\u8fd4\u56de\u8868\u4e2d\u8bb0\u5f55\u603b\u6570\uff0c\u9002\u7528\u4e8e\u4efb\u610f\u6570\u636e\u7c7b\u578b\u3002 COUNT(expr) \u8fd4\u56deexpr\u4e0d\u4e3a\u7a7a\u7684\u8bb0\u5f55\u603b\u6570\u3002 \u95ee\u9898\uff1a\u7528count(*)\uff0ccount(1)\uff0ccount(\u5217\u540d)\u8c01\u597d\u5462? \u5bf9\u4e8eMyISAM\u5f15\u64ce\u7684\u8868\u662f\u6ca1\u6709\u533a\u522b\u7684\u3002\u8fd9\u79cd\u5f15\u64ce\u5185\u90e8\u6709\u4e00\u8ba1\u6570\u5668\u5728\u7ef4\u62a4\u7740\u884c\u6570\u3002 Innodb\u5f15\u64ce\u7684\u8868\u7528count(*),count(1)\u76f4\u63a5\u8bfb\u884c\u6570\uff0c\u590d\u6742\u5ea6\u662fO(n)\uff0c\u56e0\u4e3ainnodb\u771f\u7684\u8981\u53bb\u6570\u4e00\u904d\u3002\u4f46\u597d \u4e8e\u5177\u4f53\u7684count(\u5217\u540d)\u3002 \u95ee\u9898\uff1a\u80fd\u4e0d\u80fd\u4f7f\u7528count(\u5217\u540d)\u66ff\u6362count(*)? * \u4e0d\u8981\u4f7f\u7528 count(\u5217\u540d)\u6765\u66ff\u4ee3 count( ) \uff0c count( ) \u662f SQL92 \u5b9a\u4e49\u7684\u6807\u51c6\u7edf\u8ba1\u884c\u6570\u7684\u8bed\u6cd5\uff0c\u8ddf\u6570 \u636e\u5e93\u65e0\u5173\uff0c\u8ddf NULL \u548c\u975e NULL \u65e0\u5173\u3002 \u8bf4\u660e\uff1acount(*)\u4f1a\u7edf\u8ba1\u503c\u4e3a NULL \u7684\u884c\uff0c\u800c count(\u5217\u540d)\u4e0d\u4f1a\u7edf\u8ba1\u6b64\u5217\u4e3a NULL \u503c\u7684\u884c\u3002","title":"COUNT"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#group-by","text":"SELECT id, `name`, SUM(id) FROM user where age > 18 GROUP BY id, name \u5728SELECT\u5217\u8868\u4e2d\u6240\u6709\u672a\u5305\u542b\u5728\u7ec4\u51fd\u6570\u4e2d\u7684\u5217\u90fd\u5e94\u8be5\u5305\u542b\u5728 GROUP BY\u5b50\u53e5\u4e2d SELECT id, `name`, SUM(id) FROM user where age > 18 GROUP BY id, name WITH ROLLUP WITH ROLLUP:\u6240\u6709\u8bb0\u5f55\u6c42\u805a\u5408, \u5f53\u4f7f\u7528ROLLUP\u65f6\uff0c\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528ORDER BY\u5b50\u53e5\u8fdb\u884c\u7ed3\u679c\u6392\u5e8f\uff0c\u5373ROLLUP\u548cORDER BY\u662f\u4e92\u76f8\u6392\u65a5 \u7684\u3002","title":"GROUP BY"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#having","text":"having \u9700\u8981\u548cgroup by\u642d\u914d\u4f7f\u7528 SELECT `name` ,max(id) FROM `user` GROUP BY name HAVING max(ID) > 1 \u533a\u522b1\uff1aWHERE \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8868\u4e2d\u7684\u5b57\u6bb5\u4f5c\u4e3a\u7b5b\u9009\u6761\u4ef6\uff0c\u4f46\u4e0d\u80fd\u4f7f\u7528\u5206\u7ec4\u4e2d\u7684\u8ba1\u7b97\u51fd\u6570\u4f5c\u4e3a\u7b5b\u9009 \u533a\u522b2\uff1a\u5982\u679c\u9700\u8981\u901a\u8fc7\u8fde\u63a5\u4ece\u5173\u8054\u8868\u4e2d\u83b7\u53d6\u9700\u8981\u7684\u6570\u636e\uff0cWHERE \u662f\u5148\u7b5b\u9009\u540e\u8fde\u63a5\uff0c\u800c HAVING \u662f\u5148\u8fde\u63a5 \u540e\u7b5b\u9009\u3002","title":"HAVING"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_25","text":"","title":"\u5b50\u67e5\u8be2"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_26","text":"","title":"\u5355\u884c\u5b50\u67e5\u8be2"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#operator","text":"op meaning = \u7b49\u4e8e > \u5927\u4e8e >= \u5927\u4e8e\u7b49\u4e8e < \u5c0f\u4e8e <= \u5c0f\u4e8e\u7b49\u4e8e <> \u4e0d\u7b49\u4e8e","title":"operator"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_27","text":"","title":"\u6848\u4f8b"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#last_namejob_idsalary","text":"SELECT last_name, job_ib, salary FROM employees WHERE salary = ( SELECT MIN(salary) FROM employees ) AND employee_id NOT IN (174, 141)","title":"\u8fd4\u56de\u516c\u53f8\u5de5\u8d44\u6700\u5c11\u7684\u5458\u5de5\u7684last_name,job_id\u548csalary"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#141174manager_iddepartment_idemployee_id-manager_iddepartment_id","text":"\u4e0d\u6210\u5bf9\u6bd4\u8f83 SELECT employee_id, manager_id, department_id FROM employees WHERE manager_id in ( SELECT manager_id FROM employees WHERE employee_id IN (174, 141) ) AND department_id IN ( SELECT department_id FROM employees WHERE employee_id IN (174, 141) ) AND employee_id NOT IN (174, 141)","title":"\u67e5\u8be2\u4e0e141\u53f7\u6216174\u53f7\u5458\u5de5\u7684manager_id\u548cdepartment_id\u76f8\u540c\u7684\u5176\u4ed6\u5458\u5de5\u7684employee_id\uff0c manager_id\uff0cdepartment_id"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#case","text":"\u663e\u5f0f\u5458\u5de5\u7684employee_id,last_name\u548clocation\u3002\u5176\u4e2d\uff0c\u82e5\u5458\u5de5department_id\u4e0elocation_id\u4e3a1800 \u7684department_id\u76f8\u540c\uff0c\u5219location\u4e3a\u2019Canada\u2019\uff0c\u5176\u4f59\u5219\u4e3a\u2019USA\u2019\u3002 SELECT employee_id, last_name, ( CASE department_id WHEN (SELECT department_id FROM departments WHERE location_id = 1800) THEN 'Canada' ELSE 'USA' END ) ) location FROM employees","title":"case \u5b50\u67e5\u8be2"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_28","text":"\u5982\u679c\u5b50\u67e5\u8be2\u8fd4\u56de\u7a7a\u5219\u4e3b\u67e5\u8be2\u4e5f\u6ca1\u6570\u636e \u591a\u884c\u5b50\u67e5\u8be2\u4f7f\u7528\u5355\u884c\u6bd4\u8f83\u7b26","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_29","text":"","title":"\u591a\u884c\u5b50\u67e5\u8be2"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_30","text":"op meaning \u542b\u4e49 IN \u4efb\u610f\u4e00\u4e2a ANY \u9700\u8981\u548c\u5355\u884c\u6bd4\u8f83\u64cd\u4f5c\u7b26\u4e00\u8d77\u4f7f\u7528\uff0c\u548c\u5b50\u67e5\u8be2\u8fd4\u56de\u7684\u67d0\u4e00\u4e2a\u503c\u6bd4\u8f83 ALL \u9700\u8981\u548c\u5355\u884c\u6bd4\u8f83\u64cd\u4f5c\u7b26\u4e00\u8d77\u4f7f\u7528\uff0c\u548c\u5b50\u67e5\u8be2\u8fd4\u56de\u7684\u6240\u6709\u503c\u6bd4\u8f83 SOME \u5b9e\u9645\u4e0a\u662fANY\u7684\u522b\u540d\uff0c\u4f5c\u7528\u76f8\u540c\uff0c\u4e00\u822c\u5e38\u4f7f\u7528ANY","title":"\u64cd\u4f5c\u7b26"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_31","text":"","title":"\u6848\u4f8b"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#job_idjob_idit_progjob_id-salary","text":"SELECT employee_id, last_name, job_id, salary FROM employee WHERE salary < ANY ( SELECT salary FROM employees WHERE job_id = 'IT_PROG' ) \u8fd4\u56de\u5176\u5b83job_id\u4e2d\u6bd4job_id\u4e3a'IT_PROG'\u90e8\u95e8 \u6240\u6709 \u5de5\u8d44\u4f4e\u7684\u5458\u5de5\u7684\u5458\u5de5\u53f7\u3001\u59d3\u540d\u3001job_id \u4ee5\u53casalary SELECT employee_id, last_name, job_id, salary FROM employee WHERE salary < ALL ( SELECT salary FROM employees WHERE job_id = 'IT_PROG' )","title":"\u8fd4\u56de\u5176\u5b83job_id\u4e2d\u6bd4job_id\u4e3a'IT_PROG'\u90e8\u95e8\u4efb\u4e00\u5de5\u8d44\u4f4e\u7684\u5458\u5de5\u7684\u5458\u5de5\u53f7\u3001\u59d3\u540d\u3001job_id \u4ee5\u53casalary"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#id","text":"\u65b9\u5f0f\u4e00 SELECT department_id FROM employee GROUP BY department_id HAVING AVG(salary) = ( SELECT MIN(avg_sal) FROM ( SELECT department_id, AVG(salary) avg_sal FROM employees GROUP BY department_id ) dept_avg_sal )","title":"\u67e5\u8be2\u5e73\u5747\u5de5\u8d44\u6700\u4f4e\u7684\u90e8\u95e8id"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#all","text":"SELECT department_id FROM employee GROUP BY department_id HAVING AVG(salary) <= ALL ( SELECT avg_sal FROM ( SELECT department_id, AVG(salary) avg_sal FROM employees GROUP BY department_id ) dept_avg_sal )","title":"\u65b9\u5f0f\u4e8c &lt;= ALL"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_32","text":"","title":"\u5173\u8054\u67e5\u8be2"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#definitiondefine","text":"\u5173\u8054\u5b50\u67e5\u8be2\uff1a\u6bcf\u6267\u884c\u4e00\u6b21\u5916\u90e8\u67e5\u8be2\uff0c\u5b50\u67e5\u8be2\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u4e00\u6b21","title":"definition/define \u5b9a\u4e49"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#_33","text":"","title":"\u57fa\u7840\u6848\u4f8b"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#last_namesalarydepartment_id","text":"\u76f8\u5173\u5b50\u67e5\u8be2 SELECT last_name, salary, department_id FROM employees emp_out WHERE salary > ( SELECT AVG(salary) FROM employee WHERE department_id = emp_out.deparment_id ) from\u5b50\u67e5\u8be2 SELECT e1.last_name, e1.salary, e1.department_id FROM employees e1, ( SELECT deaparment_id, AVG(salary) avg_sal_dept FROM employeees GROUP BY deparment_id ) e2 WHERE e1.department_id = e2.department_id AND e1.salary > e2.avg_sal_dept order by \u5b50\u67e5\u8be2 \u67e5\u8be2\u5458\u5de5\u7684id,salary,\u6309\u7167department_name \u6392\u5e8f SELECT employee_id, salary FROM employee e ORDER BY ( SELECT department_name FROM departments d where e.department_id = d.department_id )","title":"\u67e5\u8be2\u5458\u5de5\u4e2d\u5de5\u8d44\u5927\u4e8e\u672c\u90e8\u95e8\u5e73\u5747\u5de5\u8d44\u7684\u5458\u5de5\u7684last_name,salary\u548c\u5176department_id"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#exists","text":"","title":"exists"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#what","text":"EXISTS \u5b58\u5728\u5219\u4e0d\u7ee7\u7eed\u67e5\u627e\u4e86\uff0c\u5e76\u8fd4\u56deTRUE NOT EXISTS \u5b58\u5728\u5219\u4e0d\u7ee7\u7eed\u67e5\u627e\u4e86\uff0c\u5e76\u8fd4\u56deTRUE","title":"what"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/1-%E5%9F%BA%E7%A1%80/#how","text":"\u67e5\u8be2\u516c\u53f8\u7ba1\u7406\u8005\u7684employee_id\uff0clast_name\uff0cjob_id\uff0cdepartment_id\u4fe1\u606f SELECT employee_id, last_name, department_id FROM employees e1 WHERE EXISTS ( SELECT * FROM employee e2 WHERE e1.manager_id = e2.employee_id )","title":"how"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/10-%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8/","text":"\u7ba1\u7406\u6570\u636e\u5e93\u548c\u8868 \u547d\u540d \u6807\u8bc6\u7b26\u547d\u540d\u89c4\u5219 \u6570\u636e\u5e93\u540d\u3001\u8868\u540d\u4e0d\u5f97\u8d85\u8fc730\u4e2a\u5b57\u7b26\uff0c\u53d8\u91cf\u540d\u9650\u5236\u4e3a29\u4e2a \u5fc5\u987b\u53ea\u80fd\u5305\u542b A\u2013Z, a\u2013z, 0\u20139, _\u517163\u4e2a\u5b57\u7b26 \u540c\u4e00\u4e2aMySQL\u8f6f\u4ef6\u4e2d\uff0c\u6570\u636e\u5e93\u4e0d\u80fd\u540c\u540d\uff1b\u540c\u4e00\u4e2a\u5e93\u4e2d\uff0c\u8868\u4e0d\u80fd\u91cd\u540d\uff1b\u540c\u4e00\u4e2a\u8868\u4e2d\uff0c\u5b57\u6bb5\u4e0d\u80fd\u91cd\u540d \u5fc5\u987b\u4fdd\u8bc1\u4f60\u7684\u5b57\u6bb5\u6ca1\u6709\u548c\u4fdd\u7559\u5b57\u3001\u6570\u636e\u5e93\u7cfb\u7edf\u6216\u5e38\u7528\u65b9\u6cd5\u51b2\u7a81\u3002\u5982\u679c\u575a\u6301\u4f7f\u7528\uff0c\u8bf7\u5728SQL\u8bed\u53e5\u4e2d\u4f7f \u7528`\uff08\u7740\u91cd\u53f7\uff09\u5f15\u8d77\u6765 \u4fdd\u6301\u5b57\u6bb5\u540d\u548c\u7c7b\u578b\u7684\u4e00\u81f4\u6027\uff1a\u5728\u547d\u540d\u5b57\u6bb5\u5e76\u4e3a\u5176\u6307\u5b9a\u6570\u636e\u7c7b\u578b\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u4fdd\u8bc1\u4e00\u81f4\u6027\uff0c\u5047\u5982\u6570\u636e \u7c7b\u578b\u5728\u4e00\u4e2a\u8868\u91cc\u662f\u6574\u6570\uff0c\u90a3\u5728\u53e6\u4e00\u4e2a\u8868\u91cc\u53ef\u5c31\u522b\u53d8\u6210\u5b57\u7b26\u578b\u4e86 \u7ba1\u7406\u6570\u636e\u5e93 \u521b\u5efa\u6570\u636e\u5e93 CREATE DATABASE IF NOT EXISTS stu_go_1 CHARACTER SET utf8 COLLATE utf8_general_ci \u67e5\u770b\u5e93\u8868 # \u67e5\u770b\u5f53\u524d\u670d\u52a1\u5668\u6709\u54ea\u4e9b\u6570\u636e\u5e93 SHOW DATABASES # \u4f7f\u7528\u54ea\u4e2a\u5e93 USE stu_go # \u67e5\u770b\u5f53\u524d\u4f7f\u7528\u7684\u6570\u636e\u5e93 SHOW DATABASE() # \u67e5\u770b\u5f53\u524d\u4f7f\u7528\u6570\u636e\u5e93\u6709\u54ea\u4e9b\u8868 SHOW TABLES; SHOW TABLES FROM stu_go_1 \u6570\u636e\u5e93\u4fee\u6539 DROP DATABASE IF EXISTS stu_go_1 ALTER DATABASE s1 CHARACTER SET utf8 COLLATE utf8_general_ci; CREATE TABLE IF NOT EXISTS t2 ( id INT(11) AUTO_INCREMENT COMMENT 'id', `name` VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u59d3\u540d', `age` INT(11) NOT NULL DEFAULT 0 COMMENT '\u5e74\u9f84', PRIMARY KEY(id) ) CREATE TABLE IF NOT EXISTS t3 AS SELECT * FROM `user \u7ba1\u7406\u8868 \u521b\u5efa\u8868 # \u521b\u5efa\u8868 CREATE TABLE IF NOT EXISTS t2 ( id INT(11) AUTO_INCREMENT COMMENT 'id', `name` VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u59d3\u540d', `age` INT(11) NOT NULL DEFAULT 0 COMMENT '\u5e74\u9f84', PRIMARY KEY(id) ) # \u521b\u5efa\u8868 + \u63d2\u5165\u8868 \u5408\u4e8c\u4e3a\u4e00 CREATE TABLE IF NOT EXISTS t3 AS SELECT * FROM `user` # \u67e5\u770b\u8868\u7684\u7ed3\u6784 DESC user SHOW CREATE TABLE t1; \u4fee\u6539\u8868 # \u6dfb\u52a0\u5217 ALTER TABLE t3 ADD COLUMN f4 VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u6d4b\u8bd5\u6dfb\u52a0\u5217' # \u4fee\u6539\u5217\u7684\u7c7b\u578b ALTER TABLE t3 MODIFY COLUMN f4 VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u6d4b\u8bd5\u6dfb\u52a0\u5217' # \u4e0d\u80fd\u628astring \u4fee\u6539\u4e3aint # \u4fee\u6539\u5217\u7684\u540d\u5b57 ALTER TABLE t3 CHANGE COLUMN f4 f5 VARCHAR(11) # \u5220\u9664\u5217 ALTER TABLE t3 DROP COLUMN f5 # \u91cd\u547d\u540d\u88681 RENAME TABLE t3 TO t4 # \u91cd\u547d\u540d\u88682 ALTER TABLE t4 RENAME TO t3 # \u5220\u9664\u8868 DROP TABLE IF EXISTS t3 # \u6e05\u7a7a\u8868 TRUNCATE TABLE `user`","title":"10-\u521b\u5efa\u8868\u548c\u7ba1\u7406\u8868"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/10-%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8/#_1","text":"","title":"\u7ba1\u7406\u6570\u636e\u5e93\u548c\u8868"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/10-%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8/#_2","text":"","title":"\u547d\u540d"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/10-%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8/#_3","text":"\u6570\u636e\u5e93\u540d\u3001\u8868\u540d\u4e0d\u5f97\u8d85\u8fc730\u4e2a\u5b57\u7b26\uff0c\u53d8\u91cf\u540d\u9650\u5236\u4e3a29\u4e2a \u5fc5\u987b\u53ea\u80fd\u5305\u542b A\u2013Z, a\u2013z, 0\u20139, _\u517163\u4e2a\u5b57\u7b26 \u540c\u4e00\u4e2aMySQL\u8f6f\u4ef6\u4e2d\uff0c\u6570\u636e\u5e93\u4e0d\u80fd\u540c\u540d\uff1b\u540c\u4e00\u4e2a\u5e93\u4e2d\uff0c\u8868\u4e0d\u80fd\u91cd\u540d\uff1b\u540c\u4e00\u4e2a\u8868\u4e2d\uff0c\u5b57\u6bb5\u4e0d\u80fd\u91cd\u540d \u5fc5\u987b\u4fdd\u8bc1\u4f60\u7684\u5b57\u6bb5\u6ca1\u6709\u548c\u4fdd\u7559\u5b57\u3001\u6570\u636e\u5e93\u7cfb\u7edf\u6216\u5e38\u7528\u65b9\u6cd5\u51b2\u7a81\u3002\u5982\u679c\u575a\u6301\u4f7f\u7528\uff0c\u8bf7\u5728SQL\u8bed\u53e5\u4e2d\u4f7f \u7528`\uff08\u7740\u91cd\u53f7\uff09\u5f15\u8d77\u6765 \u4fdd\u6301\u5b57\u6bb5\u540d\u548c\u7c7b\u578b\u7684\u4e00\u81f4\u6027\uff1a\u5728\u547d\u540d\u5b57\u6bb5\u5e76\u4e3a\u5176\u6307\u5b9a\u6570\u636e\u7c7b\u578b\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u4fdd\u8bc1\u4e00\u81f4\u6027\uff0c\u5047\u5982\u6570\u636e \u7c7b\u578b\u5728\u4e00\u4e2a\u8868\u91cc\u662f\u6574\u6570\uff0c\u90a3\u5728\u53e6\u4e00\u4e2a\u8868\u91cc\u53ef\u5c31\u522b\u53d8\u6210\u5b57\u7b26\u578b\u4e86","title":"\u6807\u8bc6\u7b26\u547d\u540d\u89c4\u5219"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/10-%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8/#_4","text":"","title":"\u7ba1\u7406\u6570\u636e\u5e93"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/10-%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8/#_5","text":"CREATE DATABASE IF NOT EXISTS stu_go_1 CHARACTER SET utf8 COLLATE utf8_general_ci","title":"\u521b\u5efa\u6570\u636e\u5e93"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/10-%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8/#_6","text":"# \u67e5\u770b\u5f53\u524d\u670d\u52a1\u5668\u6709\u54ea\u4e9b\u6570\u636e\u5e93 SHOW DATABASES # \u4f7f\u7528\u54ea\u4e2a\u5e93 USE stu_go # \u67e5\u770b\u5f53\u524d\u4f7f\u7528\u7684\u6570\u636e\u5e93 SHOW DATABASE() # \u67e5\u770b\u5f53\u524d\u4f7f\u7528\u6570\u636e\u5e93\u6709\u54ea\u4e9b\u8868 SHOW TABLES; SHOW TABLES FROM stu_go_1","title":"\u67e5\u770b\u5e93\u8868"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/10-%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8/#_7","text":"DROP DATABASE IF EXISTS stu_go_1 ALTER DATABASE s1 CHARACTER SET utf8 COLLATE utf8_general_ci; CREATE TABLE IF NOT EXISTS t2 ( id INT(11) AUTO_INCREMENT COMMENT 'id', `name` VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u59d3\u540d', `age` INT(11) NOT NULL DEFAULT 0 COMMENT '\u5e74\u9f84', PRIMARY KEY(id) ) CREATE TABLE IF NOT EXISTS t3 AS SELECT * FROM `user","title":"\u6570\u636e\u5e93\u4fee\u6539"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/10-%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8/#_8","text":"","title":"\u7ba1\u7406\u8868"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/10-%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8/#_9","text":"# \u521b\u5efa\u8868 CREATE TABLE IF NOT EXISTS t2 ( id INT(11) AUTO_INCREMENT COMMENT 'id', `name` VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u59d3\u540d', `age` INT(11) NOT NULL DEFAULT 0 COMMENT '\u5e74\u9f84', PRIMARY KEY(id) ) # \u521b\u5efa\u8868 + \u63d2\u5165\u8868 \u5408\u4e8c\u4e3a\u4e00 CREATE TABLE IF NOT EXISTS t3 AS SELECT * FROM `user` # \u67e5\u770b\u8868\u7684\u7ed3\u6784 DESC user SHOW CREATE TABLE t1;","title":"\u521b\u5efa\u8868"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/10-%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%92%8C%E7%AE%A1%E7%90%86%E8%A1%A8/#_10","text":"# \u6dfb\u52a0\u5217 ALTER TABLE t3 ADD COLUMN f4 VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u6d4b\u8bd5\u6dfb\u52a0\u5217' # \u4fee\u6539\u5217\u7684\u7c7b\u578b ALTER TABLE t3 MODIFY COLUMN f4 VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u6d4b\u8bd5\u6dfb\u52a0\u5217' # \u4e0d\u80fd\u628astring \u4fee\u6539\u4e3aint # \u4fee\u6539\u5217\u7684\u540d\u5b57 ALTER TABLE t3 CHANGE COLUMN f4 f5 VARCHAR(11) # \u5220\u9664\u5217 ALTER TABLE t3 DROP COLUMN f5 # \u91cd\u547d\u540d\u88681 RENAME TABLE t3 TO t4 # \u91cd\u547d\u540d\u88682 ALTER TABLE t4 RENAME TO t3 # \u5220\u9664\u8868 DROP TABLE IF EXISTS t3 # \u6e05\u7a7a\u8868 TRUNCATE TABLE `user`","title":"\u4fee\u6539\u8868"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/11-%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%88%A0%E6%94%B9/","text":"\u6570\u636e\u589e\u5220\u6539 \u63d2\u5165\u3001\u66f4\u65b0\u3001\u5220\u9664 INSERT INTO emp(last_name, age, dept_id) VALUES ('n1', 11, 1), ('n2', 12, 2), ('n3', 11, 2) UPDATE emp SET last_name = 'matt', age = 99 WHERE id = 6 DELETE FROM emp WHERE id = 6","title":"11-\u6570\u636e\u589e\u5220\u6539"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/11-%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%88%A0%E6%94%B9/#_1","text":"","title":"\u6570\u636e\u589e\u5220\u6539"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/11-%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%88%A0%E6%94%B9/#_2","text":"INSERT INTO emp(last_name, age, dept_id) VALUES ('n1', 11, 1), ('n2', 12, 2), ('n3', 11, 2) UPDATE emp SET last_name = 'matt', age = 99 WHERE id = 6 DELETE FROM emp WHERE id = 6","title":"\u63d2\u5165\u3001\u66f4\u65b0\u3001\u5220\u9664"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","text":"\u6570\u636e\u7c7b\u578b \u6574\u6570 \u57fa\u7840 \u6574\u6570\u7c7b\u578b\u4e00\u5171\u6709 5 \u79cd\uff0c\u5305\u62ec TINYINT\u3001SMALLINT\u3001MEDIUMINT\u3001INT\uff08INTEGER\uff09\u548c BIGINT\u3002 \u53ef\u9009\u5c5e\u6027 UNSIGNED, ZEROFILL, \u5bbd\u5ea6 CREATE TABLE t31( id int(8) UNSIGNED ZEROFILL ) \u5bbd\u5ea6\u662f8,\u642d\u914dZEROFILL\u5f53\u8f93\u5165\u7684\u5b57\u7b26\u4e0d\u8db38\u4f4d\u65f6\u4f1a\u4f7f\u75280\u586b\u5145\uff0c\u8d85\u8fc78\u4f4d\u4e5f\u4e0d\u5f71\u54cd \u5b58\u50a8\u7a7a\u95f4\u548c\u5bbd\u5ea6\u65e0\u5173\uff0c\u548c\u5b9e\u9645\u7c7b\u578b\u6709\u5173 \u4eceMySQL 8.0.17\u5f00\u59cb\uff0c\u6574\u6570\u6570\u636e\u7c7b\u578b\u4e0d\u63a8\u8350\u4f7f\u7528\u663e\u793a\u5bbd\u5ea6\u5c5e\u6027 \u5982\u679c\u6ca1\u6709\u8d1f\u6570\u53ef\u4ee5\u4f7f\u7528UNSIGNED TINYINT: -255-255 \u9ed8\u8ba4\u53604\u4e2a\u5bbd\u5ea6\uff0c\u56e0\u4e3a\u7b26\u53f7\u4f4d\u53601\u4f4d \u5982\u4f55\u4f7f\u7528 \u5728\u4fdd\u8bc1\u53ef\u7528\u7684\u8303\u56f4\u4e0b\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u66f4\u5c0f\u7684\u6570\u636e\u7c7b\u578b \u5c0f\u6570 \u4e0d\u63a8\u8350\u4f7f\u7528\u6d6e\u70b9\u6570 \u6d6e\u70b9\u6570 \u57fa\u7840 MySQL\u652f\u6301\u7684\u6d6e\u70b9\u6570\u7c7b\u578b\uff0c\u5206\u522b\u662f FLOAT\u3001DOUBLE\u3001REAL\u3002 REAL\u9ed8\u8ba4\u5c31\u662f DOUBLE\u3002\u5982\u679c\u4f60\u628a SQL \u6a21\u5f0f\u8bbe\u5b9a\u4e3a\u542f\u7528\u201c REAL_AS_FLOAT \u201d\uff0c\u90a3 \u4e48\uff0cMySQL \u5c31\u8ba4\u4e3a REAL \u662f FLOAT\u3002 SET sql_mode = \u201cREAL_AS_FLOAT\u201d; MySQL \u5b58\u50a8\u6d6e\u70b9\u6570\u7684\u683c\u5f0f\u4e3a\uff1a \u7b26\u53f7(S) \u3001 \u5c3e\u6570(M) \u548c \u9636\u7801(E) \u3002\u56e0\u6b64\uff0c\u65e0\u8bba\u6709\u6ca1\u6709\u7b26\u53f7\uff0cMySQL \u7684\u6d6e \u70b9\u6570\u90fd\u4f1a\u5b58\u50a8\u8868\u793a\u7b26\u53f7\u7684\u90e8\u5206\u3002\u56e0\u6b64\uff0c \u6240\u8c13\u7684\u65e0\u7b26\u53f7\u6570\u53d6\u503c\u8303\u56f4\uff0c\u5176\u5b9e\u5c31\u662f\u6709\u7b26\u53f7\u6570\u53d6\u503c\u8303\u56f4\u5927\u4e8e\u7b49\u4e8e\u96f6\u7684\u90e8\u5206\u3002 \u7cbe\u5ea6\u8bf4\u660e FLOAT(M,D) \u6216 DOUBLE(M,D) \u3002\u8fd9\u91cc\uff0cM\u79f0\u4e3a \u7cbe\u5ea6 \uff0cD\u79f0\u4e3a \u6807\u5ea6 \u3002(M,D)\u4e2d M=\u6574\u6570\u4f4d+\u5c0f\u6570 \u4f4d\uff0cD=\u5c0f\u6570\u4f4d\u3002 D<=M<=255\uff0c0<=D<=30\u3002 1.\u56db\u820d\u4e94\u5165\u540e\u6574\u6570\u8d85\u8fc7\u7ed9\u5b9a\u7684\u8303\u56f4\u5219\u62a5\u9519 2.\u5c0f\u6570\u8d85\u8fc7\u5219\u4e0d\u62a5\u9519\uff0c\u5220\u9664\u591a\u4f59\u7684\u5c0f\u6570\u4f4d\u5e76\u4fdd\u5b58 \u4e3a\u4ec0\u4e48\u6d6e\u70b9\u6570\u8868\u793a\u7684\u4e0d\u7cbe\u51c6 \u5982\u679c\u5c3e\u6570\u4e0d\u662f 0 \u6216 5\uff08\u6bd4\u5982 9.624\uff09\uff0c\u4f60\u5c31\u65e0\u6cd5\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u6765\u7cbe\u786e\u8868\u8fbe\u3002\u8fdb\u800c\uff0c\u5c31\u53ea\u597d\u5728\u53d6\u503c\u5141\u8bb8\u7684\u8303 \u56f4\u5185\u8fdb\u884c\u56db\u820d\u4e94\u5165 \u5b9a\u70b9\u6570 \u57fa\u7840 DECIMAL(M,D),DEC,NUMERIC M+2\u5b57\u8282 \u6709\u6548\u8303\u56f4\u7531M\u548cD\u51b3\u5b9a DECIMAL(M,D) ,M\u88ab\u79f0\u4e3a\u7cbe\u5ea6\uff0cD\u88ab\u79f0\u4e3a\u6807\u5ea6\u30020<=M<=65\uff0c 0<=D<=30\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u9ed8\u8ba4\u4e3aDECIMAL(10,0)\u3002 \u5b9a\u70b9\u6570\u5728MySQL\u5185\u90e8\u662f\u4ee5 \u5b57\u7b26\u4e32 \u7684\u5f62\u5f0f\u8fdb\u884c\u5b58\u50a8\uff0c\u8fd9\u5c31\u51b3\u5b9a\u4e86\u5b83\u4e00\u5b9a\u662f\u7cbe\u51c6\u7684\u3002 \u5982\u679c\u63d2\u5165\u7684\u6570\u636e\u8d85\u8fc7\u4e86\u5b9a\u70b9\u6570\u6307\u5b9a\u7684\u8303\u56f4\u4e5f\u56db\u820d\u4e94\u5165\u5904\u7406 \u5b9a\u70b9\u6570 \u6d6e\u70b9\u6570 \u533a\u522b \u6d6e\u70b9\u6570\uff1a\u8868\u793a\u7684\u8303\u56f4\u5927\uff0c\u4f46\u662f\u4e0d\u7cbe\u51c6 \u5b9a\u70b9\u6570\uff1a\u8303\u56f4\u5c0f\u4f46\u662f\u7cbe\u51c6 \u65e5\u671f\u65f6\u95f4 \u57fa\u7840 YEAR \u7c7b\u578b\u901a\u5e38\u7528\u6765\u8868\u793a\u5e74 DATE \u7c7b\u578b\u901a\u5e38\u7528\u6765\u8868\u793a\u5e74\u3001\u6708\u3001\u65e5 TIME \u7c7b\u578b\u901a\u5e38\u7528\u6765\u8868\u793a\u65f6\u3001\u5206\u3001\u79d2 DATETIME \u7c7b\u578b\u901a\u5e38\u7528\u6765\u8868\u793a\u5e74\u3001\u6708\u3001\u65e5\u3001\u65f6\u3001\u5206\u3001\u79d2 TIMESTAMP \u7c7b\u578b\u901a\u5e38\u7528\u6765\u8868\u793a\u5e26\u65f6\u533a\u7684\u5e74\u3001\u6708\u3001\u65e5\u3001\u65f6\u3001\u5206\u3001\u79d2 YEAR YEAR\u7c7b\u578b\u7528\u6765\u8868\u793a\u5e74\u4efd\uff0c\u5728\u6240\u6709\u7684\u65e5\u671f\u65f6\u95f4\u7c7b\u578b\u4e2d\u6240\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u6700\u5c0f\uff0c\u53ea\u9700\u8981 1\u4e2a\u5b57\u8282 \u7684\u5b58\u50a8\u7a7a\u95f4\u3002 \u4ee54\u4f4d\u5b57\u7b26\u4e32\u6216\u6570\u5b57\u683c\u5f0f\u8868\u793aYEAR\u7c7b\u578b\uff0c\u5176\u683c\u5f0f\u4e3aYYYY\uff0c\u6700\u5c0f\u503c\u4e3a1901\uff0c\u6700\u5927\u503c\u4e3a2155\u3002 \u4ee52\u4f4d\u5b57\u7b26\u4e32\u683c\u5f0f\u8868\u793aYEAR\u7c7b\u578b\uff0c\u6700\u5c0f\u503c\u4e3a00\uff0c\u6700\u5927\u503c\u4e3a99\u3002 \u5f53\u53d6\u503c\u4e3a01\u523069\u65f6\uff0c\u8868\u793a2001\u52302069\uff1b \u5f53\u53d6\u503c\u4e3a70\u523099\u65f6\uff0c\u8868\u793a1970\u52301999\uff1b \u5f53\u53d6\u503c\u6574\u6570\u76840\u621600\u6dfb\u52a0\u7684\u8bdd\uff0c\u90a3\u4e48\u662f0000\u5e74\uff1b \u5f53\u53d6\u503c\u662f\u65e5\u671f/\u5b57\u7b26\u4e32\u7684'0'\u6dfb\u52a0\u7684\u8bdd\uff0c\u662f2000\u5e74\u3002 \u4eceMySQL5.5.27\u5f00\u59cb\uff0c2\u4f4d\u683c\u5f0f\u7684YEAR\u5df2\u7ecf\u4e0d\u63a8\u8350\u4f7f\u7528\u3002YEAR\u9ed8\u8ba4\u683c\u5f0f\u5c31\u662f\u201cYYYY\u201d\uff0c\u6ca1\u5fc5\u8981\u5199\u6210YEAR(4)\uff0c \u4eceMySQL 8.0.19\u5f00\u59cb\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u6307\u5b9a\u663e\u793a\u5bbd\u5ea6\u7684YEAR(4)\u6570\u636e\u7c7b\u578b\u3002 DATE \u683c\u5f0f\u4e3a YYYY-MM-DD \uff0c\u5176\u4e2d\uff0cYYYY\u8868\u793a\u5e74\u4efd\uff0cMM\u8868\u793a\u6708\u4efd\uff0cDD\u8868\u793a \u65e5\u671f\u3002\u9700\u8981 3\u4e2a\u5b57\u8282 \u7684\u5b58\u50a8\u7a7a\u95f4\u3002 1.\u4ee5 YYYY-MM-DD \u683c\u5f0f\u6216\u8005 YYYYMMDD \u683c\u5f0f\u8868\u793a\u7684\u5b57\u7b26\u4e32\u65e5\u671f\uff0c\u5176\u6700\u5c0f\u53d6\u503c\u4e3a1000-01-01\uff0c\u6700\u5927\u53d6\u503c\u4e3a 9999-12-03\u3002YYYYMMDD\u683c\u5f0f\u4f1a\u88ab\u8f6c\u5316\u4e3aYYYY-MM-DD\u683c\u5f0f\u3002 2.\u4ee5 YY-MM-DD \u683c\u5f0f\u6216\u8005 YYMMDD \u683c\u5f0f\u8868\u793a\u7684\u5b57\u7b26\u4e32\u65e5\u671f\uff0c\u6b64\u683c\u5f0f\u4e2d\uff0c\u5e74\u4efd\u4e3a\u4e24\u4f4d\u6570\u503c\u6216\u5b57\u7b26\u4e32\u6ee1\u8db3 YEAR\u7c7b\u578b\u7684\u683c\u5f0f\u6761\u4ef6\u4e3a\uff1a\u5f53\u5e74\u4efd\u53d6\u503c\u4e3a00\u523069\u65f6\uff0c\u4f1a\u88ab\u8f6c\u5316\u4e3a2000\u52302069\uff1b\u5f53\u5e74\u4efd\u53d6\u503c\u4e3a70\u523099 \u65f6\uff0c\u4f1a\u88ab\u8f6c\u5316\u4e3a1970\u52301999\u3002 3.\u4f7f\u7528 CURRENT_DATE() \u6216\u8005 NOW() \u51fd\u6570\uff0c\u4f1a\u63d2\u5165\u5f53\u524d\u7cfb\u7edf\u7684\u65e5\u671f\u3002 TIME 3\u4e2a\u5b57\u8282\u5b58\u50a8 \uff081\uff09\u53ef\u4ee5\u4f7f\u7528\u5e26\u6709\u5192\u53f7\u7684 \u5b57\u7b26\u4e32\uff0c\u6bd4\u5982' D HH:MM:SS' \u3001' HH:MM:SS '\u3001' HH:MM '\u3001' D HH:MM '\u3001' D HH '\u6216' SS '\u683c\u5f0f\uff0c\u90fd\u80fd\u88ab\u6b63 \u786e\u5730\u63d2\u5165TIME\u7c7b\u578b\u7684\u5b57\u6bb5\u4e2d\u3002\u5176\u4e2dD\u8868\u793a\u5929\uff0c\u5176\u6700\u5c0f\u503c\u4e3a0\uff0c\u6700\u5927\u503c\u4e3a34\u3002\u5982\u679c\u4f7f\u7528\u5e26\u6709D\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 \u63d2\u5165TIME\u7c7b\u578b\u7684\u5b57\u6bb5\u65f6\uff0cD\u4f1a\u88ab\u8f6c\u5316\u4e3a\u5c0f\u65f6\uff0c\u8ba1\u7b97\u683c\u5f0f\u4e3aD*24+HH\u3002\u5f53\u4f7f\u7528\u5e26\u6709\u5192\u53f7\u5e76\u4e14\u4e0d\u5e26D\u7684\u5b57\u7b26\u4e32 \u8868\u793a\u65f6\u95f4\u65f6\uff0c\u8868\u793a\u5f53\u5929\u7684\u65f6\u95f4\uff0c\u6bd4\u598212:10\u8868\u793a12:10:00\uff0c\u800c\u4e0d\u662f00:12:10\u3002 \uff082\uff09\u53ef\u4ee5\u4f7f\u7528\u4e0d\u5e26\u6709\u5192\u53f7\u7684 \u5b57\u7b26\u4e32\u6216\u8005\u6570\u5b57\uff0c\u683c\u5f0f\u4e3a' HHMMSS '\u6216\u8005 HHMMSS \u3002\u5982\u679c\u63d2\u5165\u4e00\u4e2a\u4e0d\u5408\u6cd5\u7684\u5b57\u7b26\u4e32\u6216\u8005\u6570\u5b57\uff0cMySQL\u5728\u5b58 \u50a8\u6570\u636e\u65f6\uff0c\u4f1a\u5c06\u5176\u81ea\u52a8\u8f6c\u5316\u4e3a00:00:00\u8fdb\u884c\u5b58\u50a8\u3002\u6bd4\u59821210\uff0cMySQL\u4f1a\u5c06\u6700\u53f3\u8fb9\u7684\u4e24\u4f4d\u89e3\u6790\u6210\u79d2\uff0c\u8868\u793a 00:12:10\uff0c\u800c\u4e0d\u662f12:10:00\u3002 \uff083\uff09\u4f7f\u7528 CURRENT_TIME() \u6216\u8005 NOW() \uff0c\u4f1a\u63d2\u5165\u5f53\u524d\u7cfb\u7edf\u7684\u65f6\u95f4\u3002 DATETIME 8\u5b57\u8282 \u5728\u683c\u5f0f\u4e0a \u4e3aDATE\u7c7b\u578b\u548cTIME\u7c7b\u578b\u7684\u7ec4\u5408\uff0c\u53ef\u4ee5\u8868\u793a\u4e3a YYYY-MM-DD HH:MM:SS \uff0c\u5176\u4e2dYYYY\u8868\u793a\u5e74\u4efd\uff0cMM\u8868\u793a\u6708 \u4efd\uff0cDD\u8868\u793a\u65e5\u671f\uff0cHH\u8868\u793a\u5c0f\u65f6\uff0cMM\u8868\u793a\u5206\u949f\uff0cSS\u8868\u793a\u79d2\u3002 \u4ee5 YYYY-MM-DD HH:MM:SS \u683c\u5f0f\u6216\u8005 YYYYMMDDHHMMSS \u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u63d2\u5165DATETIME\u7c7b\u578b\u7684\u5b57\u6bb5\u65f6\uff0c \u6700\u5c0f\u503c\u4e3a1000-01-01 00:00:00\uff0c\u6700\u5927\u503c\u4e3a9999-12-03 23:59:59\u3002\u4ee5YYYYMMDDHHMMSS\u683c\u5f0f\u7684\u6570\u5b57\u63d2\u5165DATETIME\u7c7b\u578b\u7684\u5b57\u6bb5\u65f6\uff0c\u4f1a\u88ab\u8f6c\u5316\u4e3aYYYY-MM-DD HH:MM:SS\u683c\u5f0f\u3002 \u4f7f\u7528\u51fd\u6570 CURRENT_TIMESTAMP() \u548c NOW() \uff0c\u53ef\u4ee5\u5411DATETIME\u7c7b\u578b\u7684\u5b57\u6bb5\u63d2\u5165\u7cfb\u7edf\u7684\u5f53\u524d\u65e5\u671f\u548c \u65f6\u95f4\u3002 TIMESTAMP \u662f YYYY-MM-DD HH:MM:SS \uff0c\u9700\u89814\u4e2a\u5b57\u8282\u7684\u5b58\u50a8\u7a7a\u95f4\u3002\u4f46\u662fTIMESTAMP\u5b58\u50a8\u7684\u65f6\u95f4\u8303\u56f4\u6bd4DATETIME\u8981\u5c0f\u5f88\u591a\uff0c\u53ea\u80fd\u5b58\u50a8 \u201c1970-01-01 00:00:01 UTC\u201d\u5230\u201c2038-01-19 03:14:07 UTC\u201d\u4e4b\u95f4\u7684\u65f6\u95f4\u3002\u5176\u4e2d\uff0cUTC\u8868\u793a\u4e16\u754c\u7edf\u4e00\u65f6\u95f4\uff0c\u4e5f\u53eb \u4f5c\u4e16\u754c\u6807\u51c6\u65f6\u95f4\u3002 \u5b58\u50a8\u6570\u636e\u7684\u65f6\u5019\u9700\u8981\u5bf9\u5f53\u524d\u65f6\u95f4\u6240\u5728\u7684\u65f6\u533a\u8fdb\u884c\u8f6c\u6362\uff0c\u67e5\u8be2\u6570\u636e\u7684\u65f6\u5019\u518d\u5c06\u65f6\u95f4\u8f6c\u6362\u56de\u5f53\u524d\u7684\u65f6 \u533a\u3002\u56e0\u6b64\uff0c\u4f7f\u7528TIMESTAMP\u5b58\u50a8\u7684\u540c\u4e00\u4e2a\u65f6\u95f4\u503c\uff0c\u5728\u4e0d\u540c\u7684\u65f6\u533a\u67e5\u8be2\u65f6\u4f1a\u663e\u793a\u4e0d\u540c\u7684\u65f6\u95f4\u3002 \u5411TIMESTAMP\u7c7b\u578b\u7684\u5b57\u6bb5\u63d2\u5165\u6570\u636e\u65f6\uff0c\u5f53\u63d2\u5165\u7684\u6570\u636e\u683c\u5f0f\u6ee1\u8db3YY-MM-DD HH:MM:SS\u548cYYMMDDHHMMSS \u65f6\uff0c\u4e24\u4f4d\u6570\u503c\u7684\u5e74\u4efd\u540c\u6837\u7b26\u5408YEAR\u7c7b\u578b\u7684\u89c4\u5219\u6761\u4ef6\uff0c\u53ea\u4e0d\u8fc7\u8868\u793a\u7684\u65f6\u95f4\u8303\u56f4\u8981\u5c0f\u5f88\u591a\u3002 \u5982\u679c\u5411TIMESTAMP\u7c7b\u578b\u7684\u5b57\u6bb5\u63d2\u5165\u7684\u65f6\u95f4\u8d85\u51fa\u4e86TIMESTAMP\u7c7b\u578b\u7684\u8303\u56f4\uff0c\u5219MySQL\u4f1a\u629b\u51fa\u9519\u8bef\u4fe1\u606f\u3002 datatime timestamp \u533a\u522b timestamp\u5b58\u50a8\u7a7a\u95f4\u5c0f timestamp\u5e95\u5c42\u5b58\u50a8\u7684\u662f\u8ddd\u79bb1970.1.1 00:00:00 \u7684\u6beb\u79d2\u6570 timestamp\u66f4\u52a0\u9002\u5408\u8ba1\u7b97\u4fe9\u4e2a\u65e5\u671f\u7684\u6bd4\u8f83\u548c\u8ba1\u7b97 timestamp\u548c\u65f6\u533a\u76f8\u5173 \u6ce8\u610f \u63a8\u8350\u4f7f\u7528DATETIME\u548c\u65f6\u95f4\u6233 \u5b57\u7b26\u7c7b\u578b \u57fa\u7840 MySQL\u4e2d\uff0c\u6587\u672c\u5b57\u7b26\u4e32\u603b\u4f53\u4e0a\u5206\u4e3a CHAR \u3001 VARCHAR \u3001 TINYTEXT \u3001 TEXT \u3001 MEDIUMTEXT \u3001 LONGTEXT \u3001 ENUM \u3001 SET \u7b49\u7c7b\u578b\u3002 CHAR VARCHAR \u8303\u56f4 65535 - \u9700\u89811-2\u4e2a\u5b57\u8282\u8bb0\u5f55\u5b83\u7684\u957f\u5ea6 65533/3 = 21843 what CHAR\u7c7b\u578b\uff1a CHAR(M) \u7c7b\u578b\u4e00\u822c\u9700\u8981\u9884\u5148\u5b9a\u4e49\u5b57\u7b26\u4e32\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u6307\u5b9a(M)\uff0c\u5219\u8868\u793a\u957f\u5ea6\u9ed8\u8ba4\u662f1\u4e2a\u5b57\u7b26\u3002 \u5982\u679c\u4fdd\u5b58\u65f6\uff0c\u6570\u636e\u7684\u5b9e\u9645\u957f\u5ea6\u6bd4CHAR\u7c7b\u578b\u58f0\u660e\u7684\u957f\u5ea6\u5c0f\uff0c\u5219\u4f1a\u5728 \u53f3\u4fa7\u586b\u5145\u7a7a\u683c\u4ee5\u8fbe\u5230\u6307\u5b9a\u7684\u957f\u5ea6\u3002 \u5f53MySQL\u68c0\u7d22CHAR\u7c7b\u578b\u7684\u6570\u636e\u65f6\uff0cCHAR\u7c7b\u578b\u7684\u5b57\u6bb5\u4f1a\u53bb\u9664\u5c3e\u90e8\u7684\u7a7a\u683c\u3002 \u5b9a\u4e49CHAR\u7c7b\u578b\u5b57\u6bb5\u65f6\uff0c\u58f0\u660e\u7684\u5b57\u6bb5\u957f\u5ea6\u5373\u4e3aCHAR\u7c7b\u578b\u5b57\u6bb5\u6240\u5360\u7684\u5b58\u50a8\u7a7a\u95f4\u7684\u5b57\u8282\u6570\u3002 VARCHAR(M) \u5b9a\u4e49\u65f6\uff0c \u5fc5\u987b\u6307\u5b9a \u957f\u5ea6M\uff0c\u5426\u5219\u62a5\u9519\u3002 MySQL4.0\u7248\u672c\u4ee5\u4e0b\uff0cvarchar(20)\uff1a\u6307\u7684\u662f20\u5b57\u8282\uff0c MySQL5.0\u7248\u672c\u4ee5\u4e0a\uff0cvarchar(20)\uff1a\u6307\u7684\u662f20\u5b57\u7b26\u3002 \u68c0\u7d22VARCHAR\u7c7b\u578b\u7684\u5b57\u6bb5\u6570\u636e\u65f6\uff0c\u4f1a\u4fdd\u7559\u6570\u636e\u5c3e\u90e8\u7684\u7a7a\u683c\u3002 VARCHAR\u7c7b\u578b\u7684\u5b57\u6bb5\u6240\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4 \u4e3a\u5b57\u7b26\u4e32\u5b9e\u9645\u957f\u5ea6\u52a01\u4e2a\u5b57\u8282\u3002 \u6bd4\u8f83 \u7c7b\u578b \u7279\u70b9 \u7a7a\u95f4\u4e0a \u65f6\u95f4\u4e0a \u9002\u7528\u573a\u666f CHAR(M) \u56fa\u5b9a\u957f\u5ea6 \u6d6a\u8d39\u5b58\u50a8\u7a7a\u95f4 \u6548\u7387\u9ad8 \u5b58\u50a8\u4e0d\u5927\uff0c\u901f\u5ea6\u8981\u6c42\u9ad8 VARCHAR(M) \u53ef\u53d8\u957f\u5ea6 \u8282\u7701\u5b58\u50a8\u7a7a\u95f4 \u6548\u7387\u4f4e \u975eCHAR\u7684\u60c5\u51b5 \u56fa\u5b9a\u957f\u5ea6\u63a8\u8350\u4f7f\u7528CHAR \u9891\u7e41\u53d8\u66f4\u8fd9\u4e2a\u5217\uff0c\u4f7f\u7528CHAR\uff0c\u56e0\u4e3aVARCHAR\u6bcf\u6b21\u5b58\u50a8\u90fd\u9700\u8981\u989d\u5916\u8ba1\u7b97 MyISAM \u6570\u636e\u5b58\u50a8\u5f15\u64ce\u548c\u6570\u636e\u5217\uff1aMyISAM\u6570\u636e\u8868\uff0c\u6700\u597d\u4f7f\u7528\u56fa\u5b9a\u957f\u5ea6(CHAR)\u7684\u6570\u636e\u5217\u4ee3\u66ff\u53ef\u53d8\u957f \u5ea6(VARCHAR)\u7684\u6570\u636e\u5217\u3002\u8fd9\u6837\u4f7f\u5f97\u6574\u4e2a\u8868\u9759\u6001\u5316\uff0c\u4ece\u800c\u4f7f \u6570\u636e\u68c0\u7d22\u66f4\u5feb \uff0c\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u3002 InnoDB \u5b58\u50a8\u5f15\u64ce\uff0c\u5efa\u8bae\u4f7f\u7528VARCHAR\u7c7b\u578b\u3002\u56e0\u4e3a\u5bf9\u4e8eInnoDB\u6570\u636e\u8868\uff0c\u5185\u90e8\u7684\u884c\u5b58\u50a8\u683c\u5f0f\u5e76\u6ca1\u6709\u533a \u5206\u56fa\u5b9a\u957f\u5ea6\u548c\u53ef\u53d8\u957f\u5ea6\u5217\uff08\u6240\u6709\u6570\u636e\u884c\u90fd\u4f7f\u7528\u6307\u5411\u6570\u636e\u5217\u503c\u7684\u5934\u6307\u9488\uff09\uff0c\u800c\u4e14\u4e3b\u8981\u5f71\u54cd\u6027\u80fd\u7684\u56e0\u7d20 \u662f\u6570\u636e\u884c\u4f7f\u7528\u7684\u5b58\u50a8\u603b\u91cf\uff0c\u7531\u4e8echar\u5e73\u5747\u5360\u7528\u7684\u7a7a\u95f4\u591a\u4e8evarchar\uff0c\u6240\u4ee5\u9664\u4e86\u7b80\u77ed\u5e76\u4e14\u56fa\u5b9a\u957f\u5ea6\u7684\uff0c \u5176\u4ed6\u8003\u8651varchar\u3002\u8fd9\u6837\u8282\u7701\u7a7a\u95f4\uff0c\u5bf9\u78c1\u76d8I/O\u548c\u6570\u636e\u5b58\u50a8\u603b\u91cf\u6bd4\u8f83\u597d\u3002 TEXT text\u4e0d\u5141\u8bb8\u9ed8\u8ba4\u503c \u800c\u4e14text\u548cblob\u7c7b\u578b\u7684\u6570\u636e\u5220\u9664\u540e\u5bb9\u6613\u5bfc\u81f4 \u201c\u7a7a\u6d1e\u201d\uff0c\u4f7f\u5f97\u6587\u4ef6\u788e\u7247\u6bd4\u8f83\u591a\uff0c\u6240\u4ee5\u9891\u7e41\u4f7f\u7528\u7684\u8868\u4e0d\u5efa\u8bae\u5305\u542bTEXT\u7c7b\u578b\u5b57\u6bb5\uff0c\u5efa\u8bae\u5355\u72ec\u5206\u51fa\u53bb\uff0c\u5355\u72ec\u7528 \u4e00\u4e2a\u8868\u3002 CREATE TABLE t1( id int NOT NULL, `name` VARCHAR(255) ) ALTER TABLE t1 MODIFY id INT; INSERT INTO t1(`name`) VALUES ('matt') SELECT * FROM t1; SHOW TABLES DROP TABLE t2; CREATE TABLE t2( id int UNIQUE, `name` VARCHAR(255) ) CREATE TABLE t2( id int UNIQUE KEY, `name` VARCHAR(255) ) CREATE TABLE t2( id int, `name` VARCHAR(255) ) ALTER TABLE t2 ADD UNIQUE(id) ALTER TABLE t2 MODIFY id INT; INSERT INTO t2(id, `name`) VALUES (2, 'matt'), (3, 'matt') SELECT * FROM t2; SHOW INDEX FROM t2; ALTER TABLE t2 DROP INDEX id;","title":"12-\u6570\u636e\u7c7b\u578b"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_1","text":"","title":"\u6570\u636e\u7c7b\u578b"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_2","text":"","title":"\u6574\u6570"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_3","text":"\u6574\u6570\u7c7b\u578b\u4e00\u5171\u6709 5 \u79cd\uff0c\u5305\u62ec TINYINT\u3001SMALLINT\u3001MEDIUMINT\u3001INT\uff08INTEGER\uff09\u548c BIGINT\u3002","title":"\u57fa\u7840"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_4","text":"UNSIGNED, ZEROFILL, \u5bbd\u5ea6 CREATE TABLE t31( id int(8) UNSIGNED ZEROFILL ) \u5bbd\u5ea6\u662f8,\u642d\u914dZEROFILL\u5f53\u8f93\u5165\u7684\u5b57\u7b26\u4e0d\u8db38\u4f4d\u65f6\u4f1a\u4f7f\u75280\u586b\u5145\uff0c\u8d85\u8fc78\u4f4d\u4e5f\u4e0d\u5f71\u54cd \u5b58\u50a8\u7a7a\u95f4\u548c\u5bbd\u5ea6\u65e0\u5173\uff0c\u548c\u5b9e\u9645\u7c7b\u578b\u6709\u5173 \u4eceMySQL 8.0.17\u5f00\u59cb\uff0c\u6574\u6570\u6570\u636e\u7c7b\u578b\u4e0d\u63a8\u8350\u4f7f\u7528\u663e\u793a\u5bbd\u5ea6\u5c5e\u6027 \u5982\u679c\u6ca1\u6709\u8d1f\u6570\u53ef\u4ee5\u4f7f\u7528UNSIGNED TINYINT: -255-255 \u9ed8\u8ba4\u53604\u4e2a\u5bbd\u5ea6\uff0c\u56e0\u4e3a\u7b26\u53f7\u4f4d\u53601\u4f4d","title":"\u53ef\u9009\u5c5e\u6027"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_5","text":"\u5728\u4fdd\u8bc1\u53ef\u7528\u7684\u8303\u56f4\u4e0b\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u66f4\u5c0f\u7684\u6570\u636e\u7c7b\u578b","title":"\u5982\u4f55\u4f7f\u7528"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_6","text":"\u4e0d\u63a8\u8350\u4f7f\u7528\u6d6e\u70b9\u6570","title":"\u5c0f\u6570"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_7","text":"","title":"\u6d6e\u70b9\u6570"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_8","text":"MySQL\u652f\u6301\u7684\u6d6e\u70b9\u6570\u7c7b\u578b\uff0c\u5206\u522b\u662f FLOAT\u3001DOUBLE\u3001REAL\u3002 REAL\u9ed8\u8ba4\u5c31\u662f DOUBLE\u3002\u5982\u679c\u4f60\u628a SQL \u6a21\u5f0f\u8bbe\u5b9a\u4e3a\u542f\u7528\u201c REAL_AS_FLOAT \u201d\uff0c\u90a3 \u4e48\uff0cMySQL \u5c31\u8ba4\u4e3a REAL \u662f FLOAT\u3002 SET sql_mode = \u201cREAL_AS_FLOAT\u201d; MySQL \u5b58\u50a8\u6d6e\u70b9\u6570\u7684\u683c\u5f0f\u4e3a\uff1a \u7b26\u53f7(S) \u3001 \u5c3e\u6570(M) \u548c \u9636\u7801(E) \u3002\u56e0\u6b64\uff0c\u65e0\u8bba\u6709\u6ca1\u6709\u7b26\u53f7\uff0cMySQL \u7684\u6d6e \u70b9\u6570\u90fd\u4f1a\u5b58\u50a8\u8868\u793a\u7b26\u53f7\u7684\u90e8\u5206\u3002\u56e0\u6b64\uff0c \u6240\u8c13\u7684\u65e0\u7b26\u53f7\u6570\u53d6\u503c\u8303\u56f4\uff0c\u5176\u5b9e\u5c31\u662f\u6709\u7b26\u53f7\u6570\u53d6\u503c\u8303\u56f4\u5927\u4e8e\u7b49\u4e8e\u96f6\u7684\u90e8\u5206\u3002","title":"\u57fa\u7840"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_9","text":"FLOAT(M,D) \u6216 DOUBLE(M,D) \u3002\u8fd9\u91cc\uff0cM\u79f0\u4e3a \u7cbe\u5ea6 \uff0cD\u79f0\u4e3a \u6807\u5ea6 \u3002(M,D)\u4e2d M=\u6574\u6570\u4f4d+\u5c0f\u6570 \u4f4d\uff0cD=\u5c0f\u6570\u4f4d\u3002 D<=M<=255\uff0c0<=D<=30\u3002 1.\u56db\u820d\u4e94\u5165\u540e\u6574\u6570\u8d85\u8fc7\u7ed9\u5b9a\u7684\u8303\u56f4\u5219\u62a5\u9519 2.\u5c0f\u6570\u8d85\u8fc7\u5219\u4e0d\u62a5\u9519\uff0c\u5220\u9664\u591a\u4f59\u7684\u5c0f\u6570\u4f4d\u5e76\u4fdd\u5b58","title":"\u7cbe\u5ea6\u8bf4\u660e"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_10","text":"\u5982\u679c\u5c3e\u6570\u4e0d\u662f 0 \u6216 5\uff08\u6bd4\u5982 9.624\uff09\uff0c\u4f60\u5c31\u65e0\u6cd5\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u6765\u7cbe\u786e\u8868\u8fbe\u3002\u8fdb\u800c\uff0c\u5c31\u53ea\u597d\u5728\u53d6\u503c\u5141\u8bb8\u7684\u8303 \u56f4\u5185\u8fdb\u884c\u56db\u820d\u4e94\u5165","title":"\u4e3a\u4ec0\u4e48\u6d6e\u70b9\u6570\u8868\u793a\u7684\u4e0d\u7cbe\u51c6"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_11","text":"","title":"\u5b9a\u70b9\u6570"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_12","text":"DECIMAL(M,D),DEC,NUMERIC M+2\u5b57\u8282 \u6709\u6548\u8303\u56f4\u7531M\u548cD\u51b3\u5b9a DECIMAL(M,D) ,M\u88ab\u79f0\u4e3a\u7cbe\u5ea6\uff0cD\u88ab\u79f0\u4e3a\u6807\u5ea6\u30020<=M<=65\uff0c 0<=D<=30\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u9ed8\u8ba4\u4e3aDECIMAL(10,0)\u3002 \u5b9a\u70b9\u6570\u5728MySQL\u5185\u90e8\u662f\u4ee5 \u5b57\u7b26\u4e32 \u7684\u5f62\u5f0f\u8fdb\u884c\u5b58\u50a8\uff0c\u8fd9\u5c31\u51b3\u5b9a\u4e86\u5b83\u4e00\u5b9a\u662f\u7cbe\u51c6\u7684\u3002 \u5982\u679c\u63d2\u5165\u7684\u6570\u636e\u8d85\u8fc7\u4e86\u5b9a\u70b9\u6570\u6307\u5b9a\u7684\u8303\u56f4\u4e5f\u56db\u820d\u4e94\u5165\u5904\u7406","title":"\u57fa\u7840"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_13","text":"\u6d6e\u70b9\u6570\uff1a\u8868\u793a\u7684\u8303\u56f4\u5927\uff0c\u4f46\u662f\u4e0d\u7cbe\u51c6 \u5b9a\u70b9\u6570\uff1a\u8303\u56f4\u5c0f\u4f46\u662f\u7cbe\u51c6","title":"\u5b9a\u70b9\u6570 \u6d6e\u70b9\u6570 \u533a\u522b"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_14","text":"","title":"\u65e5\u671f\u65f6\u95f4"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_15","text":"YEAR \u7c7b\u578b\u901a\u5e38\u7528\u6765\u8868\u793a\u5e74 DATE \u7c7b\u578b\u901a\u5e38\u7528\u6765\u8868\u793a\u5e74\u3001\u6708\u3001\u65e5 TIME \u7c7b\u578b\u901a\u5e38\u7528\u6765\u8868\u793a\u65f6\u3001\u5206\u3001\u79d2 DATETIME \u7c7b\u578b\u901a\u5e38\u7528\u6765\u8868\u793a\u5e74\u3001\u6708\u3001\u65e5\u3001\u65f6\u3001\u5206\u3001\u79d2 TIMESTAMP \u7c7b\u578b\u901a\u5e38\u7528\u6765\u8868\u793a\u5e26\u65f6\u533a\u7684\u5e74\u3001\u6708\u3001\u65e5\u3001\u65f6\u3001\u5206\u3001\u79d2","title":"\u57fa\u7840"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#year","text":"YEAR\u7c7b\u578b\u7528\u6765\u8868\u793a\u5e74\u4efd\uff0c\u5728\u6240\u6709\u7684\u65e5\u671f\u65f6\u95f4\u7c7b\u578b\u4e2d\u6240\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u6700\u5c0f\uff0c\u53ea\u9700\u8981 1\u4e2a\u5b57\u8282 \u7684\u5b58\u50a8\u7a7a\u95f4\u3002 \u4ee54\u4f4d\u5b57\u7b26\u4e32\u6216\u6570\u5b57\u683c\u5f0f\u8868\u793aYEAR\u7c7b\u578b\uff0c\u5176\u683c\u5f0f\u4e3aYYYY\uff0c\u6700\u5c0f\u503c\u4e3a1901\uff0c\u6700\u5927\u503c\u4e3a2155\u3002 \u4ee52\u4f4d\u5b57\u7b26\u4e32\u683c\u5f0f\u8868\u793aYEAR\u7c7b\u578b\uff0c\u6700\u5c0f\u503c\u4e3a00\uff0c\u6700\u5927\u503c\u4e3a99\u3002 \u5f53\u53d6\u503c\u4e3a01\u523069\u65f6\uff0c\u8868\u793a2001\u52302069\uff1b \u5f53\u53d6\u503c\u4e3a70\u523099\u65f6\uff0c\u8868\u793a1970\u52301999\uff1b \u5f53\u53d6\u503c\u6574\u6570\u76840\u621600\u6dfb\u52a0\u7684\u8bdd\uff0c\u90a3\u4e48\u662f0000\u5e74\uff1b \u5f53\u53d6\u503c\u662f\u65e5\u671f/\u5b57\u7b26\u4e32\u7684'0'\u6dfb\u52a0\u7684\u8bdd\uff0c\u662f2000\u5e74\u3002 \u4eceMySQL5.5.27\u5f00\u59cb\uff0c2\u4f4d\u683c\u5f0f\u7684YEAR\u5df2\u7ecf\u4e0d\u63a8\u8350\u4f7f\u7528\u3002YEAR\u9ed8\u8ba4\u683c\u5f0f\u5c31\u662f\u201cYYYY\u201d\uff0c\u6ca1\u5fc5\u8981\u5199\u6210YEAR(4)\uff0c \u4eceMySQL 8.0.19\u5f00\u59cb\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u6307\u5b9a\u663e\u793a\u5bbd\u5ea6\u7684YEAR(4)\u6570\u636e\u7c7b\u578b\u3002","title":"YEAR"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#date","text":"\u683c\u5f0f\u4e3a YYYY-MM-DD \uff0c\u5176\u4e2d\uff0cYYYY\u8868\u793a\u5e74\u4efd\uff0cMM\u8868\u793a\u6708\u4efd\uff0cDD\u8868\u793a \u65e5\u671f\u3002\u9700\u8981 3\u4e2a\u5b57\u8282 \u7684\u5b58\u50a8\u7a7a\u95f4\u3002 1.\u4ee5 YYYY-MM-DD \u683c\u5f0f\u6216\u8005 YYYYMMDD \u683c\u5f0f\u8868\u793a\u7684\u5b57\u7b26\u4e32\u65e5\u671f\uff0c\u5176\u6700\u5c0f\u53d6\u503c\u4e3a1000-01-01\uff0c\u6700\u5927\u53d6\u503c\u4e3a 9999-12-03\u3002YYYYMMDD\u683c\u5f0f\u4f1a\u88ab\u8f6c\u5316\u4e3aYYYY-MM-DD\u683c\u5f0f\u3002 2.\u4ee5 YY-MM-DD \u683c\u5f0f\u6216\u8005 YYMMDD \u683c\u5f0f\u8868\u793a\u7684\u5b57\u7b26\u4e32\u65e5\u671f\uff0c\u6b64\u683c\u5f0f\u4e2d\uff0c\u5e74\u4efd\u4e3a\u4e24\u4f4d\u6570\u503c\u6216\u5b57\u7b26\u4e32\u6ee1\u8db3 YEAR\u7c7b\u578b\u7684\u683c\u5f0f\u6761\u4ef6\u4e3a\uff1a\u5f53\u5e74\u4efd\u53d6\u503c\u4e3a00\u523069\u65f6\uff0c\u4f1a\u88ab\u8f6c\u5316\u4e3a2000\u52302069\uff1b\u5f53\u5e74\u4efd\u53d6\u503c\u4e3a70\u523099 \u65f6\uff0c\u4f1a\u88ab\u8f6c\u5316\u4e3a1970\u52301999\u3002 3.\u4f7f\u7528 CURRENT_DATE() \u6216\u8005 NOW() \u51fd\u6570\uff0c\u4f1a\u63d2\u5165\u5f53\u524d\u7cfb\u7edf\u7684\u65e5\u671f\u3002","title":"DATE"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#time","text":"3\u4e2a\u5b57\u8282\u5b58\u50a8 \uff081\uff09\u53ef\u4ee5\u4f7f\u7528\u5e26\u6709\u5192\u53f7\u7684 \u5b57\u7b26\u4e32\uff0c\u6bd4\u5982' D HH:MM:SS' \u3001' HH:MM:SS '\u3001' HH:MM '\u3001' D HH:MM '\u3001' D HH '\u6216' SS '\u683c\u5f0f\uff0c\u90fd\u80fd\u88ab\u6b63 \u786e\u5730\u63d2\u5165TIME\u7c7b\u578b\u7684\u5b57\u6bb5\u4e2d\u3002\u5176\u4e2dD\u8868\u793a\u5929\uff0c\u5176\u6700\u5c0f\u503c\u4e3a0\uff0c\u6700\u5927\u503c\u4e3a34\u3002\u5982\u679c\u4f7f\u7528\u5e26\u6709D\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 \u63d2\u5165TIME\u7c7b\u578b\u7684\u5b57\u6bb5\u65f6\uff0cD\u4f1a\u88ab\u8f6c\u5316\u4e3a\u5c0f\u65f6\uff0c\u8ba1\u7b97\u683c\u5f0f\u4e3aD*24+HH\u3002\u5f53\u4f7f\u7528\u5e26\u6709\u5192\u53f7\u5e76\u4e14\u4e0d\u5e26D\u7684\u5b57\u7b26\u4e32 \u8868\u793a\u65f6\u95f4\u65f6\uff0c\u8868\u793a\u5f53\u5929\u7684\u65f6\u95f4\uff0c\u6bd4\u598212:10\u8868\u793a12:10:00\uff0c\u800c\u4e0d\u662f00:12:10\u3002 \uff082\uff09\u53ef\u4ee5\u4f7f\u7528\u4e0d\u5e26\u6709\u5192\u53f7\u7684 \u5b57\u7b26\u4e32\u6216\u8005\u6570\u5b57\uff0c\u683c\u5f0f\u4e3a' HHMMSS '\u6216\u8005 HHMMSS \u3002\u5982\u679c\u63d2\u5165\u4e00\u4e2a\u4e0d\u5408\u6cd5\u7684\u5b57\u7b26\u4e32\u6216\u8005\u6570\u5b57\uff0cMySQL\u5728\u5b58 \u50a8\u6570\u636e\u65f6\uff0c\u4f1a\u5c06\u5176\u81ea\u52a8\u8f6c\u5316\u4e3a00:00:00\u8fdb\u884c\u5b58\u50a8\u3002\u6bd4\u59821210\uff0cMySQL\u4f1a\u5c06\u6700\u53f3\u8fb9\u7684\u4e24\u4f4d\u89e3\u6790\u6210\u79d2\uff0c\u8868\u793a 00:12:10\uff0c\u800c\u4e0d\u662f12:10:00\u3002 \uff083\uff09\u4f7f\u7528 CURRENT_TIME() \u6216\u8005 NOW() \uff0c\u4f1a\u63d2\u5165\u5f53\u524d\u7cfb\u7edf\u7684\u65f6\u95f4\u3002","title":"TIME"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#datetime","text":"8\u5b57\u8282 \u5728\u683c\u5f0f\u4e0a \u4e3aDATE\u7c7b\u578b\u548cTIME\u7c7b\u578b\u7684\u7ec4\u5408\uff0c\u53ef\u4ee5\u8868\u793a\u4e3a YYYY-MM-DD HH:MM:SS \uff0c\u5176\u4e2dYYYY\u8868\u793a\u5e74\u4efd\uff0cMM\u8868\u793a\u6708 \u4efd\uff0cDD\u8868\u793a\u65e5\u671f\uff0cHH\u8868\u793a\u5c0f\u65f6\uff0cMM\u8868\u793a\u5206\u949f\uff0cSS\u8868\u793a\u79d2\u3002 \u4ee5 YYYY-MM-DD HH:MM:SS \u683c\u5f0f\u6216\u8005 YYYYMMDDHHMMSS \u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u63d2\u5165DATETIME\u7c7b\u578b\u7684\u5b57\u6bb5\u65f6\uff0c \u6700\u5c0f\u503c\u4e3a1000-01-01 00:00:00\uff0c\u6700\u5927\u503c\u4e3a9999-12-03 23:59:59\u3002\u4ee5YYYYMMDDHHMMSS\u683c\u5f0f\u7684\u6570\u5b57\u63d2\u5165DATETIME\u7c7b\u578b\u7684\u5b57\u6bb5\u65f6\uff0c\u4f1a\u88ab\u8f6c\u5316\u4e3aYYYY-MM-DD HH:MM:SS\u683c\u5f0f\u3002 \u4f7f\u7528\u51fd\u6570 CURRENT_TIMESTAMP() \u548c NOW() \uff0c\u53ef\u4ee5\u5411DATETIME\u7c7b\u578b\u7684\u5b57\u6bb5\u63d2\u5165\u7cfb\u7edf\u7684\u5f53\u524d\u65e5\u671f\u548c \u65f6\u95f4\u3002","title":"DATETIME"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#timestamp","text":"\u662f YYYY-MM-DD HH:MM:SS \uff0c\u9700\u89814\u4e2a\u5b57\u8282\u7684\u5b58\u50a8\u7a7a\u95f4\u3002\u4f46\u662fTIMESTAMP\u5b58\u50a8\u7684\u65f6\u95f4\u8303\u56f4\u6bd4DATETIME\u8981\u5c0f\u5f88\u591a\uff0c\u53ea\u80fd\u5b58\u50a8 \u201c1970-01-01 00:00:01 UTC\u201d\u5230\u201c2038-01-19 03:14:07 UTC\u201d\u4e4b\u95f4\u7684\u65f6\u95f4\u3002\u5176\u4e2d\uff0cUTC\u8868\u793a\u4e16\u754c\u7edf\u4e00\u65f6\u95f4\uff0c\u4e5f\u53eb \u4f5c\u4e16\u754c\u6807\u51c6\u65f6\u95f4\u3002 \u5b58\u50a8\u6570\u636e\u7684\u65f6\u5019\u9700\u8981\u5bf9\u5f53\u524d\u65f6\u95f4\u6240\u5728\u7684\u65f6\u533a\u8fdb\u884c\u8f6c\u6362\uff0c\u67e5\u8be2\u6570\u636e\u7684\u65f6\u5019\u518d\u5c06\u65f6\u95f4\u8f6c\u6362\u56de\u5f53\u524d\u7684\u65f6 \u533a\u3002\u56e0\u6b64\uff0c\u4f7f\u7528TIMESTAMP\u5b58\u50a8\u7684\u540c\u4e00\u4e2a\u65f6\u95f4\u503c\uff0c\u5728\u4e0d\u540c\u7684\u65f6\u533a\u67e5\u8be2\u65f6\u4f1a\u663e\u793a\u4e0d\u540c\u7684\u65f6\u95f4\u3002 \u5411TIMESTAMP\u7c7b\u578b\u7684\u5b57\u6bb5\u63d2\u5165\u6570\u636e\u65f6\uff0c\u5f53\u63d2\u5165\u7684\u6570\u636e\u683c\u5f0f\u6ee1\u8db3YY-MM-DD HH:MM:SS\u548cYYMMDDHHMMSS \u65f6\uff0c\u4e24\u4f4d\u6570\u503c\u7684\u5e74\u4efd\u540c\u6837\u7b26\u5408YEAR\u7c7b\u578b\u7684\u89c4\u5219\u6761\u4ef6\uff0c\u53ea\u4e0d\u8fc7\u8868\u793a\u7684\u65f6\u95f4\u8303\u56f4\u8981\u5c0f\u5f88\u591a\u3002 \u5982\u679c\u5411TIMESTAMP\u7c7b\u578b\u7684\u5b57\u6bb5\u63d2\u5165\u7684\u65f6\u95f4\u8d85\u51fa\u4e86TIMESTAMP\u7c7b\u578b\u7684\u8303\u56f4\uff0c\u5219MySQL\u4f1a\u629b\u51fa\u9519\u8bef\u4fe1\u606f\u3002","title":"TIMESTAMP"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#datatime-timestamp","text":"timestamp\u5b58\u50a8\u7a7a\u95f4\u5c0f timestamp\u5e95\u5c42\u5b58\u50a8\u7684\u662f\u8ddd\u79bb1970.1.1 00:00:00 \u7684\u6beb\u79d2\u6570 timestamp\u66f4\u52a0\u9002\u5408\u8ba1\u7b97\u4fe9\u4e2a\u65e5\u671f\u7684\u6bd4\u8f83\u548c\u8ba1\u7b97 timestamp\u548c\u65f6\u533a\u76f8\u5173","title":"datatime timestamp \u533a\u522b"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_16","text":"\u63a8\u8350\u4f7f\u7528DATETIME\u548c\u65f6\u95f4\u6233","title":"\u6ce8\u610f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_17","text":"","title":"\u5b57\u7b26\u7c7b\u578b"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_18","text":"MySQL\u4e2d\uff0c\u6587\u672c\u5b57\u7b26\u4e32\u603b\u4f53\u4e0a\u5206\u4e3a CHAR \u3001 VARCHAR \u3001 TINYTEXT \u3001 TEXT \u3001 MEDIUMTEXT \u3001 LONGTEXT \u3001 ENUM \u3001 SET \u7b49\u7c7b\u578b\u3002","title":"\u57fa\u7840"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#char-varchar","text":"","title":"CHAR VARCHAR"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_19","text":"65535 - \u9700\u89811-2\u4e2a\u5b57\u8282\u8bb0\u5f55\u5b83\u7684\u957f\u5ea6 65533/3 = 21843","title":"\u8303\u56f4"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#what","text":"CHAR\u7c7b\u578b\uff1a CHAR(M) \u7c7b\u578b\u4e00\u822c\u9700\u8981\u9884\u5148\u5b9a\u4e49\u5b57\u7b26\u4e32\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u6307\u5b9a(M)\uff0c\u5219\u8868\u793a\u957f\u5ea6\u9ed8\u8ba4\u662f1\u4e2a\u5b57\u7b26\u3002 \u5982\u679c\u4fdd\u5b58\u65f6\uff0c\u6570\u636e\u7684\u5b9e\u9645\u957f\u5ea6\u6bd4CHAR\u7c7b\u578b\u58f0\u660e\u7684\u957f\u5ea6\u5c0f\uff0c\u5219\u4f1a\u5728 \u53f3\u4fa7\u586b\u5145\u7a7a\u683c\u4ee5\u8fbe\u5230\u6307\u5b9a\u7684\u957f\u5ea6\u3002 \u5f53MySQL\u68c0\u7d22CHAR\u7c7b\u578b\u7684\u6570\u636e\u65f6\uff0cCHAR\u7c7b\u578b\u7684\u5b57\u6bb5\u4f1a\u53bb\u9664\u5c3e\u90e8\u7684\u7a7a\u683c\u3002 \u5b9a\u4e49CHAR\u7c7b\u578b\u5b57\u6bb5\u65f6\uff0c\u58f0\u660e\u7684\u5b57\u6bb5\u957f\u5ea6\u5373\u4e3aCHAR\u7c7b\u578b\u5b57\u6bb5\u6240\u5360\u7684\u5b58\u50a8\u7a7a\u95f4\u7684\u5b57\u8282\u6570\u3002 VARCHAR(M) \u5b9a\u4e49\u65f6\uff0c \u5fc5\u987b\u6307\u5b9a \u957f\u5ea6M\uff0c\u5426\u5219\u62a5\u9519\u3002 MySQL4.0\u7248\u672c\u4ee5\u4e0b\uff0cvarchar(20)\uff1a\u6307\u7684\u662f20\u5b57\u8282\uff0c MySQL5.0\u7248\u672c\u4ee5\u4e0a\uff0cvarchar(20)\uff1a\u6307\u7684\u662f20\u5b57\u7b26\u3002 \u68c0\u7d22VARCHAR\u7c7b\u578b\u7684\u5b57\u6bb5\u6570\u636e\u65f6\uff0c\u4f1a\u4fdd\u7559\u6570\u636e\u5c3e\u90e8\u7684\u7a7a\u683c\u3002 VARCHAR\u7c7b\u578b\u7684\u5b57\u6bb5\u6240\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4 \u4e3a\u5b57\u7b26\u4e32\u5b9e\u9645\u957f\u5ea6\u52a01\u4e2a\u5b57\u8282\u3002","title":"what"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_20","text":"\u7c7b\u578b \u7279\u70b9 \u7a7a\u95f4\u4e0a \u65f6\u95f4\u4e0a \u9002\u7528\u573a\u666f CHAR(M) \u56fa\u5b9a\u957f\u5ea6 \u6d6a\u8d39\u5b58\u50a8\u7a7a\u95f4 \u6548\u7387\u9ad8 \u5b58\u50a8\u4e0d\u5927\uff0c\u901f\u5ea6\u8981\u6c42\u9ad8 VARCHAR(M) \u53ef\u53d8\u957f\u5ea6 \u8282\u7701\u5b58\u50a8\u7a7a\u95f4 \u6548\u7387\u4f4e \u975eCHAR\u7684\u60c5\u51b5 \u56fa\u5b9a\u957f\u5ea6\u63a8\u8350\u4f7f\u7528CHAR \u9891\u7e41\u53d8\u66f4\u8fd9\u4e2a\u5217\uff0c\u4f7f\u7528CHAR\uff0c\u56e0\u4e3aVARCHAR\u6bcf\u6b21\u5b58\u50a8\u90fd\u9700\u8981\u989d\u5916\u8ba1\u7b97 MyISAM \u6570\u636e\u5b58\u50a8\u5f15\u64ce\u548c\u6570\u636e\u5217\uff1aMyISAM\u6570\u636e\u8868\uff0c\u6700\u597d\u4f7f\u7528\u56fa\u5b9a\u957f\u5ea6(CHAR)\u7684\u6570\u636e\u5217\u4ee3\u66ff\u53ef\u53d8\u957f \u5ea6(VARCHAR)\u7684\u6570\u636e\u5217\u3002\u8fd9\u6837\u4f7f\u5f97\u6574\u4e2a\u8868\u9759\u6001\u5316\uff0c\u4ece\u800c\u4f7f \u6570\u636e\u68c0\u7d22\u66f4\u5feb \uff0c\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u3002 InnoDB \u5b58\u50a8\u5f15\u64ce\uff0c\u5efa\u8bae\u4f7f\u7528VARCHAR\u7c7b\u578b\u3002\u56e0\u4e3a\u5bf9\u4e8eInnoDB\u6570\u636e\u8868\uff0c\u5185\u90e8\u7684\u884c\u5b58\u50a8\u683c\u5f0f\u5e76\u6ca1\u6709\u533a \u5206\u56fa\u5b9a\u957f\u5ea6\u548c\u53ef\u53d8\u957f\u5ea6\u5217\uff08\u6240\u6709\u6570\u636e\u884c\u90fd\u4f7f\u7528\u6307\u5411\u6570\u636e\u5217\u503c\u7684\u5934\u6307\u9488\uff09\uff0c\u800c\u4e14\u4e3b\u8981\u5f71\u54cd\u6027\u80fd\u7684\u56e0\u7d20 \u662f\u6570\u636e\u884c\u4f7f\u7528\u7684\u5b58\u50a8\u603b\u91cf\uff0c\u7531\u4e8echar\u5e73\u5747\u5360\u7528\u7684\u7a7a\u95f4\u591a\u4e8evarchar\uff0c\u6240\u4ee5\u9664\u4e86\u7b80\u77ed\u5e76\u4e14\u56fa\u5b9a\u957f\u5ea6\u7684\uff0c \u5176\u4ed6\u8003\u8651varchar\u3002\u8fd9\u6837\u8282\u7701\u7a7a\u95f4\uff0c\u5bf9\u78c1\u76d8I/O\u548c\u6570\u636e\u5b58\u50a8\u603b\u91cf\u6bd4\u8f83\u597d\u3002","title":"\u6bd4\u8f83"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/12-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#text","text":"text\u4e0d\u5141\u8bb8\u9ed8\u8ba4\u503c \u800c\u4e14text\u548cblob\u7c7b\u578b\u7684\u6570\u636e\u5220\u9664\u540e\u5bb9\u6613\u5bfc\u81f4 \u201c\u7a7a\u6d1e\u201d\uff0c\u4f7f\u5f97\u6587\u4ef6\u788e\u7247\u6bd4\u8f83\u591a\uff0c\u6240\u4ee5\u9891\u7e41\u4f7f\u7528\u7684\u8868\u4e0d\u5efa\u8bae\u5305\u542bTEXT\u7c7b\u578b\u5b57\u6bb5\uff0c\u5efa\u8bae\u5355\u72ec\u5206\u51fa\u53bb\uff0c\u5355\u72ec\u7528 \u4e00\u4e2a\u8868\u3002 CREATE TABLE t1( id int NOT NULL, `name` VARCHAR(255) ) ALTER TABLE t1 MODIFY id INT; INSERT INTO t1(`name`) VALUES ('matt') SELECT * FROM t1; SHOW TABLES DROP TABLE t2; CREATE TABLE t2( id int UNIQUE, `name` VARCHAR(255) ) CREATE TABLE t2( id int UNIQUE KEY, `name` VARCHAR(255) ) CREATE TABLE t2( id int, `name` VARCHAR(255) ) ALTER TABLE t2 ADD UNIQUE(id) ALTER TABLE t2 MODIFY id INT; INSERT INTO t2(id, `name`) VALUES (2, 'matt'), (3, 'matt') SELECT * FROM t2; SHOW INDEX FROM t2; ALTER TABLE t2 DROP INDEX id;","title":"TEXT"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/","text":"\u7ea6\u675f \u5b9a\u4e49 \u4e3a\u4ec0\u4e48\u9700\u8981\u7ea6\u675f \u4fdd\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027 \u6570\u636e\u5b8c\u6574\u6027\uff08Data Integrity\uff09\u662f\u6307\u6570\u636e\u7684\u7cbe\u786e\u6027\uff08Accuracy\uff09\u548c\u53ef\u9760\u6027\uff08Reliability\uff09\u3002\u5b83\u662f\u9632\u6b62\u6570\u636e\u5e93\u4e2d\u5b58\u5728\u4e0d\u7b26\u5408\u8bed\u4e49\u89c4\u5b9a\u7684\u6570\u636e\u548c\u9632\u6b62\u56e0\u9519\u8bef\u4fe1\u606f\u7684\u8f93\u5165\u8f93\u51fa\u9020\u6210\u65e0\u6548\u64cd\u4f5c\u6216\u9519\u8bef\u4fe1\u606f\u800c\u63d0\u51fa\u7684\u3002 \u5b9e\u4f53\u5b8c\u6574\u6027\uff08Entity Integrity\uff09 \uff1a\u4f8b\u5982\uff0c\u540c\u4e00\u4e2a\u8868\u4e2d\uff0c\u4e0d\u80fd\u5b58\u5728\u4e24\u6761\u5b8c\u5168\u76f8\u540c\u65e0\u6cd5\u533a\u5206\u7684\u8bb0\u5f55 \u57df\u5b8c\u6574\u6027\uff08Domain Integrity\uff09 \uff1a\u4f8b\u5982\uff1a\u5e74\u9f84\u8303\u56f40-120\uff0c\u6027\u522b\u8303\u56f4\u201c\u7537/\u5973\u201d \u5f15\u7528\u5b8c\u6574\u6027\uff08Referential Integrity\uff09 \uff1a\u4f8b\u5982\uff1a\u5458\u5de5\u6240\u5728\u90e8\u95e8\uff0c\u5728\u90e8\u95e8\u8868\u4e2d\u8981\u80fd\u627e\u5230\u8fd9\u4e2a\u90e8\u95e8 \u7528\u6237\u81ea\u5b9a\u4e49\u5b8c\u6574\u6027\uff08User-defined Integrity\uff09 \uff1a\u4f8b\u5982\uff1a\u7528\u6237\u540d\u552f\u4e00\u3001\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a\u7b49\uff0c\u672c\u90e8\u95e8 \u7ecf\u7406\u7684\u5de5\u8d44\u4e0d\u5f97\u9ad8\u4e8e\u672c\u90e8\u95e8\u804c\u5de5\u7684\u5e73\u5747\u5de5\u8d44\u76845\u500d\u3002 \u662f\u4ec0\u4e48 \u7ea6\u675f\u662f\u8868\u7ea7\u7684\u5f3a\u5236\u89c4\u5b9a \u975e\u7a7a \u662f\u4ec0\u4e48 \u4e0d\u5141\u8bb8\u4e3a\u7a7a \u6ce8\u610f\uff1a \u53ea\u53ef\u4ee5\u5355\u5217\u4f7f\u7528 0\u548c\u7a7a\u4e32\u90fd\u4e0d\u662fNULL \u4f7f\u7528 \u6dfb\u52a0\u975e\u7a7a\u7ea6\u675f \u5efa\u8868\u524d CREATE TABLE IF NOT EXISTS c1 ( id INT(11) AUTO_INCREMENT COMMENT 'id', `name` VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u59d3\u540d', `age` INT(11) NOT NULL COMMENT '\u5e74\u9f84', PRIMARY KEY(id) ) \u5efa\u8868\u540e alter table \u8868\u540d\u79f0 modify \u5b57\u6bb5\u540d \u6570\u636e\u7c7b\u578b not null; \u5220\u9664\u975e\u7a7a\u7ea6\u675f ALTER TABLE c1 MODIFY age int; \u552f\u4e00\u6027\u7ea6\u675f \u662f\u4ec0\u4e48 \u67d0\u4e2a\u5b57\u6bb5\u7684\u503c\u4e0d\u80fd\u91cd\u590d \u53ef\u4ee5\u5728\u591a\u4e2a\u5217 \u5141\u8bb8\u4e3a\u7a7a \u5982\u679c\u6ca1\u6307\u5b9a\u7ea6\u675f\u540d\u4e2d\u5219\u9ed8\u8ba4\u548c\u5217\u540d\u76f8\u540c \u540c\u65f6\u9ed8\u8ba4\u4f1a\u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7d22\u5f15 \u4f7f\u7528 \u6dfb\u52a0\u552f\u4e00\u6027\u7ea6\u675f CREATE TABLE IF NOT EXISTS c2 ( id INT(11) AUTO_INCREMENT COMMENT 'id', `name` VARCHAR(255) NOT NULL UNIQUE KEY DEFAULT '' COMMENT '\u59d3\u540d', `age` INT(11) NOT NULL COMMENT '\u5e74\u9f84', PRIMARY KEY(id) ) CREATE TABLE IF NOT EXISTS c21 ( id INT(11) AUTO_INCREMENT COMMENT 'id', `name` VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u59d3\u540d', `age` INT(11) NOT NULL COMMENT '\u5e74\u9f84', PRIMARY KEY(id), CONSTRAINT AGE_NAME_UNI UNIQUE KEY(name, age) ) alter table \u8868\u540d\u79f0 add unique key(\u5b57\u6bb5\u5217\u8868); alter table \u8868\u540d\u79f0 modify \u5b57\u6bb5\u540d \u5b57\u6bb5\u7c7b\u578b unique; \u5220\u9664\u552f\u4e00\u6027\u7ea6\u675f \u552f\u4e00\u7ea6\u675f\u540d\u548c\u7d22\u5f15\u540d\u76f8\u540c \u5982\u679c\u6ca1\u6307\u5b9a\uff0c\u5219\u548c\u5217\u540d\u76f8\u540c\uff08\u7ec4\u5408\u5217\u5219\u662f\u7b2c\u4e00\u4e2a\u5217\uff09 #\u67e5\u770b\u90fd\u6709\u54ea\u4e9b\u7ea6\u675f SELECT * FROM information_schema.table_constraints WHERE table_name = '\u8868\u540d'; ALTER TABLE USER DROP INDEX uk_name_pwd; \u4e3b\u952e \u662f\u4ec0\u4e48 \u552f\u4e00\u8868\u793a\u8868\u4e2d\u7684\u4e00\u6761\u8bb0\u5f55 \u552f\u4e00+\u4e3a\u7a7a \u53ef\u4ee5\u662f\u4e00\u4e2a\u5217\u4e5f\u53ef\u4ee5\u662f\u591a\u4e2a\u5217\u7ec4\u5408 \u4e00\u4e2a\u8868\u6700\u591a\u6709\u4e00\u4e2a\u4e3b\u952e \u4e3b\u952e\u540d\u603b\u662f PRIMARY \u521b\u5efa\u4e86\u4e3b\u952e\u81ea\u52a8\u521b\u5efa\u4e3b\u952e\u7d22\u5f15\uff0c\u540c\u65f6\u5982\u679c\u5220\u9664\u4e3b\u952e\u81ea\u52a8\u5220\u9664\u4e3b\u952e\u7d22\u5f15 \u4f7f\u7528 \u6dfb\u52a0\u4e3b\u952e\u7ea6\u675f create table temp( id int primary key, name varchar(20) ); CREATE TABLE emp5( id INT NOT NULL AUTO_INCREMENT, NAME VARCHAR(20), pwd VARCHAR(15), CONSTRAINT emp5_id_pk PRIMARY KEY(id) ); \u5220\u9664\u4e3b\u952e\u7ea6\u675f ALTER TABLE student DROP PRIMARY KEY; AUTO_INCREMENT \u662f\u4ec0\u4e48 \u67d0\u4e2a\u5b57\u6bb5\u7684\u503c\u81ea\u589e AUTO_INCREMENT \u4e00\u4e2a\u8868\u53ea\u80fd\u6709\u4e00\u4e2a\u81ea\u589e\u5217\uff0c\u8fd9\u4e2a\u5217\u5fc5\u987b\u662f\u6574\u6570\u7c7b\u578b+(\u552f\u4e00\u5217 or \u4e3b\u952e\u5217) \u4f7f\u7528 \u6dfb\u52a0\u81ea\u589e create table employee( eid int primary key , ename varchar(20) ); alter table employee modify eid int auto_increment; \u5220\u9664\u7ea6\u675f alter table employee modify eid int; \u53d8\u5316 \u5728MySQL 8.0\u4e4b\u524d\uff0c\u81ea\u589e\u4e3b\u952eAUTO_INCREMENT\u7684\u503c\u5982\u679c\u5927\u4e8emax(primary key)+1\uff0c\u5728MySQL\u91cd\u542f\u540e\uff0c\u4f1a\u91cd \u7f6eAUTO_INCREMENT=max(primary key)+1\uff0c\u8fd9\u79cd\u73b0\u8c61\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u5bfc\u81f4\u4e1a\u52a1\u4e3b\u952e\u51b2\u7a81\u6216\u8005\u5176\u4ed6\u96be\u4ee5\u53d1 \u73b0\u7684\u95ee\u9898\u3002 \u5916\u952e \u662f\u4ec0\u4e48 \u9650\u5236\u67d0\u4e2a\u8868\u7684\u67d0\u4e2a\u5b57\u6bb5\u5f15\u7528\u7684\u5b8c\u6574\u6027 \u6bd4\u5982\uff1a\u5458\u5de5\u8868\u7684\u5458\u5de5\u6240\u5728\u90e8\u95e8\u7684\u9009\u62e9\uff0c\u5fc5\u987b\u5728\u90e8\u95e8\u8868\u80fd\u627e\u5230\u5bf9\u5e94\u7684\u90e8\u5206\u3002 \u4e3b\u8868\uff08\u7236\u8868\uff09\uff1a\u88ab\u5f15\u7528\u7684\u8868\uff0c\u88ab\u53c2\u8003\u7684\u8868 \u4ece\u8868\uff08\u5b50\u8868\uff09\uff1a\u5f15\u7528\u522b\u4eba\u7684\u8868\uff0c\u53c2\u8003\u522b\u4eba\u7684\u8868 \u4f8b\u5982\uff1a\u5458\u5de5\u8868\u7684\u5458\u5de5\u6240\u5728\u90e8\u95e8\u8fd9\u4e2a\u5b57\u6bb5\u7684\u503c\u8981\u53c2\u8003\u90e8\u95e8\u8868\uff1a\u90e8\u95e8\u8868\u662f\u4e3b\u8868\uff0c\u5458\u5de5\u8868\u662f\u4ece\u8868\u3002 \u7279\u70b9 \u4ece\u8868\u7684\u5916\u952e\u5217\uff0c\u5fc5\u987b\u5f15\u7528/\u53c2\u8003\u4e3b\u8868\u7684\u4e3b\u952e\u6216\u552f\u4e00\u7ea6\u675f\u7684\u5217 \u521b\u5efa\u8868\u5148\u4e3b\u8868\u540e\u4ece\u8868\uff0c \u5220\u9664\u8868\u5148\u4ece\u540e\u4e3b \u63d2\u5165+\u5220\u9664\u6570\u636e\u4e5f\u662f\u4e00\u6837\u7684 \u5220\u9664\u5916\u952e\u7ea6\u675f\u540e \u9700\u8981\u624b\u52a8\u5220\u9664\u5bf9\u5e94\u7684\u7d22\u5f15 \u4f7f\u7528 \u6dfb\u52a0\u5916\u952e\u7ea6\u675f create table \u4e3b\u8868\u540d\u79f0( \u5b57\u6bb51 \u6570\u636e\u7c7b\u578b primary key, \u5b57\u6bb52 \u6570\u636e\u7c7b\u578b ); create table \u4ece\u8868\u540d\u79f0( \u5b57\u6bb51 \u6570\u636e\u7c7b\u578b primary key, \u5b57\u6bb52 \u6570\u636e\u7c7b\u578b, [CONSTRAINT <\u5916\u952e\u7ea6\u675f\u540d\u79f0>] FOREIGN KEY\uff08\u4ece\u8868\u7684\u67d0\u4e2a\u5b57\u6bb5) references \u4e3b\u8868\u540d(\u88ab\u53c2\u8003\u5b57\u6bb5) ); #(\u4ece\u8868\u7684\u67d0\u4e2a\u5b57\u6bb5)\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u4e0e\u4e3b\u8868\u540d(\u88ab\u53c2\u8003\u5b57\u6bb5)\u7684\u6570\u636e\u7c7b\u578b\u4e00\u81f4\uff0c\u903b\u8f91\u610f\u4e49\u4e5f\u4e00\u6837 #(\u4ece\u8868\u7684\u67d0\u4e2a\u5b57\u6bb5)\u7684\u5b57\u6bb5\u540d\u53ef\u4ee5\u4e0e\u4e3b\u8868\u540d(\u88ab\u53c2\u8003\u5b57\u6bb5)\u7684\u5b57\u6bb5\u540d\u4e00\u6837\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u4e00\u6837 -- FOREIGN KEY: \u5728\u8868\u7ea7\u6307\u5b9a\u5b50\u8868\u4e2d\u7684\u5217 -- REFERENCES: \u6807\u793a\u5728\u7236\u8868\u4e2d\u7684\u5217 ALTER TABLE \u4ece\u8868\u540d ADD [CONSTRAINT \u7ea6\u675f\u540d] FOREIGN KEY (\u4ece\u8868\u7684\u5b57\u6bb5) REFERENCES \u4e3b\u8868\u540d(\u88ab\u5f15\u7528 \u5b57\u6bb5) [on update xx][on delete xx]; \u5220\u9664\u7ea6\u675f (1)\u7b2c\u4e00\u6b65\u5148\u67e5\u770b\u7ea6\u675f\u540d\u548c\u5220\u9664\u5916\u952e\u7ea6\u675f SELECT * FROM information_schema.table_constraints WHERE table_name = '\u8868\u540d\u79f0';#\u67e5\u770b\u67d0\u4e2a \u8868\u7684\u7ea6\u675f\u540d ALTER TABLE \u4ece\u8868\u540d DROP FOREIGN KEY \u5916\u952e\u7ea6\u675f\u540d; \uff082\uff09\u7b2c\u4e8c\u6b65\u67e5\u770b\u7d22\u5f15\u540d\u548c\u5220\u9664\u7d22\u5f15\u3002\uff08\u6ce8\u610f\uff0c\u53ea\u80fd\u624b\u52a8\u5220\u9664\uff09 SHOW INDEX FROM \u8868\u540d\u79f0; #\u67e5\u770b\u67d0\u4e2a\u8868\u7684\u7d22\u5f15\u540d ALTER TABLE \u4ece\u8868\u540d DROP INDEX \u7d22\u5f15\u540d; \u7ea6\u675f\u7b49\u7ea7 Cascade\u65b9\u5f0f \uff1a\u5728\u7236\u8868\u4e0aupdate/delete\u8bb0\u5f55\u65f6\uff0c\u540c\u6b65update/delete\u6389\u5b50\u8868\u7684\u5339\u914d\u8bb0\u5f55 Set null\u65b9\u5f0f \uff1a\u5728\u7236\u8868\u4e0aupdate/delete\u8bb0\u5f55\u65f6\uff0c\u5c06\u5b50\u8868\u4e0a\u5339\u914d\u8bb0\u5f55\u7684\u5217\u8bbe\u4e3anull\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u5b50 \u8868\u7684\u5916\u952e\u5217\u4e0d\u80fd\u4e3anot null No action\u65b9\u5f0f \uff1a\u5982\u679c\u5b50\u8868\u4e2d\u6709\u5339\u914d\u7684\u8bb0\u5f55\uff0c\u5219\u4e0d\u5141\u8bb8\u5bf9\u7236\u8868\u5bf9\u5e94\u5019\u9009\u952e\u8fdb\u884cupdate/delete\u64cd\u4f5c Restrict\u65b9\u5f0f \uff1a\u540cno action\uff0c \u90fd\u662f\u7acb\u5373\u68c0\u67e5\u5916\u952e\u7ea6\u675f Set default\u65b9\u5f0f \uff08\u5728\u53ef\u89c6\u5316\u5de5\u5177SQLyog\u4e2d\u53ef\u80fd\u663e\u793a\u7a7a\u767d\uff09\uff1a\u7236\u8868\u6709\u53d8\u66f4\u65f6\uff0c\u5b50\u8868\u5c06\u5916\u952e\u5217\u8bbe\u7f6e \u6210\u4e00\u4e2a\u9ed8\u8ba4\u7684\u503c\uff0c\u4f46Innodb\u4e0d\u80fd\u8bc6\u522b \u5bf9\u4e8e\u5916\u952e\u7ea6\u675f\uff0c\u6700\u597d\u662f\u91c7\u7528: ON UPDATE CASCADE ON DELETE RESTRICT \u7684\u65b9\u5f0f\u3002 check \u662f\u4ec0\u4e48 \u5b9a\u4e49 \u6821\u9a8c\u67d0\u4e2a\u5b57\u6bb5\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 CHECK mysql5.7 check\u5e76\u4e0d\u8d77\u4f5c\u7528\uff0c 8.0\u8d77\u4f5c\u7528 \u4f7f\u7528 \u6dfb\u52a0check\u7ea6\u675f create table employee( eid int check(eid > 0) , ename varchar(20) ); default \u662f\u4ec0\u4e48 \u5b9a\u4e49 \u7ed9\u67d0\u4e2a\u5b57\u6bb5\u6307\u5b9a\u9ed8\u8ba4\u503c\uff0c\u5982\u679c\u6ca1\u6709\u663e\u793a\u8d4b\u503c\u5219\u91c7\u7528\u9ed8\u8ba4\u503c DEFAULT \u4f7f\u7528 \u6dfb\u52a0\u9ed8\u8ba4\u503c create table employee( eid int primary key, ename varchar(20) not null, gender char default '\u7537', tel char(11) not null default '' #\u9ed8\u8ba4\u662f\u7a7a\u5b57\u7b26\u4e32 );","title":"13-\u7ea6\u675f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_1","text":"","title":"\u7ea6\u675f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_2","text":"","title":"\u5b9a\u4e49"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_3","text":"\u4fdd\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027 \u6570\u636e\u5b8c\u6574\u6027\uff08Data Integrity\uff09\u662f\u6307\u6570\u636e\u7684\u7cbe\u786e\u6027\uff08Accuracy\uff09\u548c\u53ef\u9760\u6027\uff08Reliability\uff09\u3002\u5b83\u662f\u9632\u6b62\u6570\u636e\u5e93\u4e2d\u5b58\u5728\u4e0d\u7b26\u5408\u8bed\u4e49\u89c4\u5b9a\u7684\u6570\u636e\u548c\u9632\u6b62\u56e0\u9519\u8bef\u4fe1\u606f\u7684\u8f93\u5165\u8f93\u51fa\u9020\u6210\u65e0\u6548\u64cd\u4f5c\u6216\u9519\u8bef\u4fe1\u606f\u800c\u63d0\u51fa\u7684\u3002 \u5b9e\u4f53\u5b8c\u6574\u6027\uff08Entity Integrity\uff09 \uff1a\u4f8b\u5982\uff0c\u540c\u4e00\u4e2a\u8868\u4e2d\uff0c\u4e0d\u80fd\u5b58\u5728\u4e24\u6761\u5b8c\u5168\u76f8\u540c\u65e0\u6cd5\u533a\u5206\u7684\u8bb0\u5f55 \u57df\u5b8c\u6574\u6027\uff08Domain Integrity\uff09 \uff1a\u4f8b\u5982\uff1a\u5e74\u9f84\u8303\u56f40-120\uff0c\u6027\u522b\u8303\u56f4\u201c\u7537/\u5973\u201d \u5f15\u7528\u5b8c\u6574\u6027\uff08Referential Integrity\uff09 \uff1a\u4f8b\u5982\uff1a\u5458\u5de5\u6240\u5728\u90e8\u95e8\uff0c\u5728\u90e8\u95e8\u8868\u4e2d\u8981\u80fd\u627e\u5230\u8fd9\u4e2a\u90e8\u95e8 \u7528\u6237\u81ea\u5b9a\u4e49\u5b8c\u6574\u6027\uff08User-defined Integrity\uff09 \uff1a\u4f8b\u5982\uff1a\u7528\u6237\u540d\u552f\u4e00\u3001\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a\u7b49\uff0c\u672c\u90e8\u95e8 \u7ecf\u7406\u7684\u5de5\u8d44\u4e0d\u5f97\u9ad8\u4e8e\u672c\u90e8\u95e8\u804c\u5de5\u7684\u5e73\u5747\u5de5\u8d44\u76845\u500d\u3002","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u7ea6\u675f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_4","text":"\u7ea6\u675f\u662f\u8868\u7ea7\u7684\u5f3a\u5236\u89c4\u5b9a","title":"\u662f\u4ec0\u4e48"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_5","text":"","title":"\u975e\u7a7a"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_6","text":"\u4e0d\u5141\u8bb8\u4e3a\u7a7a \u6ce8\u610f\uff1a \u53ea\u53ef\u4ee5\u5355\u5217\u4f7f\u7528 0\u548c\u7a7a\u4e32\u90fd\u4e0d\u662fNULL","title":"\u662f\u4ec0\u4e48"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_7","text":"","title":"\u4f7f\u7528"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_8","text":"\u5efa\u8868\u524d CREATE TABLE IF NOT EXISTS c1 ( id INT(11) AUTO_INCREMENT COMMENT 'id', `name` VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u59d3\u540d', `age` INT(11) NOT NULL COMMENT '\u5e74\u9f84', PRIMARY KEY(id) ) \u5efa\u8868\u540e alter table \u8868\u540d\u79f0 modify \u5b57\u6bb5\u540d \u6570\u636e\u7c7b\u578b not null;","title":"\u6dfb\u52a0\u975e\u7a7a\u7ea6\u675f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_9","text":"ALTER TABLE c1 MODIFY age int;","title":"\u5220\u9664\u975e\u7a7a\u7ea6\u675f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_10","text":"","title":"\u552f\u4e00\u6027\u7ea6\u675f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_11","text":"\u67d0\u4e2a\u5b57\u6bb5\u7684\u503c\u4e0d\u80fd\u91cd\u590d \u53ef\u4ee5\u5728\u591a\u4e2a\u5217 \u5141\u8bb8\u4e3a\u7a7a \u5982\u679c\u6ca1\u6307\u5b9a\u7ea6\u675f\u540d\u4e2d\u5219\u9ed8\u8ba4\u548c\u5217\u540d\u76f8\u540c \u540c\u65f6\u9ed8\u8ba4\u4f1a\u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7d22\u5f15","title":"\u662f\u4ec0\u4e48"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_12","text":"","title":"\u4f7f\u7528"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_13","text":"CREATE TABLE IF NOT EXISTS c2 ( id INT(11) AUTO_INCREMENT COMMENT 'id', `name` VARCHAR(255) NOT NULL UNIQUE KEY DEFAULT '' COMMENT '\u59d3\u540d', `age` INT(11) NOT NULL COMMENT '\u5e74\u9f84', PRIMARY KEY(id) ) CREATE TABLE IF NOT EXISTS c21 ( id INT(11) AUTO_INCREMENT COMMENT 'id', `name` VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u59d3\u540d', `age` INT(11) NOT NULL COMMENT '\u5e74\u9f84', PRIMARY KEY(id), CONSTRAINT AGE_NAME_UNI UNIQUE KEY(name, age) ) alter table \u8868\u540d\u79f0 add unique key(\u5b57\u6bb5\u5217\u8868); alter table \u8868\u540d\u79f0 modify \u5b57\u6bb5\u540d \u5b57\u6bb5\u7c7b\u578b unique;","title":"\u6dfb\u52a0\u552f\u4e00\u6027\u7ea6\u675f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_14","text":"\u552f\u4e00\u7ea6\u675f\u540d\u548c\u7d22\u5f15\u540d\u76f8\u540c \u5982\u679c\u6ca1\u6307\u5b9a\uff0c\u5219\u548c\u5217\u540d\u76f8\u540c\uff08\u7ec4\u5408\u5217\u5219\u662f\u7b2c\u4e00\u4e2a\u5217\uff09 #\u67e5\u770b\u90fd\u6709\u54ea\u4e9b\u7ea6\u675f SELECT * FROM information_schema.table_constraints WHERE table_name = '\u8868\u540d'; ALTER TABLE USER DROP INDEX uk_name_pwd;","title":"\u5220\u9664\u552f\u4e00\u6027\u7ea6\u675f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_15","text":"","title":"\u4e3b\u952e"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_16","text":"\u552f\u4e00\u8868\u793a\u8868\u4e2d\u7684\u4e00\u6761\u8bb0\u5f55 \u552f\u4e00+\u4e3a\u7a7a \u53ef\u4ee5\u662f\u4e00\u4e2a\u5217\u4e5f\u53ef\u4ee5\u662f\u591a\u4e2a\u5217\u7ec4\u5408 \u4e00\u4e2a\u8868\u6700\u591a\u6709\u4e00\u4e2a\u4e3b\u952e \u4e3b\u952e\u540d\u603b\u662f PRIMARY \u521b\u5efa\u4e86\u4e3b\u952e\u81ea\u52a8\u521b\u5efa\u4e3b\u952e\u7d22\u5f15\uff0c\u540c\u65f6\u5982\u679c\u5220\u9664\u4e3b\u952e\u81ea\u52a8\u5220\u9664\u4e3b\u952e\u7d22\u5f15","title":"\u662f\u4ec0\u4e48"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_17","text":"","title":"\u4f7f\u7528"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_18","text":"create table temp( id int primary key, name varchar(20) ); CREATE TABLE emp5( id INT NOT NULL AUTO_INCREMENT, NAME VARCHAR(20), pwd VARCHAR(15), CONSTRAINT emp5_id_pk PRIMARY KEY(id) );","title":"\u6dfb\u52a0\u4e3b\u952e\u7ea6\u675f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_19","text":"ALTER TABLE student DROP PRIMARY KEY;","title":"\u5220\u9664\u4e3b\u952e\u7ea6\u675f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#auto_increment","text":"","title":"AUTO_INCREMENT"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_20","text":"\u67d0\u4e2a\u5b57\u6bb5\u7684\u503c\u81ea\u589e AUTO_INCREMENT \u4e00\u4e2a\u8868\u53ea\u80fd\u6709\u4e00\u4e2a\u81ea\u589e\u5217\uff0c\u8fd9\u4e2a\u5217\u5fc5\u987b\u662f\u6574\u6570\u7c7b\u578b+(\u552f\u4e00\u5217 or \u4e3b\u952e\u5217)","title":"\u662f\u4ec0\u4e48"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_21","text":"","title":"\u4f7f\u7528"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_22","text":"create table employee( eid int primary key , ename varchar(20) ); alter table employee modify eid int auto_increment;","title":"\u6dfb\u52a0\u81ea\u589e"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_23","text":"alter table employee modify eid int;","title":"\u5220\u9664\u7ea6\u675f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_24","text":"\u5728MySQL 8.0\u4e4b\u524d\uff0c\u81ea\u589e\u4e3b\u952eAUTO_INCREMENT\u7684\u503c\u5982\u679c\u5927\u4e8emax(primary key)+1\uff0c\u5728MySQL\u91cd\u542f\u540e\uff0c\u4f1a\u91cd \u7f6eAUTO_INCREMENT=max(primary key)+1\uff0c\u8fd9\u79cd\u73b0\u8c61\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u5bfc\u81f4\u4e1a\u52a1\u4e3b\u952e\u51b2\u7a81\u6216\u8005\u5176\u4ed6\u96be\u4ee5\u53d1 \u73b0\u7684\u95ee\u9898\u3002","title":"\u53d8\u5316"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_25","text":"","title":"\u5916\u952e"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_26","text":"\u9650\u5236\u67d0\u4e2a\u8868\u7684\u67d0\u4e2a\u5b57\u6bb5\u5f15\u7528\u7684\u5b8c\u6574\u6027 \u6bd4\u5982\uff1a\u5458\u5de5\u8868\u7684\u5458\u5de5\u6240\u5728\u90e8\u95e8\u7684\u9009\u62e9\uff0c\u5fc5\u987b\u5728\u90e8\u95e8\u8868\u80fd\u627e\u5230\u5bf9\u5e94\u7684\u90e8\u5206\u3002 \u4e3b\u8868\uff08\u7236\u8868\uff09\uff1a\u88ab\u5f15\u7528\u7684\u8868\uff0c\u88ab\u53c2\u8003\u7684\u8868 \u4ece\u8868\uff08\u5b50\u8868\uff09\uff1a\u5f15\u7528\u522b\u4eba\u7684\u8868\uff0c\u53c2\u8003\u522b\u4eba\u7684\u8868 \u4f8b\u5982\uff1a\u5458\u5de5\u8868\u7684\u5458\u5de5\u6240\u5728\u90e8\u95e8\u8fd9\u4e2a\u5b57\u6bb5\u7684\u503c\u8981\u53c2\u8003\u90e8\u95e8\u8868\uff1a\u90e8\u95e8\u8868\u662f\u4e3b\u8868\uff0c\u5458\u5de5\u8868\u662f\u4ece\u8868\u3002","title":"\u662f\u4ec0\u4e48"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_27","text":"\u4ece\u8868\u7684\u5916\u952e\u5217\uff0c\u5fc5\u987b\u5f15\u7528/\u53c2\u8003\u4e3b\u8868\u7684\u4e3b\u952e\u6216\u552f\u4e00\u7ea6\u675f\u7684\u5217 \u521b\u5efa\u8868\u5148\u4e3b\u8868\u540e\u4ece\u8868\uff0c \u5220\u9664\u8868\u5148\u4ece\u540e\u4e3b \u63d2\u5165+\u5220\u9664\u6570\u636e\u4e5f\u662f\u4e00\u6837\u7684 \u5220\u9664\u5916\u952e\u7ea6\u675f\u540e \u9700\u8981\u624b\u52a8\u5220\u9664\u5bf9\u5e94\u7684\u7d22\u5f15","title":"\u7279\u70b9"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_28","text":"","title":"\u4f7f\u7528"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_29","text":"create table \u4e3b\u8868\u540d\u79f0( \u5b57\u6bb51 \u6570\u636e\u7c7b\u578b primary key, \u5b57\u6bb52 \u6570\u636e\u7c7b\u578b ); create table \u4ece\u8868\u540d\u79f0( \u5b57\u6bb51 \u6570\u636e\u7c7b\u578b primary key, \u5b57\u6bb52 \u6570\u636e\u7c7b\u578b, [CONSTRAINT <\u5916\u952e\u7ea6\u675f\u540d\u79f0>] FOREIGN KEY\uff08\u4ece\u8868\u7684\u67d0\u4e2a\u5b57\u6bb5) references \u4e3b\u8868\u540d(\u88ab\u53c2\u8003\u5b57\u6bb5) ); #(\u4ece\u8868\u7684\u67d0\u4e2a\u5b57\u6bb5)\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u4e0e\u4e3b\u8868\u540d(\u88ab\u53c2\u8003\u5b57\u6bb5)\u7684\u6570\u636e\u7c7b\u578b\u4e00\u81f4\uff0c\u903b\u8f91\u610f\u4e49\u4e5f\u4e00\u6837 #(\u4ece\u8868\u7684\u67d0\u4e2a\u5b57\u6bb5)\u7684\u5b57\u6bb5\u540d\u53ef\u4ee5\u4e0e\u4e3b\u8868\u540d(\u88ab\u53c2\u8003\u5b57\u6bb5)\u7684\u5b57\u6bb5\u540d\u4e00\u6837\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u4e00\u6837 -- FOREIGN KEY: \u5728\u8868\u7ea7\u6307\u5b9a\u5b50\u8868\u4e2d\u7684\u5217 -- REFERENCES: \u6807\u793a\u5728\u7236\u8868\u4e2d\u7684\u5217 ALTER TABLE \u4ece\u8868\u540d ADD [CONSTRAINT \u7ea6\u675f\u540d] FOREIGN KEY (\u4ece\u8868\u7684\u5b57\u6bb5) REFERENCES \u4e3b\u8868\u540d(\u88ab\u5f15\u7528 \u5b57\u6bb5) [on update xx][on delete xx];","title":"\u6dfb\u52a0\u5916\u952e\u7ea6\u675f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_30","text":"(1)\u7b2c\u4e00\u6b65\u5148\u67e5\u770b\u7ea6\u675f\u540d\u548c\u5220\u9664\u5916\u952e\u7ea6\u675f SELECT * FROM information_schema.table_constraints WHERE table_name = '\u8868\u540d\u79f0';#\u67e5\u770b\u67d0\u4e2a \u8868\u7684\u7ea6\u675f\u540d ALTER TABLE \u4ece\u8868\u540d DROP FOREIGN KEY \u5916\u952e\u7ea6\u675f\u540d; \uff082\uff09\u7b2c\u4e8c\u6b65\u67e5\u770b\u7d22\u5f15\u540d\u548c\u5220\u9664\u7d22\u5f15\u3002\uff08\u6ce8\u610f\uff0c\u53ea\u80fd\u624b\u52a8\u5220\u9664\uff09 SHOW INDEX FROM \u8868\u540d\u79f0; #\u67e5\u770b\u67d0\u4e2a\u8868\u7684\u7d22\u5f15\u540d ALTER TABLE \u4ece\u8868\u540d DROP INDEX \u7d22\u5f15\u540d;","title":"\u5220\u9664\u7ea6\u675f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_31","text":"Cascade\u65b9\u5f0f \uff1a\u5728\u7236\u8868\u4e0aupdate/delete\u8bb0\u5f55\u65f6\uff0c\u540c\u6b65update/delete\u6389\u5b50\u8868\u7684\u5339\u914d\u8bb0\u5f55 Set null\u65b9\u5f0f \uff1a\u5728\u7236\u8868\u4e0aupdate/delete\u8bb0\u5f55\u65f6\uff0c\u5c06\u5b50\u8868\u4e0a\u5339\u914d\u8bb0\u5f55\u7684\u5217\u8bbe\u4e3anull\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u5b50 \u8868\u7684\u5916\u952e\u5217\u4e0d\u80fd\u4e3anot null No action\u65b9\u5f0f \uff1a\u5982\u679c\u5b50\u8868\u4e2d\u6709\u5339\u914d\u7684\u8bb0\u5f55\uff0c\u5219\u4e0d\u5141\u8bb8\u5bf9\u7236\u8868\u5bf9\u5e94\u5019\u9009\u952e\u8fdb\u884cupdate/delete\u64cd\u4f5c Restrict\u65b9\u5f0f \uff1a\u540cno action\uff0c \u90fd\u662f\u7acb\u5373\u68c0\u67e5\u5916\u952e\u7ea6\u675f Set default\u65b9\u5f0f \uff08\u5728\u53ef\u89c6\u5316\u5de5\u5177SQLyog\u4e2d\u53ef\u80fd\u663e\u793a\u7a7a\u767d\uff09\uff1a\u7236\u8868\u6709\u53d8\u66f4\u65f6\uff0c\u5b50\u8868\u5c06\u5916\u952e\u5217\u8bbe\u7f6e \u6210\u4e00\u4e2a\u9ed8\u8ba4\u7684\u503c\uff0c\u4f46Innodb\u4e0d\u80fd\u8bc6\u522b \u5bf9\u4e8e\u5916\u952e\u7ea6\u675f\uff0c\u6700\u597d\u662f\u91c7\u7528: ON UPDATE CASCADE ON DELETE RESTRICT \u7684\u65b9\u5f0f\u3002","title":"\u7ea6\u675f\u7b49\u7ea7"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#check","text":"","title":"check"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_32","text":"","title":"\u662f\u4ec0\u4e48"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_33","text":"\u6821\u9a8c\u67d0\u4e2a\u5b57\u6bb5\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 CHECK mysql5.7 check\u5e76\u4e0d\u8d77\u4f5c\u7528\uff0c 8.0\u8d77\u4f5c\u7528","title":"\u5b9a\u4e49"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_34","text":"","title":"\u4f7f\u7528"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#check_1","text":"create table employee( eid int check(eid > 0) , ename varchar(20) );","title":"\u6dfb\u52a0check\u7ea6\u675f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#default","text":"","title":"default"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_35","text":"","title":"\u662f\u4ec0\u4e48"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_36","text":"\u7ed9\u67d0\u4e2a\u5b57\u6bb5\u6307\u5b9a\u9ed8\u8ba4\u503c\uff0c\u5982\u679c\u6ca1\u6709\u663e\u793a\u8d4b\u503c\u5219\u91c7\u7528\u9ed8\u8ba4\u503c DEFAULT","title":"\u5b9a\u4e49"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_37","text":"","title":"\u4f7f\u7528"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/13-%E7%BA%A6%E6%9D%9F/#_38","text":"create table employee( eid int primary key, ename varchar(20) not null, gender char default '\u7537', tel char(11) not null default '' #\u9ed8\u8ba4\u662f\u7a7a\u5b57\u7b26\u4e32 );","title":"\u6dfb\u52a0\u9ed8\u8ba4\u503c"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/14-%E8%A7%86%E5%9B%BE/","text":"\u57fa\u7840 \u662f\u4ec0\u4e48 \u89c6\u56fe\u662f\u4e00\u79cd\u865a\u62df\u8868 \uff0c\u672c\u8eab\u662f\u4e0d\u5177\u6709\u6570\u636e\u7684\uff0c\u5360\u7528\u5f88\u5c11\u7684\u5185\u5b58\u7a7a\u95f4 \u89c6\u56fe\u5efa\u7acb\u5728\u5df2\u6709\u8868\u7684\u57fa\u7840\u4e0a, \u89c6\u56fe\u8d56\u4ee5\u5efa\u7acb\u7684\u8fd9\u4e9b\u8868\u79f0\u4e3a\u57fa\u8868\u3002 \u89c6\u56fe\u7684\u521b\u5efa\u548c\u5220\u9664\u53ea\u5f71\u54cd\u89c6\u56fe\u672c\u8eab\uff0c\u4e0d\u5f71\u54cd\u5bf9\u5e94\u7684\u57fa\u8868\u3002\u4f46\u662f\u5f53\u5bf9\u89c6\u56fe\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u589e\u52a0\u3001\u5220\u9664\u548c \u4fee\u6539\u64cd\u4f5c\u65f6\uff0c\u6570\u636e\u8868\u4e2d\u7684\u6570\u636e\u4f1a\u76f8\u5e94\u5730\u53d1\u751f\u53d8\u5316\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002 \u4e3a\u4ec0\u4e48 \u4f18\u70b9 1.\u64cd\u4f5c\u7b80\u5355 \u89c6\u56fe\u7684\u6570\u636e\u53ef\u80fd\u6765\u81ea\u591a\u5f20\u8868\u590d\u6742\u67e5\u8be2\uff0c \u7528\u6237\u5e76\u4e0d\u9700\u8981\u5173\u5fc3\uff0c\u6570\u636e\u5982\u4f55\u6765 2.\u51cf\u5c11\u6570\u636e\u5197\u4f59 \u89c6\u56fe\u672c\u8eab\u5e76\u4e0d\u5b58\u50a8\u6570\u636e 3.\u6570\u636e\u5b89\u5168 \u53ef\u4ee5\u662f\u539f\u59cb\u8868\u7684\u90e8\u5206\u6570\u636e \u7f3a\u70b9 1.\u539f\u59cb\u8868\u6570\u636e\u7ed3\u6784\u53d1\u751f\u6539\u53d8 2.\u89c6\u56fe\u8fc7\u591a\u7ef4\u62a4\u6210\u672c\u9ad8 \u64cd\u4f5c \u521b\u5efa\u89c6\u56fe \u521b\u5efa\u8868 CREATE TABLE IF NOT EXISTS emp ( id INT(11) AUTO_INCREMENT COMMENT 'id', `last_name` VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u59d3\u540d', `age` INT(11) NOT NULL DEFAULT 0 COMMENT '\u5e74\u9f84', dept_id INT(11) NOT NULL DEFAULT 0 COMMENT '\u90e8\u95e8id', PRIMARY KEY(id) ); CREATE TABLE IF NOT EXISTS dept ( id INT(11) AUTO_INCREMENT COMMENT '\u90e8\u95e8id', `name` VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u90e8\u95e8\u540d\u5b57', PRIMARY KEY(id) ); # \u57fa\u7840\u8868 CREATE VIEW v1 AS SELECT * FROM emp; CREATE VIEW v2 (ID, last_name, age, dept_id) AS SELECT * FROM emp; select * from v2; # \u591a\u8868\u67e5\u8be2 CREATE VIEW v3 AS SELECT e.id EID, d.name DNAME FROM emp e INNER JOIN dept d ON e.dept_id = d.id \u5728\u521b\u5efa\u89c6\u56fe\u65f6\uff0c\u6ca1\u6709\u5728\u89c6\u56fe\u540d\u540e\u9762\u6307\u5b9a\u5b57\u6bb5\u5217\u8868\uff0c\u5219\u89c6\u56fe\u4e2d\u5b57\u6bb5\u5217\u8868\u9ed8\u8ba4\u548cSELECT\u8bed\u53e5\u4e2d\u7684\u5b57 \u6bb5\u5217\u8868\u4e00\u81f4\u3002\u5982\u679cSELECT\u8bed\u53e5\u4e2d\u7ed9\u5b57\u6bb5\u53d6\u4e86\u522b\u540d\uff0c\u90a3\u4e48\u89c6\u56fe\u4e2d\u7684\u5b57\u6bb5\u540d\u548c\u522b\u540d\u76f8\u540c\u3002 \u4e5f\u53ef\u4ee5\u57fa\u4e8e\u89c6\u56fe\u521b\u5efa\u89c6\u56fe \u67e5\u770b\u89c6\u56fe # \u67e5\u770b\u8868+\u89c6\u56fe SHOW TABLES; # \u67e5\u770b\u89c6\u56fe\u7684\u63cf\u8ff0\u4fe1\u606f DESC v1; # \u67e5\u770b\u89c6\u56fe\u521b\u5efa\u8bed\u53e5 SHOW CREATE VIEW v3; # \u67e5\u770b\u89c6\u56fe\u4fe1\u606f\uff08\u663e\u793a\u6570\u636e\u8868\u7684\u5b58\u50a8\u5f15\u64ce\u3001\u7248\u672c\u3001\u6570\u636e\u884c\u6570\u548c\u6570\u636e\u5927\u5c0f\u7b49\uff09 SHOW TABLE STATUS LIKE 'v1' \u89c6\u56fe\u6570\u636e\u66f4\u65b0 \u4e00\u822c\u662f\u53ef\u4ee5 insert update delete \u4ee5\u4e0b\u60c5\u51b5\u5747\u4e0d\u53ef\u4ee5\u66f4\u65b0 ???+ warning - \u5728\u5b9a\u4e49\u89c6\u56fe\u7684\u65f6\u5019\u6307\u5b9a\u4e86\u201cALGORITHM = TEMPTABLE\u201d\uff0c\u89c6\u56fe\u5c06\u4e0d\u652f\u6301INSERT\u548cDELETE\u64cd\u4f5c\uff1b - \u89c6\u56fe\u4e2d\u4e0d\u5305\u542b\u57fa\u8868\u4e2d\u6240\u6709\u88ab\u5b9a\u4e49\u4e3a\u975e\u7a7a\u53c8\u672a\u6307\u5b9a\u9ed8\u8ba4\u503c\u7684\u5217\uff0c\u89c6\u56fe\u5c06\u4e0d\u652f\u6301INSERT\u64cd\u4f5c\uff1b - \u5728\u5b9a\u4e49\u89c6\u56fe\u7684SELECT\u8bed\u53e5\u4e2d\u4f7f\u7528\u4e86 JOIN\u8054\u5408\u67e5\u8be2 \uff0c\u89c6\u56fe\u5c06\u4e0d\u652f\u6301INSERT\u548cDELETE\u64cd\u4f5c\uff1b - \u5728\u5b9a\u4e49\u89c6\u56fe\u7684SELECT\u8bed\u53e5\u540e\u7684\u5b57\u6bb5\u5217\u8868\u4e2d\u4f7f\u7528\u4e86 \u6570\u5b66\u8868\u8fbe\u5f0f \u6216 \u5b50\u67e5\u8be2 \uff0c\u89c6\u56fe\u5c06\u4e0d\u652f\u6301INSERT\uff0c\u4e5f \u4e0d\u652f\u6301UPDATE - \u4f7f\u7528\u4e86\u6570\u5b66\u8868\u8fbe\u5f0f\u3001\u5b50\u67e5\u8be2\u7684\u5b57\u6bb5\u503c\uff1b - \u5728\u5b9a\u4e49\u89c6\u56fe\u7684SELECT\u8bed\u53e5\u540e\u7684\u5b57\u6bb5\u5217\u8868\u4e2d\u4f7f\u7528 DISTINCT \u3001 \u805a\u5408\u51fd\u6570 \u3001 GROUP BY \u3001 HAVING \u3001 UNION \u7b49\uff0c\u89c6\u56fe\u5c06\u4e0d\u652f\u6301INSERT\u3001UPDATE\u3001DELETE\uff1b - \u5728\u5b9a\u4e49\u89c6\u56fe\u7684SELECT\u8bed\u53e5\u4e2d\u5305\u542b\u4e86\u5b50\u67e5\u8be2\uff0c\u800c\u5b50\u67e5\u8be2\u4e2d\u5f15\u7528\u4e86FROM\u540e\u9762\u7684\u8868\uff0c\u89c6\u56fe\u5c06\u4e0d\u652f\u6301 INSERT\u3001UPDATE\u3001DELETE\uff1b - \u89c6\u56fe\u5b9a\u4e49\u57fa\u4e8e\u4e00\u4e2a \u4e0d\u53ef\u66f4\u65b0\u89c6\u56fe \u4fee\u6539\u89c6\u56fe ALTER VIEW \u89c6\u56fe\u540d\u79f0 AS \u67e5\u8be2\u8bed\u53e5 \u5220\u9664\u89c6\u56fe DROP VIEW IF EXISTS \u89c6\u56fe\u540d\u79f0;","title":"14-\u89c6\u56fe"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/14-%E8%A7%86%E5%9B%BE/#_1","text":"","title":"\u57fa\u7840"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/14-%E8%A7%86%E5%9B%BE/#_2","text":"\u89c6\u56fe\u662f\u4e00\u79cd\u865a\u62df\u8868 \uff0c\u672c\u8eab\u662f\u4e0d\u5177\u6709\u6570\u636e\u7684\uff0c\u5360\u7528\u5f88\u5c11\u7684\u5185\u5b58\u7a7a\u95f4 \u89c6\u56fe\u5efa\u7acb\u5728\u5df2\u6709\u8868\u7684\u57fa\u7840\u4e0a, \u89c6\u56fe\u8d56\u4ee5\u5efa\u7acb\u7684\u8fd9\u4e9b\u8868\u79f0\u4e3a\u57fa\u8868\u3002 \u89c6\u56fe\u7684\u521b\u5efa\u548c\u5220\u9664\u53ea\u5f71\u54cd\u89c6\u56fe\u672c\u8eab\uff0c\u4e0d\u5f71\u54cd\u5bf9\u5e94\u7684\u57fa\u8868\u3002\u4f46\u662f\u5f53\u5bf9\u89c6\u56fe\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u589e\u52a0\u3001\u5220\u9664\u548c \u4fee\u6539\u64cd\u4f5c\u65f6\uff0c\u6570\u636e\u8868\u4e2d\u7684\u6570\u636e\u4f1a\u76f8\u5e94\u5730\u53d1\u751f\u53d8\u5316\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002","title":"\u662f\u4ec0\u4e48"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/14-%E8%A7%86%E5%9B%BE/#_3","text":"","title":"\u4e3a\u4ec0\u4e48"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/14-%E8%A7%86%E5%9B%BE/#_4","text":"1.\u64cd\u4f5c\u7b80\u5355 \u89c6\u56fe\u7684\u6570\u636e\u53ef\u80fd\u6765\u81ea\u591a\u5f20\u8868\u590d\u6742\u67e5\u8be2\uff0c \u7528\u6237\u5e76\u4e0d\u9700\u8981\u5173\u5fc3\uff0c\u6570\u636e\u5982\u4f55\u6765 2.\u51cf\u5c11\u6570\u636e\u5197\u4f59 \u89c6\u56fe\u672c\u8eab\u5e76\u4e0d\u5b58\u50a8\u6570\u636e 3.\u6570\u636e\u5b89\u5168 \u53ef\u4ee5\u662f\u539f\u59cb\u8868\u7684\u90e8\u5206\u6570\u636e","title":"\u4f18\u70b9"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/14-%E8%A7%86%E5%9B%BE/#_5","text":"1.\u539f\u59cb\u8868\u6570\u636e\u7ed3\u6784\u53d1\u751f\u6539\u53d8 2.\u89c6\u56fe\u8fc7\u591a\u7ef4\u62a4\u6210\u672c\u9ad8","title":"\u7f3a\u70b9"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/14-%E8%A7%86%E5%9B%BE/#_6","text":"","title":"\u64cd\u4f5c"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/14-%E8%A7%86%E5%9B%BE/#_7","text":"\u521b\u5efa\u8868 CREATE TABLE IF NOT EXISTS emp ( id INT(11) AUTO_INCREMENT COMMENT 'id', `last_name` VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u59d3\u540d', `age` INT(11) NOT NULL DEFAULT 0 COMMENT '\u5e74\u9f84', dept_id INT(11) NOT NULL DEFAULT 0 COMMENT '\u90e8\u95e8id', PRIMARY KEY(id) ); CREATE TABLE IF NOT EXISTS dept ( id INT(11) AUTO_INCREMENT COMMENT '\u90e8\u95e8id', `name` VARCHAR(255) NOT NULL DEFAULT '' COMMENT '\u90e8\u95e8\u540d\u5b57', PRIMARY KEY(id) ); # \u57fa\u7840\u8868 CREATE VIEW v1 AS SELECT * FROM emp; CREATE VIEW v2 (ID, last_name, age, dept_id) AS SELECT * FROM emp; select * from v2; # \u591a\u8868\u67e5\u8be2 CREATE VIEW v3 AS SELECT e.id EID, d.name DNAME FROM emp e INNER JOIN dept d ON e.dept_id = d.id \u5728\u521b\u5efa\u89c6\u56fe\u65f6\uff0c\u6ca1\u6709\u5728\u89c6\u56fe\u540d\u540e\u9762\u6307\u5b9a\u5b57\u6bb5\u5217\u8868\uff0c\u5219\u89c6\u56fe\u4e2d\u5b57\u6bb5\u5217\u8868\u9ed8\u8ba4\u548cSELECT\u8bed\u53e5\u4e2d\u7684\u5b57 \u6bb5\u5217\u8868\u4e00\u81f4\u3002\u5982\u679cSELECT\u8bed\u53e5\u4e2d\u7ed9\u5b57\u6bb5\u53d6\u4e86\u522b\u540d\uff0c\u90a3\u4e48\u89c6\u56fe\u4e2d\u7684\u5b57\u6bb5\u540d\u548c\u522b\u540d\u76f8\u540c\u3002 \u4e5f\u53ef\u4ee5\u57fa\u4e8e\u89c6\u56fe\u521b\u5efa\u89c6\u56fe","title":"\u521b\u5efa\u89c6\u56fe"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/14-%E8%A7%86%E5%9B%BE/#_8","text":"# \u67e5\u770b\u8868+\u89c6\u56fe SHOW TABLES; # \u67e5\u770b\u89c6\u56fe\u7684\u63cf\u8ff0\u4fe1\u606f DESC v1; # \u67e5\u770b\u89c6\u56fe\u521b\u5efa\u8bed\u53e5 SHOW CREATE VIEW v3; # \u67e5\u770b\u89c6\u56fe\u4fe1\u606f\uff08\u663e\u793a\u6570\u636e\u8868\u7684\u5b58\u50a8\u5f15\u64ce\u3001\u7248\u672c\u3001\u6570\u636e\u884c\u6570\u548c\u6570\u636e\u5927\u5c0f\u7b49\uff09 SHOW TABLE STATUS LIKE 'v1'","title":"\u67e5\u770b\u89c6\u56fe"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/14-%E8%A7%86%E5%9B%BE/#_9","text":"\u4e00\u822c\u662f\u53ef\u4ee5 insert update delete","title":"\u89c6\u56fe\u6570\u636e\u66f4\u65b0"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/14-%E8%A7%86%E5%9B%BE/#_10","text":"???+ warning - \u5728\u5b9a\u4e49\u89c6\u56fe\u7684\u65f6\u5019\u6307\u5b9a\u4e86\u201cALGORITHM = TEMPTABLE\u201d\uff0c\u89c6\u56fe\u5c06\u4e0d\u652f\u6301INSERT\u548cDELETE\u64cd\u4f5c\uff1b - \u89c6\u56fe\u4e2d\u4e0d\u5305\u542b\u57fa\u8868\u4e2d\u6240\u6709\u88ab\u5b9a\u4e49\u4e3a\u975e\u7a7a\u53c8\u672a\u6307\u5b9a\u9ed8\u8ba4\u503c\u7684\u5217\uff0c\u89c6\u56fe\u5c06\u4e0d\u652f\u6301INSERT\u64cd\u4f5c\uff1b - \u5728\u5b9a\u4e49\u89c6\u56fe\u7684SELECT\u8bed\u53e5\u4e2d\u4f7f\u7528\u4e86 JOIN\u8054\u5408\u67e5\u8be2 \uff0c\u89c6\u56fe\u5c06\u4e0d\u652f\u6301INSERT\u548cDELETE\u64cd\u4f5c\uff1b - \u5728\u5b9a\u4e49\u89c6\u56fe\u7684SELECT\u8bed\u53e5\u540e\u7684\u5b57\u6bb5\u5217\u8868\u4e2d\u4f7f\u7528\u4e86 \u6570\u5b66\u8868\u8fbe\u5f0f \u6216 \u5b50\u67e5\u8be2 \uff0c\u89c6\u56fe\u5c06\u4e0d\u652f\u6301INSERT\uff0c\u4e5f \u4e0d\u652f\u6301UPDATE - \u4f7f\u7528\u4e86\u6570\u5b66\u8868\u8fbe\u5f0f\u3001\u5b50\u67e5\u8be2\u7684\u5b57\u6bb5\u503c\uff1b - \u5728\u5b9a\u4e49\u89c6\u56fe\u7684SELECT\u8bed\u53e5\u540e\u7684\u5b57\u6bb5\u5217\u8868\u4e2d\u4f7f\u7528 DISTINCT \u3001 \u805a\u5408\u51fd\u6570 \u3001 GROUP BY \u3001 HAVING \u3001 UNION \u7b49\uff0c\u89c6\u56fe\u5c06\u4e0d\u652f\u6301INSERT\u3001UPDATE\u3001DELETE\uff1b - \u5728\u5b9a\u4e49\u89c6\u56fe\u7684SELECT\u8bed\u53e5\u4e2d\u5305\u542b\u4e86\u5b50\u67e5\u8be2\uff0c\u800c\u5b50\u67e5\u8be2\u4e2d\u5f15\u7528\u4e86FROM\u540e\u9762\u7684\u8868\uff0c\u89c6\u56fe\u5c06\u4e0d\u652f\u6301 INSERT\u3001UPDATE\u3001DELETE\uff1b - \u89c6\u56fe\u5b9a\u4e49\u57fa\u4e8e\u4e00\u4e2a \u4e0d\u53ef\u66f4\u65b0\u89c6\u56fe","title":"\u4ee5\u4e0b\u60c5\u51b5\u5747\u4e0d\u53ef\u4ee5\u66f4\u65b0"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/14-%E8%A7%86%E5%9B%BE/#_11","text":"ALTER VIEW \u89c6\u56fe\u540d\u79f0 AS \u67e5\u8be2\u8bed\u53e5","title":"\u4fee\u6539\u89c6\u56fe"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/14-%E8%A7%86%E5%9B%BE/#_12","text":"DROP VIEW IF EXISTS \u89c6\u56fe\u540d\u79f0;","title":"\u5220\u9664\u89c6\u56fe"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/","text":"\u5b58\u50a8\u8fc7\u7a0b \u662f\u4ec0\u4e48 \u5c31\u662f\u4e00\u7ec4\u7ecf\u8fc7 \u9884\u5148\u7f16\u8bd1 \u7684 SQL \u8bed\u53e5 \u7684\u5c01\u88c5 \u5b58\u50a8\u5230mysql \u8bed\u6cd5 \u57fa\u7840\u683c\u5f0f CREATE PROCEDURE \u5b58\u50a8\u8fc7\u7a0b\u540d(IN|OUT|INOUT \u53c2\u6570\u540d \u53c2\u6570\u7c7b\u578b,...) [characteristics ...] BEGIN \u5b58\u50a8\u8fc7\u7a0b\u4f53 END \u7279\u522b\u8bf4\u660e 1.\u6a21\u5f0f IN \uff1a\u5f53\u524d\u53c2\u6570\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u8868\u793a\u5165\u53c2\uff1b \u5b58\u50a8\u8fc7\u7a0b\u53ea\u662f\u8bfb\u53d6\u8fd9\u4e2a\u53c2\u6570\u7684\u503c\u3002\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u53c2\u6570\u79cd\u7c7b\uff0c \u9ed8\u8ba4\u5c31\u662f IN \uff0c\u8868\u793a\u8f93\u5165\u53c2\u6570\u3002 OUT \uff1a\u5f53\u524d\u53c2\u6570\u4e3a\u8f93\u51fa\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u8868\u793a\u51fa\u53c2\uff1b \u6267\u884c\u5b8c\u6210\u4e4b\u540e\uff0c\u8c03\u7528\u8fd9\u4e2a\u5b58\u50a8\u8fc7\u7a0b\u7684\u5ba2\u6237\u7aef\u6216\u8005\u5e94\u7528\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u8bfb\u53d6\u8fd9\u4e2a\u53c2\u6570\u8fd4\u56de\u7684\u503c\u4e86\u3002 INOUT \uff1a\u5f53\u524d\u53c2\u6570\u65e2\u53ef\u4ee5\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u8f93\u51fa\u53c2\u6570\u3002 2.\u5f62\u53c2\u7c7b\u578b\u53ef\u4ee5\u662f MySQL\u6570\u636e\u5e93\u4e2d\u7684\u4efb\u610f\u7c7b\u578b\u3002 3.characteristics \u8868\u793a\u521b\u5efa\u5b58\u50a8\u8fc7\u7a0b\u65f6\u6307\u5b9a\u7684\u5bf9\u5b58\u50a8\u8fc7\u7a0b\u7684\u7ea6\u675f\u6761\u4ef6 LANGUAGE SQL | [NOT] DETERMINISTIC | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA } | SQL SECURITY { DEFINER | INVOKER } | COMMENT 'string' LANGUAGE SQL \uff1a\u8bf4\u660e\u5b58\u50a8\u8fc7\u7a0b\u6267\u884c\u4f53\u662f\u7531SQL\u8bed\u53e5\u7ec4\u6210\u7684\uff0c\u5f53\u524d\u7cfb\u7edf\u652f\u6301\u7684\u8bed\u8a00\u4e3aSQL\u3002 [NOT] DETERMINISTIC \uff1a\u6307\u660e\u5b58\u50a8\u8fc7\u7a0b\u6267\u884c\u7684\u7ed3\u679c\u662f\u5426\u786e\u5b9a\u3002 DETERMINISTIC\u8868\u793a\u7ed3\u679c\u662f\u786e\u5b9a \u7684\u3002\u6bcf\u6b21\u6267\u884c\u5b58\u50a8\u8fc7\u7a0b\u65f6\uff0c\u76f8\u540c\u7684\u8f93\u5165\u4f1a\u5f97\u5230\u76f8\u540c\u7684\u8f93\u51fa\u3002 NOT DETERMINISTIC\u8868\u793a\u7ed3\u679c\u662f\u4e0d\u786e\u5b9a \u7684\uff0c\u76f8\u540c\u7684\u8f93\u5165\u53ef\u80fd\u5f97\u5230\u4e0d\u540c\u7684\u8f93\u51fa\u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u4efb\u610f\u4e00\u4e2a\u503c\uff0c\u9ed8\u8ba4\u4e3aNOT DETERMINISTIC\u3002 { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA } \uff1a\u6307\u660e\u5b50\u7a0b\u5e8f\u4f7f \u7528SQL\u8bed\u53e5\u7684\u9650\u5236\u3002 CONTAINS SQL\u8868\u793a\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u7684\u5b50\u7a0b\u5e8f\u5305\u542bSQL\u8bed\u53e5\uff0c\u4f46\u662f\u5e76\u4e0d\u5305\u542b\u8bfb\u5199\u6570\u636e\u7684SQL\u8bed\u53e5\uff1b NO SQL\u8868\u793a\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u7684\u5b50\u7a0b\u5e8f\u4e2d\u4e0d\u5305\u542b\u4efb\u4f55SQL\u8bed\u53e5\uff1b READS SQL DATA\u8868\u793a\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u7684\u5b50\u7a0b\u5e8f\u4e2d\u5305\u542b\u8bfb\u6570\u636e\u7684SQL\u8bed\u53e5\uff1b MODIFIES SQL DATA\u8868\u793a\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u7684\u5b50\u7a0b\u5e8f\u4e2d\u5305\u542b\u5199\u6570\u636e\u7684SQL\u8bed\u53e5\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7cfb\u7edf\u4f1a\u6307\u5b9a\u4e3aCONTAINS SQL\u3002 SQL SECURITY { DEFINER | INVOKER } \uff1a\u6267\u884c\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u7684\u6743\u9650\uff0c\u5373\u6307\u660e\u54ea\u4e9b\u7528\u6237\u80fd\u591f\u6267 \u884c\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u3002 DEFINER \u8868\u793a\u53ea\u6709\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u7684\u521b\u5efa\u8005\u6216\u8005\u5b9a\u4e49\u8005\u624d\u80fd\u6267\u884c\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\uff1b INVOKER \u8868\u793a\u62e5\u6709\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u7684\u8bbf\u95ee\u6743\u9650\u7684\u7528\u6237\u80fd\u591f\u6267\u884c\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u3002 4.\u5b58\u50a8\u8fc7\u7a0b\u4f53 BEGIN\u2026END\uff1aBEGIN\u2026END \u4e2d\u95f4\u5305\u542b\u4e86\u591a\u4e2a\u8bed\u53e5\uff0c\u6bcf\u4e2a\u8bed\u53e5\u90fd\u4ee5\uff08;\uff09\u53f7\u4e3a\u7ed3\u675f\u7b26\u3002 DECLARE\uff1aDECLARE \u7528\u6765\u58f0\u660e\u53d8\u91cf\uff0c\u4f7f\u7528\u7684\u4f4d\u7f6e\u5728\u4e8e BEGIN\u2026END \u8bed\u53e5\u4e2d\u95f4\uff0c\u800c\u4e14\u9700\u8981\u5728\u5176\u4ed6\u8bed\u53e5\u4f7f\u7528\u4e4b\u524d\u8fdb \u884c\u53d8\u91cf\u7684\u58f0\u660e\u3002 SET\uff1a\u8d4b\u503c\u8bed\u53e5\uff0c\u7528\u4e8e\u5bf9\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c\u3002 SELECT\u2026 INTO\uff1a\u628a\u4ece\u6570\u636e\u8868\u4e2d\u67e5\u8be2\u7684\u7ed3\u679c\u5b58\u653e\u5230\u53d8\u91cf\u4e2d\uff0c\u4e5f\u5c31\u662f\u4e3a\u53d8\u91cf\u8d4b\u503c\u3002 5.\u9700\u8981\u8bbe\u7f6e\u65b0\u7684\u7ed3\u675f\u6807\u8bb0 \u56e0\u4e3aMySQL\u9ed8\u8ba4\u7684\u8bed\u53e5\u7ed3\u675f\u7b26\u53f7\u4e3a\u5206\u53f7';'\u3002\u4e3a\u4e86\u907f\u514d\u4e0e\u5b58\u50a8\u8fc7\u7a0b\u4e2dSQL\u8bed\u53e5\u7ed3\u675f\u7b26\u76f8\u51b2\u7a81\uff0c\u9700\u8981\u4f7f\u7528 DELIMITER\u6539\u53d8\u5b58\u50a8\u8fc7\u7a0b\u7684\u7ed3\u675f\u7b26\u3002 \u4f7f\u7528 \u521b\u5efa + \u8c03\u7528 # IN \u6a21\u5f0f \u8f93\u5165 DELIMITER $ CREATE PROCEDURE p1(IN t INT) BEGIN SELECT COUNT(1) FROM c1 WHERE t = 1; END $ CALL p1(1); # out \u6a21\u5f0f\u8f93\u51fa DELIMITER $ CREATE PROCEDURE p2(OUT o1 INT) BEGIN SELECT COUNT(1) INTO o1 FROM c1; END $ SET @o1 = 100; CALL p2(@o1); SELECT @o1; # inout \u6a21\u5f0f\u65e2\u53ef\u4ee5\u662f\u8f93\u5165\u53c8\u662f\u8f93\u51fa DELIMITER $ CREATE PROCEDURE p3(INOUT empname VARCHAR(20)) BEGIN SELECT ename INTO empname FROM emps WHERE eid = (SELECT MID FROM emps WHERE ename=empname); END $ SET @io2 = 'matt'; CALL p3(@io2); SELECT @io2; \u5b58\u50a8\u8fc7\u7a0b\u3001\u51fd\u6570 \u7684\u67e5\u770b\u3001\u4fee\u6539\u3001\u5220\u9664 \u67e5\u770b 1.\u521b\u5efa\u4fe1\u606f SHOW CREATE {PROCEDURE | FUNCTION} \u5b58\u50a8\u8fc7\u7a0b\u540d\u6216\u51fd\u6570\u540d SHOW CREATE FUNCTION test_db.CountProc 2.\u72b6\u6001\u4fe1\u606f SHOW {PROCEDURE | FUNCTION} STATUS [LIKE 'pattern'] SHOW PROCEDURE STATUS LIKE 'SELECT%' 3.\u4eceinformation_schema.Routines\u8868\u4e2d\u67e5\u770b\u5b58\u50a8\u8fc7\u7a0b\u548c\u51fd\u6570\u7684\u4fe1\u606f SELECT * FROM information_schema.Routines WHERE ROUTINE_NAME='\u5b58\u50a8\u8fc7\u7a0b\u6216\u51fd\u6570\u7684\u540d' [AND ROUTINE_TYPE = {'PROCEDURE|FUNCTION'}]; SELECT * FROM information_schema.Routines WHERE ROUTINE_NAME='count_by_id' AND ROUTINE_TYPE = 'FUNCTION' \u5b58\u50a8\u51fd\u6570 \u662f\u4ec0\u4e48 \u81ea\u5b9a\u4e49\u51fd\u6570 \u8bed\u6cd5 CREATE FUNCTION \u51fd\u6570\u540d(\u53c2\u6570\u540d \u53c2\u6570\u7c7b\u578b,...) RETURNS \u8fd4\u56de\u503c\u7c7b\u578b [characteristics ...] BEGIN \u51fd\u6570\u4f53 #\u51fd\u6570\u4f53\u4e2d\u80af\u5b9a\u6709 RETURN \u8bed\u53e5 END 1\u3001\u53c2\u6570\u5217\u8868\uff1a\u6307\u5b9a\u53c2\u6570\u4e3aIN\u3001OUT\u6216INOUT\u53ea\u5bf9PROCEDURE\u662f\u5408\u6cd5\u7684\uff0cFUNCTION\u4e2d\u603b\u662f\u9ed8\u8ba4\u4e3aIN\u53c2 \u6570\u3002 2\u3001RETURNS type \u8bed\u53e5\u8868\u793a\u51fd\u6570\u8fd4\u56de\u6570\u636e\u7684\u7c7b\u578b\uff1b RETURNS\u5b50\u53e5\u53ea\u80fd\u5bf9FUNCTION\u505a\u6307\u5b9a\uff0c\u5bf9\u51fd\u6570\u800c\u8a00\u8fd9\u662f \u5f3a\u5236 \u7684\u3002\u5b83\u7528\u6765\u6307\u5b9a\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u800c\u4e14\u51fd \u6570\u4f53\u5fc5\u987b\u5305\u542b\u4e00\u4e2a RETURN value \u8bed\u53e5\u3002 3\u3001characteristic \u521b\u5efa\u51fd\u6570\u65f6\u6307\u5b9a\u7684\u5bf9\u51fd\u6570\u7684\u7ea6\u675f\u3002\u53d6\u503c\u4e0e\u521b\u5efa\u5b58\u50a8\u8fc7\u7a0b\u65f6\u76f8\u540c\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002 4\u3001\u51fd\u6570\u4f53\u4e5f\u53ef\u4ee5\u7528BEGIN\u2026END\u6765\u8868\u793aSQL\u4ee3\u7801\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u3002\u5982\u679c\u51fd\u6570\u4f53\u53ea\u6709\u4e00\u6761\u8bed\u53e5\uff0c\u4e5f\u53ef\u4ee5\u7701\u7565 BEGIN\u2026END \u8c03\u7528\u5b58\u50a8\u51fd\u6570 SELECT \u51fd\u6570\u540d(\u5b9e\u53c2\u5217\u8868) \u4f7f\u7528 DELIMITER $ CREATE FUNCTION f1(t1 INT) RETURNS INT DETERMINISTIC CONTAINS SQL BEGIN RETURN (SELECT COUNT(1) FROM c1 WHERE t1 = 1); END $ SELECT f1(2) \u5206\u6790 \u4f18\u70b9 \u4e00\u6b21\u7f16\u8bd1\u591a\u6b21\u4f7f\u7528\uff1a \u51cf\u5c11\u7f51\u7edc\u4f20\u8f93\u91cf:\u4e00\u6b21\u8fde\u63a5\uff0c\u53ef\u4ee5\u4f20\u8f93\u591a\u6761sql \u5b89\u5168\uff1a\u8c03\u7528\u8005\u5e76\u4e0d\u77e5\u9053\u5177\u4f53sql \u7f3a\u70b9 \u53ef\u79fb\u690d\u6027\u5dee\uff08\u4e0d\u540c\u6570\u636e\u5e93\uff09 \u8c03\u5f0f\u56f0\u96be \u7248\u672c\u7ba1\u7406\u56f0\u96be\uff1a\u5e93\u8868\u53d1\u751f\u53d8\u5316\u53ef\u80fd\u5bfc\u81f4\u5b58\u50a8\u8fc7\u7a0b\u5931\u6548","title":"15-\u5b58\u50a8\u8fc7\u7a0b\u548c\u51fd\u6570"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_1","text":"","title":"\u5b58\u50a8\u8fc7\u7a0b"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_2","text":"\u5c31\u662f\u4e00\u7ec4\u7ecf\u8fc7 \u9884\u5148\u7f16\u8bd1 \u7684 SQL \u8bed\u53e5 \u7684\u5c01\u88c5 \u5b58\u50a8\u5230mysql","title":"\u662f\u4ec0\u4e48"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_3","text":"","title":"\u8bed\u6cd5"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_4","text":"CREATE PROCEDURE \u5b58\u50a8\u8fc7\u7a0b\u540d(IN|OUT|INOUT \u53c2\u6570\u540d \u53c2\u6570\u7c7b\u578b,...) [characteristics ...] BEGIN \u5b58\u50a8\u8fc7\u7a0b\u4f53 END","title":"\u57fa\u7840\u683c\u5f0f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_5","text":"","title":"\u7279\u522b\u8bf4\u660e"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#1","text":"IN \uff1a\u5f53\u524d\u53c2\u6570\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u8868\u793a\u5165\u53c2\uff1b \u5b58\u50a8\u8fc7\u7a0b\u53ea\u662f\u8bfb\u53d6\u8fd9\u4e2a\u53c2\u6570\u7684\u503c\u3002\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u53c2\u6570\u79cd\u7c7b\uff0c \u9ed8\u8ba4\u5c31\u662f IN \uff0c\u8868\u793a\u8f93\u5165\u53c2\u6570\u3002 OUT \uff1a\u5f53\u524d\u53c2\u6570\u4e3a\u8f93\u51fa\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u8868\u793a\u51fa\u53c2\uff1b \u6267\u884c\u5b8c\u6210\u4e4b\u540e\uff0c\u8c03\u7528\u8fd9\u4e2a\u5b58\u50a8\u8fc7\u7a0b\u7684\u5ba2\u6237\u7aef\u6216\u8005\u5e94\u7528\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u8bfb\u53d6\u8fd9\u4e2a\u53c2\u6570\u8fd4\u56de\u7684\u503c\u4e86\u3002 INOUT \uff1a\u5f53\u524d\u53c2\u6570\u65e2\u53ef\u4ee5\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u8f93\u51fa\u53c2\u6570\u3002","title":"1.\u6a21\u5f0f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#2-mysql","text":"","title":"2.\u5f62\u53c2\u7c7b\u578b\u53ef\u4ee5\u662f MySQL\u6570\u636e\u5e93\u4e2d\u7684\u4efb\u610f\u7c7b\u578b\u3002"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#3characteristics","text":"LANGUAGE SQL | [NOT] DETERMINISTIC | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA } | SQL SECURITY { DEFINER | INVOKER } | COMMENT 'string' LANGUAGE SQL \uff1a\u8bf4\u660e\u5b58\u50a8\u8fc7\u7a0b\u6267\u884c\u4f53\u662f\u7531SQL\u8bed\u53e5\u7ec4\u6210\u7684\uff0c\u5f53\u524d\u7cfb\u7edf\u652f\u6301\u7684\u8bed\u8a00\u4e3aSQL\u3002 [NOT] DETERMINISTIC \uff1a\u6307\u660e\u5b58\u50a8\u8fc7\u7a0b\u6267\u884c\u7684\u7ed3\u679c\u662f\u5426\u786e\u5b9a\u3002 DETERMINISTIC\u8868\u793a\u7ed3\u679c\u662f\u786e\u5b9a \u7684\u3002\u6bcf\u6b21\u6267\u884c\u5b58\u50a8\u8fc7\u7a0b\u65f6\uff0c\u76f8\u540c\u7684\u8f93\u5165\u4f1a\u5f97\u5230\u76f8\u540c\u7684\u8f93\u51fa\u3002 NOT DETERMINISTIC\u8868\u793a\u7ed3\u679c\u662f\u4e0d\u786e\u5b9a \u7684\uff0c\u76f8\u540c\u7684\u8f93\u5165\u53ef\u80fd\u5f97\u5230\u4e0d\u540c\u7684\u8f93\u51fa\u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u4efb\u610f\u4e00\u4e2a\u503c\uff0c\u9ed8\u8ba4\u4e3aNOT DETERMINISTIC\u3002 { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA } \uff1a\u6307\u660e\u5b50\u7a0b\u5e8f\u4f7f \u7528SQL\u8bed\u53e5\u7684\u9650\u5236\u3002 CONTAINS SQL\u8868\u793a\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u7684\u5b50\u7a0b\u5e8f\u5305\u542bSQL\u8bed\u53e5\uff0c\u4f46\u662f\u5e76\u4e0d\u5305\u542b\u8bfb\u5199\u6570\u636e\u7684SQL\u8bed\u53e5\uff1b NO SQL\u8868\u793a\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u7684\u5b50\u7a0b\u5e8f\u4e2d\u4e0d\u5305\u542b\u4efb\u4f55SQL\u8bed\u53e5\uff1b READS SQL DATA\u8868\u793a\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u7684\u5b50\u7a0b\u5e8f\u4e2d\u5305\u542b\u8bfb\u6570\u636e\u7684SQL\u8bed\u53e5\uff1b MODIFIES SQL DATA\u8868\u793a\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u7684\u5b50\u7a0b\u5e8f\u4e2d\u5305\u542b\u5199\u6570\u636e\u7684SQL\u8bed\u53e5\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7cfb\u7edf\u4f1a\u6307\u5b9a\u4e3aCONTAINS SQL\u3002 SQL SECURITY { DEFINER | INVOKER } \uff1a\u6267\u884c\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u7684\u6743\u9650\uff0c\u5373\u6307\u660e\u54ea\u4e9b\u7528\u6237\u80fd\u591f\u6267 \u884c\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u3002 DEFINER \u8868\u793a\u53ea\u6709\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u7684\u521b\u5efa\u8005\u6216\u8005\u5b9a\u4e49\u8005\u624d\u80fd\u6267\u884c\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\uff1b INVOKER \u8868\u793a\u62e5\u6709\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u7684\u8bbf\u95ee\u6743\u9650\u7684\u7528\u6237\u80fd\u591f\u6267\u884c\u5f53\u524d\u5b58\u50a8\u8fc7\u7a0b\u3002","title":"3.characteristics \u8868\u793a\u521b\u5efa\u5b58\u50a8\u8fc7\u7a0b\u65f6\u6307\u5b9a\u7684\u5bf9\u5b58\u50a8\u8fc7\u7a0b\u7684\u7ea6\u675f\u6761\u4ef6"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#4","text":"BEGIN\u2026END\uff1aBEGIN\u2026END \u4e2d\u95f4\u5305\u542b\u4e86\u591a\u4e2a\u8bed\u53e5\uff0c\u6bcf\u4e2a\u8bed\u53e5\u90fd\u4ee5\uff08;\uff09\u53f7\u4e3a\u7ed3\u675f\u7b26\u3002 DECLARE\uff1aDECLARE \u7528\u6765\u58f0\u660e\u53d8\u91cf\uff0c\u4f7f\u7528\u7684\u4f4d\u7f6e\u5728\u4e8e BEGIN\u2026END \u8bed\u53e5\u4e2d\u95f4\uff0c\u800c\u4e14\u9700\u8981\u5728\u5176\u4ed6\u8bed\u53e5\u4f7f\u7528\u4e4b\u524d\u8fdb \u884c\u53d8\u91cf\u7684\u58f0\u660e\u3002 SET\uff1a\u8d4b\u503c\u8bed\u53e5\uff0c\u7528\u4e8e\u5bf9\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c\u3002 SELECT\u2026 INTO\uff1a\u628a\u4ece\u6570\u636e\u8868\u4e2d\u67e5\u8be2\u7684\u7ed3\u679c\u5b58\u653e\u5230\u53d8\u91cf\u4e2d\uff0c\u4e5f\u5c31\u662f\u4e3a\u53d8\u91cf\u8d4b\u503c\u3002","title":"4.\u5b58\u50a8\u8fc7\u7a0b\u4f53"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#5","text":"\u56e0\u4e3aMySQL\u9ed8\u8ba4\u7684\u8bed\u53e5\u7ed3\u675f\u7b26\u53f7\u4e3a\u5206\u53f7';'\u3002\u4e3a\u4e86\u907f\u514d\u4e0e\u5b58\u50a8\u8fc7\u7a0b\u4e2dSQL\u8bed\u53e5\u7ed3\u675f\u7b26\u76f8\u51b2\u7a81\uff0c\u9700\u8981\u4f7f\u7528 DELIMITER\u6539\u53d8\u5b58\u50a8\u8fc7\u7a0b\u7684\u7ed3\u675f\u7b26\u3002","title":"5.\u9700\u8981\u8bbe\u7f6e\u65b0\u7684\u7ed3\u675f\u6807\u8bb0"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_6","text":"","title":"\u4f7f\u7528"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_7","text":"# IN \u6a21\u5f0f \u8f93\u5165 DELIMITER $ CREATE PROCEDURE p1(IN t INT) BEGIN SELECT COUNT(1) FROM c1 WHERE t = 1; END $ CALL p1(1); # out \u6a21\u5f0f\u8f93\u51fa DELIMITER $ CREATE PROCEDURE p2(OUT o1 INT) BEGIN SELECT COUNT(1) INTO o1 FROM c1; END $ SET @o1 = 100; CALL p2(@o1); SELECT @o1; # inout \u6a21\u5f0f\u65e2\u53ef\u4ee5\u662f\u8f93\u5165\u53c8\u662f\u8f93\u51fa DELIMITER $ CREATE PROCEDURE p3(INOUT empname VARCHAR(20)) BEGIN SELECT ename INTO empname FROM emps WHERE eid = (SELECT MID FROM emps WHERE ename=empname); END $ SET @io2 = 'matt'; CALL p3(@io2); SELECT @io2;","title":"\u521b\u5efa + \u8c03\u7528"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_8","text":"","title":"\u5b58\u50a8\u8fc7\u7a0b\u3001\u51fd\u6570 \u7684\u67e5\u770b\u3001\u4fee\u6539\u3001\u5220\u9664"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_9","text":"","title":"\u67e5\u770b"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#1_1","text":"SHOW CREATE {PROCEDURE | FUNCTION} \u5b58\u50a8\u8fc7\u7a0b\u540d\u6216\u51fd\u6570\u540d SHOW CREATE FUNCTION test_db.CountProc","title":"1.\u521b\u5efa\u4fe1\u606f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#2","text":"SHOW {PROCEDURE | FUNCTION} STATUS [LIKE 'pattern'] SHOW PROCEDURE STATUS LIKE 'SELECT%'","title":"2.\u72b6\u6001\u4fe1\u606f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#3information_schemaroutines","text":"SELECT * FROM information_schema.Routines WHERE ROUTINE_NAME='\u5b58\u50a8\u8fc7\u7a0b\u6216\u51fd\u6570\u7684\u540d' [AND ROUTINE_TYPE = {'PROCEDURE|FUNCTION'}]; SELECT * FROM information_schema.Routines WHERE ROUTINE_NAME='count_by_id' AND ROUTINE_TYPE = 'FUNCTION'","title":"3.\u4eceinformation_schema.Routines\u8868\u4e2d\u67e5\u770b\u5b58\u50a8\u8fc7\u7a0b\u548c\u51fd\u6570\u7684\u4fe1\u606f"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_10","text":"","title":"\u5b58\u50a8\u51fd\u6570"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_11","text":"\u81ea\u5b9a\u4e49\u51fd\u6570","title":"\u662f\u4ec0\u4e48"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_12","text":"CREATE FUNCTION \u51fd\u6570\u540d(\u53c2\u6570\u540d \u53c2\u6570\u7c7b\u578b,...) RETURNS \u8fd4\u56de\u503c\u7c7b\u578b [characteristics ...] BEGIN \u51fd\u6570\u4f53 #\u51fd\u6570\u4f53\u4e2d\u80af\u5b9a\u6709 RETURN \u8bed\u53e5 END 1\u3001\u53c2\u6570\u5217\u8868\uff1a\u6307\u5b9a\u53c2\u6570\u4e3aIN\u3001OUT\u6216INOUT\u53ea\u5bf9PROCEDURE\u662f\u5408\u6cd5\u7684\uff0cFUNCTION\u4e2d\u603b\u662f\u9ed8\u8ba4\u4e3aIN\u53c2 \u6570\u3002 2\u3001RETURNS type \u8bed\u53e5\u8868\u793a\u51fd\u6570\u8fd4\u56de\u6570\u636e\u7684\u7c7b\u578b\uff1b RETURNS\u5b50\u53e5\u53ea\u80fd\u5bf9FUNCTION\u505a\u6307\u5b9a\uff0c\u5bf9\u51fd\u6570\u800c\u8a00\u8fd9\u662f \u5f3a\u5236 \u7684\u3002\u5b83\u7528\u6765\u6307\u5b9a\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u800c\u4e14\u51fd \u6570\u4f53\u5fc5\u987b\u5305\u542b\u4e00\u4e2a RETURN value \u8bed\u53e5\u3002 3\u3001characteristic \u521b\u5efa\u51fd\u6570\u65f6\u6307\u5b9a\u7684\u5bf9\u51fd\u6570\u7684\u7ea6\u675f\u3002\u53d6\u503c\u4e0e\u521b\u5efa\u5b58\u50a8\u8fc7\u7a0b\u65f6\u76f8\u540c\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002 4\u3001\u51fd\u6570\u4f53\u4e5f\u53ef\u4ee5\u7528BEGIN\u2026END\u6765\u8868\u793aSQL\u4ee3\u7801\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u3002\u5982\u679c\u51fd\u6570\u4f53\u53ea\u6709\u4e00\u6761\u8bed\u53e5\uff0c\u4e5f\u53ef\u4ee5\u7701\u7565 BEGIN\u2026END \u8c03\u7528\u5b58\u50a8\u51fd\u6570 SELECT \u51fd\u6570\u540d(\u5b9e\u53c2\u5217\u8868)","title":"\u8bed\u6cd5"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_13","text":"DELIMITER $ CREATE FUNCTION f1(t1 INT) RETURNS INT DETERMINISTIC CONTAINS SQL BEGIN RETURN (SELECT COUNT(1) FROM c1 WHERE t1 = 1); END $ SELECT f1(2)","title":"\u4f7f\u7528"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_14","text":"","title":"\u5206\u6790"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_15","text":"\u4e00\u6b21\u7f16\u8bd1\u591a\u6b21\u4f7f\u7528\uff1a \u51cf\u5c11\u7f51\u7edc\u4f20\u8f93\u91cf:\u4e00\u6b21\u8fde\u63a5\uff0c\u53ef\u4ee5\u4f20\u8f93\u591a\u6761sql \u5b89\u5168\uff1a\u8c03\u7528\u8005\u5e76\u4e0d\u77e5\u9053\u5177\u4f53sql","title":"\u4f18\u70b9"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/15-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_16","text":"\u53ef\u79fb\u690d\u6027\u5dee\uff08\u4e0d\u540c\u6570\u636e\u5e93\uff09 \u8c03\u5f0f\u56f0\u96be \u7248\u672c\u7ba1\u7406\u56f0\u96be\uff1a\u5e93\u8868\u53d1\u751f\u53d8\u5316\u53ef\u80fd\u5bfc\u81f4\u5b58\u50a8\u8fc7\u7a0b\u5931\u6548","title":"\u7f3a\u70b9"},{"location":"db/00mysql-%E5%9F%BA%E7%A1%80/2-%E5%87%BD%E6%95%B0/","text":"","title":"2 \u51fd\u6570"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/","text":"1.\u6982\u8ff0 1.1\u6982\u8ff0 Zookeeper \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u7684\uff0c\u4e3a\u5206\u5e03\u5f0f\u6846\u67b6\u63d0\u4f9b\u534f\u8c03\u670d\u52a1\u7684 Apache \u9879\u76ee\u3002 Zookeeper\u4ece\u8bbe\u8ba1\u6a21\u5f0f\u89d2\u5ea6\u6765\u7406\u89e3:\u662f\u4e00\u4e2a\u57fa\u4e8e\u89c2\u5bdf\u8005\u6a21\u5f0f\u8bbe\u8ba1\u7684\u5206\u5e03\u5f0f\u670d\u52a1\u7ba1\u7406\u6846\u67b6\uff0c\u5b83\u8d1f\u8d23 \u5b58\u50a8\u548c\u7ba1\u7406\u5927\u5bb6\u90fd\u5173\u5fc3\u7684\u6570\u636e\uff0c\u7136\u540e\u63a5\u53d7\u89c2\u5bdf\u8005\u7684 \u6ce8\u518c\uff0c\u4e00\u65e6\u8fd9\u4e9b\u6570\u636e\u7684\u72b6\u6001\u53d1\u751f\u53d8\u5316\uff0cZookeeper \u5c31\u5c06\u8d1f\u8d23\u901a\u77e5\u5df2\u7ecf\u5728Zookeeper\u4e0a\u6ce8\u518c\u7684\u90a3\u4e9b\u89c2\u5bdf\u8005\u505a\u51fa\u76f8\u5e94\u7684\u53cd\u5e94\u3002 \u5b58\u50a8\u5c11\u91cf\u6570\u636e\uff0c\u4e00\u822c\u662f\u914d\u7f6e\u4fe1\u606f\u3002 1.2\u7279\u70b9 1.Zookeeper:\u4e00\u4e2a\u9886\u5bfc\u8005(Leader)\uff0c\u591a\u4e2a\u8ddf\u968f\u8005(Follower)\u7ec4\u6210\u7684\u96c6\u7fa4\u3002 2.\u96c6\u7fa4\u4e2d\u53ea\u8981\u6709\u534a\u6570\u4ee5\u4e0a\u8282\u70b9\u5b58\u6d3b\uff0cZookeeper\u96c6\u7fa4\u5c31\u80fd\u6b63\u5e38\u670d\u52a1\u3002\u6240\u4ee5Zookeeper\u9002\u5408\u5b89\u88c5\u5947\u6570\u53f0\u670d\u52a1\u5668\u3002 3.\u5168\u5c40\u6570\u636e\u4e00\u81f4:\u6bcf\u4e2aServer\u4fdd\u5b58\u4e00\u4efd\u76f8\u540c\u7684\u6570\u636e\u526f\u672c\uff0cClient\u65e0\u8bba\u8fde\u63a5\u5230\u54ea\u4e2aServer\uff0c\u6570\u636e\u90fd\u662f\u4e00\u81f4\u7684\u3002 4.\u66f4\u65b0\u8bf7\u6c42\u987a\u5e8f\u6267\u884c\uff0c\u6765\u81ea\u540c\u4e00\u4e2aClient\u7684\u66f4\u65b0\u8bf7\u6c42\u6309\u5176\u53d1\u9001\u987a\u5e8f\u4f9d\u6b21\u6267\u884c\u3002 5.\u6570\u636e\u66f4\u65b0\u539f\u5b50\u6027\uff0c\u4e00\u6b21\u6570\u636e\u66f4\u65b0\u8981\u4e48\u6210\u529f\uff0c\u8981\u4e48\u5931\u8d25\u3002 6.\u5b9e\u65f6\u6027\uff0c\u5728\u4e00\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\uff0cClient\u80fd\u8bfb\u5230\u6700\u65b0\u6570\u636e\u3002 1.3\u6570\u636e\u7ed3\u6784 ZooKeeper \u6570\u636e\u6a21\u578b\u7684\u7ed3\u6784\u4e0e Unix \u6587\u4ef6\u7cfb\u7edf\u5f88\u7c7b\u4f3c\uff0c\u6574\u4f53\u4e0a\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a \u8282\u70b9\u79f0\u505a\u4e00\u4e2a ZNode\u3002\u6bcf\u4e00\u4e2a ZNode \u9ed8\u8ba4\u80fd\u591f\u5b58\u50a8 1MB \u7684\u6570\u636e\uff0c\u6bcf\u4e2a ZNode \u90fd\u53ef\u4ee5\u901a\u8fc7 \u5176\u8def\u5f84\u552f\u4e00\u6807\u8bc6\u3002 1.4\u5e94\u7528\u573a\u666f \u63d0\u4f9b\u7684\u670d\u52a1\u5305\u62ec:\u7edf\u4e00\u547d\u540d\u670d\u52a1\u3001\u7edf\u4e00\u914d\u7f6e\u7ba1\u7406\u3001\u7edf\u4e00\u96c6\u7fa4\u7ba1\u7406\u3001\u670d\u52a1\u5668\u8282\u70b9\u52a8\u6001\u4e0a\u4e0b \u7ebf\u3001\u8f6f\u8d1f\u8f7d\u5747\u8861\u7b49\u3002 \u7edf\u4e00\u547d\u540d\u670d\u52a1 \u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\uff0c\u7ecf\u5e38\u9700\u8981\u5bf9\u5e94\u7528/\u670d \u52a1\u8fdb\u884c\u7edf\u4e00\u547d\u540d\uff0c\u4fbf\u4e8e\u8bc6\u522b\u3002 \u4f8b\u5982:IP\u4e0d\u5bb9\u6613\u8bb0\u4f4f\uff0c\u800c\u57df\u540d\u5bb9\u6613\u8bb0\u4f4f\u3002 \u7edf\u4e00\u914d\u7f6e\u7ba1\u7406 1.\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\uff0c\u914d\u7f6e\u6587\u4ef6\u540c\u6b65\u975e\u5e38\u5e38\u89c1\u3002 1.1\u4e00\u822c\u8981\u6c42\u4e00\u4e2a\u96c6\u7fa4\u4e2d\uff0c\u6240\u6709\u8282\u70b9\u7684\u914d\u7f6e\u4fe1\u606f\u662f\u4e00\u81f4\u7684\uff0c\u6bd4\u5982 Kafka \u96c6\u7fa4\u3002 1.2\u5bf9\u914d\u7f6e\u6587\u4ef6\u4fee\u6539\u540e\uff0c\u5e0c\u671b\u80fd\u591f\u5feb\u901f\u540c\u6b65\u5230\u5404\u4e2a\u8282\u70b9\u4e0a\u3002 2\u914d\u7f6e\u7ba1\u7406\u53ef\u4ea4\u7531ZooKeeper\u5b9e\u73b0\u3002 2.1\u53ef\u5c06\u914d\u7f6e\u4fe1\u606f\u5199\u5165ZooKeeper\u4e0a\u7684\u4e00\u4e2aZnode\u3002 2.2\u5404\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u5668\u76d1\u542c\u8fd9\u4e2aZnode\u3002 2.3\u4e00\u65e6Znode\u4e2d\u7684\u6570\u636e\u88ab\u4fee\u6539\uff0cZooKeeper\u5c06\u901a\u77e5 \u5404\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u5668\u3002 \u7edf\u4e00\u96c6\u7fa4\u7ba1\u7406 1\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\uff0c\u5b9e\u65f6\u638c\u63e1\u6bcf\u4e2a\u8282\u70b9\u7684\u72b6\u6001\u662f\u5fc5\u8981\u7684\u3002 1.1\u53ef\u6839\u636e\u8282\u70b9\u5b9e\u65f6\u72b6\u6001\u505a\u51fa\u4e00\u4e9b\u8c03\u6574\u3002 2.ZooKeeper\u53ef\u4ee5\u5b9e\u73b0\u5b9e\u65f6\u76d1\u63a7\u8282\u70b9\u72b6\u6001\u53d8\u5316 2.1\u53ef\u5c06\u8282\u70b9\u4fe1\u606f\u5199\u5165ZooKeeper\u4e0a\u7684\u4e00\u4e2aZNode\u3002 2.2\u76d1\u542c\u8fd9\u4e2aZNode\u53ef\u83b7\u53d6\u5b83\u7684\u5b9e\u65f6\u72b6\u6001\u53d8\u5316\u3002 \u670d\u52a1\u5668\u52a8\u6001\u4e0a\u4e0b\u7ebf \u8f6f\u8d1f\u8f7d\u5747\u8861 1.5\u4e0b\u8f7d\u5730\u5740 3.5.7 https://archive.apache.org/dist/zookeeper/zookeeper-3.5.7/ 2.\u5b89\u88c5 2.1\u524d\u7f6e\u6761\u4ef6 \u9700\u8981\u5b89\u88c5jdk,\u53c2\u8003linux \u76ee\u5f55\u4e0b\u7684\u5e38\u7528\u8f6f\u4ef6\u5b89\u88c5\u5373\u53ef\u770b\u5230jdk\u7684\u5b89\u88c5\u3002 2.2\u672c\u5730\u5b89\u88c5 \u5b89\u88c5 1.\u5c06tar\u5305\u53d1\u9001\u5230\u670d\u52a1\u5668 scp -r apache-zookeeper-3.5.7-bin.tar.gz root@123.56.135.43:/opt/software 2.\u89e3\u538b tar -zxvf apache-zookeeper-3.5.7-bin.tar.gz -C /opt/module/ 3.\u6539\u540d mv apache-zookeeper-3.5.7-bin/ zookeeper-3.5.7/ \u914d\u7f6e\u4fee\u6539 /tmp\u5b58\u50a8\u4e34\u65f6\u6570\u636e\uff0c\u4e00\u5b9a\u5468\u671f\u5c31\u4f1a\u5220\u9664 1.\u5728 zookeeper \u5b89\u88c5\u76ee\u5f55\u4e0b\u521b\u5efa\u6570\u636e\u76ee\u5f55 mkdir zkData pwd 2.\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\u4e0b\u7684zoo_sample.cfg\u6539\u4e3azoo.cfg cd conf mv zoo_sample.cfg zoo.cfg 3.\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 vim zoo.cfg dataDir=/opt/module/zookeeper-3.5.7/zkData 2.3\u96c6\u7fa4\u5b89\u88c5 \u5b89\u88c5 1.\u5c06tar\u5305\u53d1\u9001\u5230\u670d\u52a1\u5668 scp -r apache-zookeeper-3.5.7-bin.tar.gz root@123.56.135.43:/opt/software 2.\u89e3\u538b tar -zxvf apache-zookeeper-3.5.7-bin.tar.gz -C /opt/module/ 3.\u6539\u540d mv apache-zookeeper-3.5.7-bin/ zookeeper-3.5.7/ \u914d\u7f6e 1.\u5728zookeeper\u5b89\u88c5\u76ee\u5f55\u4e0b\u521b\u5efazkData\u76ee\u5f55 mkdir zkData 2.\u5728zkData\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a myid \u7684\u6587\u4ef6 touch myid 3.\u7f16\u5199myid\u6587\u4ef6\uff0c\u6587\u4ef6\u4e2d\u5199\u8be5\u670d\u52a1\u5668\u552f\u4e00\u6807\u8bc6\u7b26 1 4.\u5c06\u8be5zookeeper\u5b89\u88c5\u76ee\u5f55\u5206\u53d1\u5230\u5176\u4ed6\u670d\u52a1\u5668 xsync zookeeper-3.5.7 5.\u66f4\u6539\u5176\u4ed6\u670d\u52a1\u4e2dzkData\u4e2d\u7684myid\u6587\u4ef6\u4e2d\u7684\u552f\u4e00\u6807\u8bc6 6.\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\u4e0b\u7684zoo_sample.cfg\u6539\u4e3azoo.cfg cd conf mv zoo_sample.cfg zoo.cfg 7.\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 vim zoo.cfg 8.\u4fee\u6539\u6570\u636e\u5b58\u50a8\u8def\u5f84\u914d\u7f6e dataDir=/opt/module/zookeeper-3.5.7/zkData 9.\u6dfb\u52a0\u96c6\u7fa4\u4fe1\u606f #######################cluster########################## server.2=matt05:2888:3888 server.3=matt06:2888:3888 server.4=matt07:2888:3888 \u914d\u7f6e\u6587\u4ef6\u89e3\u8bfb server.A=B:C:D A \u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u8fd9\u4e2a\u662f\u7b2c\u51e0\u53f7\u670d\u52a1\u5668;\u96c6\u7fa4\u6a21\u5f0f\u4e0b\u914d\u7f6e\u4e00\u4e2a\u6587\u4ef6 myid\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5728 dataDir \u76ee\u5f55\u4e0b\uff0c\u8fd9\u4e2a\u6587\u4ef6\u91cc\u9762\u6709\u4e00\u4e2a\u6570\u636e \u5c31\u662f A \u7684\u503c\uff0cZookeeper \u542f\u52a8\u65f6\u8bfb\u53d6\u6b64\u6587\u4ef6\uff0c\u62ff\u5230\u91cc\u9762\u7684\u6570\u636ezoo.cfg \u91cc\u9762\u7684\u914d\u7f6e\u4fe1\u606f\u6bd4 \u8f83\u4ece\u800c\u5224\u65ad\u5230\u5e95\u662f\u54ea\u4e2a server\u3002 B \u662f\u8fd9\u4e2a\u670d\u52a1\u5668\u7684\u5730\u5740; C \u662f\u8fd9\u4e2a\u670d\u52a1\u5668 Follower \u4e0e\u96c6\u7fa4\u4e2d\u7684 Leader \u670d\u52a1\u5668\u4ea4\u6362\u4fe1\u606f\u7684\u7aef\u53e3; D \u662f\u4e07\u4e00\u96c6\u7fa4\u4e2d\u7684 Leader \u670d\u52a1\u5668\u6302\u4e86\uff0c\u9700\u8981\u4e00\u4e2a\u7aef\u53e3\u6765\u91cd\u65b0\u8fdb\u884c\u9009\u4e3e\uff0c\u9009\u51fa\u4e00\u4e2a\u65b0\u7684Leader\uff0c\u800c\u4e2a\u7aef\u53e3\u5c31\u662f\u7528\u6765\u6267\u884c\u9009\u4e3e\u65f6\u670d\u52a1\u5668\u76f8\u4e92\u901a\u4fe1\u7684\u7aef\u53e3\u3002 10.\u540c\u6b65\u914d\u7f6e\u6587\u4ef6\uff0c\u53d1\u9001\u5230\u5176\u4ed6\u670d\u52a1\u5668 xsync zoo.cfg \u542f\u52a8\u96c6\u7fa4\u811a\u672c cd /home/matt/bin vim zk.sh #!/bin/bash case $1 in \"start\"){ for i in matt05 matt06 matt07 do echo ---------- zookeeper $i \u542f\u52a8 ------------ ssh $i \"/opt/module/zookeeper-3.5.7/bin/zkServer.sh start\" done };; \"stop\"){ for i in matt05 matt06 matt07 do echo ---------- zookeeper $i \u505c\u6b62 ------------ ssh $i \"/opt/module/zookeeper-3.5.7/bin/zkServer.sh stop\" done };; \"status\"){ for i in matt05 matt06 matt07 do echo ---------- zookeeper $i \u72b6\u6001 ------------ ssh $i \"/opt/module/zookeeper-3.5.7/bin/zkServer.sh status\" done };; esac chmod u+x zk.sh zk.sh start zk.sh stop \u5199\u6570\u636e\uff1a\u534a\u6570\u4ee5\u4e0a\u540c\u610f\u5c31\u53ef\u4ee5\u7ed9\u5ba2\u6237\u7aef\u53d1\u9001ack\u3002 3.\u5ba2\u6237\u7aef\u64cd\u4f5c \u542f\u52a8 \u670d\u52a1\u7aef\u542f\u52a8 ./zkServer.sh start \u67e5\u770b\u670d\u52a1\u7aef\u72b6\u6001 ./zkServer.sh status \u670d\u52a1\u7aef\u5173\u95ed ./zkServer.sh stop \u5ba2\u6237\u7aef\u542f\u52a8 // \u4e0d\u6307\u5b9a\u670d\u52a1\u7aef ./zkCli.sh // \u6307\u5b9a\u670d\u52a1\u7aef ./zkCli.sh -server 192.168.96.132:2181 \u5168\u683c\u5f0f\u67e5\u770bjps jps -l \u67e5\u770b\u6240\u6709\u547d\u4ee4 help \u521b\u5efa\u8282\u70b9 create /matt \"matt\" -e:\u77ed\u6682\uff0c\u5ba2\u6237\u7aef\u5173\u95ed\u518d\u6b21\u5f00\u542f\u8be5\u8282\u70b9\u5c31\u4f1a\u5220\u9664 -s:\u5e26\u5e8f\u53f7 create -e -s /matt \"1\" create -s /matt \"2\" \u5220\u9664\u8282\u70b9 delete /matt // \u9012\u5f52\u5220\u9664\u8282\u70b9 deleteall /matt \u4fee\u6539\u8282\u70b9 set /matt \"matt\" \u67e5\u770b\u5b50\u8282\u70b9 // \u67e5\u770b\u5f53\u524d\u8282\u70b9\u5305\u542b\u54ea\u4e9b\u5b50\u8282\u70b9 ls /matt // \u66f4\u52a0\u8be6\u7ec6 \u67e5\u770b\u5f53\u524d\u8282\u70b9\u5305\u542b\u54ea\u4e9b\u5b50\u8282\u70b9 ls -s /matt \u67e5\u770b\u5f53\u524d\u8282\u70b9\u7684\u503c get /matt // \u8be6\u7ec6 get -s /matt // \u67e5\u770b\u8282\u70b9\u7684\u72b6\u6001\uff0c\u5c31\u662f\u4e0d\u663e\u793a\u5f53\u524d\u7684\u503c stat /matt 1.czxid:\u521b\u5efa\u8282\u70b9\u7684\u4e8b\u52a1 zxid \u6bcf\u6b21\u4fee\u6539ZooKeeper\u72b6\u6001\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2aZooKeeper\u4e8b\u52a1ID\u3002\u4e8b\u52a1ID\u662fZooKeeper\u4e2d\u6240 \u6709\u4fee\u6539\u603b\u7684\u6b21\u5e8f\u3002\u6bcf\u6b21\u4fee\u6539\u90fd\u6709\u552f\u4e00\u7684 zxid\uff0c\u5982\u679c zxid1 \u5c0f\u4e8e zxid2\uff0c\u90a3\u4e48 zxid1 \u5728 zxid2 \u4e4b \u524d\u53d1\u751f\u3002 2.ctime:znode \u88ab\u521b\u5efa\u7684\u6beb\u79d2\u6570(\u4ece 1970 \u5e74\u5f00\u59cb) 3.mzxid:znode \u6700\u540e\u66f4\u65b0\u7684\u4e8b\u52a1 zxid 4.mtime:znode \u6700\u540e\u4fee\u6539\u7684\u6beb\u79d2\u6570(\u4ece 1970 \u5e74\u5f00\u59cb) 5.pZxid:znode \u6700\u540e\u66f4\u65b0\u7684\u5b50\u8282\u70b9 zxid 6.cversion:znode \u5b50\u8282\u70b9\u53d8\u5316\u53f7\uff0cznode \u5b50\u8282\u70b9\u4fee\u6539\u6b21\u6570 7.dataversion:znode \u6570\u636e\u53d8\u5316\u53f7 8.aclVersion:znode \u8bbf\u95ee\u63a7\u5236\u5217\u8868\u7684\u53d8\u5316\u53f7 9.ephemeralOwner:\u5982\u679c\u662f\u4e34\u65f6\u8282\u70b9\uff0c\u8fd9\u4e2a\u662f znode \u62e5\u6709\u8005\u7684 session id\u3002\u5982\u679c\u4e0d\u662f \u4e34\u65f6\u8282\u70b9\u5219\u662f 0\u3002 10.dataLength:znode \u7684\u6570\u636e\u957f\u5ea6 11.numChildren:znode \u5b50\u8282\u70b9\u6570\u91cf \u76d1\u542c \u76d1\u542c\u5668\uff1a\u4f7f\u7528\u4e00\u6b21\u5c31\u4f1a\u5931\u6548 \u76d1\u542c\u8282\u70b9\u7684\u503c\u53d1\u751f\u53d8\u5316 get -w /matt \u76d1\u542c\u8282\u70b9\u7684\u5b50\u8282\u70b9\u53d1\u751f\u53d8\u5316 ls -w /matt \u9519\u8bef org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException: Address 2021-08-14 11:44:23,004 [myid:] - ERROR [main:QuorumPeerMain@89] - Invalid config, exiting abnormally org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException: Address unresolved: 192.168.96.135:3887 \u5728\u96c6\u7fa4\u914d\u7f6e\u6709\u7a7a\u683c\uff0c\u5220\u9664\u5373\u53ef \u5f85\u505a \u8f6f\u4ef6\u5305\u7ba1\u7406 2.2\u672c\u5730\u5b89\u88c5\u914d\u7f6e\u6587\u4ef6\u89e3\u8bfb 3.1.2\u9009\u4e3e\u673a\u5236 \u76d1\u542c\u5668\u539f\u7406","title":"1.\u6982\u8ff0"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#1","text":"","title":"1.\u6982\u8ff0"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#11","text":"Zookeeper \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u7684\uff0c\u4e3a\u5206\u5e03\u5f0f\u6846\u67b6\u63d0\u4f9b\u534f\u8c03\u670d\u52a1\u7684 Apache \u9879\u76ee\u3002 Zookeeper\u4ece\u8bbe\u8ba1\u6a21\u5f0f\u89d2\u5ea6\u6765\u7406\u89e3:\u662f\u4e00\u4e2a\u57fa\u4e8e\u89c2\u5bdf\u8005\u6a21\u5f0f\u8bbe\u8ba1\u7684\u5206\u5e03\u5f0f\u670d\u52a1\u7ba1\u7406\u6846\u67b6\uff0c\u5b83\u8d1f\u8d23 \u5b58\u50a8\u548c\u7ba1\u7406\u5927\u5bb6\u90fd\u5173\u5fc3\u7684\u6570\u636e\uff0c\u7136\u540e\u63a5\u53d7\u89c2\u5bdf\u8005\u7684 \u6ce8\u518c\uff0c\u4e00\u65e6\u8fd9\u4e9b\u6570\u636e\u7684\u72b6\u6001\u53d1\u751f\u53d8\u5316\uff0cZookeeper \u5c31\u5c06\u8d1f\u8d23\u901a\u77e5\u5df2\u7ecf\u5728Zookeeper\u4e0a\u6ce8\u518c\u7684\u90a3\u4e9b\u89c2\u5bdf\u8005\u505a\u51fa\u76f8\u5e94\u7684\u53cd\u5e94\u3002 \u5b58\u50a8\u5c11\u91cf\u6570\u636e\uff0c\u4e00\u822c\u662f\u914d\u7f6e\u4fe1\u606f\u3002","title":"1.1\u6982\u8ff0"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#12","text":"1.Zookeeper:\u4e00\u4e2a\u9886\u5bfc\u8005(Leader)\uff0c\u591a\u4e2a\u8ddf\u968f\u8005(Follower)\u7ec4\u6210\u7684\u96c6\u7fa4\u3002 2.\u96c6\u7fa4\u4e2d\u53ea\u8981\u6709\u534a\u6570\u4ee5\u4e0a\u8282\u70b9\u5b58\u6d3b\uff0cZookeeper\u96c6\u7fa4\u5c31\u80fd\u6b63\u5e38\u670d\u52a1\u3002\u6240\u4ee5Zookeeper\u9002\u5408\u5b89\u88c5\u5947\u6570\u53f0\u670d\u52a1\u5668\u3002 3.\u5168\u5c40\u6570\u636e\u4e00\u81f4:\u6bcf\u4e2aServer\u4fdd\u5b58\u4e00\u4efd\u76f8\u540c\u7684\u6570\u636e\u526f\u672c\uff0cClient\u65e0\u8bba\u8fde\u63a5\u5230\u54ea\u4e2aServer\uff0c\u6570\u636e\u90fd\u662f\u4e00\u81f4\u7684\u3002 4.\u66f4\u65b0\u8bf7\u6c42\u987a\u5e8f\u6267\u884c\uff0c\u6765\u81ea\u540c\u4e00\u4e2aClient\u7684\u66f4\u65b0\u8bf7\u6c42\u6309\u5176\u53d1\u9001\u987a\u5e8f\u4f9d\u6b21\u6267\u884c\u3002 5.\u6570\u636e\u66f4\u65b0\u539f\u5b50\u6027\uff0c\u4e00\u6b21\u6570\u636e\u66f4\u65b0\u8981\u4e48\u6210\u529f\uff0c\u8981\u4e48\u5931\u8d25\u3002 6.\u5b9e\u65f6\u6027\uff0c\u5728\u4e00\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\uff0cClient\u80fd\u8bfb\u5230\u6700\u65b0\u6570\u636e\u3002","title":"1.2\u7279\u70b9"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#13","text":"ZooKeeper \u6570\u636e\u6a21\u578b\u7684\u7ed3\u6784\u4e0e Unix \u6587\u4ef6\u7cfb\u7edf\u5f88\u7c7b\u4f3c\uff0c\u6574\u4f53\u4e0a\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a \u8282\u70b9\u79f0\u505a\u4e00\u4e2a ZNode\u3002\u6bcf\u4e00\u4e2a ZNode \u9ed8\u8ba4\u80fd\u591f\u5b58\u50a8 1MB \u7684\u6570\u636e\uff0c\u6bcf\u4e2a ZNode \u90fd\u53ef\u4ee5\u901a\u8fc7 \u5176\u8def\u5f84\u552f\u4e00\u6807\u8bc6\u3002","title":"1.3\u6570\u636e\u7ed3\u6784"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#14","text":"\u63d0\u4f9b\u7684\u670d\u52a1\u5305\u62ec:\u7edf\u4e00\u547d\u540d\u670d\u52a1\u3001\u7edf\u4e00\u914d\u7f6e\u7ba1\u7406\u3001\u7edf\u4e00\u96c6\u7fa4\u7ba1\u7406\u3001\u670d\u52a1\u5668\u8282\u70b9\u52a8\u6001\u4e0a\u4e0b \u7ebf\u3001\u8f6f\u8d1f\u8f7d\u5747\u8861\u7b49\u3002","title":"1.4\u5e94\u7528\u573a\u666f"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_1","text":"\u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\uff0c\u7ecf\u5e38\u9700\u8981\u5bf9\u5e94\u7528/\u670d \u52a1\u8fdb\u884c\u7edf\u4e00\u547d\u540d\uff0c\u4fbf\u4e8e\u8bc6\u522b\u3002 \u4f8b\u5982:IP\u4e0d\u5bb9\u6613\u8bb0\u4f4f\uff0c\u800c\u57df\u540d\u5bb9\u6613\u8bb0\u4f4f\u3002","title":"\u7edf\u4e00\u547d\u540d\u670d\u52a1"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_2","text":"1.\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\uff0c\u914d\u7f6e\u6587\u4ef6\u540c\u6b65\u975e\u5e38\u5e38\u89c1\u3002 1.1\u4e00\u822c\u8981\u6c42\u4e00\u4e2a\u96c6\u7fa4\u4e2d\uff0c\u6240\u6709\u8282\u70b9\u7684\u914d\u7f6e\u4fe1\u606f\u662f\u4e00\u81f4\u7684\uff0c\u6bd4\u5982 Kafka \u96c6\u7fa4\u3002 1.2\u5bf9\u914d\u7f6e\u6587\u4ef6\u4fee\u6539\u540e\uff0c\u5e0c\u671b\u80fd\u591f\u5feb\u901f\u540c\u6b65\u5230\u5404\u4e2a\u8282\u70b9\u4e0a\u3002 2\u914d\u7f6e\u7ba1\u7406\u53ef\u4ea4\u7531ZooKeeper\u5b9e\u73b0\u3002 2.1\u53ef\u5c06\u914d\u7f6e\u4fe1\u606f\u5199\u5165ZooKeeper\u4e0a\u7684\u4e00\u4e2aZnode\u3002 2.2\u5404\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u5668\u76d1\u542c\u8fd9\u4e2aZnode\u3002 2.3\u4e00\u65e6Znode\u4e2d\u7684\u6570\u636e\u88ab\u4fee\u6539\uff0cZooKeeper\u5c06\u901a\u77e5 \u5404\u4e2a\u5ba2\u6237\u7aef\u670d\u52a1\u5668\u3002","title":"\u7edf\u4e00\u914d\u7f6e\u7ba1\u7406"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_3","text":"1\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\uff0c\u5b9e\u65f6\u638c\u63e1\u6bcf\u4e2a\u8282\u70b9\u7684\u72b6\u6001\u662f\u5fc5\u8981\u7684\u3002 1.1\u53ef\u6839\u636e\u8282\u70b9\u5b9e\u65f6\u72b6\u6001\u505a\u51fa\u4e00\u4e9b\u8c03\u6574\u3002 2.ZooKeeper\u53ef\u4ee5\u5b9e\u73b0\u5b9e\u65f6\u76d1\u63a7\u8282\u70b9\u72b6\u6001\u53d8\u5316 2.1\u53ef\u5c06\u8282\u70b9\u4fe1\u606f\u5199\u5165ZooKeeper\u4e0a\u7684\u4e00\u4e2aZNode\u3002 2.2\u76d1\u542c\u8fd9\u4e2aZNode\u53ef\u83b7\u53d6\u5b83\u7684\u5b9e\u65f6\u72b6\u6001\u53d8\u5316\u3002","title":"\u7edf\u4e00\u96c6\u7fa4\u7ba1\u7406"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_4","text":"","title":"\u670d\u52a1\u5668\u52a8\u6001\u4e0a\u4e0b\u7ebf"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_5","text":"","title":"\u8f6f\u8d1f\u8f7d\u5747\u8861"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#15","text":"3.5.7 https://archive.apache.org/dist/zookeeper/zookeeper-3.5.7/","title":"1.5\u4e0b\u8f7d\u5730\u5740"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#2","text":"","title":"2.\u5b89\u88c5"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#21","text":"\u9700\u8981\u5b89\u88c5jdk,\u53c2\u8003linux \u76ee\u5f55\u4e0b\u7684\u5e38\u7528\u8f6f\u4ef6\u5b89\u88c5\u5373\u53ef\u770b\u5230jdk\u7684\u5b89\u88c5\u3002","title":"2.1\u524d\u7f6e\u6761\u4ef6"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#22","text":"","title":"2.2\u672c\u5730\u5b89\u88c5"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_6","text":"","title":"\u5b89\u88c5"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#1tar","text":"scp -r apache-zookeeper-3.5.7-bin.tar.gz root@123.56.135.43:/opt/software","title":"1.\u5c06tar\u5305\u53d1\u9001\u5230\u670d\u52a1\u5668"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#2_1","text":"tar -zxvf apache-zookeeper-3.5.7-bin.tar.gz -C /opt/module/","title":"2.\u89e3\u538b"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#3","text":"mv apache-zookeeper-3.5.7-bin/ zookeeper-3.5.7/","title":"3.\u6539\u540d"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_7","text":"/tmp\u5b58\u50a8\u4e34\u65f6\u6570\u636e\uff0c\u4e00\u5b9a\u5468\u671f\u5c31\u4f1a\u5220\u9664","title":"\u914d\u7f6e\u4fee\u6539"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#1-zookeeper","text":"mkdir zkData pwd","title":"1.\u5728 zookeeper \u5b89\u88c5\u76ee\u5f55\u4e0b\u521b\u5efa\u6570\u636e\u76ee\u5f55"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#2zoo_samplecfgzoocfg","text":"cd conf mv zoo_sample.cfg zoo.cfg","title":"2.\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\u4e0b\u7684zoo_sample.cfg\u6539\u4e3azoo.cfg"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#3_1","text":"vim zoo.cfg dataDir=/opt/module/zookeeper-3.5.7/zkData","title":"3.\u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#23","text":"","title":"2.3\u96c6\u7fa4\u5b89\u88c5"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_8","text":"","title":"\u5b89\u88c5"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#1tar_1","text":"scp -r apache-zookeeper-3.5.7-bin.tar.gz root@123.56.135.43:/opt/software","title":"1.\u5c06tar\u5305\u53d1\u9001\u5230\u670d\u52a1\u5668"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#2_2","text":"tar -zxvf apache-zookeeper-3.5.7-bin.tar.gz -C /opt/module/","title":"2.\u89e3\u538b"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#3_2","text":"mv apache-zookeeper-3.5.7-bin/ zookeeper-3.5.7/","title":"3.\u6539\u540d"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_9","text":"","title":"\u914d\u7f6e"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#1zookeeperzkdata","text":"mkdir zkData","title":"1.\u5728zookeeper\u5b89\u88c5\u76ee\u5f55\u4e0b\u521b\u5efazkData\u76ee\u5f55"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#2zkdata-myid","text":"touch myid","title":"2.\u5728zkData\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a myid \u7684\u6587\u4ef6"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#3myid","text":"1","title":"3.\u7f16\u5199myid\u6587\u4ef6\uff0c\u6587\u4ef6\u4e2d\u5199\u8be5\u670d\u52a1\u5668\u552f\u4e00\u6807\u8bc6\u7b26"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#4zookeeper","text":"xsync zookeeper-3.5.7","title":"4.\u5c06\u8be5zookeeper\u5b89\u88c5\u76ee\u5f55\u5206\u53d1\u5230\u5176\u4ed6\u670d\u52a1\u5668"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#5zkdatamyid","text":"","title":"5.\u66f4\u6539\u5176\u4ed6\u670d\u52a1\u4e2dzkData\u4e2d\u7684myid\u6587\u4ef6\u4e2d\u7684\u552f\u4e00\u6807\u8bc6"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#6zoo_samplecfgzoocfg","text":"cd conf mv zoo_sample.cfg zoo.cfg","title":"6.\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\u4e0b\u7684zoo_sample.cfg\u6539\u4e3azoo.cfg"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#7","text":"vim zoo.cfg","title":"7.\u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#8","text":"dataDir=/opt/module/zookeeper-3.5.7/zkData","title":"8.\u4fee\u6539\u6570\u636e\u5b58\u50a8\u8def\u5f84\u914d\u7f6e"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#9","text":"#######################cluster########################## server.2=matt05:2888:3888 server.3=matt06:2888:3888 server.4=matt07:2888:3888","title":"9.\u6dfb\u52a0\u96c6\u7fa4\u4fe1\u606f"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_10","text":"server.A=B:C:D A \u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u8fd9\u4e2a\u662f\u7b2c\u51e0\u53f7\u670d\u52a1\u5668;\u96c6\u7fa4\u6a21\u5f0f\u4e0b\u914d\u7f6e\u4e00\u4e2a\u6587\u4ef6 myid\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5728 dataDir \u76ee\u5f55\u4e0b\uff0c\u8fd9\u4e2a\u6587\u4ef6\u91cc\u9762\u6709\u4e00\u4e2a\u6570\u636e \u5c31\u662f A \u7684\u503c\uff0cZookeeper \u542f\u52a8\u65f6\u8bfb\u53d6\u6b64\u6587\u4ef6\uff0c\u62ff\u5230\u91cc\u9762\u7684\u6570\u636ezoo.cfg \u91cc\u9762\u7684\u914d\u7f6e\u4fe1\u606f\u6bd4 \u8f83\u4ece\u800c\u5224\u65ad\u5230\u5e95\u662f\u54ea\u4e2a server\u3002 B \u662f\u8fd9\u4e2a\u670d\u52a1\u5668\u7684\u5730\u5740; C \u662f\u8fd9\u4e2a\u670d\u52a1\u5668 Follower \u4e0e\u96c6\u7fa4\u4e2d\u7684 Leader \u670d\u52a1\u5668\u4ea4\u6362\u4fe1\u606f\u7684\u7aef\u53e3; D \u662f\u4e07\u4e00\u96c6\u7fa4\u4e2d\u7684 Leader \u670d\u52a1\u5668\u6302\u4e86\uff0c\u9700\u8981\u4e00\u4e2a\u7aef\u53e3\u6765\u91cd\u65b0\u8fdb\u884c\u9009\u4e3e\uff0c\u9009\u51fa\u4e00\u4e2a\u65b0\u7684Leader\uff0c\u800c\u4e2a\u7aef\u53e3\u5c31\u662f\u7528\u6765\u6267\u884c\u9009\u4e3e\u65f6\u670d\u52a1\u5668\u76f8\u4e92\u901a\u4fe1\u7684\u7aef\u53e3\u3002","title":"\u914d\u7f6e\u6587\u4ef6\u89e3\u8bfb"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#10","text":"xsync zoo.cfg","title":"10.\u540c\u6b65\u914d\u7f6e\u6587\u4ef6\uff0c\u53d1\u9001\u5230\u5176\u4ed6\u670d\u52a1\u5668"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_11","text":"cd /home/matt/bin vim zk.sh #!/bin/bash case $1 in \"start\"){ for i in matt05 matt06 matt07 do echo ---------- zookeeper $i \u542f\u52a8 ------------ ssh $i \"/opt/module/zookeeper-3.5.7/bin/zkServer.sh start\" done };; \"stop\"){ for i in matt05 matt06 matt07 do echo ---------- zookeeper $i \u505c\u6b62 ------------ ssh $i \"/opt/module/zookeeper-3.5.7/bin/zkServer.sh stop\" done };; \"status\"){ for i in matt05 matt06 matt07 do echo ---------- zookeeper $i \u72b6\u6001 ------------ ssh $i \"/opt/module/zookeeper-3.5.7/bin/zkServer.sh status\" done };; esac chmod u+x zk.sh zk.sh start zk.sh stop \u5199\u6570\u636e\uff1a\u534a\u6570\u4ee5\u4e0a\u540c\u610f\u5c31\u53ef\u4ee5\u7ed9\u5ba2\u6237\u7aef\u53d1\u9001ack\u3002","title":"\u542f\u52a8\u96c6\u7fa4\u811a\u672c"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#3_3","text":"","title":"3.\u5ba2\u6237\u7aef\u64cd\u4f5c"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_12","text":"","title":"\u542f\u52a8"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_13","text":"./zkServer.sh start","title":"\u670d\u52a1\u7aef\u542f\u52a8"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_14","text":"./zkServer.sh status","title":"\u67e5\u770b\u670d\u52a1\u7aef\u72b6\u6001"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_15","text":"./zkServer.sh stop","title":"\u670d\u52a1\u7aef\u5173\u95ed"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_16","text":"// \u4e0d\u6307\u5b9a\u670d\u52a1\u7aef ./zkCli.sh // \u6307\u5b9a\u670d\u52a1\u7aef ./zkCli.sh -server 192.168.96.132:2181","title":"\u5ba2\u6237\u7aef\u542f\u52a8"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#jps","text":"jps -l","title":"\u5168\u683c\u5f0f\u67e5\u770bjps"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_17","text":"help","title":"\u67e5\u770b\u6240\u6709\u547d\u4ee4"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_18","text":"create /matt \"matt\" -e:\u77ed\u6682\uff0c\u5ba2\u6237\u7aef\u5173\u95ed\u518d\u6b21\u5f00\u542f\u8be5\u8282\u70b9\u5c31\u4f1a\u5220\u9664 -s:\u5e26\u5e8f\u53f7 create -e -s /matt \"1\" create -s /matt \"2\"","title":"\u521b\u5efa\u8282\u70b9"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_19","text":"delete /matt // \u9012\u5f52\u5220\u9664\u8282\u70b9 deleteall /matt","title":"\u5220\u9664\u8282\u70b9"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_20","text":"set /matt \"matt\"","title":"\u4fee\u6539\u8282\u70b9"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_21","text":"// \u67e5\u770b\u5f53\u524d\u8282\u70b9\u5305\u542b\u54ea\u4e9b\u5b50\u8282\u70b9 ls /matt // \u66f4\u52a0\u8be6\u7ec6 \u67e5\u770b\u5f53\u524d\u8282\u70b9\u5305\u542b\u54ea\u4e9b\u5b50\u8282\u70b9 ls -s /matt","title":"\u67e5\u770b\u5b50\u8282\u70b9"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_22","text":"get /matt // \u8be6\u7ec6 get -s /matt // \u67e5\u770b\u8282\u70b9\u7684\u72b6\u6001\uff0c\u5c31\u662f\u4e0d\u663e\u793a\u5f53\u524d\u7684\u503c stat /matt 1.czxid:\u521b\u5efa\u8282\u70b9\u7684\u4e8b\u52a1 zxid \u6bcf\u6b21\u4fee\u6539ZooKeeper\u72b6\u6001\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2aZooKeeper\u4e8b\u52a1ID\u3002\u4e8b\u52a1ID\u662fZooKeeper\u4e2d\u6240 \u6709\u4fee\u6539\u603b\u7684\u6b21\u5e8f\u3002\u6bcf\u6b21\u4fee\u6539\u90fd\u6709\u552f\u4e00\u7684 zxid\uff0c\u5982\u679c zxid1 \u5c0f\u4e8e zxid2\uff0c\u90a3\u4e48 zxid1 \u5728 zxid2 \u4e4b \u524d\u53d1\u751f\u3002 2.ctime:znode \u88ab\u521b\u5efa\u7684\u6beb\u79d2\u6570(\u4ece 1970 \u5e74\u5f00\u59cb) 3.mzxid:znode \u6700\u540e\u66f4\u65b0\u7684\u4e8b\u52a1 zxid 4.mtime:znode \u6700\u540e\u4fee\u6539\u7684\u6beb\u79d2\u6570(\u4ece 1970 \u5e74\u5f00\u59cb) 5.pZxid:znode \u6700\u540e\u66f4\u65b0\u7684\u5b50\u8282\u70b9 zxid 6.cversion:znode \u5b50\u8282\u70b9\u53d8\u5316\u53f7\uff0cznode \u5b50\u8282\u70b9\u4fee\u6539\u6b21\u6570 7.dataversion:znode \u6570\u636e\u53d8\u5316\u53f7 8.aclVersion:znode \u8bbf\u95ee\u63a7\u5236\u5217\u8868\u7684\u53d8\u5316\u53f7 9.ephemeralOwner:\u5982\u679c\u662f\u4e34\u65f6\u8282\u70b9\uff0c\u8fd9\u4e2a\u662f znode \u62e5\u6709\u8005\u7684 session id\u3002\u5982\u679c\u4e0d\u662f \u4e34\u65f6\u8282\u70b9\u5219\u662f 0\u3002 10.dataLength:znode \u7684\u6570\u636e\u957f\u5ea6 11.numChildren:znode \u5b50\u8282\u70b9\u6570\u91cf","title":"\u67e5\u770b\u5f53\u524d\u8282\u70b9\u7684\u503c"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_23","text":"\u76d1\u542c\u5668\uff1a\u4f7f\u7528\u4e00\u6b21\u5c31\u4f1a\u5931\u6548 \u76d1\u542c\u8282\u70b9\u7684\u503c\u53d1\u751f\u53d8\u5316 get -w /matt \u76d1\u542c\u8282\u70b9\u7684\u5b50\u8282\u70b9\u53d1\u751f\u53d8\u5316 ls -w /matt","title":"\u76d1\u542c"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_24","text":"org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException: Address 2021-08-14 11:44:23,004 [myid:] - ERROR [main:QuorumPeerMain@89] - Invalid config, exiting abnormally org.apache.zookeeper.server.quorum.QuorumPeerConfig$ConfigException: Address unresolved: 192.168.96.135:3887 \u5728\u96c6\u7fa4\u914d\u7f6e\u6709\u7a7a\u683c\uff0c\u5220\u9664\u5373\u53ef","title":"\u9519\u8bef"},{"location":"db/2zookeeper/zookeeper%E5%AD%A6%E4%B9%A0/#_25","text":"\u8f6f\u4ef6\u5305\u7ba1\u7406 2.2\u672c\u5730\u5b89\u88c5\u914d\u7f6e\u6587\u4ef6\u89e3\u8bfb 3.1.2\u9009\u4e3e\u673a\u5236 \u76d1\u542c\u5668\u539f\u7406","title":"\u5f85\u505a"},{"location":"db/es/quickstart/","text":"todo postman https://macwk.com/soft/paste \u5b98\u7f51 https://www.elastic.co/cn/ \u5b89\u88c5 mac \u65b9\u5f0f\u4e00 \u4e0b\u8f7d\u5730\u5740 https://www.elastic.co/cn/downloads/elasticsearch mac 7.8 \uff08\u53ea\u6709x86\u7248\u672c\uff0c\u76ee\u524d\u770b\u517c\u5bb9 \u89e3\u538b\u5373\u53ef tar -zxvf elasticsearch-7.8.0-darwin-x86_64.tar.gz -C ../module \u542f\u52a8 es\u5b89\u88c5\u76ee\u5f55/bin\u76ee\u5f55\u4e0b ./elasticsearch \u65b9\u5f0f\u4e8c brew install elastic/tap/elasticsearch-full brew install elastic/tap/kibana-full brew services start elastic/tap/elasticsearch-full brew services start elastic/tap/kibana-full \u4f7f\u7528 9300 \u7aef\u53e3\u4e3a Elasticsearch \u96c6\u7fa4\u95f4\u7ec4\u4ef6\u7684\u901a\u4fe1\u7aef\u53e3\uff0c9200 \u7aef\u53e3\u4e3a\u6d4f\u89c8\u5668\u8bbf\u95ee\u7684 http \u534f\u8bae RESTful \u7aef\u53e3\u3002 \u95ee\u9898 1.Elasticsearch \u662f\u4f7f\u7528 java \u5f00\u53d1\u7684\uff0c\u4e14 7.8 \u7248\u672c\u7684 ES \u9700\u8981 JDK \u7248\u672c 1.8 \u4ee5\u4e0a\uff0c\u9ed8\u8ba4\u5b89\u88c5 \u5305\u5e26\u6709 jdk \u73af\u5883\uff0c\u5982\u679c\u7cfb\u7edf\u914d\u7f6e JAVA_HOME\uff0c\u90a3\u4e48\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684 JDK\uff0c\u5982\u679c\u6ca1\u6709\u914d \u7f6e\u4f7f\u7528\u81ea\u5e26\u7684 JDK\uff0c\u4e00\u822c\u5efa\u8bae\u4f7f\u7528\u7cfb\u7edf\u914d\u7f6e\u7684 JDK\u3002 2.\u53cc\u51fb\u542f\u52a8\u7a97\u53e3\u95ea\u9000\uff0c\u901a\u8fc7\u8def\u5f84\u8bbf\u95ee\u8ffd\u8e2a\u9519\u8bef\uff0c\u5982\u679c\u662f\u201c\u7a7a\u95f4\u4e0d\u8db3\u201d\uff0c\u8bf7\u4fee\u6539 config/jvm.options \u914d\u7f6e\u6587\u4ef6 # \u8bbe\u7f6e JVM \u521d\u59cb\u5185\u5b58\u4e3a 1G\u3002\u6b64\u503c\u53ef\u4ee5\u8bbe\u7f6e\u4e0e-Xmx \u76f8\u540c\uff0c\u4ee5\u907f\u514d\u6bcf\u6b21\u5783\u573e\u56de\u6536\u5b8c\u6210\u540e JVM \u91cd\u65b0\u5206\u914d\u5185\u5b58 # Xms represents the initial size of total heap space # \u8bbe\u7f6e JVM \u6700\u5927\u53ef\u7528\u5185\u5b58\u4e3a 1G # Xmx represents the maximum size of total heap space -Xms1g -Xmx1g \u5e38\u7528\u64cd\u4f5c \u57fa\u7840 ES \u91cc\u7684 Index \u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u5e93\uff0c\u800c Types \u76f8\u5f53\u4e8e\u8868\uff0cDocuments \u5219\u76f8\u5f53\u4e8e\u8868\u7684\u884c\u3002 \u8fd9\u91cc Types \u7684\u6982\u5ff5\u5df2\u7ecf\u88ab\u9010\u6e10\u5f31\u5316\uff0cElasticsearch 6.X \u4e2d\uff0c\u4e00\u4e2a index \u4e0b\u5df2\u7ecf\u53ea\u80fd\u5305\u542b\u4e00\u4e2a type\uff0cElasticsearch 7.X \u4e2d, Type \u7684\u6982\u5ff5\u5df2\u7ecf\u88ab\u5220\u9664\u4e86\u3002 \u7d22\u5f15 \u521b\u5efa\u7d22\u5f15 # put 127.0.0.1:9200/t3 { \"acknowledged\"\u3010\u54cd\u5e94\u7ed3\u679c\u3011: true, # true \u64cd\u4f5c\u6210\u529f \"shards_acknowledged\"\u3010\u5206\u7247\u7ed3\u679c\u3011: true, # \u5206\u7247\u64cd\u4f5c\u6210\u529f \"index\"\u3010\u7d22\u5f15\u540d\u79f0\u3011: \"shopping\" } # \u6ce8\u610f\uff1a\u521b\u5efa\u7d22\u5f15\u5e93\u7684\u5206\u7247\u6570\u9ed8\u8ba4 1 \u7247\uff0c\u5728 7.0.0 \u4e4b\u524d\u7684 Elasticsearch \u7248\u672c\u4e2d\uff0c\u9ed8\u8ba4 5 \u7247 \u67e5\u770b\u6240\u6709\u7d22\u5f15 # get 127.0.0.1:9200/_cat/indices?v health status index uuid pri rep docs.count docs.deleted store.size pri.store.size yellow open t4 dqc04Q1dSNOR-p69BrAfPg 1 1 4 0 5.7kb 5.7kb yellow open t5 krHsnkW9ST-5CYIPK9qj4A 1 1 7 0 10.3kb 10.3kb yellow open t1 _9vxsLJ9SKuc5D9lVjOGiA 1 1 1 1 7.3kb 7.3kb yellow open t2 7TKFMj8aRDOOTIuFmVpBzw 1 1 1 1 4.7kb 4.7kb yellow open t3 3sS8FYGOSfKTN_TN6qZ_9w 1 1 1 1 4.7kb 4.7kb \u67e5\u770b\u67d0\u4e2a\u5177\u4f53\u7684\u7d22\u5f15 # get 127.0.0.1:9200/t4 { \"t4\": { \"aliases\": {}, \"mappings\": { \"properties\": { \"age\": { \"type\": \"integer\" }, \"name\": { \"type\": \"text\", \"index\": false }, \"sex\": { \"type\": \"text\", \"index\": false }, \"t1\": { \"type\": \"long\" } } }, \"settings\": { \"index\": { \"creation_date\": \"1652002404530\", \"number_of_shards\": \"1\", \"number_of_replicas\": \"1\", \"uuid\": \"dqc04Q1dSNOR-p69BrAfPg\", \"version\": { \"created\": \"7080099\" }, \"provided_name\": \"t4\" } } } } { \"shopping\"\u3010\u7d22\u5f15\u540d\u3011: { \"aliases\"\u3010\u522b\u540d\u3011: {}, \"mappings\"\u3010\u6620\u5c04\u3011: {}, \"settings\"\u3010\u8bbe\u7f6e\u3011: { \"index\"\u3010\u8bbe\u7f6e - \u7d22\u5f15\u3011: { \"creation_date\"\u3010\u8bbe\u7f6e - \u7d22\u5f15 - \u521b\u5efa\u65f6\u95f4\u3011: \"1614265373911\", \"number_of_shards\"\u3010\u8bbe\u7f6e - \u7d22\u5f15 - \u4e3b\u5206\u7247\u6570\u91cf\u3011: \"1\", \"number_of_replicas\"\u3010\u8bbe\u7f6e - \u7d22\u5f15 - \u526f\u5206\u7247\u6570\u91cf\u3011: \"1\", \"uuid\"\u3010\u8bbe\u7f6e - \u7d22\u5f15 - \u552f\u4e00\u6807\u8bc6\u3011: \"eI5wemRERTumxGCc1bAk2A\", \"version\"\u3010\u8bbe\u7f6e - \u7d22\u5f15 - \u7248\u672c\u3011: { \"created\": \"7080099\" }, \"provided_name\"\u3010\u8bbe\u7f6e - \u7d22\u5f15 - \u540d\u79f0\u3011: \"shopping\" } } } } \u5220\u9664\u7d22\u5f15 # delete 127.0.0.1:9200/t1 \u6587\u6863 \u6dfb\u52a0\u6587\u6863 # post 127.0.0.1:9200/t1/_doc/ { \"age\": 19, \"name\": \"dd\", \"type\": \"t1\" } ??? note ```sh { \"_index\"\u3010\u7d22\u5f15\u3011: \"shopping\", \"_type\"\u3010\u7c7b\u578b-\u6587\u6863\u3011: \"_doc\", \"_id\"\u3010\u552f\u4e00\u6807\u8bc6\u3011: \"Xhsa2ncBlvF_7lxyCE9G\", #\u53ef\u4ee5\u7c7b\u6bd4\u4e3a MySQL \u4e2d\u7684\u4e3b\u952e\uff0c\u968f\u673a\u751f\u6210 \"_version\"\u3010\u7248\u672c\u3011: 1, \"result\"\u3010\u7ed3\u679c\u3011: \"created\", #\u8fd9\u91cc\u7684 create \u8868\u793a\u521b\u5efa\u6210\u529f \"_shards\"\u3010\u5206\u7247\u3011: { \"total\"\u3010\u5206\u7247 - \u603b\u6570\u3011: 2, \"successful\"\u3010\u5206\u7247 - \u6210\u529f\u3011: 1, \"failed\"\u3010\u5206\u7247 - \u5931\u8d25\u3011: 0 }, \"_seq_no\": 0, \"_primary_term\": 1 } ``` \u6dfb\u52a0\u6587\u6863\u6307\u5b9aid # post 127.0.0.1:9200/t5/_doc/7 { \"age\": 12, \"name\": \"t52\", \"sex\": \"0\" } \u6839\u636eid\u67e5\u8be2\u6587\u6863 # get 127.0.0.1:9200/t3/_doc/2 ??? note ```sh { \"_index\"\u3010\u7d22\u5f15\u3011: \"shopping\", \"_type\"\u3010\u6587\u6863\u7c7b\u578b\u3011: \"_doc\", \"_id\": \"1\", \"_version\": 2, \"_seq_no\": 2, \"_primary_term\": 2, \"found\"\u3010\u67e5\u8be2\u7ed3\u679c\u3011: true, # true \u8868\u793a\u67e5\u627e\u5230\uff0cfalse \u8868\u793a\u672a\u67e5\u627e\u5230 \"_source\"\u3010\u6587\u6863\u6e90\u4fe1\u606f\u3011: { \"title\": \"\u534e\u4e3a\u624b\u673a\", \"category\": \"\u534e\u4e3a\", \"images\": \"http://www.gulixueyuan.com/hw.jpg\", \"price\": 4999.00 } } ``` \u4fee\u6539\u6587\u6863 # post 127.0.0.1:9200/t1/_doc/2 { \"age\": 99, \"name\": \"bb2\", \"type\": \"t2\" } ??? note ```sh { \"_index\": \"shopping\", \"_type\": \"_doc\", \"_id\": \"1\", \"_version\"\u3010\u7248\u672c\u3011: 2, \"result\"\u3010\u7ed3\u679c\u3011: \"updated\", # updated \u8868\u793a\u6570\u636e\u88ab\u66f4\u65b0 \"_shards\": { \"total\": 2, \"successful\": 1, \"failed\": 0 }, \"_seq_no\": 2, \"_primary_term\": 2 } ``` \u66f4\u65b0\u90e8\u5206\u5b57\u6bb5 # post 127.0.0.1:9200/t1/_update/2 { \"doc\": { \"name\": \"bb\" } } \u5220\u9664\u6587\u6863 # delete 127.0.0.1:9200/t1/_doc/2 ??? note ```sh { \"_index\": \"shopping\", \"_type\": \"_doc\", \"_id\": \"1\", \"_version\"\u3010\u7248\u672c\u3011: 4, #\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\uff0c\u90fd\u4f1a\u66f4\u65b0\u7248\u672c \"result\"\u3010\u7ed3\u679c\u3011: \"deleted\", # deleted \u8868\u793a\u6570\u636e\u88ab\u6807\u8bb0\u4e3a\u5220\u9664 \"_shards\": { \"total\": 2, \"successful\": 1, \"failed\": 0 }, \"_seq_no\": 4, \"_primary_term\": 2 } ``` \u6839\u636e\u6761\u4ef6\u5220\u9664\u6587\u6863 # delete 127.0.0.1:9200/t1/_delete_by_query { \"query\": { \"match\": { \"age\": 19 } } } ??? note ```sh { \"took\"\u3010\u8017\u65f6\u3011: 175, \"timed_out\"\u3010\u662f\u5426\u8d85\u65f6\u3011: false, \"total\"\u3010\u603b\u6570\u3011: 2, \"deleted\"\u3010\u5220\u9664\u6570\u91cf\u3011: 2, \"batches\": 1, \"version_conflicts\": 0, \"noops\": 0, \"retries\": { \"bulk\": 0, \"search\": 0 }, \"throttled_millis\": 0, \"requests_per_second\": -1.0, \"throttled_until_millis\": 0, \"failures\": [] } ``` mapping \u521b\u5efamapping \u5b57\u6bb5\u540d\uff1a\u4efb\u610f\u586b\u5199\uff0c\u4e0b\u9762\u6307\u5b9a\u8bb8\u591a\u5c5e\u6027\uff0c\u4f8b\u5982\uff1atitle\u3001subtitle\u3001images\u3001price String \u7c7b\u578b\uff0c\u53c8\u5206\u4e24\u79cd\uff1a text\uff1a\u53ef\u5206\u8bcd keyword\uff1a\u4e0d\u53ef\u5206\u8bcd\uff0c\u6570\u636e\u4f1a\u4f5c\u4e3a\u5b8c\u6574\u5b57\u6bb5\u8fdb\u884c\u5339\u914d Numerical\uff1a\u6570\u503c\u7c7b\u578b\uff0c \u200b \u5206\u4e24\u7c7b \u57fa\u672c\u6570\u636e\u7c7b\u578b\uff1along\u3001integer\u3001short\u3001byte\u3001double\u3001float\u3001half_float \u200b \u6d6e\u70b9\u6570\u7684\u9ad8\u7cbe\u5ea6\u7c7b\u578b\uff1ascaled_float Date\uff1a\u65e5\u671f\u7c7b\u578b Array\uff1a\u6570\u7ec4\u7c7b\u578b Object\uff1a\u5bf9\u8c61 # post 127.0.0.1:9200/t4/_mapping { \"properties\": { \"t1\": { \"type\": \"long\" } } } \u67e5\u770bmapping # get 127.0.0.1:9200/t9/_mapping \u521b\u5efa\u7d22\u5f15 \u5e26mapping # put 127.0.0.1:9200/t5 { \"settings\": {}, \"mappings\": { \"properties\": { \"age\": { \"type\": \"integer\", \"index\": true }, \"name\": { \"type\": \"text\", \"index\": true }, \"sex\": { \"type\": \"text\", \"index\": true } } } } \u9ad8\u7ea7\u67e5\u8be2 \u67e5\u770b\u67d0\u4e2a\u7d22\u5f15\u4e0b\u5168\u90e8\u6587\u6863 \"query\"\uff1a\u8fd9\u91cc\u7684 query \u4ee3\u8868\u4e00\u4e2a\u67e5\u8be2\u5bf9\u8c61\uff0c\u91cc\u9762\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u67e5\u8be2\u5c5e\u6027 \"match_all\"\uff1a\u67e5\u8be2\u7c7b\u578b\uff0c\u4f8b\u5982\uff1amatch_all(\u4ee3\u8868\u67e5\u8be2\u6240\u6709)\uff0c match\uff0cterm \uff0c range \u7b49\u7b49 {\u67e5\u8be2\u6761\u4ef6}\uff1a\u67e5\u8be2\u6761\u4ef6\u4f1a\u6839\u636e\u7c7b\u578b\u7684\u4e0d\u540c\uff0c\u5199\u6cd5\u4e5f\u6709\u5dee\u5f02 # get 127.0.0.1:9200/t5/_search { \"query\": { \"match_all\": {} } } { \"took\u3010\u67e5\u8be2\u82b1\u8d39\u65f6\u95f4\uff0c\u5355\u4f4d\u6beb\u79d2\u3011\" : 1116, \"timed_out\u3010\u662f\u5426\u8d85\u65f6\u3011\" : false, \"_shards\u3010\u5206\u7247\u4fe1\u606f\u3011\" : { \"total\u3010\u603b\u6570\u3011\" : 1, \"successful\u3010\u6210\u529f\u3011\" : 1, \"skipped\u3010\u5ffd\u7565\u3011\" : 0, \"failed\u3010\u5931\u8d25\u3011\" : 0 }, \"hits\u3010\u641c\u7d22\u547d\u4e2d\u7ed3\u679c\u3011\" : { \"total\"\u3010\u641c\u7d22\u6761\u4ef6\u5339\u914d\u7684\u6587\u6863\u603b\u6570\u3011: { \"value\"\u3010\u603b\u547d\u4e2d\u8ba1\u6570\u7684\u503c\u3011: 3, \"relation\"\u3010\u8ba1\u6570\u89c4\u5219\u3011: \"eq\" # eq \u8868\u793a\u8ba1\u6570\u51c6\u786e\uff0c gte \u8868\u793a\u8ba1\u6570\u4e0d\u51c6\u786e }, \"max_score\u3010\u5339\u914d\u5ea6\u5206\u503c\u3011\" : 1.0, \"hits\u3010\u547d\u4e2d\u7ed3\u679c\u96c6\u5408\u3011\" : [] } } \u5b57\u6bb5\u5339\u914d\u67e5\u8be2 \u5355\u5b57\u6bb5 match \u5339\u914d\u7c7b\u578b\u67e5\u8be2\uff0c\u4f1a\u628a\u67e5\u8be2\u6761\u4ef6\u8fdb\u884c\u5206\u8bcd\uff0c\u7136\u540e\u8fdb\u884c\u67e5\u8be2\uff0c\u591a\u4e2a\u8bcd\u6761\u4e4b\u95f4\u662f or \u7684\u5173\u7cfb # get 127.0.0.1:9200/t4/_search { \"query\": { \"match\": { // \u6216\u7684\u5173\u7cfb \"age\": 1 } } } \u591a\u5b57\u6bb5\u5339\u914d # get 127.0.0.1:9200/t4/_search { \"query\": { \"multi_match\": { \"query\": \"1\", \"fields\": [ \"age\", \"name\" ] } } } \u5173\u952e\u5b57\u7cbe\u51c6\u67e5\u8be2 \u5355\u5173\u952e\u5b57 # get 127.0.0.1:9200/t4/_search { \"query\": { \"term\": { \"age\": { \"value\": 100 } } } } \u591a\u5173\u952e\u5b57\u7cbe\u51c6\u67e5\u8be2 # get 127.0.0.1:9200/t4/_search { \"query\": { \"terms\": { \"age\": [ 1, 2, 3 ] } } } \u6307\u5b9a\u67e5\u8be2\u5b57\u6bb5 _source # get 127.0.0.1:9200/t4/_search { \"_source\": [ \"age\", \"name\" ], \"query\": { \"terms\": { \"age\": [ 1 ] } } } include includes\uff1a\u6765\u6307\u5b9a\u60f3\u8981\u663e\u793a\u7684\u5b57\u6bb5 excludes\uff1a\u6765\u6307\u5b9a\u4e0d\u60f3\u8981\u663e\u793a\u7684\u5b57\u6bb5 # get 127.0.0.1:9200/t4/_search { \"_source\": { \"excludes\": [ \"name\", \"age\" ] }, \"query\": { \"terms\": { \"age\": [ 1 ] } } } \u591a\u4e2a\u6761\u4ef6\u7ec4\u5408 bool \u628a\u5404\u79cd\u5176\u5b83\u67e5\u8be2\u901a\u8fc7 must \uff08\u5fc5\u987b \uff09\u3001 must_not \uff08\u5fc5\u987b\u4e0d\uff09\u3001 should \uff08\u5e94\u8be5\uff09\u7684\u65b9 \u5f0f\u8fdb\u884c\u7ec4\u5408 # get 127.0.0.1:9200/t5/_search { \"query\": { \"bool\": { // \"must\": [ // { // \"match\": { // \"name\": \"t51\" // } // } // ], // \"must_not\": [ // { // \"match\": { // \"age\": 0 // } // } // ], \"should\": [ { \"match\": { \"sex\": \"0\" } } ] } } } \u8303\u56f4\u67e5\u8be2 \u64cd\u4f5c\u7b26 \u8bf4\u660e gt > gte >= lt < lte <= # get 127.0.0.1:9200/t5/_search { \"query\": { \"bool\": { \"should\": [ { \"range\": { \"age\": { \"gte\": 0, \"lte\": 35 } } } ] } } } \u6a21\u7cca\u67e5\u8be2 fuzziness\uff1a\u7f16\u8f91\u8ddd\u79bb # get 127.0.0.1:9200/t5/_search { \"query\": { \"fuzzy\": { \"name\": { \"value\": \"t51\", // \u4e5f\u53ef\u4ee5\u4e0d\u5199 \"fuzziness\": 2 } } } } \u6392\u5e8f \u5355\u5b57\u6bb5\u6392\u5e8f # get 127.0.0.1:9200/t5/_search { \"query\": { \"fuzzy\": { \"name\": { \"value\": \"t51\" } } }, \"sort\": [ { \"age\": { \"order\": \"desc\" } } ] } \u591a\u5b57\u6bb5\u6392\u5e8f # get 127.0.0.1:9200/t5/_search { \"query\": { \"fuzzy\": { \"name\": { \"value\": \"t51\" } } }, \"sort\": [ { \"age\": { \"order\": \"desc\" } }, { \"_score\": { \"order\": \"desc\" } } ] } \u9ad8\u4eae\u67e5\u8be2 pre_tags\uff1a\u524d\u7f6e\u6807\u7b7e post_tags\uff1a\u540e\u7f6e\u6807\u7b7e fields\uff1a\u9700\u8981\u9ad8\u4eae\u7684\u5b57\u6bb5 title\uff1a\u8fd9\u91cc\u58f0\u660e title \u5b57\u6bb5\u9700\u8981\u9ad8\u4eae\uff0c\u540e\u9762\u53ef\u4ee5\u4e3a\u8fd9\u4e2a\u5b57\u6bb5\u8bbe\u7f6e\u7279\u6709\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u7a7a \u6ce8\u610f\uff1a\u9ad8\u4eae\u7684\u5b57\u6bb5\u9700\u8981\u5728\u67e5\u8be2\u7684\u5b57\u6bb5\u4e2d\uff0c\u5982\u4e0b\u9762\u7684name\u5b57\u6bb5 # get 127.0.0.1:9200/t5/_search { \"query\": { \"match\": { \"name\": \"t51\" } }, \"highlight\": { \"pre_tags\": \"<font color='red'>\", \"post_tags\": \"</font>\", \"fields\": { \"name\": {} } } } \u5206\u9875\u67e5\u8be2 from\uff1a\u5f53\u524d\u9875\u7684\u8d77\u59cb\u7d22\u5f15\uff0c\u9ed8\u8ba4\u4ece 0 \u5f00\u59cb\u3002 from = (pageNum - 1) * size size\uff1a\u6bcf\u9875\u663e\u793a\u591a\u5c11\u6761 # get 127.0.0.1:9200/t5/_search { \"query\": { \"match\": { \"name\": \"t52\" } }, // \u4fdd\u8bc1\u67e5\u8be2\u5b57\u6bb5\u6709 \"highlight\": { \"pre_tags\": \"<font color='red'>\", \"post_tags\": \"</font>\", \"fields\": { \"name\": {} } }, \"from\": 0, \"size\": 3 } \u805a\u5408\u67e5\u8be2 max,min,sum,avg cardinality:\u5bf9\u67d0\u4e2a\u5b57\u6bb5\u7684\u503c\u8fdb\u884c\u53bb\u91cd\u4e4b\u540e\u518d\u53d6\u603b\u6570 stats:\u5bf9\u67d0\u4e2a\u5b57\u6bb5\u4e00\u6b21\u6027\u8fd4\u56de count\uff0cmax\uff0cmin\uff0cavg \u548c sum \u4e94\u4e2a\u6307\u6807 # get 127.0.0.1:9200/t5/_search { \"aggs\": { \"max_age\": { \"max\": { \"field\": \"age\" } } }, \"size\": 0 } # get 127.0.0.1:9200/t5/_search { \"aggs\": { \"stats_age\": { \"stats\": { \"field\": \"age\" } } }, \"size\": 0 } \u6839\u636e\u5e74\u9f84\u805a\u5408\u67e5\u8be2 # get 127.0.0.1:9200/t5/_search { \"aggs\": { \"age_groupby\": { \"terms\": { \"field\": \"age\" } } }, \"size\": 0 } { \"took\": 25, \"timed_out\": false, \"_shards\": { \"total\": 1, \"successful\": 1, \"skipped\": 0, \"failed\": 0 }, \"hits\": { \"total\": { \"value\": 7, \"relation\": \"eq\" }, \"max_score\": null, \"hits\": [] }, \"aggregations\": { \"age_groupby\": { \"doc_count_error_upper_bound\": 0, \"sum_other_doc_count\": 0, \"buckets\": [ { \"key\": 12, \"doc_count\": 6 }, { \"key\": 1, \"doc_count\": 1 } ] } } }","title":"Quickstart"},{"location":"db/es/quickstart/#_1","text":"","title":"\u5b89\u88c5"},{"location":"db/es/quickstart/#mac","text":"","title":"mac"},{"location":"db/es/quickstart/#_2","text":"\u4e0b\u8f7d\u5730\u5740 https://www.elastic.co/cn/downloads/elasticsearch mac 7.8 \uff08\u53ea\u6709x86\u7248\u672c\uff0c\u76ee\u524d\u770b\u517c\u5bb9 \u89e3\u538b\u5373\u53ef tar -zxvf elasticsearch-7.8.0-darwin-x86_64.tar.gz -C ../module \u542f\u52a8 es\u5b89\u88c5\u76ee\u5f55/bin\u76ee\u5f55\u4e0b ./elasticsearch","title":"\u65b9\u5f0f\u4e00"},{"location":"db/es/quickstart/#_3","text":"brew install elastic/tap/elasticsearch-full brew install elastic/tap/kibana-full brew services start elastic/tap/elasticsearch-full brew services start elastic/tap/kibana-full","title":"\u65b9\u5f0f\u4e8c"},{"location":"db/es/quickstart/#_4","text":"9300 \u7aef\u53e3\u4e3a Elasticsearch \u96c6\u7fa4\u95f4\u7ec4\u4ef6\u7684\u901a\u4fe1\u7aef\u53e3\uff0c9200 \u7aef\u53e3\u4e3a\u6d4f\u89c8\u5668\u8bbf\u95ee\u7684 http \u534f\u8bae RESTful \u7aef\u53e3\u3002","title":"\u4f7f\u7528"},{"location":"db/es/quickstart/#_5","text":"1.Elasticsearch \u662f\u4f7f\u7528 java \u5f00\u53d1\u7684\uff0c\u4e14 7.8 \u7248\u672c\u7684 ES \u9700\u8981 JDK \u7248\u672c 1.8 \u4ee5\u4e0a\uff0c\u9ed8\u8ba4\u5b89\u88c5 \u5305\u5e26\u6709 jdk \u73af\u5883\uff0c\u5982\u679c\u7cfb\u7edf\u914d\u7f6e JAVA_HOME\uff0c\u90a3\u4e48\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684 JDK\uff0c\u5982\u679c\u6ca1\u6709\u914d \u7f6e\u4f7f\u7528\u81ea\u5e26\u7684 JDK\uff0c\u4e00\u822c\u5efa\u8bae\u4f7f\u7528\u7cfb\u7edf\u914d\u7f6e\u7684 JDK\u3002 2.\u53cc\u51fb\u542f\u52a8\u7a97\u53e3\u95ea\u9000\uff0c\u901a\u8fc7\u8def\u5f84\u8bbf\u95ee\u8ffd\u8e2a\u9519\u8bef\uff0c\u5982\u679c\u662f\u201c\u7a7a\u95f4\u4e0d\u8db3\u201d\uff0c\u8bf7\u4fee\u6539 config/jvm.options \u914d\u7f6e\u6587\u4ef6 # \u8bbe\u7f6e JVM \u521d\u59cb\u5185\u5b58\u4e3a 1G\u3002\u6b64\u503c\u53ef\u4ee5\u8bbe\u7f6e\u4e0e-Xmx \u76f8\u540c\uff0c\u4ee5\u907f\u514d\u6bcf\u6b21\u5783\u573e\u56de\u6536\u5b8c\u6210\u540e JVM \u91cd\u65b0\u5206\u914d\u5185\u5b58 # Xms represents the initial size of total heap space # \u8bbe\u7f6e JVM \u6700\u5927\u53ef\u7528\u5185\u5b58\u4e3a 1G # Xmx represents the maximum size of total heap space -Xms1g -Xmx1g","title":"\u95ee\u9898"},{"location":"db/es/quickstart/#_6","text":"","title":"\u5e38\u7528\u64cd\u4f5c"},{"location":"db/es/quickstart/#_7","text":"ES \u91cc\u7684 Index \u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u5e93\uff0c\u800c Types \u76f8\u5f53\u4e8e\u8868\uff0cDocuments \u5219\u76f8\u5f53\u4e8e\u8868\u7684\u884c\u3002 \u8fd9\u91cc Types \u7684\u6982\u5ff5\u5df2\u7ecf\u88ab\u9010\u6e10\u5f31\u5316\uff0cElasticsearch 6.X \u4e2d\uff0c\u4e00\u4e2a index \u4e0b\u5df2\u7ecf\u53ea\u80fd\u5305\u542b\u4e00\u4e2a type\uff0cElasticsearch 7.X \u4e2d, Type \u7684\u6982\u5ff5\u5df2\u7ecf\u88ab\u5220\u9664\u4e86\u3002","title":"\u57fa\u7840"},{"location":"db/es/quickstart/#_8","text":"","title":"\u7d22\u5f15"},{"location":"db/es/quickstart/#_9","text":"# put 127.0.0.1:9200/t3 { \"acknowledged\"\u3010\u54cd\u5e94\u7ed3\u679c\u3011: true, # true \u64cd\u4f5c\u6210\u529f \"shards_acknowledged\"\u3010\u5206\u7247\u7ed3\u679c\u3011: true, # \u5206\u7247\u64cd\u4f5c\u6210\u529f \"index\"\u3010\u7d22\u5f15\u540d\u79f0\u3011: \"shopping\" } # \u6ce8\u610f\uff1a\u521b\u5efa\u7d22\u5f15\u5e93\u7684\u5206\u7247\u6570\u9ed8\u8ba4 1 \u7247\uff0c\u5728 7.0.0 \u4e4b\u524d\u7684 Elasticsearch \u7248\u672c\u4e2d\uff0c\u9ed8\u8ba4 5 \u7247","title":"\u521b\u5efa\u7d22\u5f15"},{"location":"db/es/quickstart/#_10","text":"# get 127.0.0.1:9200/_cat/indices?v health status index uuid pri rep docs.count docs.deleted store.size pri.store.size yellow open t4 dqc04Q1dSNOR-p69BrAfPg 1 1 4 0 5.7kb 5.7kb yellow open t5 krHsnkW9ST-5CYIPK9qj4A 1 1 7 0 10.3kb 10.3kb yellow open t1 _9vxsLJ9SKuc5D9lVjOGiA 1 1 1 1 7.3kb 7.3kb yellow open t2 7TKFMj8aRDOOTIuFmVpBzw 1 1 1 1 4.7kb 4.7kb yellow open t3 3sS8FYGOSfKTN_TN6qZ_9w 1 1 1 1 4.7kb 4.7kb","title":"\u67e5\u770b\u6240\u6709\u7d22\u5f15"},{"location":"db/es/quickstart/#_11","text":"# get 127.0.0.1:9200/t4 { \"t4\": { \"aliases\": {}, \"mappings\": { \"properties\": { \"age\": { \"type\": \"integer\" }, \"name\": { \"type\": \"text\", \"index\": false }, \"sex\": { \"type\": \"text\", \"index\": false }, \"t1\": { \"type\": \"long\" } } }, \"settings\": { \"index\": { \"creation_date\": \"1652002404530\", \"number_of_shards\": \"1\", \"number_of_replicas\": \"1\", \"uuid\": \"dqc04Q1dSNOR-p69BrAfPg\", \"version\": { \"created\": \"7080099\" }, \"provided_name\": \"t4\" } } } } { \"shopping\"\u3010\u7d22\u5f15\u540d\u3011: { \"aliases\"\u3010\u522b\u540d\u3011: {}, \"mappings\"\u3010\u6620\u5c04\u3011: {}, \"settings\"\u3010\u8bbe\u7f6e\u3011: { \"index\"\u3010\u8bbe\u7f6e - \u7d22\u5f15\u3011: { \"creation_date\"\u3010\u8bbe\u7f6e - \u7d22\u5f15 - \u521b\u5efa\u65f6\u95f4\u3011: \"1614265373911\", \"number_of_shards\"\u3010\u8bbe\u7f6e - \u7d22\u5f15 - \u4e3b\u5206\u7247\u6570\u91cf\u3011: \"1\", \"number_of_replicas\"\u3010\u8bbe\u7f6e - \u7d22\u5f15 - \u526f\u5206\u7247\u6570\u91cf\u3011: \"1\", \"uuid\"\u3010\u8bbe\u7f6e - \u7d22\u5f15 - \u552f\u4e00\u6807\u8bc6\u3011: \"eI5wemRERTumxGCc1bAk2A\", \"version\"\u3010\u8bbe\u7f6e - \u7d22\u5f15 - \u7248\u672c\u3011: { \"created\": \"7080099\" }, \"provided_name\"\u3010\u8bbe\u7f6e - \u7d22\u5f15 - \u540d\u79f0\u3011: \"shopping\" } } } }","title":"\u67e5\u770b\u67d0\u4e2a\u5177\u4f53\u7684\u7d22\u5f15"},{"location":"db/es/quickstart/#_12","text":"# delete 127.0.0.1:9200/t1","title":"\u5220\u9664\u7d22\u5f15"},{"location":"db/es/quickstart/#_13","text":"","title":"\u6587\u6863"},{"location":"db/es/quickstart/#_14","text":"# post 127.0.0.1:9200/t1/_doc/ { \"age\": 19, \"name\": \"dd\", \"type\": \"t1\" } ??? note ```sh { \"_index\"\u3010\u7d22\u5f15\u3011: \"shopping\", \"_type\"\u3010\u7c7b\u578b-\u6587\u6863\u3011: \"_doc\", \"_id\"\u3010\u552f\u4e00\u6807\u8bc6\u3011: \"Xhsa2ncBlvF_7lxyCE9G\", #\u53ef\u4ee5\u7c7b\u6bd4\u4e3a MySQL \u4e2d\u7684\u4e3b\u952e\uff0c\u968f\u673a\u751f\u6210 \"_version\"\u3010\u7248\u672c\u3011: 1, \"result\"\u3010\u7ed3\u679c\u3011: \"created\", #\u8fd9\u91cc\u7684 create \u8868\u793a\u521b\u5efa\u6210\u529f \"_shards\"\u3010\u5206\u7247\u3011: { \"total\"\u3010\u5206\u7247 - \u603b\u6570\u3011: 2, \"successful\"\u3010\u5206\u7247 - \u6210\u529f\u3011: 1, \"failed\"\u3010\u5206\u7247 - \u5931\u8d25\u3011: 0 }, \"_seq_no\": 0, \"_primary_term\": 1 } ```","title":"\u6dfb\u52a0\u6587\u6863"},{"location":"db/es/quickstart/#id","text":"# post 127.0.0.1:9200/t5/_doc/7 { \"age\": 12, \"name\": \"t52\", \"sex\": \"0\" }","title":"\u6dfb\u52a0\u6587\u6863\u6307\u5b9aid"},{"location":"db/es/quickstart/#id_1","text":"# get 127.0.0.1:9200/t3/_doc/2 ??? note ```sh { \"_index\"\u3010\u7d22\u5f15\u3011: \"shopping\", \"_type\"\u3010\u6587\u6863\u7c7b\u578b\u3011: \"_doc\", \"_id\": \"1\", \"_version\": 2, \"_seq_no\": 2, \"_primary_term\": 2, \"found\"\u3010\u67e5\u8be2\u7ed3\u679c\u3011: true, # true \u8868\u793a\u67e5\u627e\u5230\uff0cfalse \u8868\u793a\u672a\u67e5\u627e\u5230 \"_source\"\u3010\u6587\u6863\u6e90\u4fe1\u606f\u3011: { \"title\": \"\u534e\u4e3a\u624b\u673a\", \"category\": \"\u534e\u4e3a\", \"images\": \"http://www.gulixueyuan.com/hw.jpg\", \"price\": 4999.00 } } ```","title":"\u6839\u636eid\u67e5\u8be2\u6587\u6863"},{"location":"db/es/quickstart/#_15","text":"# post 127.0.0.1:9200/t1/_doc/2 { \"age\": 99, \"name\": \"bb2\", \"type\": \"t2\" } ??? note ```sh { \"_index\": \"shopping\", \"_type\": \"_doc\", \"_id\": \"1\", \"_version\"\u3010\u7248\u672c\u3011: 2, \"result\"\u3010\u7ed3\u679c\u3011: \"updated\", # updated \u8868\u793a\u6570\u636e\u88ab\u66f4\u65b0 \"_shards\": { \"total\": 2, \"successful\": 1, \"failed\": 0 }, \"_seq_no\": 2, \"_primary_term\": 2 } ```","title":"\u4fee\u6539\u6587\u6863"},{"location":"db/es/quickstart/#_16","text":"# post 127.0.0.1:9200/t1/_update/2 { \"doc\": { \"name\": \"bb\" } }","title":"\u66f4\u65b0\u90e8\u5206\u5b57\u6bb5"},{"location":"db/es/quickstart/#_17","text":"# delete 127.0.0.1:9200/t1/_doc/2 ??? note ```sh { \"_index\": \"shopping\", \"_type\": \"_doc\", \"_id\": \"1\", \"_version\"\u3010\u7248\u672c\u3011: 4, #\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\uff0c\u90fd\u4f1a\u66f4\u65b0\u7248\u672c \"result\"\u3010\u7ed3\u679c\u3011: \"deleted\", # deleted \u8868\u793a\u6570\u636e\u88ab\u6807\u8bb0\u4e3a\u5220\u9664 \"_shards\": { \"total\": 2, \"successful\": 1, \"failed\": 0 }, \"_seq_no\": 4, \"_primary_term\": 2 } ```","title":"\u5220\u9664\u6587\u6863"},{"location":"db/es/quickstart/#_18","text":"# delete 127.0.0.1:9200/t1/_delete_by_query { \"query\": { \"match\": { \"age\": 19 } } } ??? note ```sh { \"took\"\u3010\u8017\u65f6\u3011: 175, \"timed_out\"\u3010\u662f\u5426\u8d85\u65f6\u3011: false, \"total\"\u3010\u603b\u6570\u3011: 2, \"deleted\"\u3010\u5220\u9664\u6570\u91cf\u3011: 2, \"batches\": 1, \"version_conflicts\": 0, \"noops\": 0, \"retries\": { \"bulk\": 0, \"search\": 0 }, \"throttled_millis\": 0, \"requests_per_second\": -1.0, \"throttled_until_millis\": 0, \"failures\": [] } ```","title":"\u6839\u636e\u6761\u4ef6\u5220\u9664\u6587\u6863"},{"location":"db/es/quickstart/#mapping","text":"","title":"mapping"},{"location":"db/es/quickstart/#mapping_1","text":"\u5b57\u6bb5\u540d\uff1a\u4efb\u610f\u586b\u5199\uff0c\u4e0b\u9762\u6307\u5b9a\u8bb8\u591a\u5c5e\u6027\uff0c\u4f8b\u5982\uff1atitle\u3001subtitle\u3001images\u3001price String \u7c7b\u578b\uff0c\u53c8\u5206\u4e24\u79cd\uff1a text\uff1a\u53ef\u5206\u8bcd keyword\uff1a\u4e0d\u53ef\u5206\u8bcd\uff0c\u6570\u636e\u4f1a\u4f5c\u4e3a\u5b8c\u6574\u5b57\u6bb5\u8fdb\u884c\u5339\u914d Numerical\uff1a\u6570\u503c\u7c7b\u578b\uff0c \u200b \u5206\u4e24\u7c7b \u57fa\u672c\u6570\u636e\u7c7b\u578b\uff1along\u3001integer\u3001short\u3001byte\u3001double\u3001float\u3001half_float \u200b \u6d6e\u70b9\u6570\u7684\u9ad8\u7cbe\u5ea6\u7c7b\u578b\uff1ascaled_float Date\uff1a\u65e5\u671f\u7c7b\u578b Array\uff1a\u6570\u7ec4\u7c7b\u578b Object\uff1a\u5bf9\u8c61 # post 127.0.0.1:9200/t4/_mapping { \"properties\": { \"t1\": { \"type\": \"long\" } } }","title":"\u521b\u5efamapping"},{"location":"db/es/quickstart/#mapping_2","text":"# get 127.0.0.1:9200/t9/_mapping","title":"\u67e5\u770bmapping"},{"location":"db/es/quickstart/#mapping_3","text":"# put 127.0.0.1:9200/t5 { \"settings\": {}, \"mappings\": { \"properties\": { \"age\": { \"type\": \"integer\", \"index\": true }, \"name\": { \"type\": \"text\", \"index\": true }, \"sex\": { \"type\": \"text\", \"index\": true } } } }","title":"\u521b\u5efa\u7d22\u5f15 \u5e26mapping"},{"location":"db/es/quickstart/#_19","text":"","title":"\u9ad8\u7ea7\u67e5\u8be2"},{"location":"db/es/quickstart/#_20","text":"\"query\"\uff1a\u8fd9\u91cc\u7684 query \u4ee3\u8868\u4e00\u4e2a\u67e5\u8be2\u5bf9\u8c61\uff0c\u91cc\u9762\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u67e5\u8be2\u5c5e\u6027 \"match_all\"\uff1a\u67e5\u8be2\u7c7b\u578b\uff0c\u4f8b\u5982\uff1amatch_all(\u4ee3\u8868\u67e5\u8be2\u6240\u6709)\uff0c match\uff0cterm \uff0c range \u7b49\u7b49 {\u67e5\u8be2\u6761\u4ef6}\uff1a\u67e5\u8be2\u6761\u4ef6\u4f1a\u6839\u636e\u7c7b\u578b\u7684\u4e0d\u540c\uff0c\u5199\u6cd5\u4e5f\u6709\u5dee\u5f02 # get 127.0.0.1:9200/t5/_search { \"query\": { \"match_all\": {} } } { \"took\u3010\u67e5\u8be2\u82b1\u8d39\u65f6\u95f4\uff0c\u5355\u4f4d\u6beb\u79d2\u3011\" : 1116, \"timed_out\u3010\u662f\u5426\u8d85\u65f6\u3011\" : false, \"_shards\u3010\u5206\u7247\u4fe1\u606f\u3011\" : { \"total\u3010\u603b\u6570\u3011\" : 1, \"successful\u3010\u6210\u529f\u3011\" : 1, \"skipped\u3010\u5ffd\u7565\u3011\" : 0, \"failed\u3010\u5931\u8d25\u3011\" : 0 }, \"hits\u3010\u641c\u7d22\u547d\u4e2d\u7ed3\u679c\u3011\" : { \"total\"\u3010\u641c\u7d22\u6761\u4ef6\u5339\u914d\u7684\u6587\u6863\u603b\u6570\u3011: { \"value\"\u3010\u603b\u547d\u4e2d\u8ba1\u6570\u7684\u503c\u3011: 3, \"relation\"\u3010\u8ba1\u6570\u89c4\u5219\u3011: \"eq\" # eq \u8868\u793a\u8ba1\u6570\u51c6\u786e\uff0c gte \u8868\u793a\u8ba1\u6570\u4e0d\u51c6\u786e }, \"max_score\u3010\u5339\u914d\u5ea6\u5206\u503c\u3011\" : 1.0, \"hits\u3010\u547d\u4e2d\u7ed3\u679c\u96c6\u5408\u3011\" : [] } }","title":"\u67e5\u770b\u67d0\u4e2a\u7d22\u5f15\u4e0b\u5168\u90e8\u6587\u6863"},{"location":"db/es/quickstart/#_21","text":"\u5355\u5b57\u6bb5 match \u5339\u914d\u7c7b\u578b\u67e5\u8be2\uff0c\u4f1a\u628a\u67e5\u8be2\u6761\u4ef6\u8fdb\u884c\u5206\u8bcd\uff0c\u7136\u540e\u8fdb\u884c\u67e5\u8be2\uff0c\u591a\u4e2a\u8bcd\u6761\u4e4b\u95f4\u662f or \u7684\u5173\u7cfb # get 127.0.0.1:9200/t4/_search { \"query\": { \"match\": { // \u6216\u7684\u5173\u7cfb \"age\": 1 } } } \u591a\u5b57\u6bb5\u5339\u914d # get 127.0.0.1:9200/t4/_search { \"query\": { \"multi_match\": { \"query\": \"1\", \"fields\": [ \"age\", \"name\" ] } } }","title":"\u5b57\u6bb5\u5339\u914d\u67e5\u8be2"},{"location":"db/es/quickstart/#_22","text":"\u5355\u5173\u952e\u5b57 # get 127.0.0.1:9200/t4/_search { \"query\": { \"term\": { \"age\": { \"value\": 100 } } } } \u591a\u5173\u952e\u5b57\u7cbe\u51c6\u67e5\u8be2 # get 127.0.0.1:9200/t4/_search { \"query\": { \"terms\": { \"age\": [ 1, 2, 3 ] } } }","title":"\u5173\u952e\u5b57\u7cbe\u51c6\u67e5\u8be2"},{"location":"db/es/quickstart/#_23","text":"_source # get 127.0.0.1:9200/t4/_search { \"_source\": [ \"age\", \"name\" ], \"query\": { \"terms\": { \"age\": [ 1 ] } } } include includes\uff1a\u6765\u6307\u5b9a\u60f3\u8981\u663e\u793a\u7684\u5b57\u6bb5 excludes\uff1a\u6765\u6307\u5b9a\u4e0d\u60f3\u8981\u663e\u793a\u7684\u5b57\u6bb5 # get 127.0.0.1:9200/t4/_search { \"_source\": { \"excludes\": [ \"name\", \"age\" ] }, \"query\": { \"terms\": { \"age\": [ 1 ] } } }","title":"\u6307\u5b9a\u67e5\u8be2\u5b57\u6bb5"},{"location":"db/es/quickstart/#_24","text":"bool \u628a\u5404\u79cd\u5176\u5b83\u67e5\u8be2\u901a\u8fc7 must \uff08\u5fc5\u987b \uff09\u3001 must_not \uff08\u5fc5\u987b\u4e0d\uff09\u3001 should \uff08\u5e94\u8be5\uff09\u7684\u65b9 \u5f0f\u8fdb\u884c\u7ec4\u5408 # get 127.0.0.1:9200/t5/_search { \"query\": { \"bool\": { // \"must\": [ // { // \"match\": { // \"name\": \"t51\" // } // } // ], // \"must_not\": [ // { // \"match\": { // \"age\": 0 // } // } // ], \"should\": [ { \"match\": { \"sex\": \"0\" } } ] } } }","title":"\u591a\u4e2a\u6761\u4ef6\u7ec4\u5408"},{"location":"db/es/quickstart/#_25","text":"\u64cd\u4f5c\u7b26 \u8bf4\u660e gt > gte >= lt < lte <= # get 127.0.0.1:9200/t5/_search { \"query\": { \"bool\": { \"should\": [ { \"range\": { \"age\": { \"gte\": 0, \"lte\": 35 } } } ] } } }","title":"\u8303\u56f4\u67e5\u8be2"},{"location":"db/es/quickstart/#_26","text":"fuzziness\uff1a\u7f16\u8f91\u8ddd\u79bb # get 127.0.0.1:9200/t5/_search { \"query\": { \"fuzzy\": { \"name\": { \"value\": \"t51\", // \u4e5f\u53ef\u4ee5\u4e0d\u5199 \"fuzziness\": 2 } } } }","title":"\u6a21\u7cca\u67e5\u8be2"},{"location":"db/es/quickstart/#_27","text":"\u5355\u5b57\u6bb5\u6392\u5e8f # get 127.0.0.1:9200/t5/_search { \"query\": { \"fuzzy\": { \"name\": { \"value\": \"t51\" } } }, \"sort\": [ { \"age\": { \"order\": \"desc\" } } ] } \u591a\u5b57\u6bb5\u6392\u5e8f # get 127.0.0.1:9200/t5/_search { \"query\": { \"fuzzy\": { \"name\": { \"value\": \"t51\" } } }, \"sort\": [ { \"age\": { \"order\": \"desc\" } }, { \"_score\": { \"order\": \"desc\" } } ] }","title":"\u6392\u5e8f"},{"location":"db/es/quickstart/#_28","text":"pre_tags\uff1a\u524d\u7f6e\u6807\u7b7e post_tags\uff1a\u540e\u7f6e\u6807\u7b7e fields\uff1a\u9700\u8981\u9ad8\u4eae\u7684\u5b57\u6bb5 title\uff1a\u8fd9\u91cc\u58f0\u660e title \u5b57\u6bb5\u9700\u8981\u9ad8\u4eae\uff0c\u540e\u9762\u53ef\u4ee5\u4e3a\u8fd9\u4e2a\u5b57\u6bb5\u8bbe\u7f6e\u7279\u6709\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u7a7a \u6ce8\u610f\uff1a\u9ad8\u4eae\u7684\u5b57\u6bb5\u9700\u8981\u5728\u67e5\u8be2\u7684\u5b57\u6bb5\u4e2d\uff0c\u5982\u4e0b\u9762\u7684name\u5b57\u6bb5 # get 127.0.0.1:9200/t5/_search { \"query\": { \"match\": { \"name\": \"t51\" } }, \"highlight\": { \"pre_tags\": \"<font color='red'>\", \"post_tags\": \"</font>\", \"fields\": { \"name\": {} } } }","title":"\u9ad8\u4eae\u67e5\u8be2"},{"location":"db/es/quickstart/#_29","text":"from\uff1a\u5f53\u524d\u9875\u7684\u8d77\u59cb\u7d22\u5f15\uff0c\u9ed8\u8ba4\u4ece 0 \u5f00\u59cb\u3002 from = (pageNum - 1) * size size\uff1a\u6bcf\u9875\u663e\u793a\u591a\u5c11\u6761 # get 127.0.0.1:9200/t5/_search { \"query\": { \"match\": { \"name\": \"t52\" } }, // \u4fdd\u8bc1\u67e5\u8be2\u5b57\u6bb5\u6709 \"highlight\": { \"pre_tags\": \"<font color='red'>\", \"post_tags\": \"</font>\", \"fields\": { \"name\": {} } }, \"from\": 0, \"size\": 3 }","title":"\u5206\u9875\u67e5\u8be2"},{"location":"db/es/quickstart/#_30","text":"max,min,sum,avg cardinality:\u5bf9\u67d0\u4e2a\u5b57\u6bb5\u7684\u503c\u8fdb\u884c\u53bb\u91cd\u4e4b\u540e\u518d\u53d6\u603b\u6570 stats:\u5bf9\u67d0\u4e2a\u5b57\u6bb5\u4e00\u6b21\u6027\u8fd4\u56de count\uff0cmax\uff0cmin\uff0cavg \u548c sum \u4e94\u4e2a\u6307\u6807 # get 127.0.0.1:9200/t5/_search { \"aggs\": { \"max_age\": { \"max\": { \"field\": \"age\" } } }, \"size\": 0 } # get 127.0.0.1:9200/t5/_search { \"aggs\": { \"stats_age\": { \"stats\": { \"field\": \"age\" } } }, \"size\": 0 } \u6839\u636e\u5e74\u9f84\u805a\u5408\u67e5\u8be2 # get 127.0.0.1:9200/t5/_search { \"aggs\": { \"age_groupby\": { \"terms\": { \"field\": \"age\" } } }, \"size\": 0 } { \"took\": 25, \"timed_out\": false, \"_shards\": { \"total\": 1, \"successful\": 1, \"skipped\": 0, \"failed\": 0 }, \"hits\": { \"total\": { \"value\": 7, \"relation\": \"eq\" }, \"max_score\": null, \"hits\": [] }, \"aggregations\": { \"age_groupby\": { \"doc_count_error_upper_bound\": 0, \"sum_other_doc_count\": 0, \"buckets\": [ { \"key\": 12, \"doc_count\": 6 }, { \"key\": 1, \"doc_count\": 1 } ] } } }","title":"\u805a\u5408\u67e5\u8be2"},{"location":"db/redis/advanced/","text":"\u53d1\u5e03\u8ba2\u9605 \u6982\u8ff0 \u53d1\u5e03\u8005:\uff1a\u53d1\u9001\u6d88\u606f \u8ba2\u9605\u8005\uff1a\u63a5\u6536\u4fe1\u606f redis\u53d1\u5e03\u8ba2\u9605 \u8ba2\u9605\u7ba1\u9053c1 subscribe c1 \u5728\u7ba1\u9053c1\u53d1\u5e03\u6d88\u606f publish c1 1 \u65b0\u6570\u636e\u7c7b\u578b bitmaps \u5b58\u50a801\u7ec4\u6210\u7684\u6570\u7ec4 \u547d\u4ee4 setbit offset\u4ece0\u5f00\u59cb setbit b1 0 0 getbit getbit key offset getbit b1 0 bitcount bitcount key start end start,end \u5747\u5305\u542b start->end\u4e4b\u95f41\u7684\u4e2a\u6570 -1\uff1a\u6700\u540e\u4e00\u4f4d -2\uff1a\u5012\u6570\u7b2c\u4e8c\u4f4d bitcount b1 0 3 bitop bitop and(or/not/xor) destkey k1 k2 k3 .... and\uff1a&& or\uff1a\u6216\u8005 not\uff1a\u975e xor:\u5f02\u6216 bitop and b3 b1 b2 HyperLogLog \u6982\u8ff0 \u7edf\u8ba1\u67d0\u4e2akey \u4e0d\u91cd\u590d\u5143\u7d20\u7684\u4e2a\u6570 \u4f18\u52bf \u5e76\u4e0d\u4f1a\u5b58\u50a8\u8f93\u5165\u7684\u5143\u7d20\uff0c\u800c\u662f\u6839\u636e\u8f93\u5165\u5143\u7d20\u8ba1\u7b97\u57fa\u6570 HyperLogLog\u53ea\u9700\u898112KB \u5c31\u53ef\u4ee5\u8ba1\u7b97 2e64\u4e0d\u540c\u5143\u7d20\u7684\u57fa\u6570 {1, 2, 3, 3, 4, 5} \u57fa\u6570\u96c6 {1, 2, 3, 4, 5} \u57fa\u6570 5 \u547d\u4ee4 pfadd pfadd key v1 v2 .... pfadd p1 1 2 3 pfcount \u8ba1\u7b97\u591a\u4e2akey\u7684\u57fa\u6570 pfcount k1 k2 k3 .... pfcount p1 pfcount p1 p2 pfmerge \u5c06\u591a\u4e2akey\u8fdb\u884c\u5408\u5e76 pfmerge destkey k1 k2 k3 pfmerge p3 p2 p1 Geospatial \u6982\u8ff0 \u7ecf\u7eac\u5ea6 \u547d\u4ee4 geoadd \u6dfb\u52a0 \u6709\u6548\u7684\u7ecf\u5ea6\u4ece -180 \u5ea6\u5230 180 \u5ea6\u3002\u6709\u6548\u7684\u7eac\u5ea6\u4ece -85.05112878 \u5ea6\u5230 85.05112878 \u5ea6\u3002 geoadd key \u7ecf\u5ea6 \u7eac\u5ea6 \u6210\u5458 [\u7ecf\u5ea6 \u7eac\u5ea6 \u6210\u5458] geoadd g1 1 1 a1 geopos \u5b9a\u4f4d \u83b7\u53d6\u6307\u5b9a\u6210\u5458\u7684\u7ecf\u5ea6 \u7eac\u5ea6 geopos key member [member ...] 127.0.0.1:6379> geopos g1 a1 1) 1) \"0.99999994039535522\" 2) \"0.99999945914297683\" geodist \u83b7\u53d6\u4fe9\u4e2a\u4f4d\u7f6e\u7684\u76f4\u7ebf\u8ddd\u79bb m \u8868\u793a\u5355\u4f4d\u4e3a\u7c73[\u9ed8\u8ba4\u503c]\u3002 km \u8868\u793a\u5355\u4f4d\u4e3a\u5343\u7c73\u3002 mi \u8868\u793a\u5355\u4f4d\u4e3a\u82f1\u91cc\u3002 ft \u8868\u793a\u5355\u4f4d\u4e3a\u82f1\u5c3a\u3002 geodist key member1 member2 [m | km | ft | mi] geodist g1 a1 a2 m georadius \u7ed9\u5b9a\u7ecf\u7eac\u5ea6\u4e3a\u4e2d\u5fc3 \u627e\u5230\u4e00\u5b9a\u534a\u5f84\u5185\u7684\u5143\u7d20 georadius key \u7ecf\u5ea6 \u7eac\u5ea6 radius m | km | ft | mi georadius g1 1 1 1000 km redis \u4e8b\u52a1 redis\u4e8b\u52a1\u5b9a\u4e49 Redis\u4e8b\u52a1\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u9694\u79bb\u64cd\u4f5c\uff1a\u4e8b\u52a1\u4e2d\u6240\u6709\u547d\u4ee4\u90fd\u4f1a\u5e8f\u5217\u5316\u3001\u6309\u987a\u5e8f\u7684\u6267\u884c\u3002\u4e8b\u52a1\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u4f1a\u88ab\u53ef\u4ed6\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u547d\u4ee4\u6253\u65ad\u3002 multi exec discard \u4ece\u8f93\u5165Multi\u547d\u4ee4\u5f00\u59cb\uff0c\u8f93\u5165\u7684\u547d\u4ee4\u90fd\u4f1a\u4f9d\u6b21\u8fdb\u5165\u547d\u4ee4\u961f\u5217\u4e2d\uff0c\u4f46\u4e0d\u4f1a\u6267\u884c\uff0c\u76f4\u5230\u8f93\u5165Exec\u540e\uff0cRedis\u4f1a\u5c06\u4e4b\u524d\u7684\u547d\u4ee4\u961f\u5217\u4e2d\u7684\u547d\u4ee4\u4f9d\u6b21\u6267\u884c\u3002 \u7ec4\u961f\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u901a\u8fc7discard\u6765\u653e\u5f03\u7ec4\u961f\u3002 127.0.0.1:6379> multi OK 127.0.0.1:6379(TX)> set 1 1 QUEUED 127.0.0.1:6379(TX)> set 2 2 QUEUED 127.0.0.1:6379(TX)> exec 1) OK 2) OK 127.0.0.1:6379> \u5982\u679c\u53d1\u751f\u9519\u8bef \u7ec4\u961f\u4e2d\u67d0\u4e2a\u547d\u4ee4\u51fa\u73b0\u4e86\u62a5\u544a\u9519\u8bef\uff0c\u6267\u884c\u65f6\u6574\u4e2a\u7684\u6240\u6709\u961f\u5217\u90fd\u4f1a\u88ab\u53d6\u6d88\u3002 \u5982\u679c\u6267\u884c\u9636\u6bb5\u67d0\u4e2a\u547d\u4ee4\u62a5\u51fa\u4e86\u9519\u8bef\uff0c\u5219\u53ea\u6709\u62a5\u9519\u7684\u547d\u4ee4\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c\u800c\u5176\u4ed6\u7684\u547d\u4ee4\u90fd\u4f1a\u6267\u884c\uff0c\u4e0d\u4f1a\u56de\u6eda\u3002 \u9501 \u60b2\u89c2\u9501 \u60b2\u89c2\u9501(Pessimistic Lock) , \u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5f88\u60b2\u89c2\uff0c\u6bcf\u6b21\u53bb\u62ff\u6570\u636e\u7684\u65f6\u5019\u90fd\u8ba4\u4e3a\u522b\u4eba\u4f1a\u4fee\u6539\uff0c\u6240\u4ee5\u6bcf\u6b21\u5728\u62ff\u6570\u636e\u7684\u65f6\u5019\u90fd\u4f1a\u4e0a\u9501\uff0c\u8fd9\u6837\u522b\u4eba\u60f3\u62ff\u8fd9\u4e2a\u6570\u636e\u5c31\u4f1ablock\u76f4\u5230\u5b83\u62ff\u5230\u9501 \u4e50\u89c2\u9501 \u4e50\u89c2\u9501(Optimistic Lock), \u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5f88\u4e50\u89c2\uff0c\u6bcf\u6b21\u53bb\u62ff\u6570\u636e\u7684\u65f6\u5019\u90fd\u8ba4\u4e3a\u522b\u4eba\u4e0d\u4f1a\u4fee\u6539\uff0c\u6240\u4ee5\u4e0d\u4f1a\u4e0a\u9501\uff0c\u4f46\u662f\u5728\u66f4\u65b0\u7684\u65f6\u5019\u4f1a\u5224\u65ad\u4e00\u4e0b\u5728\u6b64\u671f\u95f4\u522b\u4eba\u6709\u6ca1\u6709\u53bb\u66f4\u65b0\u8fd9\u4e2a\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u7248\u672c\u53f7\u7b49\u673a\u5236\u3002 \u4e50\u89c2\u9501\u9002\u7528\u4e8e\u591a\u8bfb\u7684\u5e94\u7528\u7c7b\u578b\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u541e\u5410\u91cf \u3002Redis\u5c31\u662f\u5229\u7528\u8fd9\u79cdcheck-and-set\u673a\u5236\u5b9e\u73b0\u4e8b\u52a1\u7684\u3002 watch unwatch \u5728\u6267\u884cmulti\u4e4b\u524d\uff0c\u5148\u6267\u884cwatch key1 [key2],\u53ef\u4ee5\u76d1\u89c6\u4e00\u4e2a(\u6216\u591a\u4e2a) key \uff0c\u5982\u679c\u5728\u4e8b\u52a1 \u6267\u884c\u4e4b\u524d\u8fd9\u4e2a( \u6216\u8fd9\u4e9b) key \u88ab\u5176\u4ed6\u547d\u4ee4\u6240\u6539\u52a8\uff0c\u90a3\u4e48\u4e8b\u52a1\u5c06\u88ab\u6253\u65ad\u3002 127.0.0.1:6379> watch 1 OK 127.0.0.1:6379> multi OK 127.0.0.1:6379(TX)> set 1 1 QUEUED 127.0.0.1:6379(TX)> exec (nil) 127.0.0.1:6379> unwatch \u53d6\u6d88\u5bf9key\u7684\u76d1\u89c6 redis\u4e8b\u52a1\u7279\u6027 \u00d8 \u5355\u72ec\u7684\u9694\u79bb\u64cd\u4f5c \u4e8b\u52a1\u4e2d\u7684\u6240\u6709\u547d\u4ee4\u90fd\u4f1a\u5e8f\u5217\u5316\u3001\u6309\u987a\u5e8f\u5730\u6267\u884c\u3002\u4e8b\u52a1\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u4f1a\u88ab\u5176\u4ed6\u5ba2\u6237\u7aef\u53d1\u9001\u6765\u7684\u547d\u4ee4\u8bf7\u6c42\u6240\u6253\u65ad\u3002 \u00d8 \u6ca1\u6709\u9694\u79bb\u7ea7\u522b\u7684\u6982\u5ff5 \u961f\u5217\u4e2d\u7684\u547d\u4ee4\u6ca1\u6709\u63d0\u4ea4\u4e4b\u524d\u90fd\u4e0d\u4f1a\u5b9e\u9645\u88ab\u6267\u884c\uff0c\u56e0\u4e3a\u4e8b\u52a1\u63d0\u4ea4\u524d\u4efb\u4f55\u6307\u4ee4\u90fd\u4e0d\u4f1a\u88ab\u5b9e\u9645\u6267\u884c \u00d8 \u4e0d\u4fdd\u8bc1\u539f\u5b50\u6027 \u4e8b\u52a1\u4e2d\u5982\u679c\u6709\u4e00\u6761\u547d\u4ee4\u6267\u884c\u5931\u8d25\uff0c\u5176\u540e\u7684\u547d\u4ee4\u4ecd\u7136\u4f1a\u88ab\u6267\u884c\uff0c\u6ca1\u6709\u56de\u6eda \u6301\u4e45\u5316 rdb what \u5728\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u5185\u5c06\u5185\u5b58\u4e2d\u7684\u6570\u636e\u96c6\u5feb\u7167\u5199\u5165\u78c1\u76d8\uff0c \u4e5f\u5c31\u662f\u884c\u8bdd\u8bb2\u7684Snapshot\u5feb\u7167\uff0c\u5b83\u6062\u590d\u65f6\u662f\u5c06\u5feb\u7167\u6587\u4ef6\u76f4\u63a5\u8bfb\u5230\u5185\u5b58\u91cc source fork todo Redis\u4f1a\u5355\u72ec\u521b\u5efa\uff08fork\uff09\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u6765\u8fdb\u884c\u6301\u4e45\u5316\uff0c\u4f1a\u5148\u5c06\u6570\u636e\u5199\u5165\u5230 \u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\u4e2d\uff0c\u5f85\u6301\u4e45\u5316\u8fc7\u7a0b\u90fd\u7ed3\u675f\u4e86\uff0c\u518d\u7528\u8fd9\u4e2a\u4e34\u65f6\u6587\u4ef6\u66ff\u6362\u4e0a\u6b21\u6301\u4e45\u5316\u597d\u7684\u6587\u4ef6\u3002 \u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4e3b\u8fdb\u7a0b\u662f\u4e0d\u8fdb\u884c\u4efb\u4f55IO\u64cd\u4f5c\u7684\uff0c\u8fd9\u5c31\u786e\u4fdd\u4e86\u6781\u9ad8\u7684\u6027\u80fd \u5982\u679c\u9700\u8981\u8fdb\u884c\u5927\u89c4\u6a21\u6570\u636e\u7684\u6062\u590d\uff0c\u4e14\u5bf9\u4e8e\u6570\u636e\u6062\u590d\u7684\u5b8c\u6574\u6027\u4e0d\u662f\u975e\u5e38\u654f\u611f\uff0c\u90a3RDB\u65b9\u5f0f\u8981\u6bd4AOF\u65b9\u5f0f\u66f4\u52a0\u7684\u9ad8\u6548\u3002 RDB \u7684\u7f3a\u70b9\u662f\u6700\u540e\u4e00\u6b21\u6301\u4e45\u5316\u540e\u7684\u6570\u636e\u53ef\u80fd\u4e22\u5931\u3002 config \u6307\u5b9a\u6587\u4ef6\u4f4d\u7f6e redis.conf dir /opt/homebrew/var/db/redis/ \u914d\u7f6e\u89e6\u53d1\u7b56\u7565 \u4e0d\u8bbe\u7f6esave\u6307\u4ee4\uff0c\u6216\u8005\u7ed9save\u4f20\u5165\u7a7a\u5b57\u7b26\u4e32 \u624b\u52a8\u89e6\u53d1 save \uff1asave\u65f6\u53ea\u7ba1\u4fdd\u5b58\uff0c\u5176\u5b83\u4e0d\u7ba1\uff0c\u5168\u90e8\u963b\u585e\u3002\u624b\u52a8\u4fdd\u5b58\u3002\u4e0d\u5efa\u8bae\u3002 bgsave\uff1aRedis\u4f1a\u5728\u540e\u53f0\u5f02\u6b65\u8fdb\u884c\u5feb\u7167\u64cd\u4f5c\uff0c\u5feb\u7167\u540c\u65f6\u8fd8\u53ef\u4ee5\u54cd\u5e94\u5ba2\u6237\u7aef\u8bf7\u6c42\u3002 stop-writes-on-bgsave-error \u5f53Redis\u65e0\u6cd5\u5199\u5165\u78c1\u76d8\u7684\u8bdd\uff0c\u76f4\u63a5\u5173\u6389Redis\u7684\u5199\u64cd\u4f5c\u3002\u63a8\u8350yes. rdbcompression \u4f7f\u7528\u538b\u7f29\u7b97\u6cd5 , LZF rdbchecksum \u68c0\u67e5\u5b8c\u6574\u6027 \u4f18\u70b9\u7f3a\u70b9 \u4f18\u70b9 l \u8282\u7701\u78c1\u76d8\u7a7a\u95f4 l \u6062\u590d\u901f\u5ea6\u5feb \u7f3a\u70b9 \u867d\u7136Redis\u5728fork\u65f6\u4f7f\u7528\u4e86 \u5199\u65f6\u62f7\u8d1d\u6280\u672f ,\u4f46\u662f\u5982\u679c\u6570\u636e\u5e9e\u5927\u65f6\u8fd8\u662f\u6bd4\u8f83\u6d88\u8017\u6027\u80fd\u3002 \u5728\u5907\u4efd\u5468\u671f\u5728\u4e00\u5b9a\u95f4\u9694\u65f6\u95f4\u505a\u4e00\u6b21\u5907\u4efd\uff0c\u6240\u4ee5\u5982\u679cRedis\u610f\u5916down\u6389\u7684\u8bdd\uff0c\u5c31\u4f1a\u4e22\u5931\u6700\u540e\u4e00\u6b21\u5feb\u7167\u540e\u7684\u6240\u6709\u4fee\u6539\u3002 aof what \u4ee5 \u65e5\u5fd7 \u7684\u5f62\u5f0f\u6765\u8bb0\u5f55\u6bcf\u4e2a\u5199\u64cd\u4f5c\uff08\u589e\u91cf\u4fdd\u5b58\uff09\uff0c\u5c06Redis\u6267\u884c\u8fc7\u7684\u6240\u6709\u5199\u6307\u4ee4\u8bb0\u5f55\u4e0b\u6765( \u8bfb\u64cd\u4f5c\u4e0d\u8bb0\u5f55 )\uff0c \u53ea\u8bb8\u8ffd\u52a0\u6587\u4ef6\u4f46\u4e0d\u53ef\u4ee5\u6539\u5199\u6587\u4ef6 \uff0credis\u542f\u52a8\u4e4b\u521d\u4f1a\u8bfb\u53d6\u8be5\u6587\u4ef6\u91cd\u65b0\u6784\u5efa\u6570\u636e\uff0c \u6362\u8a00\u4e4b\uff0credis \u91cd\u542f\u7684\u8bdd\u5c31\u6839\u636e\u65e5\u5fd7\u6587\u4ef6\u7684\u5185\u5bb9\u5c06\u5199\u6307\u4ee4\u4ece\u524d\u5230\u540e\u6267\u884c\u4e00\u6b21\u4ee5\u5b8c\u6210\u6570\u636e\u7684\u6062\u590d\u5de5\u4f5c source \u5982\u4f55\u540c\u6b65 \u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u5199\u547d\u4ee4\u4f1a\u88abappend\u8ffd\u52a0\u5230AOF\u7f13\u51b2\u533a\u5185\uff1b AOF\u7f13\u51b2\u533a\u6839\u636eAOF\u6301\u4e45\u5316\u7b56\u7565[always,everysec,no]\u5c06\u64cd\u4f5csync\u540c\u6b65\u5230\u78c1\u76d8\u7684AOF\u6587\u4ef6\u4e2d\uff1b AOF\u6587\u4ef6\u5927\u5c0f\u8d85\u8fc7\u91cd\u5199\u7b56\u7565\u6216\u624b\u52a8\u91cd\u5199\u65f6\uff0c\u4f1a\u5bf9AOF\u6587\u4ef6rewrite\u91cd\u5199\uff0c\u538b\u7f29AOF\u6587\u4ef6\u5bb9\u91cf Redis\u670d\u52a1\u91cd\u542f\u65f6\uff0c\u4f1a\u91cd\u65b0load\u52a0\u8f7dAOF\u6587\u4ef6\u4e2d\u7684\u5199\u64cd\u4f5c\u8fbe\u5230\u6570\u636e\u6062\u590d\u7684\u76ee\u7684 \u538b\u7f29 what AOF\u91c7\u7528\u6587\u4ef6\u8ffd\u52a0\u65b9\u5f0f\uff0c\u6587\u4ef6\u4f1a\u8d8a\u6765\u8d8a\u5927\u4e3a\u907f\u514d\u51fa\u73b0\u6b64\u79cd\u60c5\u51b5\uff0c\u65b0\u589e\u4e86\u91cd\u5199\u673a\u5236, \u5f53AOF\u6587\u4ef6\u7684\u5927\u5c0f\u8d85\u8fc7\u6240\u8bbe\u5b9a\u7684\u9608\u503c\u65f6\uff0cRedis\u5c31\u4f1a\u542f\u52a8AOF\u6587\u4ef6\u7684\u5185\u5bb9\u538b\u7f29\uff0c \u53ea\u4fdd\u7559\u53ef\u4ee5\u6062\u590d\u6570\u636e\u7684\u6700\u5c0f\u6307\u4ee4\u96c6.\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4bgrewriteaof AOF\u6587\u4ef6\u6301\u7eed\u589e\u957f\u800c\u8fc7\u5927\u65f6\uff0c\u4f1afork\u51fa\u4e00\u6761\u65b0\u8fdb\u7a0b\u6765\u5c06\u6587\u4ef6\u91cd\u5199(\u4e5f\u662f\u5148\u5199\u4e34\u65f6\u6587\u4ef6\u6700\u540e\u518drename)\uff0credis4.0\u7248\u672c\u540e\u7684\u91cd\u5199\uff0c\u662f\u6307\u4e0a\u5c31\u662f\u628ardb \u7684\u5feb\u7167\uff0c\u4ee5\u4e8c\u7ea7\u5236\u7684\u5f62\u5f0f\u9644\u5728\u65b0\u7684aof\u5934\u90e8\uff0c\u4f5c\u4e3a\u5df2\u6709\u7684\u5386\u53f2\u6570\u636e\uff0c\u66ff\u6362\u6389\u539f\u6765\u7684\u6d41\u6c34\u8d26\u64cd\u4f5c\u3002 source bgrewriteaof\u89e6\u53d1\u91cd\u5199\uff0c\u5224\u65ad\u662f\u5426\u5f53\u524d\u6709bgsave\u6216bgrewriteaof\u5728\u8fd0\u884c\uff0c\u5982\u679c\u6709\uff0c\u5219\u7b49\u5f85\u8be5\u547d\u4ee4\u7ed3\u675f\u540e\u518d\u7ee7\u7eed\u6267\u884c\u3002 \u4e3b\u8fdb\u7a0bfork\u51fa\u5b50\u8fdb\u7a0b\u6267\u884c\u91cd\u5199\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u4e3b\u8fdb\u7a0b\u4e0d\u4f1a\u963b\u585e\u3002 \u5b50\u8fdb\u7a0b\u904d\u5386redis\u5185\u5b58\u4e2d\u6570\u636e\u5230\u4e34\u65f6\u6587\u4ef6\uff0c\u5ba2\u6237\u7aef\u7684\u5199\u8bf7\u6c42\u540c\u65f6\u5199\u5165aof_buf\u7f13\u51b2\u533a\u548caof_rewrite_buf\u91cd\u5199\u7f13\u51b2\u533a\u4fdd\u8bc1\u539fAOF\u6587\u4ef6\u5b8c\u6574\u4ee5\u53ca\u65b0AOF\u6587\u4ef6\u751f\u6210\u671f\u95f4\u7684\u65b0\u7684\u6570\u636e\u4fee\u6539\u52a8\u4f5c\u4e0d\u4f1a\u4e22\u5931\u3002 1).\u5b50\u8fdb\u7a0b\u5199\u5b8c\u65b0\u7684AOF\u6587\u4ef6\u540e\uff0c\u5411\u4e3b\u8fdb\u7a0b\u53d1\u4fe1\u53f7\uff0c\u7236\u8fdb\u7a0b\u66f4\u65b0\u7edf\u8ba1\u4fe1\u606f\u30022).\u4e3b\u8fdb\u7a0b\u628aaof_rewrite_buf\u4e2d\u7684\u6570\u636e\u5199\u5165\u5230\u65b0\u7684AOF\u6587\u4ef6\u3002 \u4f7f\u7528\u65b0\u7684AOF\u6587\u4ef6\u8986\u76d6\u65e7\u7684AOF\u6587\u4ef6\uff0c\u5b8c\u6210AOF\u91cd\u5199\u3002 config \u5199\u914d\u7f6e \u5982\u679c no-appendfsync-on-rewrite=yes ,\u4e0d\u5199\u5165aof\u6587\u4ef6\u53ea\u5199\u5165\u7f13\u5b58\uff0c\u7528\u6237\u8bf7\u6c42\u4e0d\u4f1a\u963b\u585e\uff0c\u4f46\u662f\u5728\u8fd9\u6bb5\u65f6\u95f4\u5982\u679c\u5b95\u673a\u4f1a\u4e22\u5931\u8fd9\u6bb5\u65f6\u95f4\u7684\u7f13\u5b58\u6570\u636e\u3002\uff08\u964d\u4f4e\u6570\u636e\u5b89\u5168\u6027\uff0c\u63d0\u9ad8\u6027\u80fd\uff09 \u200b \u5982\u679c no-appendfsync-on-rewrite=no, \u8fd8\u662f\u4f1a\u628a\u6570\u636e\u5f80\u78c1\u76d8\u91cc\u5237\uff0c\u4f46\u662f\u9047\u5230\u91cd\u5199\u64cd\u4f5c\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u963b\u585e\u3002\uff08\u6570\u636e\u5b89\u5168\uff0c\u4f46\u662f\u6027\u80fd\u964d\u4f4e\uff09 \u89e6\u53d1\u673a\u5236\uff0c\u4f55\u65f6\u91cd\u5199 \u89e6\u53d1\u7b56\u7565\u914d\u7f6e Redis\u4f1a\u8bb0\u5f55\u4e0a\u6b21\u91cd\u5199\u65f6\u7684AOF\u5927\u5c0f\uff0c\u9ed8\u8ba4\u914d\u7f6e\u662f\u5f53AOF\u6587\u4ef6\u5927\u5c0f\u662f\u4e0a\u6b21rewrite\u540e\u5927\u5c0f\u7684\u4e00\u500d\u4e14\u6587\u4ef6\u5927\u4e8e64M\u65f6\u89e6\u53d1 \u91cd\u5199\u867d\u7136\u53ef\u4ee5\u8282\u7ea6\u5927\u91cf\u78c1\u76d8\u7a7a\u95f4\uff0c\u51cf\u5c11\u6062\u590d\u65f6\u95f4\u3002\u4f46\u662f\u6bcf\u6b21\u91cd\u5199\u8fd8\u662f\u6709\u4e00\u5b9a\u7684\u8d1f\u62c5\u7684\uff0c\u56e0\u6b64\u8bbe\u5b9aRedis\u8981\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u624d\u4f1a\u8fdb\u884c\u91cd\u5199\u3002 auto-aof-rewrite-percentage\uff1a\u8bbe\u7f6e\u91cd\u5199\u7684\u57fa\u51c6\u503c\uff0c\u6587\u4ef6\u8fbe\u5230100%\u65f6\u5f00\u59cb\u91cd\u5199\uff08\u6587\u4ef6\u662f\u539f\u6765\u91cd\u5199\u540e\u6587\u4ef6\u76842\u500d\u65f6\u89e6\u53d1\uff09 auto-aof-rewrite-min-size\uff1a\u8bbe\u7f6e\u91cd\u5199\u7684\u57fa\u51c6\u503c\uff0c\u6700\u5c0f\u6587\u4ef664MB\u3002\u8fbe\u5230\u8fd9\u4e2a\u503c\u5f00\u59cb\u91cd\u5199\u3002 \u4f8b\u5982\uff1a\u6587\u4ef6\u8fbe\u523070MB\u5f00\u59cb\u91cd\u5199\uff0c\u964d\u523050MB\uff0c\u4e0b\u6b21\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u91cd\u5199\uff1f100MB \u7cfb\u7edf\u8f7d\u5165\u65f6\u6216\u8005\u4e0a\u6b21\u91cd\u5199\u5b8c\u6bd5\u65f6\uff0cRedis\u4f1a\u8bb0\u5f55\u6b64\u65f6AOF\u5927\u5c0f\uff0c\u8bbe\u4e3abase_size, \u5982\u679cRedis\u7684AOF\u5f53\u524d\u5927\u5c0f>= base_size +base_size*100% (\u9ed8\u8ba4)\u4e14\u5f53\u524d\u5927\u5c0f>=64mb(\u9ed8\u8ba4)\u7684\u60c5\u51b5\u4e0b\uff0cRedis\u4f1a\u5bf9AOF\u8fdb\u884c\u91cd\u5199\u3002 config \u5f00\u542f\u914d\u7f6e \u53ef\u4ee5\u5728redis.conf\u4e2d\u914d\u7f6e\u6587\u4ef6\u540d\u79f0\uff0c\u9ed8\u8ba4\u4e3a appendonly.aof AOF\u6587\u4ef6\u7684\u4fdd\u5b58\u8def\u5f84\uff0c\u540cRDB\u7684\u8def\u5f84\u4e00\u81f4\u3002 \u9ed8\u8ba4aof\u4e0d\u5f00\u542f\uff0c\u5982\u679caof,rdb\u540c\u65f6\u5f00\u542f\uff0c\u5219\u4f7f\u7528aof \u540c\u6b65\u9891\u7387\u914d\u7f6e appendfsync always \u59cb\u7ec8\u540c\u6b65\uff0c\u6bcf\u6b21Redis\u7684\u5199\u5165\u90fd\u4f1a\u7acb\u523b\u8bb0\u5165\u65e5\u5fd7\uff1b\u6027\u80fd\u8f83\u5dee\u4f46\u6570\u636e\u5b8c\u6574\u6027\u6bd4\u8f83\u597d appendfsync everysec \u6bcf\u79d2\u540c\u6b65\uff0c\u6bcf\u79d2\u8bb0\u5165\u65e5\u5fd7\u4e00\u6b21\uff0c\u5982\u679c\u5b95\u673a\uff0c\u672c\u79d2\u7684\u6570\u636e\u53ef\u80fd\u4e22\u5931\u3002 appendfsync no redis\u4e0d\u4e3b\u52a8\u8fdb\u884c\u540c\u6b65\uff0c\u628a\u540c\u6b65\u65f6\u673a\u4ea4\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u3002 use \u6062\u590d \u6b63\u5e38\u6062\u590d \u4fee\u6539\u9ed8\u8ba4\u7684appendonly no\uff0c\u6539\u4e3ayes \u5c06\u6709\u6570\u636e\u7684aof\u6587\u4ef6\u590d\u5236\u4e00\u4efd\u4fdd\u5b58\u5230\u5bf9\u5e94\u76ee\u5f55(\u67e5\u770b\u76ee\u5f55\uff1aconfig get dir) \u6062\u590d\uff1a\u91cd\u542fredis\u7136\u540e\u91cd\u65b0\u52a0\u8f7d \u5f02\u5e38\u6062\u590d \u4fee\u6539\u9ed8\u8ba4\u7684appendonly no\uff0c\u6539\u4e3ayes \u5982\u9047\u5230AOF\u6587\u4ef6\u635f\u574f\uff0c\u901a\u8fc7/usr/local/bin/redis-check-aof--fix appendonly.aof\u8fdb\u884c\u4fee\u590d \u5907\u4efd\u88ab\u5199\u574f\u7684AOF\u6587\u4ef6 \u6062\u590d\uff1a\u91cd\u542fredis\uff0c\u7136\u540e\u91cd\u65b0\u52a0\u8f7d summary advantages \u5907\u4efd\u673a\u5236\u66f4\u7a33\u5065\uff0c\u4e22\u5931\u6570\u636e\u6982\u7387\u66f4\u4f4e\u3002 disadvantages \u6bd4\u8d77RDB\u5360\u7528\u66f4\u591a\u7684\u78c1\u76d8\u7a7a\u95f4\u3002 \u6062\u590d\u5907\u4efd\u901f\u5ea6\u8981\u6162\u3002 \u6bcf\u6b21\u8bfb\u5199\u90fd\u540c\u6b65\u7684\u8bdd\uff0c\u6709\u4e00\u5b9a\u7684\u6027\u80fd\u538b\u529b\u3002 \u4e3b\u4ece\u590d\u5236 what \u8bfb\u5199\u5206\u79bb\uff0cmaster\u5199\uff0c\u590d\u5236\u5230slaver, slaver\u8fdb\u884c\u8bfb use \u57fa\u7840 \u914d\u7f6e \u4ece\u5355\u673a\u4e2d\u7684redis.conf\u590d\u5236\u4e00\u4efdredis.conf \u65b0\u5efaredis6379.conf,redis6380.conf,redis6381.conf \u586b\u5165\u5982\u4e0b\u5185\u5bb9\uff0c\u4fee\u6539 pidfile,port,dbfilename include /opt/homebrew/etc/myredis/redis.conf pidfile \"/var/run/redis_6379.pid\" port 6379 dbfilename dump6379.rdb \u542f\u52a8 \u542f\u52a8\u4e09\u53f0redis\u670d\u52a1\u5668 \u276f redis-server ./redis6379.conf \u276f redis-server ./redis6380.conf \u276f redis-server ./redis6381.conf \u67e5\u770b 127.0.0.1:6379> info replication # Replication role:master connected_slaves:0 master_failover_state:no-failover master_replid:08f03d154f528b0980ccb908bff473e966a19509 master_replid2:0000000000000000000000000000000000000000 master_repl_offset:0 second_repl_offset:-1 repl_backlog_active:0 repl_backlog_size:1048576 repl_backlog_first_byte_offset:0 repl_backlog_histlen:0 \u4ece\u673a\u914d\u7f6e \u4e3b\u673a\u4e0d\u914d\u7f6e 6380,6381\u914d\u7f6e slaveof 127.0.0.1 6379 \u6ce8\u610f \u4ece\u673a\u5199\u6570\u636e\u5c31\u4f1a\u62a5\u9519 127.0.0.1:6381> set 1 1 (error) READONLY You can't write against a read only replica. \u4e3b\u673a\u6302\u6389\u91cd\u542f\u5373\u53ef \u4ece\u673a\u91cd\u542f\u9700\u8981\u91cd\u65b0\u914d\u7f6eslaveof 127.0.0.1 6379\uff0c\u4e5f\u53ef\u4ee5\u5199\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d \u5e38\u89c1\u7684\u4e09\u79cd\u4e3b\u4ece\u6a21\u5f0f \u4e00\u4e3b\u4e8c\u4ece \u85aa\u706b\u76f8\u4f20 \u964d\u4f4e\u4e86master\u590d\u5236\u65f6\u7684\u5199\u538b\u529b \u4e3b\u673a\u6302\u6389 \u4ece\u673a\u4ecd\u7136\u662f\u4ece\u673a \u53cd\u5ba2\u4e3a\u4e3b \u57fa\u4e8e\u85aa\u706b\u76f8\u4f20 \u5f53\u4e00\u4e2amaster\u5b95\u673a\u540e\uff0c\u540e\u9762\u7684slave\u53ef\u4ee5\u7acb\u523b\u5347\u4e3amaster\uff0c\u5176\u540e\u9762\u7684slave\u4e0d\u7528\u505a\u4efb\u4f55\u4fee\u6539\u3002 \u4f7f\u7528\u5982\u4e0b\u547d\u4ee4 slaveof no one \u54e8\u5175\u6a21\u5f0f what \u53cd\u5ba2\u4e3a\u4e3b\u7684\u81ea\u52a8\u7248 \uff0c\u80fd\u591f\u540e\u53f0\u76d1\u63a7\u4e3b\u673a\u662f\u5426\u6545\u969c\uff0c\u5982\u679c\u6545\u969c\u4e86\u6839\u636e\u6295\u7968\u6570\u81ea\u52a8\u5c06\u4ece\u5e93\u8f6c\u6362\u4e3a\u4e3b\u5e93 use \u4f7f\u7528\u4e00\u4e3b\u4e8c\u4ec6\uff0c master:6379, slaver:6380,6381 \u914d\u7f6e\u6587\u4ef6\u4e0b\u65b0\u5efasentinel.conf sentinel monitor mymaster 127.0.0.1 6379 1 \u542f\u52a8\u54e8\u5175 redis-sentinel ./sentinel.conf \u9009\u4e3e\u89c4\u5219 1 master\u6302\u6389\uff0c\u5219\u6839\u636e\u4e0b\u5217\u6761\u4ef6\u4eceslaver\u4e2d\u9009\u4e3e\u4e00\u4e2amaster \u4f18\u5148\u7ea7\u5728redis.conf\u4e2d\u9ed8\u8ba4\uff1aslave-priority 100\uff0c\u503c\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8 \u504f\u79fb\u91cf\u662f\u6307\u83b7\u5f97\u539f\u4e3b\u673a\u6570\u636e\u6700\u5168\u7684 \u6bcf\u4e2aredis\u5b9e\u4f8b\u542f\u52a8\u540e\u90fd\u4f1a\u968f\u673a\u751f\u6210\u4e00\u4e2a40\u4f4d\u7684runid 2sentine\u5411\u539f\u4e3b\u670d\u52a1\u7684\u4ece\u670d\u52a1\u53d1\u9001slaveof\u547d\u4ee4\uff0c\u53d1\u9001\u590d\u5236\u6570\u636e 3.\u5982\u679c\u4e00\u4e2amaster\u5df2\u7ecf\u4e0b\u7ebf\u53c8\u91cd\u65b0\u4e0a\u7ebf\uff0csentinel\u4f1a\u5411\u5176\u53d1\u9001slaveof\u547d\u4ee4\uff0c\u8ba9\u5176\u6210\u4e3a\u65b0\u4e3b\u7684\u4ece source \u590d\u5236\u539f\u7406 Slave\u542f\u52a8\u6210\u529f\u8fde\u63a5\u5230master\u540e\u4f1a\u53d1\u9001\u4e00\u4e2async\u547d\u4ee4 Master\u63a5\u5230\u547d\u4ee4\u542f\u52a8\u540e\u53f0\u7684\u5b58\u76d8\u8fdb\u7a0b\uff0c\u540c\u65f6\u6536\u96c6\u6240\u6709\u63a5\u6536\u5230\u7684\u7528\u4e8e\u4fee\u6539\u6570\u636e\u96c6\u547d\u4ee4\uff0c \u5728\u540e\u53f0\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\u4e4b\u540e\uff0cmaster\u5c06\u4f20\u9001\u6574\u4e2a\u6570\u636e\u6587\u4ef6\u5230slave,\u4ee5\u5b8c\u6210\u4e00\u6b21\u5b8c\u5168\u540c\u6b65 \u5168\u91cf\u590d\u5236\uff1a\u800cslave\u670d\u52a1\u5728\u63a5\u6536\u5230\u6570\u636e\u5e93\u6587\u4ef6\u6570\u636e\u540e\uff0c\u5c06\u5176\u5b58\u76d8\u5e76\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u3002 \u589e\u91cf\u590d\u5236\uff1aMaster\u7ee7\u7eed\u5c06\u65b0\u7684\u6240\u6709\u6536\u96c6\u5230\u7684\u4fee\u6539\u547d\u4ee4\u4f9d\u6b21\u4f20\u7ed9slave,\u5b8c\u6210\u540c\u6b65 \u4f46\u662f\u53ea\u8981\u662f\u91cd\u65b0\u8fde\u63a5master,\u4e00\u6b21\u5b8c\u5168\u540c\u6b65\uff08\u5168\u91cf\u590d\u5236)\u5c06\u88ab\u81ea\u52a8\u6267\u884c \u96c6\u7fa4 what Redis \u96c6\u7fa4\u5b9e\u73b0\u4e86\u5bf9Redis\u7684\u6c34\u5e73\u6269\u5bb9\uff0c\u5373\u542f\u52a8N\u4e2aredis\u8282\u70b9\uff0c\u5c06\u6574\u4e2a\u6570\u636e\u5e93\u5206\u5e03\u5b58\u50a8\u5728\u8fd9N\u4e2a\u8282\u70b9\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u603b\u6570\u636e\u76841/N\u3002 Redis \u96c6\u7fa4\u901a\u8fc7\u5206\u533a\uff08partition\uff09\u6765\u63d0\u4f9b\u4e00\u5b9a\u7a0b\u5ea6\u7684\u53ef\u7528\u6027\uff08availability\uff09\uff1a \u5373\u4f7f\u96c6\u7fa4\u4e2d\u6709\u4e00\u90e8\u5206\u8282\u70b9\u5931\u6548\u6216\u8005\u65e0\u6cd5\u8fdb\u884c\u901a\u8baf\uff0c \u96c6\u7fa4\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u5904\u7406\u547d\u4ee4\u8bf7\u6c42\u3002 how \u642d\u5efa \u5220\u9664\u6301\u8ba1\u5316\u6587\u4ef6 \u67e5\u770bredis.conf\u914d\u7f6e\u6587\u4ef6\u6301\u4e45\u5316\u6587\u4ef6\u76ee\u5f55 dir /opt/homebrew/var/db/redis/ \u5220\u9664\u6301\u4e45\u5316\u6587\u4ef6 \u65b0\u5efa\u5982\u4e0b\u914d\u7f6e\u6587\u4ef6 \u5728\u5982\u4e0b\u76ee\u5f55\u65b0\u5efaredis6379.conf redis6379.conf redis6380.conf redis6381.conf redis6389.conf redis6390.conf redis6391.conf /opt/homebrew/etc/myredis/cluster cluster-enabled yes \u6253\u5f00\u96c6\u7fa4\u6a21\u5f0f cluster-config-file nodes-6379.conf \u8bbe\u5b9a\u8282\u70b9\u914d\u7f6e\u6587\u4ef6\u540d cluster-node-timeout 15000 \u8bbe\u5b9a\u8282\u70b9\u5931\u8054\u65f6\u95f4\uff0c\u8d85\u8fc7\u8be5\u65f6\u95f4\uff08\u6beb\u79d2\uff09\uff0c\u96c6\u7fa4\u81ea\u52a8\u8fdb\u884c\u4e3b\u4ece\u5207\u6362\u3002 include /opt/homebrew/etc/myredis/redis.conf port 6379 pidfile \"/var/run/redis_6379.pid\" dbfilename \"dump6379.rdb\" logfile \"/opt/homebrew/var/db/redis/redis_cluster/logs/redis_err_6379.log\" cluster-enabled yes cluster-config-file nodes-6379.conf cluster-node-timeout 15000 \u542f\u52a8\u670d\u52a1\u7aef \u542f\u52a86\u53f0redis, \u542f\u52a8\u53ef\u80fd\u4f1a\u62a5\u9519\uff0c\u9700\u8981\u65b0\u5efa\u65e5\u5fd7\u6240\u5728\u7684\u76ee\u5f55 \u276f redis-server ./redis6379.conf \u276f redis-server ./redis6380.conf \u276f redis-server ./redis6381.conf \u276f redis-server ./redis6389.conf \u276f redis-server ./redis6390.conf \u276f redis-server ./redis6391.conf \u5408\u4f53 \u4e0d\u8981\u4f7f\u7528127.0.0.1,\u4f7f\u7528\u771f\u5b9eip192.168.199.222 redis-cli --cluster create --cluster-replicas 1 192.168.199.222:6379 192.168.199.222:6380 192.168.199.222:6381 192.168.199.222:6389 192.168.199.222:6390 192.168.199.222:6391 \u542f\u52a8\u5ba2\u6237\u7aef redis-cli -c -p 6379 \u57fa\u7840\u4f7f\u7528 \u67e5\u770b\u96c6\u7fa4\u4fe1\u606f sh cluster nodes slots \u4e00\u4e2a Redis \u96c6\u7fa4\u5305\u542b 16384 \u4e2a\u63d2\u69fd\uff08hash slot\uff09\uff0c \u6570\u636e\u5e93\u4e2d\u7684\u6bcf\u4e2a\u952e\u90fd\u5c5e\u4e8e\u8fd9 16384 \u4e2a\u63d2\u69fd\u7684\u5176\u4e2d\u4e00\u4e2a\uff0c \u96c6\u7fa4\u4f7f\u7528\u516c\u5f0f CRC16(key) % 16384 \u6765\u8ba1\u7b97\u952e key \u5c5e\u4e8e\u54ea\u4e2a\u69fd\uff0c \u5176\u4e2d CRC16(key) \u8bed\u53e5\u7528\u4e8e\u8ba1\u7b97\u952e key \u7684 CRC16 \u6821\u9a8c\u548c \u3002 \u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u8d1f\u8d23\u5904\u7406\u4e00\u90e8\u5206\u63d2\u69fd\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c \u5982\u679c\u4e00\u4e2a\u96c6\u7fa4\u53ef\u4ee5\u6709\u4e3b\u8282\u70b9\uff0c \u5176\u4e2d\uff1a \u8282\u70b9 A \u8d1f\u8d23\u5904\u7406 0 \u53f7\u81f3 5460 \u53f7\u63d2\u69fd\u3002 \u8282\u70b9 B \u8d1f\u8d23\u5904\u7406 5461 \u53f7\u81f3 10922 \u53f7\u63d2\u69fd\u3002 \u8282\u70b9 C \u8d1f\u8d23\u5904\u7406 10923 \u53f7\u81f3 16383 \u53f7\u63d2\u69fd\u3002 set mset \u4e0d\u5728\u4e00\u4e2aslot\u4e0b\u7684\u952e\u503c\uff0c\u662f\u4e0d\u80fd\u4f7f\u7528mget,mset\u7b49\u591a\u952e\u64cd\u4f5c\u3002 \u53ef\u4ee5\u901a\u8fc7{}\u6765\u5b9a\u4e49\u7ec4\u7684\u6982\u5ff5\uff0c\u4ece\u800c\u4f7fkey\u4e2d{}\u5185\u76f8\u540c\u5185\u5bb9\u7684\u952e\u503c\u5bf9\u653e\u5230\u4e00\u4e2aslot\u4e2d\u53bb\u3002 127.0.0.1:6379> set s1 1 -> Redirected to slot [15224] located at 192.168.199.222:6381 OK 192.168.199.222:6381> mset name{user} matt age{user} 12 -> Redirected to slot [5474] located at 192.168.199.222:6380 \u5176\u4ed6\u64cd\u4f5c \u5224\u65ad\u67d0\u4e2akey\u5728\u54ea\u4e2a\u69fd\u4f4d cluster keyslot s1 \u7edf\u8ba115345\u69fd\u4f4d\u6709\u51e0\u4e2akey cluster countkeysinslot 15345 \u8fd4\u56de\u69fd\u4f4d2843 2 \u4e2akey 192.168.199.222:6379> cluster getkeysinslot 2843 2 1) \"s2\" \u6545\u969c\u6062\u590d \u5982\u679c\u67d0\u4e00\u6bb5\u63d2\u69fd\u7684\u4e3b\u4ece\u90fd\u6302\u6389\uff0c\u800ccluster-require-full-coverage \u4e3ayes \uff0c\u90a3\u4e48 \uff0c\u6574\u4e2a\u96c6\u7fa4\u90fd\u6302\u6389 \u5982\u679c\u67d0\u4e00\u6bb5\u63d2\u69fd\u7684\u4e3b\u4ece\u90fd\u6302\u6389\uff0c\u800ccluster-require-full-coverage \u4e3ano \uff0c\u90a3\u4e48\uff0c\u8be5\u63d2\u69fd\u6570\u636e\u5168\u90fd\u4e0d\u80fd\u4f7f\u7528\uff0c\u4e5f\u65e0\u6cd5\u5b58\u50a8\u3002 redis.conf\u4e2d\u7684\u53c2\u6570 cluster-require-full-coverage summary advange \u5b9e\u73b0\u6269\u5bb9 \u5206\u644a\u538b\u529b disadvange \u591a\u952e\u64cd\u4f5c\u662f\u4e0d\u88ab\u652f\u6301\u7684 \u591a\u952e\u7684Redis\u4e8b\u52a1\u662f\u4e0d\u88ab\u652f\u6301\u7684\u3002lua\u811a\u672c\u4e0d\u88ab\u652f\u6301 \u7531\u4e8e\u96c6\u7fa4\u65b9\u6848\u51fa\u73b0\u8f83\u665a\uff0c\u5f88\u591a\u516c\u53f8\u5df2\u7ecf\u91c7\u7528\u4e86\u5176\u4ed6\u7684\u96c6\u7fa4\u65b9\u6848\uff0c\u800c\u4ee3\u7406\u6216\u8005\u5ba2\u6237\u7aef\u5206\u7247\u7684\u65b9\u6848\u60f3\u8981\u8fc1\u79fb\u81f3redis cluster\uff0c\u9700\u8981\u6574\u4f53\u8fc1\u79fb\u800c\u4e0d\u662f\u9010\u6b65\u8fc7\u6e21\uff0c\u590d\u6742\u5ea6\u8f83\u5927\u3002 api redis\u5e94\u7528\u95ee\u9898 \u7f13\u5b58\u7a7f\u900f \u95ee\u9898\u63cf\u8ff0 key \u5bf9\u5e94\u7684\u6570\u636e\u7f13\u5b58\u4e2d\u6ca1\u6709\uff0c\u6570\u636e\u5e93\u4e2d\u4e5f\u6ca1\u6709 \u7528\u6237\u5229\u7528\u8fd9\u4e9b\u6f0f\u6d1e\u653b\u51fb \u4ece\u800c\u538b\u57ae\u6570\u636e\u5e93 \u89e3\u51b3\u65b9\u6848 1.\u5bf9\u7a7a\u503c\u7f13\u5b58\uff1a\u5982\u679c\u4e00\u4e2a\u67e5\u8be2\u8fd4\u56de\u7684\u6570\u636e\u4e3a\u7a7a\uff08\u4e0d\u7ba1\u662f\u6570\u636e\u662f\u5426\u4e0d\u5b58\u5728\uff09\uff0c\u6211\u4eec\u4ecd\u7136\u628a\u8fd9\u4e2a\u7a7a\u7ed3\u679c\uff08null\uff09\u8fdb\u884c\u7f13\u5b58\uff0c\u8bbe\u7f6e\u7a7a\u7ed3\u679c\u7684\u8fc7\u671f\u65f6\u95f4\u4f1a\u5f88\u77ed\uff0c\u6700\u957f\u4e0d\u8d85\u8fc7\u4e94\u5206\u949f 2.\u8bbe\u7f6e\u53ef\u8bbf\u95ee\u7684\u540d\u5355\uff08\u767d\u540d\u5355\uff09\uff1a \u4f7f\u7528bitmaps\u7c7b\u578b\u5b9a\u4e49\u4e00\u4e2a\u53ef\u4ee5\u8bbf\u95ee\u7684\u540d\u5355\uff0c\u540d\u5355id\u4f5c\u4e3abitmaps\u7684\u504f\u79fb\u91cf\uff0c\u6bcf\u6b21\u8bbf\u95ee\u548cbitmap\u91cc\u9762\u7684id\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u8bbf\u95eeid\u4e0d\u5728bitmaps\u91cc\u9762\uff0c\u8fdb\u884c\u62e6\u622a\uff0c\u4e0d\u5141\u8bb8\u8bbf\u95ee\u3002 3.\u91c7\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\uff1a(\u5e03\u9686\u8fc7\u6ee4\u5668\uff08Bloom Filter\uff09\u662f1970\u5e74\u7531\u5e03\u9686\u63d0\u51fa\u7684\u3002\u5b83\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5f88\u957f\u7684\u4e8c\u8fdb\u5236\u5411\u91cf(\u4f4d\u56fe)\u548c\u4e00\u7cfb\u5217\u968f\u673a\u6620\u5c04\u51fd\u6570\uff08\u54c8\u5e0c\u51fd\u6570\uff09\u3002 \u5e03\u9686\u8fc7\u6ee4\u5668\u53ef\u4ee5\u7528\u4e8e\u68c0\u7d22\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\u3002\u5b83\u7684\u4f18\u70b9\u662f\u7a7a\u95f4\u6548\u7387\u548c\u67e5\u8be2\u65f6\u95f4\u90fd\u8fdc\u8fdc\u8d85\u8fc7\u4e00\u822c\u7684\u7b97\u6cd5\uff0c\u7f3a\u70b9\u662f\u6709\u4e00\u5b9a\u7684\u8bef\u8bc6\u522b\u7387\u548c\u5220\u9664\u56f0\u96be\u3002) \u5c06\u6240\u6709\u53ef\u80fd\u5b58\u5728\u7684\u6570\u636e\u54c8\u5e0c\u5230\u4e00\u4e2a\u8db3\u591f\u5927\u7684bitmaps\u4e2d\uff0c\u4e00\u4e2a\u4e00\u5b9a\u4e0d\u5b58\u5728\u7684\u6570\u636e\u4f1a\u88ab \u8fd9\u4e2abitmaps\u62e6\u622a\u6389\uff0c\u4ece\u800c\u907f\u514d\u4e86\u5bf9\u5e95\u5c42\u5b58\u50a8\u7cfb\u7edf\u7684\u67e5\u8be2\u538b\u529b\u3002 4.\u8fdb\u884c\u5b9e\u65f6\u76d1\u63a7\uff1a\u5f53\u53d1\u73b0Redis\u7684\u547d\u4e2d\u7387\u5f00\u59cb\u6025\u901f\u964d\u4f4e\uff0c\u9700\u8981\u6392\u67e5\u8bbf\u95ee\u5bf9\u8c61\u548c\u8bbf\u95ee\u7684\u6570\u636e\uff0c\u548c\u8fd0\u7ef4\u4eba\u5458\u914d\u5408\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u9ed1\u540d\u5355\u9650\u5236\u670d\u52a1 \u7f13\u5b58\u51fb\u7a7f \u67d0\u4e2akey\u5bf9\u5e94\u7684\u6570\u636e\u8fc7\u671f\uff0c\u6b64\u65f6\u82e5\u6709\u5927\u91cf\u5e76\u53d1\u8bf7\u6c42\u8fc7\u6765\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u53d1\u73b0\u7f13\u5b58\u8fc7\u671f\u4e00\u822c\u90fd\u4f1a\u4ece\u540e\u7aefDB\u52a0\u8f7d\u6570\u636e\u5e76\u56de\u8bbe\u5230\u7f13\u5b58\uff0c\u8fd9\u4e2a\u65f6\u5019\u5927\u5e76\u53d1\u7684\u8bf7\u6c42\u53ef\u80fd\u4f1a\u77ac\u95f4\u628a\u540e\u7aefDB\u538b\u57ae\u3002 \u89e3\u51b3\u65b9\u6848 1.\u5bf9\u5e94\u70ed\u95e8\u6570\u636e\uff0c\u8fc7\u671f\u4e4b\u524d\u8c03\u6574\u8fc7\u671f\u65f6\u957f 2.\u4f7f\u7528\u9501 2.1\u5c31\u662f\u5728\u7f13\u5b58\u5931\u6548\u7684\u65f6\u5019\uff08\u5224\u65ad\u62ff\u51fa\u6765\u7684\u503c\u4e3a\u7a7a\uff09\uff0c\u4e0d\u662f\u7acb\u5373\u53bbload db\u3002 2.2\u5148\u4f7f\u7528\u7f13\u5b58\u5de5\u5177\u7684\u67d0\u4e9b\u5e26\u6210\u529f\u64cd\u4f5c\u8fd4\u56de\u503c\u7684\u64cd\u4f5c\uff08\u6bd4\u5982Redis\u7684SETNX\uff09 \u200b \u53bbset\u4e00\u4e2amutex key 2.3\u5f53\u64cd\u4f5c\u8fd4\u56de\u6210\u529f\u65f6\uff0c\u518d\u8fdb\u884cload db\u7684\u64cd\u4f5c\uff0c\u5e76\u56de\u8bbe\u7f13\u5b58,\u6700\u540e\u5220\u9664mutex key\uff1b 2.4\u5f53\u64cd\u4f5c\u8fd4\u56de\u5931\u8d25\uff0c\u8bc1\u660e\u6709\u7ebf\u7a0b\u5728load db\uff0c\u5f53\u524d\u7ebf\u7a0b\u7761\u7720\u4e00\u6bb5\u65f6\u95f4\u518d\u91cd\u8bd5\u6574\u4e2aget\u7f13\u5b58\u7684\u65b9\u6cd5\u3002 \u7f13\u5b58\u96ea\u5d29 key\u5bf9\u5e94\u7684\u6570\u636e\u5b58\u5728\uff0c\u4f46\u5728redis\u4e2d\u8fc7\u671f\uff0c\u6b64\u65f6\u82e5\u6709\u5927\u91cf\u5e76\u53d1\u8bf7\u6c42\u8fc7\u6765\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u53d1\u73b0\u7f13\u5b58\u8fc7\u671f\u4e00\u822c\u90fd\u4f1a\u4ece\u540e\u7aefDB\u52a0\u8f7d\u6570\u636e\u5e76\u56de\u8bbe\u5230\u7f13\u5b58\uff0c\u8fd9\u4e2a\u65f6\u5019\u5927\u5e76\u53d1\u7684\u8bf7\u6c42\u53ef\u80fd\u4f1a\u77ac\u95f4\u628a\u540e\u7aefDB\u538b\u57ae\u3002 \u7f13\u5b58\u96ea\u5d29\u4e0e\u7f13\u5b58\u51fb\u7a7f\u7684\u533a\u522b\u5728\u4e8e\u8fd9\u91cc\u9488\u5bf9\u5f88\u591akey\u7f13\u5b58\uff0c\u524d\u8005\u5219\u662f\u67d0\u4e00\u4e2akey \u89e3\u51b3\u65b9\u6848 1.\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u589e\u52a0\u4e00\u4e2a\u968f\u673a\u503c 2.\u4f7f\u7528\u9501 \u5206\u5e03\u5f0f\u9501 \u4e3a\u771f\u4e2a\u7cfb\u7edf\u63d0\u4f9b\u5168\u5c40\u552f\u4e00\u7684\u9501\uff0c\u5177\u6709\u9662\u5b50\u6027 a 1 \u83b7\u53d6\u9501 3 \u91ca\u653e\u9501 2 \u5361\u6ce8 2\u6267\u884c \u91ca\u653e\u9501 \u4f1a\u628a\u522b\u7684\u7ebf\u7a0b\u7684\u9501\u91ca\u653e \u57fa\u7840 1.\u4f7f\u7528setnx set k1 1 nx ex 3 ex 3 : 3s px 3:3ms 2\u5982\u679c\u83b7\u53d6\u9501\u6210\u529f\uff0c\u5904\u7406\uff0c\u91ca\u653e\u9501 3.\u5176\u4ed6\u5ba2\u6237\u7aef\u91cd\u8bd5 \u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u963b\u585e\uff0c\u6302\u6389\u6ca1\u6709\u5220\u9664\u9501\uff0c\u5176\u4ed6\u7528\u6237\u5c31\u83b7\u53d6\u4e0d\u5230\u9501\u4e86 \u8fdb\u9636 \uff1a \u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4 \u8fdb\u9636 \uff1a \u6821\u9a8c\u9501\u7684\u5185\u5bb9 \u9632\u6b62\u5220\u9664\u9519\u9501 1.a1\u6ca1\u6709\u5220\u9664\u9501\uff0c\u4f46\u662f\u8fc7\u671f\u4e86\uff0c 2.a2\u83b7\u53d6\u5230\u9501\uff0c \u6d4b\u8bd5a1\u628a\u9501\u5220\u9664\u4e86\uff0c\u5176\u5b9e\u5c31\u662f\u628aa1\u628aa2\u7684\u9501\u5220\u9664\u4e86\uff0c\u6b64\u65f6a2\u5c31\u53ef\u80fd\u51fa\u95ee\u9898 \u53ef\u4ee5\u8bbe\u7f6e\u9501\u7684\u5185\u5bb9\uff0c\u5220\u9664\u9501\u4e4b\u524d\u5224\u65ad\u4e00\u4e0b\u9501\u7684\u5185\u5bb9 \u8fdb\u9636 \uff1a\u6821\u9a8c\u3001\u5220\u9664 \u9700\u8981\u539f\u5b50\u6027 \u53ef\u4ee5\u4f7f\u7528lua\u811a\u672c","title":"Advanced"},{"location":"db/redis/advanced/#_1","text":"","title":"\u53d1\u5e03\u8ba2\u9605"},{"location":"db/redis/advanced/#_2","text":"\u53d1\u5e03\u8005:\uff1a\u53d1\u9001\u6d88\u606f \u8ba2\u9605\u8005\uff1a\u63a5\u6536\u4fe1\u606f","title":"\u6982\u8ff0"},{"location":"db/redis/advanced/#redis","text":"\u8ba2\u9605\u7ba1\u9053c1 subscribe c1 \u5728\u7ba1\u9053c1\u53d1\u5e03\u6d88\u606f publish c1 1","title":"redis\u53d1\u5e03\u8ba2\u9605"},{"location":"db/redis/advanced/#_3","text":"","title":"\u65b0\u6570\u636e\u7c7b\u578b"},{"location":"db/redis/advanced/#bitmaps","text":"\u5b58\u50a801\u7ec4\u6210\u7684\u6570\u7ec4","title":"bitmaps"},{"location":"db/redis/advanced/#_4","text":"","title":"\u547d\u4ee4"},{"location":"db/redis/advanced/#setbit","text":"offset\u4ece0\u5f00\u59cb setbit b1 0 0","title":"setbit"},{"location":"db/redis/advanced/#getbit","text":"getbit key offset getbit b1 0","title":"getbit"},{"location":"db/redis/advanced/#bitcount","text":"bitcount key start end start,end \u5747\u5305\u542b start->end\u4e4b\u95f41\u7684\u4e2a\u6570 -1\uff1a\u6700\u540e\u4e00\u4f4d -2\uff1a\u5012\u6570\u7b2c\u4e8c\u4f4d bitcount b1 0 3","title":"bitcount"},{"location":"db/redis/advanced/#bitop","text":"bitop and(or/not/xor) destkey k1 k2 k3 .... and\uff1a&& or\uff1a\u6216\u8005 not\uff1a\u975e xor:\u5f02\u6216 bitop and b3 b1 b2","title":"bitop"},{"location":"db/redis/advanced/#hyperloglog","text":"","title":"HyperLogLog"},{"location":"db/redis/advanced/#_5","text":"\u7edf\u8ba1\u67d0\u4e2akey \u4e0d\u91cd\u590d\u5143\u7d20\u7684\u4e2a\u6570","title":"\u6982\u8ff0"},{"location":"db/redis/advanced/#_6","text":"\u5e76\u4e0d\u4f1a\u5b58\u50a8\u8f93\u5165\u7684\u5143\u7d20\uff0c\u800c\u662f\u6839\u636e\u8f93\u5165\u5143\u7d20\u8ba1\u7b97\u57fa\u6570 HyperLogLog\u53ea\u9700\u898112KB \u5c31\u53ef\u4ee5\u8ba1\u7b97 2e64\u4e0d\u540c\u5143\u7d20\u7684\u57fa\u6570 {1, 2, 3, 3, 4, 5} \u57fa\u6570\u96c6 {1, 2, 3, 4, 5} \u57fa\u6570 5","title":"\u4f18\u52bf"},{"location":"db/redis/advanced/#_7","text":"","title":"\u547d\u4ee4"},{"location":"db/redis/advanced/#pfadd","text":"pfadd key v1 v2 .... pfadd p1 1 2 3","title":"pfadd"},{"location":"db/redis/advanced/#pfcount","text":"\u8ba1\u7b97\u591a\u4e2akey\u7684\u57fa\u6570 pfcount k1 k2 k3 .... pfcount p1 pfcount p1 p2","title":"pfcount"},{"location":"db/redis/advanced/#pfmerge","text":"\u5c06\u591a\u4e2akey\u8fdb\u884c\u5408\u5e76 pfmerge destkey k1 k2 k3 pfmerge p3 p2 p1","title":"pfmerge"},{"location":"db/redis/advanced/#geospatial","text":"","title":"Geospatial"},{"location":"db/redis/advanced/#_8","text":"\u7ecf\u7eac\u5ea6","title":"\u6982\u8ff0"},{"location":"db/redis/advanced/#_9","text":"","title":"\u547d\u4ee4"},{"location":"db/redis/advanced/#geoadd","text":"\u6709\u6548\u7684\u7ecf\u5ea6\u4ece -180 \u5ea6\u5230 180 \u5ea6\u3002\u6709\u6548\u7684\u7eac\u5ea6\u4ece -85.05112878 \u5ea6\u5230 85.05112878 \u5ea6\u3002 geoadd key \u7ecf\u5ea6 \u7eac\u5ea6 \u6210\u5458 [\u7ecf\u5ea6 \u7eac\u5ea6 \u6210\u5458] geoadd g1 1 1 a1","title":"geoadd \u6dfb\u52a0"},{"location":"db/redis/advanced/#geopos","text":"\u83b7\u53d6\u6307\u5b9a\u6210\u5458\u7684\u7ecf\u5ea6 \u7eac\u5ea6 geopos key member [member ...] 127.0.0.1:6379> geopos g1 a1 1) 1) \"0.99999994039535522\" 2) \"0.99999945914297683\"","title":"geopos \u5b9a\u4f4d"},{"location":"db/redis/advanced/#geodist","text":"m \u8868\u793a\u5355\u4f4d\u4e3a\u7c73[\u9ed8\u8ba4\u503c]\u3002 km \u8868\u793a\u5355\u4f4d\u4e3a\u5343\u7c73\u3002 mi \u8868\u793a\u5355\u4f4d\u4e3a\u82f1\u91cc\u3002 ft \u8868\u793a\u5355\u4f4d\u4e3a\u82f1\u5c3a\u3002 geodist key member1 member2 [m | km | ft | mi] geodist g1 a1 a2 m","title":"geodist \u83b7\u53d6\u4fe9\u4e2a\u4f4d\u7f6e\u7684\u76f4\u7ebf\u8ddd\u79bb"},{"location":"db/redis/advanced/#georadius","text":"georadius key \u7ecf\u5ea6 \u7eac\u5ea6 radius m | km | ft | mi georadius g1 1 1 1000 km","title":"georadius \u7ed9\u5b9a\u7ecf\u7eac\u5ea6\u4e3a\u4e2d\u5fc3 \u627e\u5230\u4e00\u5b9a\u534a\u5f84\u5185\u7684\u5143\u7d20"},{"location":"db/redis/advanced/#redis_1","text":"","title":"redis \u4e8b\u52a1"},{"location":"db/redis/advanced/#redis_2","text":"Redis\u4e8b\u52a1\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u9694\u79bb\u64cd\u4f5c\uff1a\u4e8b\u52a1\u4e2d\u6240\u6709\u547d\u4ee4\u90fd\u4f1a\u5e8f\u5217\u5316\u3001\u6309\u987a\u5e8f\u7684\u6267\u884c\u3002\u4e8b\u52a1\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u4f1a\u88ab\u53ef\u4ed6\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u547d\u4ee4\u6253\u65ad\u3002","title":"redis\u4e8b\u52a1\u5b9a\u4e49"},{"location":"db/redis/advanced/#multi-exec-discard","text":"\u4ece\u8f93\u5165Multi\u547d\u4ee4\u5f00\u59cb\uff0c\u8f93\u5165\u7684\u547d\u4ee4\u90fd\u4f1a\u4f9d\u6b21\u8fdb\u5165\u547d\u4ee4\u961f\u5217\u4e2d\uff0c\u4f46\u4e0d\u4f1a\u6267\u884c\uff0c\u76f4\u5230\u8f93\u5165Exec\u540e\uff0cRedis\u4f1a\u5c06\u4e4b\u524d\u7684\u547d\u4ee4\u961f\u5217\u4e2d\u7684\u547d\u4ee4\u4f9d\u6b21\u6267\u884c\u3002 \u7ec4\u961f\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u901a\u8fc7discard\u6765\u653e\u5f03\u7ec4\u961f\u3002 127.0.0.1:6379> multi OK 127.0.0.1:6379(TX)> set 1 1 QUEUED 127.0.0.1:6379(TX)> set 2 2 QUEUED 127.0.0.1:6379(TX)> exec 1) OK 2) OK 127.0.0.1:6379>","title":"multi exec discard"},{"location":"db/redis/advanced/#_10","text":"\u7ec4\u961f\u4e2d\u67d0\u4e2a\u547d\u4ee4\u51fa\u73b0\u4e86\u62a5\u544a\u9519\u8bef\uff0c\u6267\u884c\u65f6\u6574\u4e2a\u7684\u6240\u6709\u961f\u5217\u90fd\u4f1a\u88ab\u53d6\u6d88\u3002 \u5982\u679c\u6267\u884c\u9636\u6bb5\u67d0\u4e2a\u547d\u4ee4\u62a5\u51fa\u4e86\u9519\u8bef\uff0c\u5219\u53ea\u6709\u62a5\u9519\u7684\u547d\u4ee4\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c\u800c\u5176\u4ed6\u7684\u547d\u4ee4\u90fd\u4f1a\u6267\u884c\uff0c\u4e0d\u4f1a\u56de\u6eda\u3002","title":"\u5982\u679c\u53d1\u751f\u9519\u8bef"},{"location":"db/redis/advanced/#_11","text":"","title":"\u9501"},{"location":"db/redis/advanced/#_12","text":"\u60b2\u89c2\u9501(Pessimistic Lock) , \u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5f88\u60b2\u89c2\uff0c\u6bcf\u6b21\u53bb\u62ff\u6570\u636e\u7684\u65f6\u5019\u90fd\u8ba4\u4e3a\u522b\u4eba\u4f1a\u4fee\u6539\uff0c\u6240\u4ee5\u6bcf\u6b21\u5728\u62ff\u6570\u636e\u7684\u65f6\u5019\u90fd\u4f1a\u4e0a\u9501\uff0c\u8fd9\u6837\u522b\u4eba\u60f3\u62ff\u8fd9\u4e2a\u6570\u636e\u5c31\u4f1ablock\u76f4\u5230\u5b83\u62ff\u5230\u9501","title":"\u60b2\u89c2\u9501"},{"location":"db/redis/advanced/#_13","text":"\u4e50\u89c2\u9501(Optimistic Lock), \u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5f88\u4e50\u89c2\uff0c\u6bcf\u6b21\u53bb\u62ff\u6570\u636e\u7684\u65f6\u5019\u90fd\u8ba4\u4e3a\u522b\u4eba\u4e0d\u4f1a\u4fee\u6539\uff0c\u6240\u4ee5\u4e0d\u4f1a\u4e0a\u9501\uff0c\u4f46\u662f\u5728\u66f4\u65b0\u7684\u65f6\u5019\u4f1a\u5224\u65ad\u4e00\u4e0b\u5728\u6b64\u671f\u95f4\u522b\u4eba\u6709\u6ca1\u6709\u53bb\u66f4\u65b0\u8fd9\u4e2a\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u7248\u672c\u53f7\u7b49\u673a\u5236\u3002 \u4e50\u89c2\u9501\u9002\u7528\u4e8e\u591a\u8bfb\u7684\u5e94\u7528\u7c7b\u578b\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u541e\u5410\u91cf \u3002Redis\u5c31\u662f\u5229\u7528\u8fd9\u79cdcheck-and-set\u673a\u5236\u5b9e\u73b0\u4e8b\u52a1\u7684\u3002","title":"\u4e50\u89c2\u9501"},{"location":"db/redis/advanced/#watch-unwatch","text":"\u5728\u6267\u884cmulti\u4e4b\u524d\uff0c\u5148\u6267\u884cwatch key1 [key2],\u53ef\u4ee5\u76d1\u89c6\u4e00\u4e2a(\u6216\u591a\u4e2a) key \uff0c\u5982\u679c\u5728\u4e8b\u52a1 \u6267\u884c\u4e4b\u524d\u8fd9\u4e2a( \u6216\u8fd9\u4e9b) key \u88ab\u5176\u4ed6\u547d\u4ee4\u6240\u6539\u52a8\uff0c\u90a3\u4e48\u4e8b\u52a1\u5c06\u88ab\u6253\u65ad\u3002 127.0.0.1:6379> watch 1 OK 127.0.0.1:6379> multi OK 127.0.0.1:6379(TX)> set 1 1 QUEUED 127.0.0.1:6379(TX)> exec (nil) 127.0.0.1:6379> unwatch \u53d6\u6d88\u5bf9key\u7684\u76d1\u89c6","title":"watch unwatch"},{"location":"db/redis/advanced/#redis_3","text":"\u00d8 \u5355\u72ec\u7684\u9694\u79bb\u64cd\u4f5c \u4e8b\u52a1\u4e2d\u7684\u6240\u6709\u547d\u4ee4\u90fd\u4f1a\u5e8f\u5217\u5316\u3001\u6309\u987a\u5e8f\u5730\u6267\u884c\u3002\u4e8b\u52a1\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u4f1a\u88ab\u5176\u4ed6\u5ba2\u6237\u7aef\u53d1\u9001\u6765\u7684\u547d\u4ee4\u8bf7\u6c42\u6240\u6253\u65ad\u3002 \u00d8 \u6ca1\u6709\u9694\u79bb\u7ea7\u522b\u7684\u6982\u5ff5 \u961f\u5217\u4e2d\u7684\u547d\u4ee4\u6ca1\u6709\u63d0\u4ea4\u4e4b\u524d\u90fd\u4e0d\u4f1a\u5b9e\u9645\u88ab\u6267\u884c\uff0c\u56e0\u4e3a\u4e8b\u52a1\u63d0\u4ea4\u524d\u4efb\u4f55\u6307\u4ee4\u90fd\u4e0d\u4f1a\u88ab\u5b9e\u9645\u6267\u884c \u00d8 \u4e0d\u4fdd\u8bc1\u539f\u5b50\u6027 \u4e8b\u52a1\u4e2d\u5982\u679c\u6709\u4e00\u6761\u547d\u4ee4\u6267\u884c\u5931\u8d25\uff0c\u5176\u540e\u7684\u547d\u4ee4\u4ecd\u7136\u4f1a\u88ab\u6267\u884c\uff0c\u6ca1\u6709\u56de\u6eda","title":"redis\u4e8b\u52a1\u7279\u6027"},{"location":"db/redis/advanced/#_14","text":"","title":"\u6301\u4e45\u5316"},{"location":"db/redis/advanced/#rdb","text":"","title":"rdb"},{"location":"db/redis/advanced/#what","text":"\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u5185\u5c06\u5185\u5b58\u4e2d\u7684\u6570\u636e\u96c6\u5feb\u7167\u5199\u5165\u78c1\u76d8\uff0c \u4e5f\u5c31\u662f\u884c\u8bdd\u8bb2\u7684Snapshot\u5feb\u7167\uff0c\u5b83\u6062\u590d\u65f6\u662f\u5c06\u5feb\u7167\u6587\u4ef6\u76f4\u63a5\u8bfb\u5230\u5185\u5b58\u91cc","title":"what"},{"location":"db/redis/advanced/#source","text":"","title":"source"},{"location":"db/redis/advanced/#fork-todo","text":"Redis\u4f1a\u5355\u72ec\u521b\u5efa\uff08fork\uff09\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u6765\u8fdb\u884c\u6301\u4e45\u5316\uff0c\u4f1a\u5148\u5c06\u6570\u636e\u5199\u5165\u5230 \u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\u4e2d\uff0c\u5f85\u6301\u4e45\u5316\u8fc7\u7a0b\u90fd\u7ed3\u675f\u4e86\uff0c\u518d\u7528\u8fd9\u4e2a\u4e34\u65f6\u6587\u4ef6\u66ff\u6362\u4e0a\u6b21\u6301\u4e45\u5316\u597d\u7684\u6587\u4ef6\u3002 \u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4e3b\u8fdb\u7a0b\u662f\u4e0d\u8fdb\u884c\u4efb\u4f55IO\u64cd\u4f5c\u7684\uff0c\u8fd9\u5c31\u786e\u4fdd\u4e86\u6781\u9ad8\u7684\u6027\u80fd \u5982\u679c\u9700\u8981\u8fdb\u884c\u5927\u89c4\u6a21\u6570\u636e\u7684\u6062\u590d\uff0c\u4e14\u5bf9\u4e8e\u6570\u636e\u6062\u590d\u7684\u5b8c\u6574\u6027\u4e0d\u662f\u975e\u5e38\u654f\u611f\uff0c\u90a3RDB\u65b9\u5f0f\u8981\u6bd4AOF\u65b9\u5f0f\u66f4\u52a0\u7684\u9ad8\u6548\u3002 RDB \u7684\u7f3a\u70b9\u662f\u6700\u540e\u4e00\u6b21\u6301\u4e45\u5316\u540e\u7684\u6570\u636e\u53ef\u80fd\u4e22\u5931\u3002","title":"fork todo"},{"location":"db/redis/advanced/#config","text":"","title":"config"},{"location":"db/redis/advanced/#_15","text":"redis.conf dir /opt/homebrew/var/db/redis/","title":"\u6307\u5b9a\u6587\u4ef6\u4f4d\u7f6e"},{"location":"db/redis/advanced/#_16","text":"\u4e0d\u8bbe\u7f6esave\u6307\u4ee4\uff0c\u6216\u8005\u7ed9save\u4f20\u5165\u7a7a\u5b57\u7b26\u4e32","title":"\u914d\u7f6e\u89e6\u53d1\u7b56\u7565"},{"location":"db/redis/advanced/#_17","text":"save \uff1asave\u65f6\u53ea\u7ba1\u4fdd\u5b58\uff0c\u5176\u5b83\u4e0d\u7ba1\uff0c\u5168\u90e8\u963b\u585e\u3002\u624b\u52a8\u4fdd\u5b58\u3002\u4e0d\u5efa\u8bae\u3002 bgsave\uff1aRedis\u4f1a\u5728\u540e\u53f0\u5f02\u6b65\u8fdb\u884c\u5feb\u7167\u64cd\u4f5c\uff0c\u5feb\u7167\u540c\u65f6\u8fd8\u53ef\u4ee5\u54cd\u5e94\u5ba2\u6237\u7aef\u8bf7\u6c42\u3002","title":"\u624b\u52a8\u89e6\u53d1"},{"location":"db/redis/advanced/#stop-writes-on-bgsave-error","text":"\u5f53Redis\u65e0\u6cd5\u5199\u5165\u78c1\u76d8\u7684\u8bdd\uff0c\u76f4\u63a5\u5173\u6389Redis\u7684\u5199\u64cd\u4f5c\u3002\u63a8\u8350yes.","title":"stop-writes-on-bgsave-error"},{"location":"db/redis/advanced/#rdbcompression","text":"\u4f7f\u7528\u538b\u7f29\u7b97\u6cd5 , LZF","title":"rdbcompression"},{"location":"db/redis/advanced/#rdbchecksum","text":"","title":"rdbchecksum \u68c0\u67e5\u5b8c\u6574\u6027"},{"location":"db/redis/advanced/#_18","text":"","title":"\u4f18\u70b9\u7f3a\u70b9"},{"location":"db/redis/advanced/#_19","text":"l \u8282\u7701\u78c1\u76d8\u7a7a\u95f4 l \u6062\u590d\u901f\u5ea6\u5feb","title":"\u4f18\u70b9"},{"location":"db/redis/advanced/#_20","text":"\u867d\u7136Redis\u5728fork\u65f6\u4f7f\u7528\u4e86 \u5199\u65f6\u62f7\u8d1d\u6280\u672f ,\u4f46\u662f\u5982\u679c\u6570\u636e\u5e9e\u5927\u65f6\u8fd8\u662f\u6bd4\u8f83\u6d88\u8017\u6027\u80fd\u3002 \u5728\u5907\u4efd\u5468\u671f\u5728\u4e00\u5b9a\u95f4\u9694\u65f6\u95f4\u505a\u4e00\u6b21\u5907\u4efd\uff0c\u6240\u4ee5\u5982\u679cRedis\u610f\u5916down\u6389\u7684\u8bdd\uff0c\u5c31\u4f1a\u4e22\u5931\u6700\u540e\u4e00\u6b21\u5feb\u7167\u540e\u7684\u6240\u6709\u4fee\u6539\u3002","title":"\u7f3a\u70b9"},{"location":"db/redis/advanced/#aof","text":"","title":"aof"},{"location":"db/redis/advanced/#what_1","text":"\u4ee5 \u65e5\u5fd7 \u7684\u5f62\u5f0f\u6765\u8bb0\u5f55\u6bcf\u4e2a\u5199\u64cd\u4f5c\uff08\u589e\u91cf\u4fdd\u5b58\uff09\uff0c\u5c06Redis\u6267\u884c\u8fc7\u7684\u6240\u6709\u5199\u6307\u4ee4\u8bb0\u5f55\u4e0b\u6765( \u8bfb\u64cd\u4f5c\u4e0d\u8bb0\u5f55 )\uff0c \u53ea\u8bb8\u8ffd\u52a0\u6587\u4ef6\u4f46\u4e0d\u53ef\u4ee5\u6539\u5199\u6587\u4ef6 \uff0credis\u542f\u52a8\u4e4b\u521d\u4f1a\u8bfb\u53d6\u8be5\u6587\u4ef6\u91cd\u65b0\u6784\u5efa\u6570\u636e\uff0c \u6362\u8a00\u4e4b\uff0credis \u91cd\u542f\u7684\u8bdd\u5c31\u6839\u636e\u65e5\u5fd7\u6587\u4ef6\u7684\u5185\u5bb9\u5c06\u5199\u6307\u4ee4\u4ece\u524d\u5230\u540e\u6267\u884c\u4e00\u6b21\u4ee5\u5b8c\u6210\u6570\u636e\u7684\u6062\u590d\u5de5\u4f5c","title":"what"},{"location":"db/redis/advanced/#source_1","text":"","title":"source"},{"location":"db/redis/advanced/#_21","text":"\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u5199\u547d\u4ee4\u4f1a\u88abappend\u8ffd\u52a0\u5230AOF\u7f13\u51b2\u533a\u5185\uff1b AOF\u7f13\u51b2\u533a\u6839\u636eAOF\u6301\u4e45\u5316\u7b56\u7565[always,everysec,no]\u5c06\u64cd\u4f5csync\u540c\u6b65\u5230\u78c1\u76d8\u7684AOF\u6587\u4ef6\u4e2d\uff1b AOF\u6587\u4ef6\u5927\u5c0f\u8d85\u8fc7\u91cd\u5199\u7b56\u7565\u6216\u624b\u52a8\u91cd\u5199\u65f6\uff0c\u4f1a\u5bf9AOF\u6587\u4ef6rewrite\u91cd\u5199\uff0c\u538b\u7f29AOF\u6587\u4ef6\u5bb9\u91cf Redis\u670d\u52a1\u91cd\u542f\u65f6\uff0c\u4f1a\u91cd\u65b0load\u52a0\u8f7dAOF\u6587\u4ef6\u4e2d\u7684\u5199\u64cd\u4f5c\u8fbe\u5230\u6570\u636e\u6062\u590d\u7684\u76ee\u7684","title":"\u5982\u4f55\u540c\u6b65"},{"location":"db/redis/advanced/#_22","text":"","title":"\u538b\u7f29"},{"location":"db/redis/advanced/#what_2","text":"AOF\u91c7\u7528\u6587\u4ef6\u8ffd\u52a0\u65b9\u5f0f\uff0c\u6587\u4ef6\u4f1a\u8d8a\u6765\u8d8a\u5927\u4e3a\u907f\u514d\u51fa\u73b0\u6b64\u79cd\u60c5\u51b5\uff0c\u65b0\u589e\u4e86\u91cd\u5199\u673a\u5236, \u5f53AOF\u6587\u4ef6\u7684\u5927\u5c0f\u8d85\u8fc7\u6240\u8bbe\u5b9a\u7684\u9608\u503c\u65f6\uff0cRedis\u5c31\u4f1a\u542f\u52a8AOF\u6587\u4ef6\u7684\u5185\u5bb9\u538b\u7f29\uff0c \u53ea\u4fdd\u7559\u53ef\u4ee5\u6062\u590d\u6570\u636e\u7684\u6700\u5c0f\u6307\u4ee4\u96c6.\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4bgrewriteaof AOF\u6587\u4ef6\u6301\u7eed\u589e\u957f\u800c\u8fc7\u5927\u65f6\uff0c\u4f1afork\u51fa\u4e00\u6761\u65b0\u8fdb\u7a0b\u6765\u5c06\u6587\u4ef6\u91cd\u5199(\u4e5f\u662f\u5148\u5199\u4e34\u65f6\u6587\u4ef6\u6700\u540e\u518drename)\uff0credis4.0\u7248\u672c\u540e\u7684\u91cd\u5199\uff0c\u662f\u6307\u4e0a\u5c31\u662f\u628ardb \u7684\u5feb\u7167\uff0c\u4ee5\u4e8c\u7ea7\u5236\u7684\u5f62\u5f0f\u9644\u5728\u65b0\u7684aof\u5934\u90e8\uff0c\u4f5c\u4e3a\u5df2\u6709\u7684\u5386\u53f2\u6570\u636e\uff0c\u66ff\u6362\u6389\u539f\u6765\u7684\u6d41\u6c34\u8d26\u64cd\u4f5c\u3002","title":"what"},{"location":"db/redis/advanced/#source_2","text":"bgrewriteaof\u89e6\u53d1\u91cd\u5199\uff0c\u5224\u65ad\u662f\u5426\u5f53\u524d\u6709bgsave\u6216bgrewriteaof\u5728\u8fd0\u884c\uff0c\u5982\u679c\u6709\uff0c\u5219\u7b49\u5f85\u8be5\u547d\u4ee4\u7ed3\u675f\u540e\u518d\u7ee7\u7eed\u6267\u884c\u3002 \u4e3b\u8fdb\u7a0bfork\u51fa\u5b50\u8fdb\u7a0b\u6267\u884c\u91cd\u5199\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u4e3b\u8fdb\u7a0b\u4e0d\u4f1a\u963b\u585e\u3002 \u5b50\u8fdb\u7a0b\u904d\u5386redis\u5185\u5b58\u4e2d\u6570\u636e\u5230\u4e34\u65f6\u6587\u4ef6\uff0c\u5ba2\u6237\u7aef\u7684\u5199\u8bf7\u6c42\u540c\u65f6\u5199\u5165aof_buf\u7f13\u51b2\u533a\u548caof_rewrite_buf\u91cd\u5199\u7f13\u51b2\u533a\u4fdd\u8bc1\u539fAOF\u6587\u4ef6\u5b8c\u6574\u4ee5\u53ca\u65b0AOF\u6587\u4ef6\u751f\u6210\u671f\u95f4\u7684\u65b0\u7684\u6570\u636e\u4fee\u6539\u52a8\u4f5c\u4e0d\u4f1a\u4e22\u5931\u3002 1).\u5b50\u8fdb\u7a0b\u5199\u5b8c\u65b0\u7684AOF\u6587\u4ef6\u540e\uff0c\u5411\u4e3b\u8fdb\u7a0b\u53d1\u4fe1\u53f7\uff0c\u7236\u8fdb\u7a0b\u66f4\u65b0\u7edf\u8ba1\u4fe1\u606f\u30022).\u4e3b\u8fdb\u7a0b\u628aaof_rewrite_buf\u4e2d\u7684\u6570\u636e\u5199\u5165\u5230\u65b0\u7684AOF\u6587\u4ef6\u3002 \u4f7f\u7528\u65b0\u7684AOF\u6587\u4ef6\u8986\u76d6\u65e7\u7684AOF\u6587\u4ef6\uff0c\u5b8c\u6210AOF\u91cd\u5199\u3002","title":"source"},{"location":"db/redis/advanced/#config_1","text":"\u5199\u914d\u7f6e \u5982\u679c no-appendfsync-on-rewrite=yes ,\u4e0d\u5199\u5165aof\u6587\u4ef6\u53ea\u5199\u5165\u7f13\u5b58\uff0c\u7528\u6237\u8bf7\u6c42\u4e0d\u4f1a\u963b\u585e\uff0c\u4f46\u662f\u5728\u8fd9\u6bb5\u65f6\u95f4\u5982\u679c\u5b95\u673a\u4f1a\u4e22\u5931\u8fd9\u6bb5\u65f6\u95f4\u7684\u7f13\u5b58\u6570\u636e\u3002\uff08\u964d\u4f4e\u6570\u636e\u5b89\u5168\u6027\uff0c\u63d0\u9ad8\u6027\u80fd\uff09 \u200b \u5982\u679c no-appendfsync-on-rewrite=no, \u8fd8\u662f\u4f1a\u628a\u6570\u636e\u5f80\u78c1\u76d8\u91cc\u5237\uff0c\u4f46\u662f\u9047\u5230\u91cd\u5199\u64cd\u4f5c\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u963b\u585e\u3002\uff08\u6570\u636e\u5b89\u5168\uff0c\u4f46\u662f\u6027\u80fd\u964d\u4f4e\uff09 \u89e6\u53d1\u673a\u5236\uff0c\u4f55\u65f6\u91cd\u5199 \u89e6\u53d1\u7b56\u7565\u914d\u7f6e Redis\u4f1a\u8bb0\u5f55\u4e0a\u6b21\u91cd\u5199\u65f6\u7684AOF\u5927\u5c0f\uff0c\u9ed8\u8ba4\u914d\u7f6e\u662f\u5f53AOF\u6587\u4ef6\u5927\u5c0f\u662f\u4e0a\u6b21rewrite\u540e\u5927\u5c0f\u7684\u4e00\u500d\u4e14\u6587\u4ef6\u5927\u4e8e64M\u65f6\u89e6\u53d1 \u91cd\u5199\u867d\u7136\u53ef\u4ee5\u8282\u7ea6\u5927\u91cf\u78c1\u76d8\u7a7a\u95f4\uff0c\u51cf\u5c11\u6062\u590d\u65f6\u95f4\u3002\u4f46\u662f\u6bcf\u6b21\u91cd\u5199\u8fd8\u662f\u6709\u4e00\u5b9a\u7684\u8d1f\u62c5\u7684\uff0c\u56e0\u6b64\u8bbe\u5b9aRedis\u8981\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u624d\u4f1a\u8fdb\u884c\u91cd\u5199\u3002 auto-aof-rewrite-percentage\uff1a\u8bbe\u7f6e\u91cd\u5199\u7684\u57fa\u51c6\u503c\uff0c\u6587\u4ef6\u8fbe\u5230100%\u65f6\u5f00\u59cb\u91cd\u5199\uff08\u6587\u4ef6\u662f\u539f\u6765\u91cd\u5199\u540e\u6587\u4ef6\u76842\u500d\u65f6\u89e6\u53d1\uff09 auto-aof-rewrite-min-size\uff1a\u8bbe\u7f6e\u91cd\u5199\u7684\u57fa\u51c6\u503c\uff0c\u6700\u5c0f\u6587\u4ef664MB\u3002\u8fbe\u5230\u8fd9\u4e2a\u503c\u5f00\u59cb\u91cd\u5199\u3002 \u4f8b\u5982\uff1a\u6587\u4ef6\u8fbe\u523070MB\u5f00\u59cb\u91cd\u5199\uff0c\u964d\u523050MB\uff0c\u4e0b\u6b21\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u91cd\u5199\uff1f100MB \u7cfb\u7edf\u8f7d\u5165\u65f6\u6216\u8005\u4e0a\u6b21\u91cd\u5199\u5b8c\u6bd5\u65f6\uff0cRedis\u4f1a\u8bb0\u5f55\u6b64\u65f6AOF\u5927\u5c0f\uff0c\u8bbe\u4e3abase_size, \u5982\u679cRedis\u7684AOF\u5f53\u524d\u5927\u5c0f>= base_size +base_size*100% (\u9ed8\u8ba4)\u4e14\u5f53\u524d\u5927\u5c0f>=64mb(\u9ed8\u8ba4)\u7684\u60c5\u51b5\u4e0b\uff0cRedis\u4f1a\u5bf9AOF\u8fdb\u884c\u91cd\u5199\u3002","title":"config"},{"location":"db/redis/advanced/#config_2","text":"","title":"config"},{"location":"db/redis/advanced/#_23","text":"\u53ef\u4ee5\u5728redis.conf\u4e2d\u914d\u7f6e\u6587\u4ef6\u540d\u79f0\uff0c\u9ed8\u8ba4\u4e3a appendonly.aof AOF\u6587\u4ef6\u7684\u4fdd\u5b58\u8def\u5f84\uff0c\u540cRDB\u7684\u8def\u5f84\u4e00\u81f4\u3002 \u9ed8\u8ba4aof\u4e0d\u5f00\u542f\uff0c\u5982\u679caof,rdb\u540c\u65f6\u5f00\u542f\uff0c\u5219\u4f7f\u7528aof","title":"\u5f00\u542f\u914d\u7f6e"},{"location":"db/redis/advanced/#_24","text":"appendfsync always \u59cb\u7ec8\u540c\u6b65\uff0c\u6bcf\u6b21Redis\u7684\u5199\u5165\u90fd\u4f1a\u7acb\u523b\u8bb0\u5165\u65e5\u5fd7\uff1b\u6027\u80fd\u8f83\u5dee\u4f46\u6570\u636e\u5b8c\u6574\u6027\u6bd4\u8f83\u597d appendfsync everysec \u6bcf\u79d2\u540c\u6b65\uff0c\u6bcf\u79d2\u8bb0\u5165\u65e5\u5fd7\u4e00\u6b21\uff0c\u5982\u679c\u5b95\u673a\uff0c\u672c\u79d2\u7684\u6570\u636e\u53ef\u80fd\u4e22\u5931\u3002 appendfsync no redis\u4e0d\u4e3b\u52a8\u8fdb\u884c\u540c\u6b65\uff0c\u628a\u540c\u6b65\u65f6\u673a\u4ea4\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u3002","title":"\u540c\u6b65\u9891\u7387\u914d\u7f6e"},{"location":"db/redis/advanced/#use","text":"","title":"use"},{"location":"db/redis/advanced/#_25","text":"\u6b63\u5e38\u6062\u590d \u4fee\u6539\u9ed8\u8ba4\u7684appendonly no\uff0c\u6539\u4e3ayes \u5c06\u6709\u6570\u636e\u7684aof\u6587\u4ef6\u590d\u5236\u4e00\u4efd\u4fdd\u5b58\u5230\u5bf9\u5e94\u76ee\u5f55(\u67e5\u770b\u76ee\u5f55\uff1aconfig get dir) \u6062\u590d\uff1a\u91cd\u542fredis\u7136\u540e\u91cd\u65b0\u52a0\u8f7d \u5f02\u5e38\u6062\u590d \u4fee\u6539\u9ed8\u8ba4\u7684appendonly no\uff0c\u6539\u4e3ayes \u5982\u9047\u5230AOF\u6587\u4ef6\u635f\u574f\uff0c\u901a\u8fc7/usr/local/bin/redis-check-aof--fix appendonly.aof\u8fdb\u884c\u4fee\u590d \u5907\u4efd\u88ab\u5199\u574f\u7684AOF\u6587\u4ef6 \u6062\u590d\uff1a\u91cd\u542fredis\uff0c\u7136\u540e\u91cd\u65b0\u52a0\u8f7d","title":"\u6062\u590d"},{"location":"db/redis/advanced/#summary","text":"","title":"summary"},{"location":"db/redis/advanced/#advantages","text":"\u5907\u4efd\u673a\u5236\u66f4\u7a33\u5065\uff0c\u4e22\u5931\u6570\u636e\u6982\u7387\u66f4\u4f4e\u3002","title":"advantages"},{"location":"db/redis/advanced/#disadvantages","text":"\u6bd4\u8d77RDB\u5360\u7528\u66f4\u591a\u7684\u78c1\u76d8\u7a7a\u95f4\u3002 \u6062\u590d\u5907\u4efd\u901f\u5ea6\u8981\u6162\u3002 \u6bcf\u6b21\u8bfb\u5199\u90fd\u540c\u6b65\u7684\u8bdd\uff0c\u6709\u4e00\u5b9a\u7684\u6027\u80fd\u538b\u529b\u3002","title":"disadvantages"},{"location":"db/redis/advanced/#_26","text":"","title":"\u4e3b\u4ece\u590d\u5236"},{"location":"db/redis/advanced/#what_3","text":"\u8bfb\u5199\u5206\u79bb\uff0cmaster\u5199\uff0c\u590d\u5236\u5230slaver, slaver\u8fdb\u884c\u8bfb","title":"what"},{"location":"db/redis/advanced/#use_1","text":"","title":"use"},{"location":"db/redis/advanced/#_27","text":"","title":"\u57fa\u7840"},{"location":"db/redis/advanced/#_28","text":"\u4ece\u5355\u673a\u4e2d\u7684redis.conf\u590d\u5236\u4e00\u4efdredis.conf \u65b0\u5efaredis6379.conf,redis6380.conf,redis6381.conf \u586b\u5165\u5982\u4e0b\u5185\u5bb9\uff0c\u4fee\u6539 pidfile,port,dbfilename include /opt/homebrew/etc/myredis/redis.conf pidfile \"/var/run/redis_6379.pid\" port 6379 dbfilename dump6379.rdb","title":"\u914d\u7f6e"},{"location":"db/redis/advanced/#_29","text":"\u542f\u52a8\u4e09\u53f0redis\u670d\u52a1\u5668 \u276f redis-server ./redis6379.conf \u276f redis-server ./redis6380.conf \u276f redis-server ./redis6381.conf","title":"\u542f\u52a8"},{"location":"db/redis/advanced/#_30","text":"127.0.0.1:6379> info replication # Replication role:master connected_slaves:0 master_failover_state:no-failover master_replid:08f03d154f528b0980ccb908bff473e966a19509 master_replid2:0000000000000000000000000000000000000000 master_repl_offset:0 second_repl_offset:-1 repl_backlog_active:0 repl_backlog_size:1048576 repl_backlog_first_byte_offset:0 repl_backlog_histlen:0","title":"\u67e5\u770b"},{"location":"db/redis/advanced/#_31","text":"6380,6381\u914d\u7f6e slaveof 127.0.0.1 6379","title":"\u4ece\u673a\u914d\u7f6e \u4e3b\u673a\u4e0d\u914d\u7f6e"},{"location":"db/redis/advanced/#_32","text":"\u4ece\u673a\u5199\u6570\u636e\u5c31\u4f1a\u62a5\u9519 127.0.0.1:6381> set 1 1 (error) READONLY You can't write against a read only replica. \u4e3b\u673a\u6302\u6389\u91cd\u542f\u5373\u53ef \u4ece\u673a\u91cd\u542f\u9700\u8981\u91cd\u65b0\u914d\u7f6eslaveof 127.0.0.1 6379\uff0c\u4e5f\u53ef\u4ee5\u5199\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d","title":"\u6ce8\u610f"},{"location":"db/redis/advanced/#_33","text":"","title":"\u5e38\u89c1\u7684\u4e09\u79cd\u4e3b\u4ece\u6a21\u5f0f"},{"location":"db/redis/advanced/#_34","text":"","title":"\u4e00\u4e3b\u4e8c\u4ece"},{"location":"db/redis/advanced/#_35","text":"\u964d\u4f4e\u4e86master\u590d\u5236\u65f6\u7684\u5199\u538b\u529b \u4e3b\u673a\u6302\u6389 \u4ece\u673a\u4ecd\u7136\u662f\u4ece\u673a","title":"\u85aa\u706b\u76f8\u4f20"},{"location":"db/redis/advanced/#_36","text":"\u57fa\u4e8e\u85aa\u706b\u76f8\u4f20 \u5f53\u4e00\u4e2amaster\u5b95\u673a\u540e\uff0c\u540e\u9762\u7684slave\u53ef\u4ee5\u7acb\u523b\u5347\u4e3amaster\uff0c\u5176\u540e\u9762\u7684slave\u4e0d\u7528\u505a\u4efb\u4f55\u4fee\u6539\u3002 \u4f7f\u7528\u5982\u4e0b\u547d\u4ee4 slaveof no one","title":"\u53cd\u5ba2\u4e3a\u4e3b"},{"location":"db/redis/advanced/#_37","text":"","title":"\u54e8\u5175\u6a21\u5f0f"},{"location":"db/redis/advanced/#what_4","text":"\u53cd\u5ba2\u4e3a\u4e3b\u7684\u81ea\u52a8\u7248 \uff0c\u80fd\u591f\u540e\u53f0\u76d1\u63a7\u4e3b\u673a\u662f\u5426\u6545\u969c\uff0c\u5982\u679c\u6545\u969c\u4e86\u6839\u636e\u6295\u7968\u6570\u81ea\u52a8\u5c06\u4ece\u5e93\u8f6c\u6362\u4e3a\u4e3b\u5e93","title":"what"},{"location":"db/redis/advanced/#use_2","text":"\u4f7f\u7528\u4e00\u4e3b\u4e8c\u4ec6\uff0c master:6379, slaver:6380,6381 \u914d\u7f6e\u6587\u4ef6\u4e0b\u65b0\u5efasentinel.conf sentinel monitor mymaster 127.0.0.1 6379 1 \u542f\u52a8\u54e8\u5175 redis-sentinel ./sentinel.conf \u9009\u4e3e\u89c4\u5219 1 master\u6302\u6389\uff0c\u5219\u6839\u636e\u4e0b\u5217\u6761\u4ef6\u4eceslaver\u4e2d\u9009\u4e3e\u4e00\u4e2amaster \u4f18\u5148\u7ea7\u5728redis.conf\u4e2d\u9ed8\u8ba4\uff1aslave-priority 100\uff0c\u503c\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8 \u504f\u79fb\u91cf\u662f\u6307\u83b7\u5f97\u539f\u4e3b\u673a\u6570\u636e\u6700\u5168\u7684 \u6bcf\u4e2aredis\u5b9e\u4f8b\u542f\u52a8\u540e\u90fd\u4f1a\u968f\u673a\u751f\u6210\u4e00\u4e2a40\u4f4d\u7684runid 2sentine\u5411\u539f\u4e3b\u670d\u52a1\u7684\u4ece\u670d\u52a1\u53d1\u9001slaveof\u547d\u4ee4\uff0c\u53d1\u9001\u590d\u5236\u6570\u636e 3.\u5982\u679c\u4e00\u4e2amaster\u5df2\u7ecf\u4e0b\u7ebf\u53c8\u91cd\u65b0\u4e0a\u7ebf\uff0csentinel\u4f1a\u5411\u5176\u53d1\u9001slaveof\u547d\u4ee4\uff0c\u8ba9\u5176\u6210\u4e3a\u65b0\u4e3b\u7684\u4ece","title":"use"},{"location":"db/redis/advanced/#source_3","text":"","title":"source"},{"location":"db/redis/advanced/#_38","text":"Slave\u542f\u52a8\u6210\u529f\u8fde\u63a5\u5230master\u540e\u4f1a\u53d1\u9001\u4e00\u4e2async\u547d\u4ee4 Master\u63a5\u5230\u547d\u4ee4\u542f\u52a8\u540e\u53f0\u7684\u5b58\u76d8\u8fdb\u7a0b\uff0c\u540c\u65f6\u6536\u96c6\u6240\u6709\u63a5\u6536\u5230\u7684\u7528\u4e8e\u4fee\u6539\u6570\u636e\u96c6\u547d\u4ee4\uff0c \u5728\u540e\u53f0\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\u4e4b\u540e\uff0cmaster\u5c06\u4f20\u9001\u6574\u4e2a\u6570\u636e\u6587\u4ef6\u5230slave,\u4ee5\u5b8c\u6210\u4e00\u6b21\u5b8c\u5168\u540c\u6b65 \u5168\u91cf\u590d\u5236\uff1a\u800cslave\u670d\u52a1\u5728\u63a5\u6536\u5230\u6570\u636e\u5e93\u6587\u4ef6\u6570\u636e\u540e\uff0c\u5c06\u5176\u5b58\u76d8\u5e76\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u3002 \u589e\u91cf\u590d\u5236\uff1aMaster\u7ee7\u7eed\u5c06\u65b0\u7684\u6240\u6709\u6536\u96c6\u5230\u7684\u4fee\u6539\u547d\u4ee4\u4f9d\u6b21\u4f20\u7ed9slave,\u5b8c\u6210\u540c\u6b65 \u4f46\u662f\u53ea\u8981\u662f\u91cd\u65b0\u8fde\u63a5master,\u4e00\u6b21\u5b8c\u5168\u540c\u6b65\uff08\u5168\u91cf\u590d\u5236)\u5c06\u88ab\u81ea\u52a8\u6267\u884c","title":"\u590d\u5236\u539f\u7406"},{"location":"db/redis/advanced/#_39","text":"","title":"\u96c6\u7fa4"},{"location":"db/redis/advanced/#what_5","text":"Redis \u96c6\u7fa4\u5b9e\u73b0\u4e86\u5bf9Redis\u7684\u6c34\u5e73\u6269\u5bb9\uff0c\u5373\u542f\u52a8N\u4e2aredis\u8282\u70b9\uff0c\u5c06\u6574\u4e2a\u6570\u636e\u5e93\u5206\u5e03\u5b58\u50a8\u5728\u8fd9N\u4e2a\u8282\u70b9\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u603b\u6570\u636e\u76841/N\u3002 Redis \u96c6\u7fa4\u901a\u8fc7\u5206\u533a\uff08partition\uff09\u6765\u63d0\u4f9b\u4e00\u5b9a\u7a0b\u5ea6\u7684\u53ef\u7528\u6027\uff08availability\uff09\uff1a \u5373\u4f7f\u96c6\u7fa4\u4e2d\u6709\u4e00\u90e8\u5206\u8282\u70b9\u5931\u6548\u6216\u8005\u65e0\u6cd5\u8fdb\u884c\u901a\u8baf\uff0c \u96c6\u7fa4\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u5904\u7406\u547d\u4ee4\u8bf7\u6c42\u3002","title":"what"},{"location":"db/redis/advanced/#how","text":"","title":"how"},{"location":"db/redis/advanced/#_40","text":"","title":"\u642d\u5efa"},{"location":"db/redis/advanced/#_41","text":"\u67e5\u770bredis.conf\u914d\u7f6e\u6587\u4ef6\u6301\u4e45\u5316\u6587\u4ef6\u76ee\u5f55 dir /opt/homebrew/var/db/redis/ \u5220\u9664\u6301\u4e45\u5316\u6587\u4ef6","title":"\u5220\u9664\u6301\u8ba1\u5316\u6587\u4ef6"},{"location":"db/redis/advanced/#_42","text":"\u5728\u5982\u4e0b\u76ee\u5f55\u65b0\u5efaredis6379.conf redis6379.conf redis6380.conf redis6381.conf redis6389.conf redis6390.conf redis6391.conf /opt/homebrew/etc/myredis/cluster cluster-enabled yes \u6253\u5f00\u96c6\u7fa4\u6a21\u5f0f cluster-config-file nodes-6379.conf \u8bbe\u5b9a\u8282\u70b9\u914d\u7f6e\u6587\u4ef6\u540d cluster-node-timeout 15000 \u8bbe\u5b9a\u8282\u70b9\u5931\u8054\u65f6\u95f4\uff0c\u8d85\u8fc7\u8be5\u65f6\u95f4\uff08\u6beb\u79d2\uff09\uff0c\u96c6\u7fa4\u81ea\u52a8\u8fdb\u884c\u4e3b\u4ece\u5207\u6362\u3002 include /opt/homebrew/etc/myredis/redis.conf port 6379 pidfile \"/var/run/redis_6379.pid\" dbfilename \"dump6379.rdb\" logfile \"/opt/homebrew/var/db/redis/redis_cluster/logs/redis_err_6379.log\" cluster-enabled yes cluster-config-file nodes-6379.conf cluster-node-timeout 15000","title":"\u65b0\u5efa\u5982\u4e0b\u914d\u7f6e\u6587\u4ef6"},{"location":"db/redis/advanced/#_43","text":"\u542f\u52a86\u53f0redis, \u542f\u52a8\u53ef\u80fd\u4f1a\u62a5\u9519\uff0c\u9700\u8981\u65b0\u5efa\u65e5\u5fd7\u6240\u5728\u7684\u76ee\u5f55 \u276f redis-server ./redis6379.conf \u276f redis-server ./redis6380.conf \u276f redis-server ./redis6381.conf \u276f redis-server ./redis6389.conf \u276f redis-server ./redis6390.conf \u276f redis-server ./redis6391.conf","title":"\u542f\u52a8\u670d\u52a1\u7aef"},{"location":"db/redis/advanced/#_44","text":"\u4e0d\u8981\u4f7f\u7528127.0.0.1,\u4f7f\u7528\u771f\u5b9eip192.168.199.222 redis-cli --cluster create --cluster-replicas 1 192.168.199.222:6379 192.168.199.222:6380 192.168.199.222:6381 192.168.199.222:6389 192.168.199.222:6390 192.168.199.222:6391","title":"\u5408\u4f53"},{"location":"db/redis/advanced/#_45","text":"redis-cli -c -p 6379","title":"\u542f\u52a8\u5ba2\u6237\u7aef"},{"location":"db/redis/advanced/#_46","text":"","title":"\u57fa\u7840\u4f7f\u7528"},{"location":"db/redis/advanced/#_47","text":"sh cluster nodes","title":"\u67e5\u770b\u96c6\u7fa4\u4fe1\u606f"},{"location":"db/redis/advanced/#slots","text":"\u4e00\u4e2a Redis \u96c6\u7fa4\u5305\u542b 16384 \u4e2a\u63d2\u69fd\uff08hash slot\uff09\uff0c \u6570\u636e\u5e93\u4e2d\u7684\u6bcf\u4e2a\u952e\u90fd\u5c5e\u4e8e\u8fd9 16384 \u4e2a\u63d2\u69fd\u7684\u5176\u4e2d\u4e00\u4e2a\uff0c \u96c6\u7fa4\u4f7f\u7528\u516c\u5f0f CRC16(key) % 16384 \u6765\u8ba1\u7b97\u952e key \u5c5e\u4e8e\u54ea\u4e2a\u69fd\uff0c \u5176\u4e2d CRC16(key) \u8bed\u53e5\u7528\u4e8e\u8ba1\u7b97\u952e key \u7684 CRC16 \u6821\u9a8c\u548c \u3002 \u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u8d1f\u8d23\u5904\u7406\u4e00\u90e8\u5206\u63d2\u69fd\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c \u5982\u679c\u4e00\u4e2a\u96c6\u7fa4\u53ef\u4ee5\u6709\u4e3b\u8282\u70b9\uff0c \u5176\u4e2d\uff1a \u8282\u70b9 A \u8d1f\u8d23\u5904\u7406 0 \u53f7\u81f3 5460 \u53f7\u63d2\u69fd\u3002 \u8282\u70b9 B \u8d1f\u8d23\u5904\u7406 5461 \u53f7\u81f3 10922 \u53f7\u63d2\u69fd\u3002 \u8282\u70b9 C \u8d1f\u8d23\u5904\u7406 10923 \u53f7\u81f3 16383 \u53f7\u63d2\u69fd\u3002","title":"slots"},{"location":"db/redis/advanced/#set-mset","text":"\u4e0d\u5728\u4e00\u4e2aslot\u4e0b\u7684\u952e\u503c\uff0c\u662f\u4e0d\u80fd\u4f7f\u7528mget,mset\u7b49\u591a\u952e\u64cd\u4f5c\u3002 \u53ef\u4ee5\u901a\u8fc7{}\u6765\u5b9a\u4e49\u7ec4\u7684\u6982\u5ff5\uff0c\u4ece\u800c\u4f7fkey\u4e2d{}\u5185\u76f8\u540c\u5185\u5bb9\u7684\u952e\u503c\u5bf9\u653e\u5230\u4e00\u4e2aslot\u4e2d\u53bb\u3002 127.0.0.1:6379> set s1 1 -> Redirected to slot [15224] located at 192.168.199.222:6381 OK 192.168.199.222:6381> mset name{user} matt age{user} 12 -> Redirected to slot [5474] located at 192.168.199.222:6380","title":"set mset"},{"location":"db/redis/advanced/#_48","text":"\u5224\u65ad\u67d0\u4e2akey\u5728\u54ea\u4e2a\u69fd\u4f4d cluster keyslot s1 \u7edf\u8ba115345\u69fd\u4f4d\u6709\u51e0\u4e2akey cluster countkeysinslot 15345 \u8fd4\u56de\u69fd\u4f4d2843 2 \u4e2akey 192.168.199.222:6379> cluster getkeysinslot 2843 2 1) \"s2\"","title":"\u5176\u4ed6\u64cd\u4f5c"},{"location":"db/redis/advanced/#_49","text":"\u5982\u679c\u67d0\u4e00\u6bb5\u63d2\u69fd\u7684\u4e3b\u4ece\u90fd\u6302\u6389\uff0c\u800ccluster-require-full-coverage \u4e3ayes \uff0c\u90a3\u4e48 \uff0c\u6574\u4e2a\u96c6\u7fa4\u90fd\u6302\u6389 \u5982\u679c\u67d0\u4e00\u6bb5\u63d2\u69fd\u7684\u4e3b\u4ece\u90fd\u6302\u6389\uff0c\u800ccluster-require-full-coverage \u4e3ano \uff0c\u90a3\u4e48\uff0c\u8be5\u63d2\u69fd\u6570\u636e\u5168\u90fd\u4e0d\u80fd\u4f7f\u7528\uff0c\u4e5f\u65e0\u6cd5\u5b58\u50a8\u3002 redis.conf\u4e2d\u7684\u53c2\u6570 cluster-require-full-coverage","title":"\u6545\u969c\u6062\u590d"},{"location":"db/redis/advanced/#summary_1","text":"","title":"summary"},{"location":"db/redis/advanced/#advange","text":"\u5b9e\u73b0\u6269\u5bb9 \u5206\u644a\u538b\u529b","title":"advange"},{"location":"db/redis/advanced/#disadvange","text":"\u591a\u952e\u64cd\u4f5c\u662f\u4e0d\u88ab\u652f\u6301\u7684 \u591a\u952e\u7684Redis\u4e8b\u52a1\u662f\u4e0d\u88ab\u652f\u6301\u7684\u3002lua\u811a\u672c\u4e0d\u88ab\u652f\u6301 \u7531\u4e8e\u96c6\u7fa4\u65b9\u6848\u51fa\u73b0\u8f83\u665a\uff0c\u5f88\u591a\u516c\u53f8\u5df2\u7ecf\u91c7\u7528\u4e86\u5176\u4ed6\u7684\u96c6\u7fa4\u65b9\u6848\uff0c\u800c\u4ee3\u7406\u6216\u8005\u5ba2\u6237\u7aef\u5206\u7247\u7684\u65b9\u6848\u60f3\u8981\u8fc1\u79fb\u81f3redis cluster\uff0c\u9700\u8981\u6574\u4f53\u8fc1\u79fb\u800c\u4e0d\u662f\u9010\u6b65\u8fc7\u6e21\uff0c\u590d\u6742\u5ea6\u8f83\u5927\u3002","title":"disadvange"},{"location":"db/redis/advanced/#api","text":"","title":"api"},{"location":"db/redis/advanced/#redis_4","text":"","title":"redis\u5e94\u7528\u95ee\u9898"},{"location":"db/redis/advanced/#_50","text":"","title":"\u7f13\u5b58\u7a7f\u900f"},{"location":"db/redis/advanced/#_51","text":"key \u5bf9\u5e94\u7684\u6570\u636e\u7f13\u5b58\u4e2d\u6ca1\u6709\uff0c\u6570\u636e\u5e93\u4e2d\u4e5f\u6ca1\u6709 \u7528\u6237\u5229\u7528\u8fd9\u4e9b\u6f0f\u6d1e\u653b\u51fb \u4ece\u800c\u538b\u57ae\u6570\u636e\u5e93","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"db/redis/advanced/#_52","text":"1.\u5bf9\u7a7a\u503c\u7f13\u5b58\uff1a\u5982\u679c\u4e00\u4e2a\u67e5\u8be2\u8fd4\u56de\u7684\u6570\u636e\u4e3a\u7a7a\uff08\u4e0d\u7ba1\u662f\u6570\u636e\u662f\u5426\u4e0d\u5b58\u5728\uff09\uff0c\u6211\u4eec\u4ecd\u7136\u628a\u8fd9\u4e2a\u7a7a\u7ed3\u679c\uff08null\uff09\u8fdb\u884c\u7f13\u5b58\uff0c\u8bbe\u7f6e\u7a7a\u7ed3\u679c\u7684\u8fc7\u671f\u65f6\u95f4\u4f1a\u5f88\u77ed\uff0c\u6700\u957f\u4e0d\u8d85\u8fc7\u4e94\u5206\u949f 2.\u8bbe\u7f6e\u53ef\u8bbf\u95ee\u7684\u540d\u5355\uff08\u767d\u540d\u5355\uff09\uff1a \u4f7f\u7528bitmaps\u7c7b\u578b\u5b9a\u4e49\u4e00\u4e2a\u53ef\u4ee5\u8bbf\u95ee\u7684\u540d\u5355\uff0c\u540d\u5355id\u4f5c\u4e3abitmaps\u7684\u504f\u79fb\u91cf\uff0c\u6bcf\u6b21\u8bbf\u95ee\u548cbitmap\u91cc\u9762\u7684id\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u8bbf\u95eeid\u4e0d\u5728bitmaps\u91cc\u9762\uff0c\u8fdb\u884c\u62e6\u622a\uff0c\u4e0d\u5141\u8bb8\u8bbf\u95ee\u3002 3.\u91c7\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\uff1a(\u5e03\u9686\u8fc7\u6ee4\u5668\uff08Bloom Filter\uff09\u662f1970\u5e74\u7531\u5e03\u9686\u63d0\u51fa\u7684\u3002\u5b83\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5f88\u957f\u7684\u4e8c\u8fdb\u5236\u5411\u91cf(\u4f4d\u56fe)\u548c\u4e00\u7cfb\u5217\u968f\u673a\u6620\u5c04\u51fd\u6570\uff08\u54c8\u5e0c\u51fd\u6570\uff09\u3002 \u5e03\u9686\u8fc7\u6ee4\u5668\u53ef\u4ee5\u7528\u4e8e\u68c0\u7d22\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\u3002\u5b83\u7684\u4f18\u70b9\u662f\u7a7a\u95f4\u6548\u7387\u548c\u67e5\u8be2\u65f6\u95f4\u90fd\u8fdc\u8fdc\u8d85\u8fc7\u4e00\u822c\u7684\u7b97\u6cd5\uff0c\u7f3a\u70b9\u662f\u6709\u4e00\u5b9a\u7684\u8bef\u8bc6\u522b\u7387\u548c\u5220\u9664\u56f0\u96be\u3002) \u5c06\u6240\u6709\u53ef\u80fd\u5b58\u5728\u7684\u6570\u636e\u54c8\u5e0c\u5230\u4e00\u4e2a\u8db3\u591f\u5927\u7684bitmaps\u4e2d\uff0c\u4e00\u4e2a\u4e00\u5b9a\u4e0d\u5b58\u5728\u7684\u6570\u636e\u4f1a\u88ab \u8fd9\u4e2abitmaps\u62e6\u622a\u6389\uff0c\u4ece\u800c\u907f\u514d\u4e86\u5bf9\u5e95\u5c42\u5b58\u50a8\u7cfb\u7edf\u7684\u67e5\u8be2\u538b\u529b\u3002 4.\u8fdb\u884c\u5b9e\u65f6\u76d1\u63a7\uff1a\u5f53\u53d1\u73b0Redis\u7684\u547d\u4e2d\u7387\u5f00\u59cb\u6025\u901f\u964d\u4f4e\uff0c\u9700\u8981\u6392\u67e5\u8bbf\u95ee\u5bf9\u8c61\u548c\u8bbf\u95ee\u7684\u6570\u636e\uff0c\u548c\u8fd0\u7ef4\u4eba\u5458\u914d\u5408\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u9ed1\u540d\u5355\u9650\u5236\u670d\u52a1","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"db/redis/advanced/#_53","text":"\u67d0\u4e2akey\u5bf9\u5e94\u7684\u6570\u636e\u8fc7\u671f\uff0c\u6b64\u65f6\u82e5\u6709\u5927\u91cf\u5e76\u53d1\u8bf7\u6c42\u8fc7\u6765\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u53d1\u73b0\u7f13\u5b58\u8fc7\u671f\u4e00\u822c\u90fd\u4f1a\u4ece\u540e\u7aefDB\u52a0\u8f7d\u6570\u636e\u5e76\u56de\u8bbe\u5230\u7f13\u5b58\uff0c\u8fd9\u4e2a\u65f6\u5019\u5927\u5e76\u53d1\u7684\u8bf7\u6c42\u53ef\u80fd\u4f1a\u77ac\u95f4\u628a\u540e\u7aefDB\u538b\u57ae\u3002","title":"\u7f13\u5b58\u51fb\u7a7f"},{"location":"db/redis/advanced/#_54","text":"1.\u5bf9\u5e94\u70ed\u95e8\u6570\u636e\uff0c\u8fc7\u671f\u4e4b\u524d\u8c03\u6574\u8fc7\u671f\u65f6\u957f 2.\u4f7f\u7528\u9501 2.1\u5c31\u662f\u5728\u7f13\u5b58\u5931\u6548\u7684\u65f6\u5019\uff08\u5224\u65ad\u62ff\u51fa\u6765\u7684\u503c\u4e3a\u7a7a\uff09\uff0c\u4e0d\u662f\u7acb\u5373\u53bbload db\u3002 2.2\u5148\u4f7f\u7528\u7f13\u5b58\u5de5\u5177\u7684\u67d0\u4e9b\u5e26\u6210\u529f\u64cd\u4f5c\u8fd4\u56de\u503c\u7684\u64cd\u4f5c\uff08\u6bd4\u5982Redis\u7684SETNX\uff09 \u200b \u53bbset\u4e00\u4e2amutex key 2.3\u5f53\u64cd\u4f5c\u8fd4\u56de\u6210\u529f\u65f6\uff0c\u518d\u8fdb\u884cload db\u7684\u64cd\u4f5c\uff0c\u5e76\u56de\u8bbe\u7f13\u5b58,\u6700\u540e\u5220\u9664mutex key\uff1b 2.4\u5f53\u64cd\u4f5c\u8fd4\u56de\u5931\u8d25\uff0c\u8bc1\u660e\u6709\u7ebf\u7a0b\u5728load db\uff0c\u5f53\u524d\u7ebf\u7a0b\u7761\u7720\u4e00\u6bb5\u65f6\u95f4\u518d\u91cd\u8bd5\u6574\u4e2aget\u7f13\u5b58\u7684\u65b9\u6cd5\u3002","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"db/redis/advanced/#_55","text":"key\u5bf9\u5e94\u7684\u6570\u636e\u5b58\u5728\uff0c\u4f46\u5728redis\u4e2d\u8fc7\u671f\uff0c\u6b64\u65f6\u82e5\u6709\u5927\u91cf\u5e76\u53d1\u8bf7\u6c42\u8fc7\u6765\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u53d1\u73b0\u7f13\u5b58\u8fc7\u671f\u4e00\u822c\u90fd\u4f1a\u4ece\u540e\u7aefDB\u52a0\u8f7d\u6570\u636e\u5e76\u56de\u8bbe\u5230\u7f13\u5b58\uff0c\u8fd9\u4e2a\u65f6\u5019\u5927\u5e76\u53d1\u7684\u8bf7\u6c42\u53ef\u80fd\u4f1a\u77ac\u95f4\u628a\u540e\u7aefDB\u538b\u57ae\u3002 \u7f13\u5b58\u96ea\u5d29\u4e0e\u7f13\u5b58\u51fb\u7a7f\u7684\u533a\u522b\u5728\u4e8e\u8fd9\u91cc\u9488\u5bf9\u5f88\u591akey\u7f13\u5b58\uff0c\u524d\u8005\u5219\u662f\u67d0\u4e00\u4e2akey","title":"\u7f13\u5b58\u96ea\u5d29"},{"location":"db/redis/advanced/#_56","text":"1.\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u589e\u52a0\u4e00\u4e2a\u968f\u673a\u503c 2.\u4f7f\u7528\u9501","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"db/redis/advanced/#_57","text":"\u4e3a\u771f\u4e2a\u7cfb\u7edf\u63d0\u4f9b\u5168\u5c40\u552f\u4e00\u7684\u9501\uff0c\u5177\u6709\u9662\u5b50\u6027 a 1 \u83b7\u53d6\u9501 3 \u91ca\u653e\u9501 2 \u5361\u6ce8 2\u6267\u884c \u91ca\u653e\u9501 \u4f1a\u628a\u522b\u7684\u7ebf\u7a0b\u7684\u9501\u91ca\u653e","title":"\u5206\u5e03\u5f0f\u9501"},{"location":"db/redis/advanced/#_58","text":"1.\u4f7f\u7528setnx set k1 1 nx ex 3 ex 3 : 3s px 3:3ms 2\u5982\u679c\u83b7\u53d6\u9501\u6210\u529f\uff0c\u5904\u7406\uff0c\u91ca\u653e\u9501 3.\u5176\u4ed6\u5ba2\u6237\u7aef\u91cd\u8bd5 \u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u963b\u585e\uff0c\u6302\u6389\u6ca1\u6709\u5220\u9664\u9501\uff0c\u5176\u4ed6\u7528\u6237\u5c31\u83b7\u53d6\u4e0d\u5230\u9501\u4e86","title":"\u57fa\u7840"},{"location":"db/redis/advanced/#_59","text":"","title":"\u8fdb\u9636 \uff1a \u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4"},{"location":"db/redis/advanced/#_60","text":"\u9632\u6b62\u5220\u9664\u9519\u9501 1.a1\u6ca1\u6709\u5220\u9664\u9501\uff0c\u4f46\u662f\u8fc7\u671f\u4e86\uff0c 2.a2\u83b7\u53d6\u5230\u9501\uff0c \u6d4b\u8bd5a1\u628a\u9501\u5220\u9664\u4e86\uff0c\u5176\u5b9e\u5c31\u662f\u628aa1\u628aa2\u7684\u9501\u5220\u9664\u4e86\uff0c\u6b64\u65f6a2\u5c31\u53ef\u80fd\u51fa\u95ee\u9898 \u53ef\u4ee5\u8bbe\u7f6e\u9501\u7684\u5185\u5bb9\uff0c\u5220\u9664\u9501\u4e4b\u524d\u5224\u65ad\u4e00\u4e0b\u9501\u7684\u5185\u5bb9","title":"\u8fdb\u9636 \uff1a \u6821\u9a8c\u9501\u7684\u5185\u5bb9"},{"location":"db/redis/advanced/#_61","text":"\u53ef\u4ee5\u4f7f\u7528lua\u811a\u672c","title":"\u8fdb\u9636 \uff1a\u6821\u9a8c\u3001\u5220\u9664 \u9700\u8981\u539f\u5b50\u6027"},{"location":"db/redis/api/","text":"api todo lua","title":"Api"},{"location":"db/redis/api/#todo-lua","text":"","title":"todo lua"},{"location":"db/redis/install/","text":"\u5b89\u88c5 \u6ce8\u610f \u53ef\u53c2\u8003\u5b98\u7f51\u5b89\u88c5 https://redis.io/docs/getting-started/ mac\u5b89\u88c5 brew install redis \u9ed8\u8ba4\u5b89\u88c5\u76ee\u5f55 /opt/homebrew/Cellar/redis/7.0.0 \u914d\u7f6e\u6587\u4ef6 /opt/homebrew/etc/redis.conf linux\u5b89\u88c5 todo \u4f9d\u8d56gcc\u73af\u5883 yum install gcc-c++ gcc --version \u57fa\u7840 \u5b98\u7f51\u4e0b\u8f7d -> \u89e3\u538b -> \u8fdb\u5165\u89e3\u538b\u540e\u7684\u76ee\u5f55 \u7f16\u8bd1\u5b89\u88c5 make make PREFIX=/usr/local/redis install \u8fd9\u91cc\u591a\u4e86\u4e00\u4e2a\u5173\u952e\u5b57 PREFIX= \u8fd9\u4e2a\u5173\u952e\u5b57\u7684\u4f5c\u7528\u662f\u7f16\u8bd1\u7684\u65f6\u5019\u7528\u4e8e\u6307\u5b9a\u7a0b\u5e8f\u5b58\u653e\u7684\u8def\u5f84\u3002\u6bd4\u5982\u6211\u4eec\u73b0\u5728\u5c31\u662f\u6307\u5b9a\u4e86redis\u5fc5\u987b\u5b58\u653e\u5728/usr/local/redis\u76ee\u5f55\u3002\u5047\u8bbe\u4e0d\u6dfb\u52a0\u8be5\u5173\u952e\u5b57Linux\u4f1a\u5c06\u53ef\u6267\u884c\u6587\u4ef6\u5b58\u653e\u5728/usr/local/bin\u76ee\u5f55\uff0c \u5e93\u6587\u4ef6\u4f1a\u5b58\u653e\u5728/usr/local/lib\u76ee\u5f55\u3002\u914d\u7f6e\u6587\u4ef6\u4f1a\u5b58\u653e\u5728/usr/local/etc\u76ee\u5f55\u3002\u5176\u4ed6\u7684\u8d44\u6e90\u6587\u4ef6\u4f1a\u5b58\u653e\u5728usr/local/share\u76ee\u5f55\u3002\u8fd9\u91cc\u6307\u5b9a\u53f7\u76ee\u5f55\u4e5f\u65b9\u4fbf\u540e\u7eed\u7684\u5378\u8f7d\uff0c\u540e\u7eed\u76f4\u63a5rm -rf /usr/local/redis \u5373\u53ef\u5220\u9664redis\u3002 \u4f7f\u7528 \u542f\u52a8\u670d\u52a1\u7aef //\u65b9\u5f0f\u4e00\uff1a\u4f7f\u7528brew\u5e2e\u52a9\u6211\u4eec\u542f\u52a8\u8f6f\u4ef6 brew services start redis //\u65b9\u5f0f\u4e8c redis-server /opt/homebrew/etc/redis.conf \u542f\u52a8\u5ba2\u6237\u7aef redis-cli -h 127.0.0.1 -p 6379 redis-cli redis-cli -p 6379 \u5173\u95ed redis-cli shutdown \u6d4b\u8bd5 redis-cli ping \u914d\u7f6e \u914d\u7f6e\u540e\u53f0\u542f\u52a8 1.daemonize no\u6539\u6210yes daemonize yes 2.\u6ce8\u91ca\u6389bind 3.protected-mode\u8bbe\u7f6e\u4e3afalse include \u5bfc\u5165\u4e00\u4e2a\u6587\u4ef6 include /opt/homebrew/etc/redis.conf \u7f51\u7edc\u914d\u7f6e bind \u9ed8\u8ba4\u60c5\u51b5bind=127.0.0.1\u53ea\u80fd\u63a5\u53d7\u672c\u673a\u7684\u8bbf\u95ee\u8bf7\u6c42 \u4e0d\u5199\u7684\u60c5\u51b5\u4e0b\uff0c\u65e0\u9650\u5236\u63a5\u53d7\u4efb\u4f55ip\u5730\u5740\u7684\u8bbf\u95ee \u5982\u679c\u5f00\u542f\u4e86protected-mode\uff0c\u90a3\u4e48\u5728\u6ca1\u6709\u8bbe\u5b9abind ip\u4e14\u6ca1\u6709\u8bbe\u5bc6\u7801\u7684\u60c5\u51b5\u4e0b\uff0cRedis\u53ea\u5141\u8bb8\u63a5\u53d7\u672c\u673a\u7684\u54cd\u5e94 protected-mode \u4fdd\u62a4\u6a21\u5f0f\uff0c\u63a8\u8350\u8bbe\u7f6e\u4e3afalse port \u7aef\u53e3\u53f7 tcp-backlog \u8bbe\u7f6etcp\u7684backlog\uff0cbacklog\u5176\u5b9e\u662f\u4e00\u4e2a\u8fde\u63a5\u961f\u5217\uff0cbacklog\u961f\u5217\u603b\u548c=\u672a\u5b8c\u6210\u4e09\u6b21\u63e1\u624b\u961f\u5217 + \u5df2\u7ecf\u5b8c\u6210\u4e09\u6b21\u63e1\u624b\u961f\u5217\u3002 \u5728\u9ad8\u5e76\u53d1\u73af\u5883\u4e0b\u4f60\u9700\u8981\u4e00\u4e2a\u9ad8backlog\u503c\u6765\u907f\u514d\u6162\u5ba2\u6237\u7aef\u8fde\u63a5\u95ee\u9898\u3002 \u6ce8\u610fLinux\u5185\u6838\u4f1a\u5c06\u8fd9\u4e2a\u503c\u51cf\u5c0f\u5230/proc/sys/net/core/somaxconn\u7684\u503c\uff08128\uff09\uff0c\u6240\u4ee5\u9700\u8981\u786e\u8ba4\u589e\u5927/proc/sys/net/core/somaxconn\u548c/proc/sys/net/ipv4/tcp_max_syn_backlog\uff08128\uff09\u4e24\u4e2a\u503c\u6765\u8fbe\u5230\u60f3\u8981\u7684\u6548\u679c timeout \u4e00\u4e2a\u7a7a\u95f2\u7684\u5ba2\u6237\u7aef\u7ef4\u6301\u591a\u5c11\u79d2\u4f1a\u5173\u95ed\uff0c0\u8868\u793a\u5173\u95ed\u8be5\u529f\u80fd\u3002\u5373\u6c38\u4e0d\u5173\u95ed\u3002 tcp-keepalive \u5bf9\u8bbf\u95ee\u5ba2\u6237\u7aef\u7684\u4e00\u79cd\u5fc3\u8df3\u68c0\u6d4b\uff0c\u6bcf\u4e2an\u79d2\u68c0\u6d4b\u4e00\u6b21\u3002 \u5355\u4f4d\u4e3a\u79d2\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a0\uff0c\u5219\u4e0d\u4f1a\u8fdb\u884cKeepalive\u68c0\u6d4b\uff0c\u5efa\u8bae\u8bbe\u7f6e\u621060 \u901a\u7528 daemonize \u662f\u5426\u4e3a\u540e\u53f0\u8fdb\u7a0b\uff0c\u8bbe\u7f6e\u4e3ayes \u5b88\u62a4\u8fdb\u7a0b\uff0c\u540e\u53f0\u542f\u52a8 pidfile \u5b58\u653epid\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e0d\u540c\u7684pid\u6587\u4ef6 pidfile /var/run/redis_6379.pid loglevel \u6307\u5b9a\u65e5\u5fd7\u8bb0\u5f55\u7ea7\u522b\uff0cRedis\u603b\u5171\u652f\u6301\u56db\u4e2a\u7ea7\u522b\uff1adebug\u3001verbose\u3001notice\u3001warning\uff0c\u9ed8\u8ba4\u4e3a notice \u56db\u4e2a\u7ea7\u522b\u6839\u636e\u4f7f\u7528\u9636\u6bb5\u6765\u9009\u62e9\uff0c\u751f\u4ea7\u73af\u5883\u9009\u62e9notice \u6216\u8005warning logfile \u65e5\u5fd7\u6587\u4ef6\u540d\u79f0 database \u8bbe\u5b9a\u5e93\u7684\u6570\u91cf \u9ed8\u8ba416\uff0c\u9ed8\u8ba4\u6570\u636e\u5e93\u4e3a0\uff0c\u53ef\u4ee5\u4f7f\u7528SELECT \u547d\u4ee4\u5728\u8fde\u63a5\u4e0a\u6307\u5b9a\u6570\u636e\u5e93id \u6743\u9650 \u5bc6\u7801 requirepass 123456 limit maxclients \u8bbe\u7f6eredis\u540c\u65f6\u53ef\u4ee5\u4e0e\u591a\u5c11\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u8fde\u63a5,\u9ed8\u8ba4\u4e3a10000\u4e2a \u5982\u679c\u8fbe\u5230\u4e86\u6b64\u9650\u5236\uff0credis\u5219\u4f1a\u62d2\u7edd\u65b0\u7684\u8fde\u63a5\u8bf7\u6c42\uff0c\u5e76\u4e14\u5411\u8fd9\u4e9b\u8fde\u63a5\u8bf7\u6c42\u65b9\u53d1\u51fa\u201cmax number of clients reached\u201d\u4ee5\u4f5c\u56de\u5e94\u3002 maxmemory \u6700\u5927\u5185\u5b58 maxmemory-policy \u6dd8\u6c70\u89c4\u5219 volatile-lru\uff1a\u4f7f\u7528LRU\u7b97\u6cd5\u79fb\u9664key\uff0c\u53ea\u5bf9\u8bbe\u7f6e\u4e86\u8fc7\u671f\u65f6\u95f4\u7684\u952e\uff1b\uff08\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\uff09 allkeys-lru\uff1a\u5728\u6240\u6709\u96c6\u5408key\u4e2d\uff0c\u4f7f\u7528LRU\u7b97\u6cd5\u79fb\u9664key volatile-random\uff1a\u5728\u8fc7\u671f\u96c6\u5408\u4e2d\u79fb\u9664\u968f\u673a\u7684key\uff0c\u53ea\u5bf9\u8bbe\u7f6e\u4e86\u8fc7\u671f\u65f6\u95f4\u7684\u952e allkeys-random\uff1a\u5728\u6240\u6709\u96c6\u5408key\u4e2d\uff0c\u79fb\u9664\u968f\u673a\u7684key volatile-ttl\uff1a\u79fb\u9664\u90a3\u4e9bTTL\u503c\u6700\u5c0f\u7684key\uff0c\u5373\u90a3\u4e9b\u6700\u8fd1\u8981\u8fc7\u671f\u7684key noeviction\uff1a\u4e0d\u8fdb\u884c\u79fb\u9664\u3002\u9488\u5bf9\u5199\u64cd\u4f5c\uff0c\u53ea\u662f\u8fd4\u56de\u9519\u8bef\u4fe1\u606f maxmemory-samples \u8bbe\u7f6e\u6837\u672c\u6570\u91cf\uff0cLRU\u7b97\u6cd5\u548c\u6700\u5c0fTTL\u7b97\u6cd5\u90fd\u5e76\u975e\u662f\u7cbe\u786e\u7684\u7b97\u6cd5\uff0c\u800c\u662f\u4f30\u7b97\u503c\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u8bbe\u7f6e\u6837\u672c\u7684\u5927\u5c0f\uff0credis\u9ed8\u8ba4\u4f1a\u68c0\u67e5\u8fd9\u4e48\u591a\u4e2akey\u5e76\u9009\u62e9\u5176\u4e2dLRU\u7684\u90a3\u4e2a\u3002 \u4e00\u822c\u8bbe\u7f6e3\u52307\u7684\u6570\u5b57\uff0c\u6570\u503c\u8d8a\u5c0f\u6837\u672c\u8d8a\u4e0d\u51c6\u786e\uff0c\u4f46\u6027\u80fd\u6d88\u8017\u8d8a\u5c0f\u3002 # 1k => 1000 bytes # 1kb => 1024 bytes # 1m => 1000000 bytes # 1mb => 1024*1024 bytes # 1g => 1000000000 bytes # 1gb => 1024*1024*1024 bytes","title":"Install"},{"location":"db/redis/install/#_1","text":"","title":"\u5b89\u88c5"},{"location":"db/redis/install/#_2","text":"\u53ef\u53c2\u8003\u5b98\u7f51\u5b89\u88c5 https://redis.io/docs/getting-started/","title":"\u6ce8\u610f"},{"location":"db/redis/install/#mac","text":"brew install redis \u9ed8\u8ba4\u5b89\u88c5\u76ee\u5f55 /opt/homebrew/Cellar/redis/7.0.0 \u914d\u7f6e\u6587\u4ef6 /opt/homebrew/etc/redis.conf","title":"mac\u5b89\u88c5"},{"location":"db/redis/install/#linux-todo","text":"","title":"linux\u5b89\u88c5 todo"},{"location":"db/redis/install/#gcc","text":"yum install gcc-c++ gcc --version","title":"\u4f9d\u8d56gcc\u73af\u5883"},{"location":"db/redis/install/#_3","text":"\u5b98\u7f51\u4e0b\u8f7d -> \u89e3\u538b -> \u8fdb\u5165\u89e3\u538b\u540e\u7684\u76ee\u5f55","title":"\u57fa\u7840"},{"location":"db/redis/install/#_4","text":"make make PREFIX=/usr/local/redis install \u8fd9\u91cc\u591a\u4e86\u4e00\u4e2a\u5173\u952e\u5b57 PREFIX= \u8fd9\u4e2a\u5173\u952e\u5b57\u7684\u4f5c\u7528\u662f\u7f16\u8bd1\u7684\u65f6\u5019\u7528\u4e8e\u6307\u5b9a\u7a0b\u5e8f\u5b58\u653e\u7684\u8def\u5f84\u3002\u6bd4\u5982\u6211\u4eec\u73b0\u5728\u5c31\u662f\u6307\u5b9a\u4e86redis\u5fc5\u987b\u5b58\u653e\u5728/usr/local/redis\u76ee\u5f55\u3002\u5047\u8bbe\u4e0d\u6dfb\u52a0\u8be5\u5173\u952e\u5b57Linux\u4f1a\u5c06\u53ef\u6267\u884c\u6587\u4ef6\u5b58\u653e\u5728/usr/local/bin\u76ee\u5f55\uff0c \u5e93\u6587\u4ef6\u4f1a\u5b58\u653e\u5728/usr/local/lib\u76ee\u5f55\u3002\u914d\u7f6e\u6587\u4ef6\u4f1a\u5b58\u653e\u5728/usr/local/etc\u76ee\u5f55\u3002\u5176\u4ed6\u7684\u8d44\u6e90\u6587\u4ef6\u4f1a\u5b58\u653e\u5728usr/local/share\u76ee\u5f55\u3002\u8fd9\u91cc\u6307\u5b9a\u53f7\u76ee\u5f55\u4e5f\u65b9\u4fbf\u540e\u7eed\u7684\u5378\u8f7d\uff0c\u540e\u7eed\u76f4\u63a5rm -rf /usr/local/redis \u5373\u53ef\u5220\u9664redis\u3002","title":"\u7f16\u8bd1\u5b89\u88c5"},{"location":"db/redis/install/#_5","text":"","title":"\u4f7f\u7528"},{"location":"db/redis/install/#_6","text":"//\u65b9\u5f0f\u4e00\uff1a\u4f7f\u7528brew\u5e2e\u52a9\u6211\u4eec\u542f\u52a8\u8f6f\u4ef6 brew services start redis //\u65b9\u5f0f\u4e8c redis-server /opt/homebrew/etc/redis.conf","title":"\u542f\u52a8\u670d\u52a1\u7aef"},{"location":"db/redis/install/#_7","text":"redis-cli -h 127.0.0.1 -p 6379 redis-cli redis-cli -p 6379","title":"\u542f\u52a8\u5ba2\u6237\u7aef"},{"location":"db/redis/install/#_8","text":"redis-cli shutdown","title":"\u5173\u95ed"},{"location":"db/redis/install/#_9","text":"redis-cli ping","title":"\u6d4b\u8bd5"},{"location":"db/redis/install/#_10","text":"","title":"\u914d\u7f6e"},{"location":"db/redis/install/#_11","text":"1.daemonize no\u6539\u6210yes daemonize yes 2.\u6ce8\u91ca\u6389bind 3.protected-mode\u8bbe\u7f6e\u4e3afalse","title":"\u914d\u7f6e\u540e\u53f0\u542f\u52a8"},{"location":"db/redis/install/#include","text":"\u5bfc\u5165\u4e00\u4e2a\u6587\u4ef6 include /opt/homebrew/etc/redis.conf","title":"include"},{"location":"db/redis/install/#_12","text":"","title":"\u7f51\u7edc\u914d\u7f6e"},{"location":"db/redis/install/#bind","text":"\u9ed8\u8ba4\u60c5\u51b5bind=127.0.0.1\u53ea\u80fd\u63a5\u53d7\u672c\u673a\u7684\u8bbf\u95ee\u8bf7\u6c42 \u4e0d\u5199\u7684\u60c5\u51b5\u4e0b\uff0c\u65e0\u9650\u5236\u63a5\u53d7\u4efb\u4f55ip\u5730\u5740\u7684\u8bbf\u95ee \u5982\u679c\u5f00\u542f\u4e86protected-mode\uff0c\u90a3\u4e48\u5728\u6ca1\u6709\u8bbe\u5b9abind ip\u4e14\u6ca1\u6709\u8bbe\u5bc6\u7801\u7684\u60c5\u51b5\u4e0b\uff0cRedis\u53ea\u5141\u8bb8\u63a5\u53d7\u672c\u673a\u7684\u54cd\u5e94","title":"bind"},{"location":"db/redis/install/#protected-mode","text":"\u4fdd\u62a4\u6a21\u5f0f\uff0c\u63a8\u8350\u8bbe\u7f6e\u4e3afalse","title":"protected-mode"},{"location":"db/redis/install/#port","text":"\u7aef\u53e3\u53f7","title":"port"},{"location":"db/redis/install/#tcp-backlog","text":"\u8bbe\u7f6etcp\u7684backlog\uff0cbacklog\u5176\u5b9e\u662f\u4e00\u4e2a\u8fde\u63a5\u961f\u5217\uff0cbacklog\u961f\u5217\u603b\u548c=\u672a\u5b8c\u6210\u4e09\u6b21\u63e1\u624b\u961f\u5217 + \u5df2\u7ecf\u5b8c\u6210\u4e09\u6b21\u63e1\u624b\u961f\u5217\u3002 \u5728\u9ad8\u5e76\u53d1\u73af\u5883\u4e0b\u4f60\u9700\u8981\u4e00\u4e2a\u9ad8backlog\u503c\u6765\u907f\u514d\u6162\u5ba2\u6237\u7aef\u8fde\u63a5\u95ee\u9898\u3002 \u6ce8\u610fLinux\u5185\u6838\u4f1a\u5c06\u8fd9\u4e2a\u503c\u51cf\u5c0f\u5230/proc/sys/net/core/somaxconn\u7684\u503c\uff08128\uff09\uff0c\u6240\u4ee5\u9700\u8981\u786e\u8ba4\u589e\u5927/proc/sys/net/core/somaxconn\u548c/proc/sys/net/ipv4/tcp_max_syn_backlog\uff08128\uff09\u4e24\u4e2a\u503c\u6765\u8fbe\u5230\u60f3\u8981\u7684\u6548\u679c","title":"tcp-backlog"},{"location":"db/redis/install/#timeout","text":"\u4e00\u4e2a\u7a7a\u95f2\u7684\u5ba2\u6237\u7aef\u7ef4\u6301\u591a\u5c11\u79d2\u4f1a\u5173\u95ed\uff0c0\u8868\u793a\u5173\u95ed\u8be5\u529f\u80fd\u3002\u5373\u6c38\u4e0d\u5173\u95ed\u3002","title":"timeout"},{"location":"db/redis/install/#tcp-keepalive","text":"\u5bf9\u8bbf\u95ee\u5ba2\u6237\u7aef\u7684\u4e00\u79cd\u5fc3\u8df3\u68c0\u6d4b\uff0c\u6bcf\u4e2an\u79d2\u68c0\u6d4b\u4e00\u6b21\u3002 \u5355\u4f4d\u4e3a\u79d2\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a0\uff0c\u5219\u4e0d\u4f1a\u8fdb\u884cKeepalive\u68c0\u6d4b\uff0c\u5efa\u8bae\u8bbe\u7f6e\u621060","title":"tcp-keepalive"},{"location":"db/redis/install/#_13","text":"","title":"\u901a\u7528"},{"location":"db/redis/install/#daemonize","text":"\u662f\u5426\u4e3a\u540e\u53f0\u8fdb\u7a0b\uff0c\u8bbe\u7f6e\u4e3ayes \u5b88\u62a4\u8fdb\u7a0b\uff0c\u540e\u53f0\u542f\u52a8","title":"daemonize"},{"location":"db/redis/install/#pidfile","text":"\u5b58\u653epid\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e0d\u540c\u7684pid\u6587\u4ef6 pidfile /var/run/redis_6379.pid","title":"pidfile"},{"location":"db/redis/install/#loglevel","text":"\u6307\u5b9a\u65e5\u5fd7\u8bb0\u5f55\u7ea7\u522b\uff0cRedis\u603b\u5171\u652f\u6301\u56db\u4e2a\u7ea7\u522b\uff1adebug\u3001verbose\u3001notice\u3001warning\uff0c\u9ed8\u8ba4\u4e3a notice \u56db\u4e2a\u7ea7\u522b\u6839\u636e\u4f7f\u7528\u9636\u6bb5\u6765\u9009\u62e9\uff0c\u751f\u4ea7\u73af\u5883\u9009\u62e9notice \u6216\u8005warning","title":"loglevel"},{"location":"db/redis/install/#logfile","text":"\u65e5\u5fd7\u6587\u4ef6\u540d\u79f0","title":"logfile"},{"location":"db/redis/install/#database","text":"\u8bbe\u5b9a\u5e93\u7684\u6570\u91cf \u9ed8\u8ba416\uff0c\u9ed8\u8ba4\u6570\u636e\u5e93\u4e3a0\uff0c\u53ef\u4ee5\u4f7f\u7528SELECT \u547d\u4ee4\u5728\u8fde\u63a5\u4e0a\u6307\u5b9a\u6570\u636e\u5e93id","title":"database"},{"location":"db/redis/install/#_14","text":"","title":"\u6743\u9650"},{"location":"db/redis/install/#_15","text":"requirepass 123456","title":"\u5bc6\u7801"},{"location":"db/redis/install/#limit","text":"","title":"limit"},{"location":"db/redis/install/#maxclients","text":"\u8bbe\u7f6eredis\u540c\u65f6\u53ef\u4ee5\u4e0e\u591a\u5c11\u4e2a\u5ba2\u6237\u7aef\u8fdb\u884c\u8fde\u63a5,\u9ed8\u8ba4\u4e3a10000\u4e2a \u5982\u679c\u8fbe\u5230\u4e86\u6b64\u9650\u5236\uff0credis\u5219\u4f1a\u62d2\u7edd\u65b0\u7684\u8fde\u63a5\u8bf7\u6c42\uff0c\u5e76\u4e14\u5411\u8fd9\u4e9b\u8fde\u63a5\u8bf7\u6c42\u65b9\u53d1\u51fa\u201cmax number of clients reached\u201d\u4ee5\u4f5c\u56de\u5e94\u3002","title":"maxclients"},{"location":"db/redis/install/#maxmemory","text":"\u6700\u5927\u5185\u5b58","title":"maxmemory"},{"location":"db/redis/install/#maxmemory-policy","text":"\u6dd8\u6c70\u89c4\u5219 volatile-lru\uff1a\u4f7f\u7528LRU\u7b97\u6cd5\u79fb\u9664key\uff0c\u53ea\u5bf9\u8bbe\u7f6e\u4e86\u8fc7\u671f\u65f6\u95f4\u7684\u952e\uff1b\uff08\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\uff09 allkeys-lru\uff1a\u5728\u6240\u6709\u96c6\u5408key\u4e2d\uff0c\u4f7f\u7528LRU\u7b97\u6cd5\u79fb\u9664key volatile-random\uff1a\u5728\u8fc7\u671f\u96c6\u5408\u4e2d\u79fb\u9664\u968f\u673a\u7684key\uff0c\u53ea\u5bf9\u8bbe\u7f6e\u4e86\u8fc7\u671f\u65f6\u95f4\u7684\u952e allkeys-random\uff1a\u5728\u6240\u6709\u96c6\u5408key\u4e2d\uff0c\u79fb\u9664\u968f\u673a\u7684key volatile-ttl\uff1a\u79fb\u9664\u90a3\u4e9bTTL\u503c\u6700\u5c0f\u7684key\uff0c\u5373\u90a3\u4e9b\u6700\u8fd1\u8981\u8fc7\u671f\u7684key noeviction\uff1a\u4e0d\u8fdb\u884c\u79fb\u9664\u3002\u9488\u5bf9\u5199\u64cd\u4f5c\uff0c\u53ea\u662f\u8fd4\u56de\u9519\u8bef\u4fe1\u606f","title":"maxmemory-policy"},{"location":"db/redis/install/#maxmemory-samples","text":"\u8bbe\u7f6e\u6837\u672c\u6570\u91cf\uff0cLRU\u7b97\u6cd5\u548c\u6700\u5c0fTTL\u7b97\u6cd5\u90fd\u5e76\u975e\u662f\u7cbe\u786e\u7684\u7b97\u6cd5\uff0c\u800c\u662f\u4f30\u7b97\u503c\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u8bbe\u7f6e\u6837\u672c\u7684\u5927\u5c0f\uff0credis\u9ed8\u8ba4\u4f1a\u68c0\u67e5\u8fd9\u4e48\u591a\u4e2akey\u5e76\u9009\u62e9\u5176\u4e2dLRU\u7684\u90a3\u4e2a\u3002 \u4e00\u822c\u8bbe\u7f6e3\u52307\u7684\u6570\u5b57\uff0c\u6570\u503c\u8d8a\u5c0f\u6837\u672c\u8d8a\u4e0d\u51c6\u786e\uff0c\u4f46\u6027\u80fd\u6d88\u8017\u8d8a\u5c0f\u3002 # 1k => 1000 bytes # 1kb => 1024 bytes # 1m => 1000000 bytes # 1mb => 1024*1024 bytes # 1g => 1000000000 bytes # 1gb => 1024*1024*1024 bytes","title":"maxmemory-samples"},{"location":"db/redis/overview/","text":"\u6982\u8ff0 \u9002\u7528 \u9891\u7e41\u7684\u8bfb\u5199 \u51cf\u5c11 mysql io \u4e0d\u9002\u7528 \u4e8b\u52a1\u652f\u6301 \u57fa\u4e8esql\u7684\u7ed3\u6784\u5316\u67e5\u8be2\u5b58\u50a8\uff0c\u5904\u7406\u590d\u6742\u5173\u7cfb \u4e0e\u5176\u4ed6\u4ea7\u54c1\u533a\u522b todo todo redis\u670916\u4e2a\u5e93\u9ed8\u8ba4\u4f7f\u7528\u7b2c\u4e00\u4e2a,\u5982\u4e0b\u547d\u4ee4\u5207\u6362\u5e93 select 1 \u57fa\u7840\u547d\u4ee4 key \u547d\u4ee4 \u89e3\u91ca keys * \u67e5\u770b\u5f53\u524d\u5e93\u6240\u6709key (\u5339\u914d\uff1akeys *1) exists key \u5224\u65ad\u67d0\u4e2akey\u662f\u5426\u5b58\u5728 type key \u67e5\u770b\u4f60\u7684key\u662f\u4ec0\u4e48\u7c7b\u578b del key \u5220\u9664\u6307\u5b9a\u7684key\u6570\u636e unlink key \u6839\u636evalue\u9009\u62e9\u975e\u963b\u585e\u5220\u9664\uff0c\u4ec5\u5c06keys\u4ecekeyspace\u5143\u6570\u636e\u4e2d\u5220\u9664\uff0c\u771f\u6b63\u7684\u5220\u9664\u4f1a\u5728\u540e\u7eed\u5f02\u6b65\u64cd\u4f5c\u3002 expire key 10 \u4e3a\u7ed9\u5b9a\u7684key\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\uff0c10s ttl key \u67e5\u770b\u8fd8\u6709\u591a\u5c11\u79d2\u8fc7\u671f\uff0c-1\u8868\u793a\u6c38\u4e0d\u8fc7\u671f\uff0c-2\u8868\u793a\u5df2\u8fc7\u671f select 2 select\u547d\u4ee4\u5207\u6362\u6570\u636e\u5e93 dbsize \u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93\u7684key\u7684\u6570\u91cf flushdb \u6e05\u7a7a\u5f53\u524d\u5e93 flushall \u901a\u6740\u5168\u90e8\u5e93 string \u6700\u5927\u652f\u6301512mb String\u7c7b\u578b\u662f\u4e8c\u8fdb\u5236\u5b89\u5168\u7684\u3002\u610f\u5473\u7740Redis\u7684string\u53ef\u4ee5\u5305\u542b\u4efb\u4f55\u6570\u636e\u3002\u6bd4\u5982jpg\u56fe\u7247\u6216\u8005\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u3002 k string v string,int \u547d\u4ee4 \u89e3\u91ca set k1 v1 get k1 \u67e5\u8be2\u5bf9\u5e94\u952e\u503c append k1 v1 \u5c06\u7ed9\u5b9a\u7684v1 \u8ffd\u52a0\u5230\u539f\u503c\u7684\u672b\u5c3e strlen k1 \u83b7\u5f97\u503c\u7684\u957f\u5ea6 setnx k1 v1 \u53ea\u6709\u5728 key \u4e0d\u5b58\u5728\u65f6 \u8bbe\u7f6e key \u7684\u503c incr k1 \u5c06 key \u4e2d\u50a8\u5b58\u7684\u6570\u5b57\u503c\u589e1,\u53ea\u80fd\u5bf9\u6570\u5b57\u503c\u64cd\u4f5c\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u65b0\u589e\u503c\u4e3a1 decr k1 \u5c06 key \u4e2d\u50a8\u5b58\u7684\u6570\u5b57\u503c\u51cf1;\u53ea\u80fd\u5bf9\u6570\u5b57\u503c\u64cd\u4f5c\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u65b0\u589e\u503c\u4e3a-1 incrby / decrby k2 <\u6b65\u957f> \u5c06 key \u4e2d\u50a8\u5b58\u7684\u6570\u5b57\u503c\u589e\u51cf\u3002\u81ea\u5b9a\u4e49\u6b65\u957f\u3002 mset k1 v1 v2 v3 .... \u540c\u65f6\u8bbe\u7f6e\u4e00\u4e2a\u6216\u591a\u4e2a key-value\u5bf9 mget k1 k2 k3 \u540c\u65f6\u83b7\u53d6\u4e00\u4e2a\u6216\u591a\u4e2a value msetnx k1 v1 k2 v2 k3 v3 .... \u540c\u65f6\u8bbe\u7f6e\u4e00\u4e2a\u6216\u591a\u4e2a key-value \u5bf9\uff0c\u5f53\u4e14\u4ec5\u5f53\u6240\u6709\u7ed9\u5b9a key \u90fd\u4e0d\u5b58\u5728\u3002 getrange k1 0 1 \u83b7\u5f97\u503c\u7684\u8303\u56f4\uff0c\u7c7b\u4f3cjava\u4e2d\u7684substring\uff0c \u524d\u5305\uff0c\u540e\u5305 setrange k1 0 1 \u7528 \u8986\u5199 \u6240\u50a8\u5b58\u7684\u5b57\u7b26\u4e32\u503c\uff0c\u4ece<\u8d77\u59cb\u4f4d\u7f6e>\u5f00\u59cb( \u7d22\u5f15\u4ece0 \u5f00\u59cb )\u3002 setnx k1 2 v1 \u8bbe\u7f6e\u952e\u503c\u7684\u540c\u65f6\uff0c\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\uff0c\u5355\u4f4d\u79d2\u3002 getset k1 v2 \u4ee5\u65b0\u6362\u65e7\uff0c\u8bbe\u7f6e\u4e86\u65b0\u503c\u540c\u65f6\u83b7\u5f97\u65e7\u503c set k1 v1 NX\uff1a\u5f53\u6570\u636e\u5e93\u4e2dkey\u4e0d\u5b58\u5728\u65f6\uff0c\u53ef\u4ee5\u5c06key-value\u6dfb\u52a0\u6570\u636e\u5e93 XX\uff1a\u5f53\u6570\u636e\u5e93\u4e2dkey\u5b58\u5728\u65f6\uff0c\u53ef\u4ee5\u5c06key-value\u6dfb\u52a0\u6570\u636e\u5e93\uff0c\u4e0eNX\u53c2\u6570\u4e92\u65a5 EX\uff1akey\u7684\u8d85\u65f6\u79d2\u6570 PX\uff1akey\u7684\u8d85\u65f6\u6beb\u79d2\u6570\uff0c\u4e0eEX\u4e92\u65a5 list v \u6709\u591a\u4e2a\u503c \u547d\u4ee4 \u89e3\u91ca lpush/rpush k1 v1 v2 v3 .... \u4ece\u5de6\u8fb9/\u53f3\u8fb9\u63d2\u5165\u4e00\u4e2a\u6216\u591a\u4e2a\u503c\u3002 lpop/rpop k1 \u4ece\u5de6\u8fb9/\u53f3\u8fb9\u5410\u51fa\u4e00\u4e2a\u503c\u3002\u503c\u5728\u952e\u5728\uff0c\u503c\u5149\u952e\u4ea1\u3002 rpoplpush k1 k2 \u4ecek1\u5217\u8868\u53f3\u8fb9\u5410\u51fa\u4e00\u4e2a\u503c\uff0c\u63d2\u5230k2\u5217\u8868\u5de6\u8fb9\u3002 lrange k1 0 2 \u6309\u7167\u7d22\u5f15\u4e0b\u6807\u83b7\u5f97\u5143\u7d20(\u4ece\u5de6\u5230\u53f3) lrange mylist 0 -1 0\u5de6\u8fb9\u7b2c\u4e00\u4e2a\uff0c-1\u53f3\u8fb9\u7b2c\u4e00\u4e2a\uff0c\uff080 -1\u8868\u793a\u83b7\u53d6\u6240\u6709\uff09 lindex k1 0 \u6309\u7167\u7d22\u5f15\u4e0b\u6807\u83b7\u5f97\u5143\u7d20(\u4ece\u5de6\u5230\u53f3) llen k1 \u83b7\u5f97\u5217\u8868\u957f\u5ea6 linsert k1 before v1 nv1 \u5728v1\u7684\u540e\u9762\u63d2\u5165nv1\u63d2\u5165\u503c lrem k1 n v1 \u4ece\u5de6\u8fb9\u5220\u9664n\u4e2av1(\u4ece\u5de6\u5230\u53f3) lset k1 index 122 \u5c06\u5217\u8868key\u4e0b\u6807\u4e3aindex\u7684\u503c\u66ff\u6362\u6210122 set \u76f8\u5bf9\u4e8elist \u8be5\u96c6\u5408\u4e0d\u91cd\u590d \u547d\u4ee4 \u89e3\u91ca sadd k1 v1 v2 v3 v4... \u5c06\u4e00\u4e2a\u6216\u591a\u4e2a member \u5143\u7d20\u52a0\u5165\u5230\u96c6\u5408 key \u4e2d\uff0c\u5df2\u7ecf\u5b58\u5728\u7684 member \u5143\u7d20\u5c06\u88ab\u5ffd\u7565 smembers k1 \u53d6\u51fa\u8be5\u96c6\u5408\u7684\u6240\u6709\u503c\u3002 sismember k1 v1 \u5224\u65ad\u96c6\u5408k1\u662f\u5426\u4e3a\u542b\u6709\u8be5v1\u503c\uff0c\u67091\uff0c\u6ca1\u67090 scard k1 \u8fd4\u56de\u8be5\u96c6\u5408\u7684\u5143\u7d20\u4e2a\u6570\u3002 srem k1 v1 v2 .... \u5220\u9664\u96c6\u5408\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20\u3002 spop k1 \u968f\u673a\u4ece\u8be5\u96c6\u5408\u4e2d\u5410\u51fa\u4e00\u4e2a\u503c\u3002 srandmember k1 n \u968f\u673a\u4ece\u8be5\u96c6\u5408\u4e2d\u53d6\u51fan\u4e2a\u503c\u3002\u4e0d\u4f1a\u4ece\u96c6\u5408\u4e2d\u5220\u9664 \u3002 smove sk1 dk1 v1 \u628a\u96c6\u5408\u4e2d\u4e00\u4e2a\u503c\u4ece\u4e00\u4e2a\u96c6\u5408\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u96c6\u5408sk1\u4e2d\u7684v1\u79fb\u52a8\u5230dk1 sinter k1 k2 \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408\u7684\u4ea4\u96c6\u5143\u7d20\u3002 sunion k1 k2 \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408\u7684\u5e76\u96c6\u5143\u7d20\u3002 sdiff k1 k2 \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408\u7684 \u5dee\u96c6 \u5143\u7d20(key1\u4e2d\u7684\uff0c\u4e0d\u5305\u542bkey2\u4e2d\u7684) hash v f v f v \u547d\u4ee4 \u89e3\u91ca hset k1 f1 v1 \u7ed9k1\u96c6\u5408\u4e2d\u7684 f1\u952e\u8d4b\u503cv1 hget k1 f1 \u4ecek1\u96c6\u5408f1\u53d6\u51fa value hmset k1 f1 v1 f2 v2 f3 v3.... \u6279\u91cf\u8bbe\u7f6ehash\u7684\u503c hexists k1 f1 \u67e5\u770b\u54c8\u5e0c\u8868 key \u4e2d\uff0c\u7ed9\u5b9a\u57df field \u662f\u5426\u5b58\u5728\u3002 hkeys k1 \u5217\u51fa\u8be5hash\u96c6\u5408\u7684\u6240\u6709field hvals k1 \u5217\u51fa\u8be5hash\u96c6\u5408\u7684\u6240\u6709value hincrby k1 f1 \u4e3a\u54c8\u5e0c\u8868 key \u4e2d\u7684\u57df field \u7684\u503c\u52a0\u4e0a\u589e\u91cf 1 -1 hsetnx k1 f1 v1 \u5c06\u54c8\u5e0c\u8868 key \u4e2d\u7684\u57df field \u7684\u503c\u8bbe\u7f6e\u4e3a value \uff0c\u5f53\u4e14\u4ec5\u5f53\u57df field \u4e0d\u5b58\u5728 . zset \u6bcf\u4e2av\u90fd\u6709\u5206\u6570 \u547d\u4ee4 \u89e3\u91ca zadd k1 100 v1 200 v2 20 v3 ..... \u5c06\u4e00\u4e2a\u6216\u591a\u4e2a member \u5143\u7d20\u53ca\u5176 score \u503c\u52a0\u5165\u5230\u6709\u5e8f\u96c6 key \u5f53\u4e2d\u3002 zrange k1 0 100 [WITHSCORES] \u8fd4\u56de\u6709\u5e8f\u96c6 key \u4e2d\uff0c\u4e0b\u6807\u5728 \u4e4b\u95f4\u7684\u5143\u7d20\uff1b\u5e26WITHSCORES\uff0c\u53ef\u4ee5\u8ba9\u5206\u6570\u4e00\u8d77\u548c\u503c\u8fd4\u56de\u5230\u7ed3\u679c\u96c6\u3002 zrangebyscore key minmax [withscores] [limit offset count] zrangebyscore z1 0 100 withscores limit 0 100 \u8fd4\u56de\u6709\u5e8f\u96c6 key \u4e2d\uff0c\u6240\u6709 score \u503c\u4ecb\u4e8e min \u548c max \u4e4b\u95f4(\u5305\u62ec\u7b49\u4e8e min \u6216 max )\u7684\u6210\u5458\u3002\u6709\u5e8f\u96c6\u6210\u5458\u6309 score \u503c\u9012\u589e(\u4ece\u5c0f\u5230\u5927)\u6b21\u5e8f\u6392\u5217 zrevrangebyscore key maxmin [withscores] [limit offset count] \u540c\u4e0a\uff0c\u6539\u4e3a\u4ece\u5927\u5230\u5c0f\u6392\u5217\u3002 zincrby k1 \u4e3a\u5143\u7d20\u7684score\u52a0\u4e0a\u589e\u91cf zrem k1 v1 \u5220\u9664\u8be5\u96c6\u5408\u4e0b\uff0c\u6307\u5b9a\u503c\u7684\u5143\u7d20 zcount k1 \u7edf\u8ba1\u8be5\u96c6\u5408\uff0c\u5206\u6570\u533a\u95f4\u5185\u7684\u5143\u7d20\u4e2a\u6570 zrank k1 v1 \u8fd4\u56de\u8be5\u503c\u5728\u96c6\u5408\u4e2d\u7684\u6392\u540d\uff0c\u4ece0\u5f00\u59cb\u3002 bit 0 1 2 3 4 5 .... setbit b1 1 1 getbit b1 1 bitcount b1 1 2 BITE bitcount b1 1 2 BIT 127.0.0.1:6379> pfadd h1 1 2 3 1 (integer) 1 127.0.0.1:6379> pfcount h1 (integer) 3 mac\uff1a\u5173\u95edvpn xsd fetch multi exec \u4e50\u89c2\u9501\uff1a\u5e93\u5b58\u9057\u7559\u95ee\u9898 \u56e0\u4e3a\u7248\u672c\u53f7\u4e0d\u4e00\u81f4\u6240\u4ee5\u4e0d\u80fd\u6539 \u5f00\u542faof \u4fee\u590daof\u6587\u4ef6 redis-check-aof --fix appendonly.aof setup base source info replication redis-cli -p 6379 slaveof 127.0.0.1 6379 replica-priority 100 \u4ee3\u7406\uff1a\u4ee3\u7406\u4f5c\u4e3a\u5165\u53e3 \u65e0\u4e2d\u5fc3\u5316\uff1a\u4efb\u4e00\u4e00\u53f0\u670d\u52a1\u5668\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u5165\u53e3 i [OK] All 16384 slots covered. \u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u5747\u53ef\u4ee5 redis-cli -c -p 6379 cluster nodes","title":"Overview"},{"location":"db/redis/overview/#_1","text":"","title":"\u6982\u8ff0"},{"location":"db/redis/overview/#_2","text":"\u9891\u7e41\u7684\u8bfb\u5199 \u51cf\u5c11 mysql io","title":"\u9002\u7528"},{"location":"db/redis/overview/#_3","text":"\u4e8b\u52a1\u652f\u6301 \u57fa\u4e8esql\u7684\u7ed3\u6784\u5316\u67e5\u8be2\u5b58\u50a8\uff0c\u5904\u7406\u590d\u6742\u5173\u7cfb","title":"\u4e0d\u9002\u7528"},{"location":"db/redis/overview/#todo","text":"todo redis\u670916\u4e2a\u5e93\u9ed8\u8ba4\u4f7f\u7528\u7b2c\u4e00\u4e2a,\u5982\u4e0b\u547d\u4ee4\u5207\u6362\u5e93 select 1","title":"\u4e0e\u5176\u4ed6\u4ea7\u54c1\u533a\u522b todo"},{"location":"db/redis/overview/#_4","text":"","title":"\u57fa\u7840\u547d\u4ee4"},{"location":"db/redis/overview/#key","text":"\u547d\u4ee4 \u89e3\u91ca keys * \u67e5\u770b\u5f53\u524d\u5e93\u6240\u6709key (\u5339\u914d\uff1akeys *1) exists key \u5224\u65ad\u67d0\u4e2akey\u662f\u5426\u5b58\u5728 type key \u67e5\u770b\u4f60\u7684key\u662f\u4ec0\u4e48\u7c7b\u578b del key \u5220\u9664\u6307\u5b9a\u7684key\u6570\u636e unlink key \u6839\u636evalue\u9009\u62e9\u975e\u963b\u585e\u5220\u9664\uff0c\u4ec5\u5c06keys\u4ecekeyspace\u5143\u6570\u636e\u4e2d\u5220\u9664\uff0c\u771f\u6b63\u7684\u5220\u9664\u4f1a\u5728\u540e\u7eed\u5f02\u6b65\u64cd\u4f5c\u3002 expire key 10 \u4e3a\u7ed9\u5b9a\u7684key\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\uff0c10s ttl key \u67e5\u770b\u8fd8\u6709\u591a\u5c11\u79d2\u8fc7\u671f\uff0c-1\u8868\u793a\u6c38\u4e0d\u8fc7\u671f\uff0c-2\u8868\u793a\u5df2\u8fc7\u671f select 2 select\u547d\u4ee4\u5207\u6362\u6570\u636e\u5e93 dbsize \u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93\u7684key\u7684\u6570\u91cf flushdb \u6e05\u7a7a\u5f53\u524d\u5e93 flushall \u901a\u6740\u5168\u90e8\u5e93","title":"key"},{"location":"db/redis/overview/#string","text":"\u6700\u5927\u652f\u6301512mb String\u7c7b\u578b\u662f\u4e8c\u8fdb\u5236\u5b89\u5168\u7684\u3002\u610f\u5473\u7740Redis\u7684string\u53ef\u4ee5\u5305\u542b\u4efb\u4f55\u6570\u636e\u3002\u6bd4\u5982jpg\u56fe\u7247\u6216\u8005\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u3002 k string v string,int \u547d\u4ee4 \u89e3\u91ca set k1 v1 get k1 \u67e5\u8be2\u5bf9\u5e94\u952e\u503c append k1 v1 \u5c06\u7ed9\u5b9a\u7684v1 \u8ffd\u52a0\u5230\u539f\u503c\u7684\u672b\u5c3e strlen k1 \u83b7\u5f97\u503c\u7684\u957f\u5ea6 setnx k1 v1 \u53ea\u6709\u5728 key \u4e0d\u5b58\u5728\u65f6 \u8bbe\u7f6e key \u7684\u503c incr k1 \u5c06 key \u4e2d\u50a8\u5b58\u7684\u6570\u5b57\u503c\u589e1,\u53ea\u80fd\u5bf9\u6570\u5b57\u503c\u64cd\u4f5c\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u65b0\u589e\u503c\u4e3a1 decr k1 \u5c06 key \u4e2d\u50a8\u5b58\u7684\u6570\u5b57\u503c\u51cf1;\u53ea\u80fd\u5bf9\u6570\u5b57\u503c\u64cd\u4f5c\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u65b0\u589e\u503c\u4e3a-1 incrby / decrby k2 <\u6b65\u957f> \u5c06 key \u4e2d\u50a8\u5b58\u7684\u6570\u5b57\u503c\u589e\u51cf\u3002\u81ea\u5b9a\u4e49\u6b65\u957f\u3002 mset k1 v1 v2 v3 .... \u540c\u65f6\u8bbe\u7f6e\u4e00\u4e2a\u6216\u591a\u4e2a key-value\u5bf9 mget k1 k2 k3 \u540c\u65f6\u83b7\u53d6\u4e00\u4e2a\u6216\u591a\u4e2a value msetnx k1 v1 k2 v2 k3 v3 .... \u540c\u65f6\u8bbe\u7f6e\u4e00\u4e2a\u6216\u591a\u4e2a key-value \u5bf9\uff0c\u5f53\u4e14\u4ec5\u5f53\u6240\u6709\u7ed9\u5b9a key \u90fd\u4e0d\u5b58\u5728\u3002 getrange k1 0 1 \u83b7\u5f97\u503c\u7684\u8303\u56f4\uff0c\u7c7b\u4f3cjava\u4e2d\u7684substring\uff0c \u524d\u5305\uff0c\u540e\u5305 setrange k1 0 1 \u7528 \u8986\u5199 \u6240\u50a8\u5b58\u7684\u5b57\u7b26\u4e32\u503c\uff0c\u4ece<\u8d77\u59cb\u4f4d\u7f6e>\u5f00\u59cb( \u7d22\u5f15\u4ece0 \u5f00\u59cb )\u3002 setnx k1 2 v1 \u8bbe\u7f6e\u952e\u503c\u7684\u540c\u65f6\uff0c\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\uff0c\u5355\u4f4d\u79d2\u3002 getset k1 v2 \u4ee5\u65b0\u6362\u65e7\uff0c\u8bbe\u7f6e\u4e86\u65b0\u503c\u540c\u65f6\u83b7\u5f97\u65e7\u503c set k1 v1 NX\uff1a\u5f53\u6570\u636e\u5e93\u4e2dkey\u4e0d\u5b58\u5728\u65f6\uff0c\u53ef\u4ee5\u5c06key-value\u6dfb\u52a0\u6570\u636e\u5e93 XX\uff1a\u5f53\u6570\u636e\u5e93\u4e2dkey\u5b58\u5728\u65f6\uff0c\u53ef\u4ee5\u5c06key-value\u6dfb\u52a0\u6570\u636e\u5e93\uff0c\u4e0eNX\u53c2\u6570\u4e92\u65a5 EX\uff1akey\u7684\u8d85\u65f6\u79d2\u6570 PX\uff1akey\u7684\u8d85\u65f6\u6beb\u79d2\u6570\uff0c\u4e0eEX\u4e92\u65a5","title":"string"},{"location":"db/redis/overview/#list","text":"v \u6709\u591a\u4e2a\u503c \u547d\u4ee4 \u89e3\u91ca lpush/rpush k1 v1 v2 v3 .... \u4ece\u5de6\u8fb9/\u53f3\u8fb9\u63d2\u5165\u4e00\u4e2a\u6216\u591a\u4e2a\u503c\u3002 lpop/rpop k1 \u4ece\u5de6\u8fb9/\u53f3\u8fb9\u5410\u51fa\u4e00\u4e2a\u503c\u3002\u503c\u5728\u952e\u5728\uff0c\u503c\u5149\u952e\u4ea1\u3002 rpoplpush k1 k2 \u4ecek1\u5217\u8868\u53f3\u8fb9\u5410\u51fa\u4e00\u4e2a\u503c\uff0c\u63d2\u5230k2\u5217\u8868\u5de6\u8fb9\u3002 lrange k1 0 2 \u6309\u7167\u7d22\u5f15\u4e0b\u6807\u83b7\u5f97\u5143\u7d20(\u4ece\u5de6\u5230\u53f3) lrange mylist 0 -1 0\u5de6\u8fb9\u7b2c\u4e00\u4e2a\uff0c-1\u53f3\u8fb9\u7b2c\u4e00\u4e2a\uff0c\uff080 -1\u8868\u793a\u83b7\u53d6\u6240\u6709\uff09 lindex k1 0 \u6309\u7167\u7d22\u5f15\u4e0b\u6807\u83b7\u5f97\u5143\u7d20(\u4ece\u5de6\u5230\u53f3) llen k1 \u83b7\u5f97\u5217\u8868\u957f\u5ea6 linsert k1 before v1 nv1 \u5728v1\u7684\u540e\u9762\u63d2\u5165nv1\u63d2\u5165\u503c lrem k1 n v1 \u4ece\u5de6\u8fb9\u5220\u9664n\u4e2av1(\u4ece\u5de6\u5230\u53f3) lset k1 index 122 \u5c06\u5217\u8868key\u4e0b\u6807\u4e3aindex\u7684\u503c\u66ff\u6362\u6210122","title":"list"},{"location":"db/redis/overview/#set","text":"\u76f8\u5bf9\u4e8elist \u8be5\u96c6\u5408\u4e0d\u91cd\u590d \u547d\u4ee4 \u89e3\u91ca sadd k1 v1 v2 v3 v4... \u5c06\u4e00\u4e2a\u6216\u591a\u4e2a member \u5143\u7d20\u52a0\u5165\u5230\u96c6\u5408 key \u4e2d\uff0c\u5df2\u7ecf\u5b58\u5728\u7684 member \u5143\u7d20\u5c06\u88ab\u5ffd\u7565 smembers k1 \u53d6\u51fa\u8be5\u96c6\u5408\u7684\u6240\u6709\u503c\u3002 sismember k1 v1 \u5224\u65ad\u96c6\u5408k1\u662f\u5426\u4e3a\u542b\u6709\u8be5v1\u503c\uff0c\u67091\uff0c\u6ca1\u67090 scard k1 \u8fd4\u56de\u8be5\u96c6\u5408\u7684\u5143\u7d20\u4e2a\u6570\u3002 srem k1 v1 v2 .... \u5220\u9664\u96c6\u5408\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20\u3002 spop k1 \u968f\u673a\u4ece\u8be5\u96c6\u5408\u4e2d\u5410\u51fa\u4e00\u4e2a\u503c\u3002 srandmember k1 n \u968f\u673a\u4ece\u8be5\u96c6\u5408\u4e2d\u53d6\u51fan\u4e2a\u503c\u3002\u4e0d\u4f1a\u4ece\u96c6\u5408\u4e2d\u5220\u9664 \u3002 smove sk1 dk1 v1 \u628a\u96c6\u5408\u4e2d\u4e00\u4e2a\u503c\u4ece\u4e00\u4e2a\u96c6\u5408\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u96c6\u5408sk1\u4e2d\u7684v1\u79fb\u52a8\u5230dk1 sinter k1 k2 \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408\u7684\u4ea4\u96c6\u5143\u7d20\u3002 sunion k1 k2 \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408\u7684\u5e76\u96c6\u5143\u7d20\u3002 sdiff k1 k2 \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408\u7684 \u5dee\u96c6 \u5143\u7d20(key1\u4e2d\u7684\uff0c\u4e0d\u5305\u542bkey2\u4e2d\u7684)","title":"set"},{"location":"db/redis/overview/#hash","text":"v f v f v \u547d\u4ee4 \u89e3\u91ca hset k1 f1 v1 \u7ed9k1\u96c6\u5408\u4e2d\u7684 f1\u952e\u8d4b\u503cv1 hget k1 f1 \u4ecek1\u96c6\u5408f1\u53d6\u51fa value hmset k1 f1 v1 f2 v2 f3 v3.... \u6279\u91cf\u8bbe\u7f6ehash\u7684\u503c hexists k1 f1 \u67e5\u770b\u54c8\u5e0c\u8868 key \u4e2d\uff0c\u7ed9\u5b9a\u57df field \u662f\u5426\u5b58\u5728\u3002 hkeys k1 \u5217\u51fa\u8be5hash\u96c6\u5408\u7684\u6240\u6709field hvals k1 \u5217\u51fa\u8be5hash\u96c6\u5408\u7684\u6240\u6709value hincrby k1 f1 \u4e3a\u54c8\u5e0c\u8868 key \u4e2d\u7684\u57df field \u7684\u503c\u52a0\u4e0a\u589e\u91cf 1 -1 hsetnx k1 f1 v1 \u5c06\u54c8\u5e0c\u8868 key \u4e2d\u7684\u57df field \u7684\u503c\u8bbe\u7f6e\u4e3a value \uff0c\u5f53\u4e14\u4ec5\u5f53\u57df field \u4e0d\u5b58\u5728 .","title":"hash"},{"location":"db/redis/overview/#zset","text":"\u6bcf\u4e2av\u90fd\u6709\u5206\u6570 \u547d\u4ee4 \u89e3\u91ca zadd k1 100 v1 200 v2 20 v3 ..... \u5c06\u4e00\u4e2a\u6216\u591a\u4e2a member \u5143\u7d20\u53ca\u5176 score \u503c\u52a0\u5165\u5230\u6709\u5e8f\u96c6 key \u5f53\u4e2d\u3002 zrange k1 0 100 [WITHSCORES] \u8fd4\u56de\u6709\u5e8f\u96c6 key \u4e2d\uff0c\u4e0b\u6807\u5728 \u4e4b\u95f4\u7684\u5143\u7d20\uff1b\u5e26WITHSCORES\uff0c\u53ef\u4ee5\u8ba9\u5206\u6570\u4e00\u8d77\u548c\u503c\u8fd4\u56de\u5230\u7ed3\u679c\u96c6\u3002 zrangebyscore key minmax [withscores] [limit offset count] zrangebyscore z1 0 100 withscores limit 0 100 \u8fd4\u56de\u6709\u5e8f\u96c6 key \u4e2d\uff0c\u6240\u6709 score \u503c\u4ecb\u4e8e min \u548c max \u4e4b\u95f4(\u5305\u62ec\u7b49\u4e8e min \u6216 max )\u7684\u6210\u5458\u3002\u6709\u5e8f\u96c6\u6210\u5458\u6309 score \u503c\u9012\u589e(\u4ece\u5c0f\u5230\u5927)\u6b21\u5e8f\u6392\u5217 zrevrangebyscore key maxmin [withscores] [limit offset count] \u540c\u4e0a\uff0c\u6539\u4e3a\u4ece\u5927\u5230\u5c0f\u6392\u5217\u3002 zincrby k1 \u4e3a\u5143\u7d20\u7684score\u52a0\u4e0a\u589e\u91cf zrem k1 v1 \u5220\u9664\u8be5\u96c6\u5408\u4e0b\uff0c\u6307\u5b9a\u503c\u7684\u5143\u7d20 zcount k1 \u7edf\u8ba1\u8be5\u96c6\u5408\uff0c\u5206\u6570\u533a\u95f4\u5185\u7684\u5143\u7d20\u4e2a\u6570 zrank k1 v1 \u8fd4\u56de\u8be5\u503c\u5728\u96c6\u5408\u4e2d\u7684\u6392\u540d\uff0c\u4ece0\u5f00\u59cb\u3002 bit 0 1 2 3 4 5 .... setbit b1 1 1 getbit b1 1 bitcount b1 1 2 BITE bitcount b1 1 2 BIT 127.0.0.1:6379> pfadd h1 1 2 3 1 (integer) 1 127.0.0.1:6379> pfcount h1 (integer) 3 mac\uff1a\u5173\u95edvpn xsd fetch multi exec \u4e50\u89c2\u9501\uff1a\u5e93\u5b58\u9057\u7559\u95ee\u9898 \u56e0\u4e3a\u7248\u672c\u53f7\u4e0d\u4e00\u81f4\u6240\u4ee5\u4e0d\u80fd\u6539 \u5f00\u542faof \u4fee\u590daof\u6587\u4ef6 redis-check-aof --fix appendonly.aof setup base source info replication redis-cli -p 6379 slaveof 127.0.0.1 6379 replica-priority 100 \u4ee3\u7406\uff1a\u4ee3\u7406\u4f5c\u4e3a\u5165\u53e3 \u65e0\u4e2d\u5fc3\u5316\uff1a\u4efb\u4e00\u4e00\u53f0\u670d\u52a1\u5668\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u5165\u53e3 i [OK] All 16384 slots covered. \u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u5747\u53ef\u4ee5 redis-cli -c -p 6379 cluster nodes","title":"zset"},{"location":"db/redis/source/","text":"source","title":"Source"},{"location":"en/w/","text":"extra \u989d\u5916\u7684 exquisite\uff1a\u7cbe\u81f4\u7684 \u4f18\u7f8e\u7684 exact\uff1a\u786e\u5207\u7684 flowchart TD A[a1] -->|cc| B(Go shopping) B --> C{c} C -->|cd| D[d] C -->|ce| E[e] C -->|cf| F[Car] graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!];","title":"w"},{"location":"mq/kafka/api/","text":"producer java \u57fa\u7840 Kafka \u7684 Producer \u53d1\u9001\u6d88\u606f\u91c7\u7528\u7684\u662f\u5f02\u6b65\u53d1\u9001\u7684\u65b9\u5f0f\u3002 \u5728\u6d88\u606f\u53d1\u9001\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6d89\u53ca\u5230\u4e86 \u4e24\u4e2a\u7ebf\u7a0b\u2014\u2014main \u7ebf\u7a0b\u548c Sender \u7ebf\u7a0b\uff0c\u4ee5\u53ca\u4e00\u4e2a\u7ebf\u7a0b\u5171\u4eab\u53d8\u91cf\u2014\u2014RecordAccumulator\u3002 main \u7ebf\u7a0b\u5c06\u6d88\u606f\u53d1\u9001\u7ed9 RecordAccumulator\uff0cSender \u7ebf\u7a0b\u4e0d\u65ad\u4ece RecordAccumulator \u4e2d\u62c9\u53d6 \u6d88\u606f\u53d1\u9001\u5230 Kafka broker\u3002 batch.size\uff1a\u53ea\u6709\u6570\u636e\u79ef\u7d2f\u5230 batch.size \u4e4b\u540e\uff0csender \u624d\u4f1a\u53d1\u9001\u6570\u636e\u3002 linger.ms\uff1a\u5982\u679c\u6570\u636e\u8fdf\u8fdf\u672a\u8fbe\u5230 batch.size\uff0csender \u7b49\u5f85 linger.time \u4e4b\u540e\u5c31\u4f1a\u53d1\u9001\u6570\u636e\u3002 \u5e26\u56de\u8c03\u51fd\u6570 exception == null \u6d88\u606f\u53d1\u9001\u6210\u529f \u540c\u6b65 \u4e00\u6761\u6d88\u606f\u53d1\u9001\u4e4b\u540e\uff0c\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\uff0c\u76f4\u81f3\u8fd4\u56de ack\u3002 future.Get() consumer java \u57fa\u7840 KafkaConsumer\uff1a\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u6d88\u8d39\u8005\u5bf9\u8c61\uff0c\u7528\u6765\u6d88\u8d39\u6570\u636e ConsumerConfig\uff1a\u83b7\u53d6\u6240\u9700\u7684\u4e00\u7cfb\u5217\u914d\u7f6e\u53c2\u6570 ConsuemrRecord\uff1a\u6bcf\u6761\u6570\u636e\u90fd\u8981\u5c01\u88c5\u6210\u4e00\u4e2a ConsumerRecord \u5bf9\u8c61 \u4e3a\u4e86\u4f7f\u6211\u4eec\u80fd\u591f\u4e13\u6ce8\u4e8e\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\uff0cKafka \u63d0\u4f9b\u4e86\u81ea\u52a8\u63d0\u4ea4 offset \u7684\u529f\u80fd\u3002 enable.auto.commit\uff1a\u662f\u5426\u5f00\u542f\u81ea\u52a8\u63d0\u4ea4 offset \u529f\u80fd auto.commit.interval.ms\uff1a\u81ea\u52a8\u63d0\u4ea4 offset \u7684\u65f6\u95f4\u95f4\u9694 <dependency> <groupId>org.apache.kafka</groupId> <artifactId>kafka-clients</artifactId> <version>0.11.0.0</version> </dependency> \u624b\u52a8\u63d0\u4ea4 commitSync\uff08\u540c\u6b65\u63d0\u4ea4\uff09\u548c commitAsync\uff08\u5f02\u6b65\u63d0\u4ea4\uff09 \u4e24\u8005\u7684\u76f8\u540c\u70b9\u662f\uff0c\u90fd\u4f1a\u5c06\u672c\u6b21 poll \u7684\u4e00\u6279\u6570\u636e\u6700\u9ad8\u7684\u504f\u79fb\u91cf\u63d0\u4ea4\uff1b\u4e0d\u540c\u70b9\u662f\uff0c commitSync \u963b\u585e\u5f53\u524d\u7ebf\u7a0b\uff0c\u4e00\u76f4\u5230\u63d0\u4ea4\u6210\u529f\uff0c\u5e76\u4e14\u4f1a\u81ea\u52a8\u5931\u8d25\u91cd\u8bd5\uff08\u7531\u4e0d\u53ef\u63a7\u56e0\u7d20\u5bfc\u81f4\uff0c \u4e5f\u4f1a\u51fa\u73b0\u63d0\u4ea4\u5931\u8d25\uff09\uff1b\u800c commitAsync \u5219\u6ca1\u6709\u5931\u8d25\u91cd\u8bd5\u673a\u5236\uff0c\u6545\u6709\u53ef\u80fd\u63d0\u4ea4\u5931\u8d25\u3002 \u95ee\u9898 \u65e0\u8bba\u662f\u540c\u6b65\u63d0\u4ea4\u8fd8\u662f\u5f02\u6b65\u63d0\u4ea4 offset\uff0c\u90fd\u6709\u53ef\u80fd\u4f1a\u9020\u6210\u6570\u636e\u7684\u6f0f\u6d88\u8d39\u6216\u8005\u91cd\u590d\u6d88\u8d39\u3002\u5148\u63d0\u4ea4 offset \u540e\u6d88\u8d39\uff0c\u6709\u53ef\u80fd\u9020\u6210\u6570\u636e\u7684\u6f0f\u6d88\u8d39\uff1b\u800c\u5148\u6d88\u8d39\u540e\u63d0\u4ea4 offset\uff0c\u6709\u53ef\u80fd\u4f1a\u9020\u6210\u6570\u636e \u7684\u91cd\u590d\u6d88\u8d39\u3002","title":"api"},{"location":"mq/kafka/api/#producer","text":"","title":"producer"},{"location":"mq/kafka/api/#java","text":"","title":"java"},{"location":"mq/kafka/api/#_1","text":"Kafka \u7684 Producer \u53d1\u9001\u6d88\u606f\u91c7\u7528\u7684\u662f\u5f02\u6b65\u53d1\u9001\u7684\u65b9\u5f0f\u3002 \u5728\u6d88\u606f\u53d1\u9001\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6d89\u53ca\u5230\u4e86 \u4e24\u4e2a\u7ebf\u7a0b\u2014\u2014main \u7ebf\u7a0b\u548c Sender \u7ebf\u7a0b\uff0c\u4ee5\u53ca\u4e00\u4e2a\u7ebf\u7a0b\u5171\u4eab\u53d8\u91cf\u2014\u2014RecordAccumulator\u3002 main \u7ebf\u7a0b\u5c06\u6d88\u606f\u53d1\u9001\u7ed9 RecordAccumulator\uff0cSender \u7ebf\u7a0b\u4e0d\u65ad\u4ece RecordAccumulator \u4e2d\u62c9\u53d6 \u6d88\u606f\u53d1\u9001\u5230 Kafka broker\u3002 batch.size\uff1a\u53ea\u6709\u6570\u636e\u79ef\u7d2f\u5230 batch.size \u4e4b\u540e\uff0csender \u624d\u4f1a\u53d1\u9001\u6570\u636e\u3002 linger.ms\uff1a\u5982\u679c\u6570\u636e\u8fdf\u8fdf\u672a\u8fbe\u5230 batch.size\uff0csender \u7b49\u5f85 linger.time \u4e4b\u540e\u5c31\u4f1a\u53d1\u9001\u6570\u636e\u3002","title":"\u57fa\u7840"},{"location":"mq/kafka/api/#_2","text":"exception == null \u6d88\u606f\u53d1\u9001\u6210\u529f","title":"\u5e26\u56de\u8c03\u51fd\u6570"},{"location":"mq/kafka/api/#_3","text":"\u4e00\u6761\u6d88\u606f\u53d1\u9001\u4e4b\u540e\uff0c\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\uff0c\u76f4\u81f3\u8fd4\u56de ack\u3002 future.Get()","title":"\u540c\u6b65"},{"location":"mq/kafka/api/#consumer","text":"","title":"consumer"},{"location":"mq/kafka/api/#java_1","text":"","title":"java"},{"location":"mq/kafka/api/#_4","text":"KafkaConsumer\uff1a\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u6d88\u8d39\u8005\u5bf9\u8c61\uff0c\u7528\u6765\u6d88\u8d39\u6570\u636e ConsumerConfig\uff1a\u83b7\u53d6\u6240\u9700\u7684\u4e00\u7cfb\u5217\u914d\u7f6e\u53c2\u6570 ConsuemrRecord\uff1a\u6bcf\u6761\u6570\u636e\u90fd\u8981\u5c01\u88c5\u6210\u4e00\u4e2a ConsumerRecord \u5bf9\u8c61 \u4e3a\u4e86\u4f7f\u6211\u4eec\u80fd\u591f\u4e13\u6ce8\u4e8e\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\uff0cKafka \u63d0\u4f9b\u4e86\u81ea\u52a8\u63d0\u4ea4 offset \u7684\u529f\u80fd\u3002 enable.auto.commit\uff1a\u662f\u5426\u5f00\u542f\u81ea\u52a8\u63d0\u4ea4 offset \u529f\u80fd auto.commit.interval.ms\uff1a\u81ea\u52a8\u63d0\u4ea4 offset \u7684\u65f6\u95f4\u95f4\u9694 <dependency> <groupId>org.apache.kafka</groupId> <artifactId>kafka-clients</artifactId> <version>0.11.0.0</version> </dependency>","title":"\u57fa\u7840"},{"location":"mq/kafka/api/#_5","text":"commitSync\uff08\u540c\u6b65\u63d0\u4ea4\uff09\u548c commitAsync\uff08\u5f02\u6b65\u63d0\u4ea4\uff09 \u4e24\u8005\u7684\u76f8\u540c\u70b9\u662f\uff0c\u90fd\u4f1a\u5c06\u672c\u6b21 poll \u7684\u4e00\u6279\u6570\u636e\u6700\u9ad8\u7684\u504f\u79fb\u91cf\u63d0\u4ea4\uff1b\u4e0d\u540c\u70b9\u662f\uff0c commitSync \u963b\u585e\u5f53\u524d\u7ebf\u7a0b\uff0c\u4e00\u76f4\u5230\u63d0\u4ea4\u6210\u529f\uff0c\u5e76\u4e14\u4f1a\u81ea\u52a8\u5931\u8d25\u91cd\u8bd5\uff08\u7531\u4e0d\u53ef\u63a7\u56e0\u7d20\u5bfc\u81f4\uff0c \u4e5f\u4f1a\u51fa\u73b0\u63d0\u4ea4\u5931\u8d25\uff09\uff1b\u800c commitAsync \u5219\u6ca1\u6709\u5931\u8d25\u91cd\u8bd5\u673a\u5236\uff0c\u6545\u6709\u53ef\u80fd\u63d0\u4ea4\u5931\u8d25\u3002","title":"\u624b\u52a8\u63d0\u4ea4"},{"location":"mq/kafka/api/#_6","text":"\u65e0\u8bba\u662f\u540c\u6b65\u63d0\u4ea4\u8fd8\u662f\u5f02\u6b65\u63d0\u4ea4 offset\uff0c\u90fd\u6709\u53ef\u80fd\u4f1a\u9020\u6210\u6570\u636e\u7684\u6f0f\u6d88\u8d39\u6216\u8005\u91cd\u590d\u6d88\u8d39\u3002\u5148\u63d0\u4ea4 offset \u540e\u6d88\u8d39\uff0c\u6709\u53ef\u80fd\u9020\u6210\u6570\u636e\u7684\u6f0f\u6d88\u8d39\uff1b\u800c\u5148\u6d88\u8d39\u540e\u63d0\u4ea4 offset\uff0c\u6709\u53ef\u80fd\u4f1a\u9020\u6210\u6570\u636e \u7684\u91cd\u590d\u6d88\u8d39\u3002","title":"\u95ee\u9898"},{"location":"mq/kafka/client/","text":"\u7ec8\u7aef\u64cd\u4f5ckafka \u5982\u679c\u542f\u52a8\u5931\u8d25 \u67e5\u770blogs/server.log \u67e5\u770b\u6240\u6709topic ./kafka-topics.sh --zookeeper localhost:2181 --list \u521b\u5efatopic ./kafka-topics.sh --zookeeper localhost:2181 --create --replication-factor 1 --partitions 2 --topic first \u9009\u9879 \u8bf4\u660e\uff1a --topic \u5b9a\u4e49 topic\u540d --replication-factor \u5b9a\u4e49\u526f\u672c\u6570 --partitions \u5b9a\u4e49\u5206\u533a\u6570 \u526f\u672c\u6570\u91cf \u4e0d\u80fd\u8d85\u8fc7\u673a\u5668\u6570 \u5206\u533a\u53ef\u4ee5\u5927\u4e8e\u673a\u5668\u6570\u91cf \u5220\u9664topic ./kafka-topics.sh --zookeeper localhost:2181 --delete --topic first \u9700\u8981server.properties\u4e2d\u8bbe\u7f6e delete.topic.enable=true\u5426\u5219\u53ea\u662f\u6807\u8bb0\u5220\u9664\u3002 \u67e5\u770btopic\u8be6\u60c5 ./kafka-topics.sh --zookeeper 127.0.0.1:2181 --describe --topic first \u53d1\u9001\u6d88\u606f ./kafka-console-producer.sh --broker-list localhost:9092 --topic first \u6d88\u8d39\u6d88\u606f \u53ef\u4ee5\u8fde\u63a5zookeeper ./kafka-console-consumer.sh --zookeeper localhost:2181 --topic first \u4f1a\u6709\u8b66\u544a ./kafka-console-consumer.sh --bootstrap-server matt05:9092 --topic first \u4ece\u6700\u5f00\u59cb\u7684\u4f4d\u7f6e\u6d88\u8d39 ./kafka-console-consumer.sh --bootstrap-server matt05:9092 --from-beginning --topic first \u4fee\u6539\u5206\u533a\u6570 ./kafka-topics.sh --zookeeper localhost:2181 --alter --topic first --partitions 3","title":"client"},{"location":"mq/kafka/client/#kafka","text":"\u5982\u679c\u542f\u52a8\u5931\u8d25 \u67e5\u770blogs/server.log","title":"\u7ec8\u7aef\u64cd\u4f5ckafka"},{"location":"mq/kafka/client/#topic","text":"./kafka-topics.sh --zookeeper localhost:2181 --list","title":"\u67e5\u770b\u6240\u6709topic"},{"location":"mq/kafka/client/#topic_1","text":"./kafka-topics.sh --zookeeper localhost:2181 --create --replication-factor 1 --partitions 2 --topic first \u9009\u9879 \u8bf4\u660e\uff1a --topic \u5b9a\u4e49 topic\u540d --replication-factor \u5b9a\u4e49\u526f\u672c\u6570 --partitions \u5b9a\u4e49\u5206\u533a\u6570 \u526f\u672c\u6570\u91cf \u4e0d\u80fd\u8d85\u8fc7\u673a\u5668\u6570 \u5206\u533a\u53ef\u4ee5\u5927\u4e8e\u673a\u5668\u6570\u91cf","title":"\u521b\u5efatopic"},{"location":"mq/kafka/client/#topic_2","text":"./kafka-topics.sh --zookeeper localhost:2181 --delete --topic first \u9700\u8981server.properties\u4e2d\u8bbe\u7f6e delete.topic.enable=true\u5426\u5219\u53ea\u662f\u6807\u8bb0\u5220\u9664\u3002","title":"\u5220\u9664topic"},{"location":"mq/kafka/client/#topic_3","text":"./kafka-topics.sh --zookeeper 127.0.0.1:2181 --describe --topic first","title":"\u67e5\u770btopic\u8be6\u60c5"},{"location":"mq/kafka/client/#_1","text":"./kafka-console-producer.sh --broker-list localhost:9092 --topic first","title":"\u53d1\u9001\u6d88\u606f"},{"location":"mq/kafka/client/#_2","text":"\u53ef\u4ee5\u8fde\u63a5zookeeper ./kafka-console-consumer.sh --zookeeper localhost:2181 --topic first \u4f1a\u6709\u8b66\u544a ./kafka-console-consumer.sh --bootstrap-server matt05:9092 --topic first \u4ece\u6700\u5f00\u59cb\u7684\u4f4d\u7f6e\u6d88\u8d39 ./kafka-console-consumer.sh --bootstrap-server matt05:9092 --from-beginning --topic first","title":"\u6d88\u8d39\u6d88\u606f"},{"location":"mq/kafka/client/#_3","text":"./kafka-topics.sh --zookeeper localhost:2181 --alter --topic first --partitions 3","title":"\u4fee\u6539\u5206\u533a\u6570"},{"location":"mq/kafka/install/","text":"\u200b \u5730\u5740 http://kafka.apache.org/downloads.html mac \u5730\u5740 https://kafka.apache.org/downloads.html 0.11.0.0 \u5b89\u88c5 \u89e3\u538b\u7f29 tar -zxvf kafka_2.11-0.11.0.0.tgz -C /opt/module \u4fee\u6539\u6587\u4ef6\u540d\u79f0 mv kafka_2.11-0.11.0.0 kafka \u914d\u7f6e \u521b\u5efa\u65e5\u5fd7\u76ee\u5f55 cd kafka mkdir logs \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 cd config vim server.properties #broker \u7684\u5168\u5c40\u552f\u4e00\u7f16\u53f7\uff0c\u4e0d\u80fd\u91cd\u590d broker.id=0 #\u5220\u9664 topic \u529f\u80fd\u4f7f\u80fd delete.topic.enable=true #kafka \u8fd0\u884c\u65e5\u5fd7\u5b58\u653e\u7684\u8def\u5f84 log.dirs=/opt/module/kafka/logs #\u914d\u7f6e\u8fde\u63a5 Zookeeper \u96c6\u7fa4\u5730\u5740 zookeeper.connect=matt05:2181,matt06:2181 \u914d\u7f6e\u73af\u5883\u53d8\u91cf vim .zshrc.pre-oh-my-zsh vim .zshrc.pre-oh-my-zsh #KAFKA_HOME export KAFKA_HOME=/opt/module/kafka export PATH=$PATH:$KAFKA_HOME/bin zk \u5b89\u88c5 \u5730\u5740 https://archive.apache.org/dist/zookeeper/zookeeper-3.5.7/ \u89e3\u538b\u7f29 + \u4fee\u6539\u6587\u4ef6\u540d tar -zxvf apache-zookeeper-3.5.7-bin.tar.gz -C /opt/module mv apache-zookeeper-3.5.7-bin/ zookeeper-3.5.7 \u521b\u5efa\u65e5\u5fd7\u76ee\u5f55 mkdir zkData \u914d\u7f6e\u6587\u4ef6\u4fee\u6539 cp zoo_sample.cfg zoo.cfg dataDir=/opt/module/zookeeper-3.5.7/zkData \u542f\u52a8 zkServer.sh start zkServer.sh stop zkServer.sh status \u542f\u52a8kafka ./bin/kafka-server-start.sh -daemon ./config/server.properties \u542f\u52a8 \u542f\u52a8,\u5b89\u88c5\u76ee\u5f55bin\u76ee\u5f55\u4e0b ./kafka-server-start.sh -daemon ../config/server.properties \u5173\u95ed ./kafka-server-stop.sh stop linux \u89c4\u5212 matt05 zk kafka matt06 zk kafka matt07 zk kafka \u89e3\u538b tar -zxvf kafka_2.11-0.11.0.0.tgz -C /opt/module/ \u91cd\u547d\u540d mv kafka_2.11-0.11.0.0/ kafka 2.scanla\u7248\u672c 0.11kafka \u7248\u672c \u5728\u5b89\u88c5\u76ee\u5f55\u4e0b\u521b\u5efadata\u6587\u4ef6\u5939 \u9ed8\u8ba4\u65e5\u5fd7\u653e\u5728logs data:\u5b58\u50a8\u6570\u636e mkdir data \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 cd config/ vi server.properties # \u6539 broker \u7684\u5168\u5c40\u552f\u4e00\u7f16\u53f7\uff0c\u4e0d\u80fd\u91cd\u590d broker.id=0 # \u6539 \u5220\u9664 topic \u529f\u80fd\u4f7f\u80fd delete.topic.enable=true # \u6539 kafka \u8fd0\u884c\u65e5\u5fd7\u5b58\u653e\u7684\u8def\u5f84 \u65e5\u5fd7\u76ee\u5f55 log.dirs=/opt/module/kafka/data # \u6539 \u914d\u7f6e\u8fde\u63a5 Zookeeper \u96c6\u7fa4\u5730\u5740 zookeeper.connect=zookeeper.connect=192.168.96.135:2181,192.168.96.136:2181,192.168.96.137:2181 \u5206\u53d1\u5b89\u88c5\u5305 xsync ./kafka/ \u8bb0\u5f97\u4fee\u6539\u673a\u5668\u7684broker.id \u56e0\u4e3a\u4ed6\u662f\u60df\u4e00\u7684 \u542f\u52a8,\u5b89\u88c5\u76ee\u5f55bin\u76ee\u5f55\u4e0b\uff0c \u5206\u522b\u8fdb\u5165\u4e09\u53f0\u673a\u5668 ./kafka-server-start.sh -daemon ../config/server.properties \u5173\u95ed,\u5b89\u88c5\u76ee\u5f55bin\u76ee\u5f55\u4e0b ./kafka-server-stop.sh stop \u4f7f\u7528\u65f6\u53ef\u80fd\u4f1a\u65e0\u6cd5\u8fde\u63a5kafka\uff0c\u5728server.properties\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e advertised.listeners=PLAINTEXT://192.168.96.128:9092","title":"install"},{"location":"mq/kafka/install/#_1","text":"http://kafka.apache.org/downloads.html","title":"\u5730\u5740"},{"location":"mq/kafka/install/#mac","text":"","title":"mac"},{"location":"mq/kafka/install/#_2","text":"https://kafka.apache.org/downloads.html 0.11.0.0","title":"\u5730\u5740"},{"location":"mq/kafka/install/#_3","text":"","title":"\u5b89\u88c5"},{"location":"mq/kafka/install/#_4","text":"tar -zxvf kafka_2.11-0.11.0.0.tgz -C /opt/module","title":"\u89e3\u538b\u7f29"},{"location":"mq/kafka/install/#_5","text":"mv kafka_2.11-0.11.0.0 kafka","title":"\u4fee\u6539\u6587\u4ef6\u540d\u79f0"},{"location":"mq/kafka/install/#_6","text":"","title":"\u914d\u7f6e"},{"location":"mq/kafka/install/#_7","text":"cd kafka mkdir logs","title":"\u521b\u5efa\u65e5\u5fd7\u76ee\u5f55"},{"location":"mq/kafka/install/#_8","text":"cd config vim server.properties #broker \u7684\u5168\u5c40\u552f\u4e00\u7f16\u53f7\uff0c\u4e0d\u80fd\u91cd\u590d broker.id=0 #\u5220\u9664 topic \u529f\u80fd\u4f7f\u80fd delete.topic.enable=true #kafka \u8fd0\u884c\u65e5\u5fd7\u5b58\u653e\u7684\u8def\u5f84 log.dirs=/opt/module/kafka/logs #\u914d\u7f6e\u8fde\u63a5 Zookeeper \u96c6\u7fa4\u5730\u5740 zookeeper.connect=matt05:2181,matt06:2181","title":"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"mq/kafka/install/#_9","text":"vim .zshrc.pre-oh-my-zsh vim .zshrc.pre-oh-my-zsh #KAFKA_HOME export KAFKA_HOME=/opt/module/kafka export PATH=$PATH:$KAFKA_HOME/bin","title":"\u914d\u7f6e\u73af\u5883\u53d8\u91cf"},{"location":"mq/kafka/install/#zk","text":"","title":"zk \u5b89\u88c5"},{"location":"mq/kafka/install/#_10","text":"https://archive.apache.org/dist/zookeeper/zookeeper-3.5.7/","title":"\u5730\u5740"},{"location":"mq/kafka/install/#_11","text":"tar -zxvf apache-zookeeper-3.5.7-bin.tar.gz -C /opt/module mv apache-zookeeper-3.5.7-bin/ zookeeper-3.5.7","title":"\u89e3\u538b\u7f29 + \u4fee\u6539\u6587\u4ef6\u540d"},{"location":"mq/kafka/install/#_12","text":"mkdir zkData","title":"\u521b\u5efa\u65e5\u5fd7\u76ee\u5f55"},{"location":"mq/kafka/install/#_13","text":"cp zoo_sample.cfg zoo.cfg dataDir=/opt/module/zookeeper-3.5.7/zkData","title":"\u914d\u7f6e\u6587\u4ef6\u4fee\u6539"},{"location":"mq/kafka/install/#_14","text":"zkServer.sh start zkServer.sh stop zkServer.sh status \u542f\u52a8kafka ./bin/kafka-server-start.sh -daemon ./config/server.properties","title":"\u542f\u52a8"},{"location":"mq/kafka/install/#_15","text":"","title":"\u542f\u52a8"},{"location":"mq/kafka/install/#bin","text":"./kafka-server-start.sh -daemon ../config/server.properties","title":"\u542f\u52a8,\u5b89\u88c5\u76ee\u5f55bin\u76ee\u5f55\u4e0b"},{"location":"mq/kafka/install/#_16","text":"./kafka-server-stop.sh stop","title":"\u5173\u95ed"},{"location":"mq/kafka/install/#linux","text":"","title":"linux"},{"location":"mq/kafka/install/#_17","text":"matt05 zk kafka matt06 zk kafka matt07 zk kafka","title":"\u89c4\u5212"},{"location":"mq/kafka/install/#_18","text":"tar -zxvf kafka_2.11-0.11.0.0.tgz -C /opt/module/","title":"\u89e3\u538b"},{"location":"mq/kafka/install/#_19","text":"mv kafka_2.11-0.11.0.0/ kafka 2.scanla\u7248\u672c 0.11kafka \u7248\u672c","title":"\u91cd\u547d\u540d"},{"location":"mq/kafka/install/#data","text":"\u9ed8\u8ba4\u65e5\u5fd7\u653e\u5728logs data:\u5b58\u50a8\u6570\u636e mkdir data","title":"\u5728\u5b89\u88c5\u76ee\u5f55\u4e0b\u521b\u5efadata\u6587\u4ef6\u5939"},{"location":"mq/kafka/install/#_20","text":"cd config/ vi server.properties # \u6539 broker \u7684\u5168\u5c40\u552f\u4e00\u7f16\u53f7\uff0c\u4e0d\u80fd\u91cd\u590d broker.id=0 # \u6539 \u5220\u9664 topic \u529f\u80fd\u4f7f\u80fd delete.topic.enable=true # \u6539 kafka \u8fd0\u884c\u65e5\u5fd7\u5b58\u653e\u7684\u8def\u5f84 \u65e5\u5fd7\u76ee\u5f55 log.dirs=/opt/module/kafka/data # \u6539 \u914d\u7f6e\u8fde\u63a5 Zookeeper \u96c6\u7fa4\u5730\u5740 zookeeper.connect=zookeeper.connect=192.168.96.135:2181,192.168.96.136:2181,192.168.96.137:2181","title":"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"mq/kafka/install/#_21","text":"xsync ./kafka/ \u8bb0\u5f97\u4fee\u6539\u673a\u5668\u7684broker.id \u56e0\u4e3a\u4ed6\u662f\u60df\u4e00\u7684","title":"\u5206\u53d1\u5b89\u88c5\u5305"},{"location":"mq/kafka/install/#bin_1","text":"./kafka-server-start.sh -daemon ../config/server.properties","title":"\u542f\u52a8,\u5b89\u88c5\u76ee\u5f55bin\u76ee\u5f55\u4e0b\uff0c \u5206\u522b\u8fdb\u5165\u4e09\u53f0\u673a\u5668"},{"location":"mq/kafka/install/#bin_2","text":"./kafka-server-stop.sh stop \u4f7f\u7528\u65f6\u53ef\u80fd\u4f1a\u65e0\u6cd5\u8fde\u63a5kafka\uff0c\u5728server.properties\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e advertised.listeners=PLAINTEXT://192.168.96.128:9092","title":"\u5173\u95ed,\u5b89\u88c5\u76ee\u5f55bin\u76ee\u5f55\u4e0b"},{"location":"mq/kafka/overview/","text":"\u6982\u8ff0 \u662f\u4ec0\u4e48 Kafka \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u57fa\u4e8e\u53d1\u5e03/\u8ba2\u9605\u6a21\u5f0f\u7684\u6d88\u606f\u961f\u5217\uff08Message Queue\uff09\uff0c\u4e3b\u8981\u5e94\u7528\u4e8e\u5927\u6570\u636e\u5b9e\u65f6\u5904\u7406\u9886\u57df mq\u6a21\u5f0f 1.\u53d1\u5e03/\u8ba2\u9605\uff081:1 1:n\uff09 \u62c9\u53d6 \u7f3a\u70b9\u53ef\u80fd\u9700\u8981\u957f\u8f6e\u8bad 2.\u961f\u5217\u4e3b\u52a8\u63a8 \u9020\u6210\u6d88\u8d39\u8005\u963b\u585e kafka\uff1a\u62c9\u53d6 \u957f\u8f6e\u8bad \u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4 \u597d\u5904 \u89e3\u8026\uff1a\u5141\u8bb8\u7528\u6237\u72ec\u7acb\u6269\u5c55\u751f\u4ea7\u548c\u6d88\u8d39\u7684\u6d41\u7a0b\uff08\u6d88\u8d39\u6709\u6545\u969c\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u751f\u4ea7\uff09 \u524a\u5cf0\uff1a\u89e3\u51b3\u751f\u4ea7\u548c\u6d88\u8d39\u901f\u5ea6\u4e0d\u4e00\u81f4\uff0c\u9632\u6b62\u6d88\u8d39\u901f\u5ea6\u8fc7\u6162\u5bfc\u81f4\u963b\u585e \u67b6\u6784 Producer \uff1a\u6d88\u606f\u751f\u4ea7\u8005\uff0c\u5c31\u662f\u5411kafka broker \u53d1\u6d88\u606f\u7684\u5ba2\u6237\u7aef\uff1b Consumer \uff1a\u6d88\u606f\u6d88\u8d39\u8005\uff0c\u5411kafka broker \u53d6\u6d88\u606f\u7684\u5ba2\u6237\u7aef\uff1b Consumer Group \uff08CG\uff09\uff1a\u6d88\u8d39\u8005\u7ec4\uff0c\u6d88\u8d39\u8005\u7ec4\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u6d88\u8d39\u8005\uff0c\u4e00\u4e2atopic\u7684\u4e00\u4e2a\u5206\u533a\u53ea\u80fd\u7531\u6d88\u8d39\u8005\u7ec4\u5185\u4e00\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39 Broker \uff1a\u4e00\u53f0kafka \u670d\u52a1\u5668\u5c31\u662f\u4e00\u4e2abroker\u3002\u4e00\u4e2a\u96c6\u7fa4\u7531\u591a\u4e2abroker \u7ec4\u6210\u3002 Topic \uff1a\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u961f\u5217\uff0c\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u9762\u5411\u7684\u90fd\u662f\u4e00\u4e2atopic\uff1b Partition\uff1a\u4e00\u4e2atopic\u53ef\u7531\u591a\u4e2a\u5206\u533a\u7ec4\u6210 Replica\uff1a\u526f\u672c\uff0cleader follower leader \u6bcf\u4e2a\u5206\u533a\u591a\u4e2a\u526f\u672c\u7684\u201c\u4e3b\u201d\uff0c\u751f\u4ea7\u8005\u53d1\u9001\u6570\u636e\u7684\u5bf9\u8c61\uff0c\u4ee5\u53ca\u6d88\u8d39\u8005\u6d88\u8d39\u6570\u636e\u7684\u5bf9 \u8c61\u90fd\u662f leader\u3002 follower\uff1a\u6bcf\u4e2a\u5206\u533a\u591a\u4e2a\u526f\u672c\u4e2d\u7684\u201c\u4ece\u201d\uff0c\u5b9e\u65f6\u4ece leader \u4e2d\u540c\u6b65\u6570\u636e\uff0c\u4fdd\u6301\u548c leader \u6570\u636e \u7684\u540c\u6b65\u3002","title":"overview"},{"location":"mq/kafka/overview/#_1","text":"","title":"\u6982\u8ff0"},{"location":"mq/kafka/overview/#_2","text":"Kafka \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u57fa\u4e8e\u53d1\u5e03/\u8ba2\u9605\u6a21\u5f0f\u7684\u6d88\u606f\u961f\u5217\uff08Message Queue\uff09\uff0c\u4e3b\u8981\u5e94\u7528\u4e8e\u5927\u6570\u636e\u5b9e\u65f6\u5904\u7406\u9886\u57df","title":"\u662f\u4ec0\u4e48"},{"location":"mq/kafka/overview/#mq","text":"1.\u53d1\u5e03/\u8ba2\u9605\uff081:1 1:n\uff09 \u62c9\u53d6 \u7f3a\u70b9\u53ef\u80fd\u9700\u8981\u957f\u8f6e\u8bad 2.\u961f\u5217\u4e3b\u52a8\u63a8 \u9020\u6210\u6d88\u8d39\u8005\u963b\u585e kafka\uff1a\u62c9\u53d6 \u957f\u8f6e\u8bad \u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4","title":"mq\u6a21\u5f0f"},{"location":"mq/kafka/overview/#_3","text":"\u89e3\u8026\uff1a\u5141\u8bb8\u7528\u6237\u72ec\u7acb\u6269\u5c55\u751f\u4ea7\u548c\u6d88\u8d39\u7684\u6d41\u7a0b\uff08\u6d88\u8d39\u6709\u6545\u969c\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u751f\u4ea7\uff09 \u524a\u5cf0\uff1a\u89e3\u51b3\u751f\u4ea7\u548c\u6d88\u8d39\u901f\u5ea6\u4e0d\u4e00\u81f4\uff0c\u9632\u6b62\u6d88\u8d39\u901f\u5ea6\u8fc7\u6162\u5bfc\u81f4\u963b\u585e","title":"\u597d\u5904"},{"location":"mq/kafka/overview/#_4","text":"Producer \uff1a\u6d88\u606f\u751f\u4ea7\u8005\uff0c\u5c31\u662f\u5411kafka broker \u53d1\u6d88\u606f\u7684\u5ba2\u6237\u7aef\uff1b Consumer \uff1a\u6d88\u606f\u6d88\u8d39\u8005\uff0c\u5411kafka broker \u53d6\u6d88\u606f\u7684\u5ba2\u6237\u7aef\uff1b Consumer Group \uff08CG\uff09\uff1a\u6d88\u8d39\u8005\u7ec4\uff0c\u6d88\u8d39\u8005\u7ec4\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u6d88\u8d39\u8005\uff0c\u4e00\u4e2atopic\u7684\u4e00\u4e2a\u5206\u533a\u53ea\u80fd\u7531\u6d88\u8d39\u8005\u7ec4\u5185\u4e00\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39 Broker \uff1a\u4e00\u53f0kafka \u670d\u52a1\u5668\u5c31\u662f\u4e00\u4e2abroker\u3002\u4e00\u4e2a\u96c6\u7fa4\u7531\u591a\u4e2abroker \u7ec4\u6210\u3002 Topic \uff1a\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u961f\u5217\uff0c\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u9762\u5411\u7684\u90fd\u662f\u4e00\u4e2atopic\uff1b Partition\uff1a\u4e00\u4e2atopic\u53ef\u7531\u591a\u4e2a\u5206\u533a\u7ec4\u6210 Replica\uff1a\u526f\u672c\uff0cleader follower leader \u6bcf\u4e2a\u5206\u533a\u591a\u4e2a\u526f\u672c\u7684\u201c\u4e3b\u201d\uff0c\u751f\u4ea7\u8005\u53d1\u9001\u6570\u636e\u7684\u5bf9\u8c61\uff0c\u4ee5\u53ca\u6d88\u8d39\u8005\u6d88\u8d39\u6570\u636e\u7684\u5bf9 \u8c61\u90fd\u662f leader\u3002 follower\uff1a\u6bcf\u4e2a\u5206\u533a\u591a\u4e2a\u526f\u672c\u4e2d\u7684\u201c\u4ece\u201d\uff0c\u5b9e\u65f6\u4ece leader \u4e2d\u540c\u6b65\u6570\u636e\uff0c\u4fdd\u6301\u548c leader \u6570\u636e \u7684\u540c\u6b65\u3002","title":"\u67b6\u6784"},{"location":"mq/kafka/source/","text":"\u6574\u4f53\u67b6\u6784 kafka\u5de5\u4f5c\u6d41\u7a0b kafka\u4e2d\u6d88\u606f\u6309\u7167topic\u8fdb\u884c\u5206\u7c7b topic\u662f\u903b\u8f91\u4e0a\u7684\uff0cpartition\u662f\u7269\u7406\u7684 \u6bcf\u4e2apartition\u5bf9\u5e94\u4e00\u4e2alog\u6587\u4ef6\uff0c\u8be5log\u6587\u4ef6\u5b58\u50a8producer\u751f\u4ea7\u7684\u6570\u636e\uff0cproducer\u751f\u4ea7\u7684\u6570\u636e\u4f1a\u8ffd\u52a0\u5230\u8be5\u6587\u4ef6\u7684\u672b\u7aef\uff0c\u4e14\u6bcf\u6761\u6570\u636e\u90fd\u6709\u81ea\u5df1offset\uff0c\u8bb0\u5f55\u6d88\u8d39\u8005\u6d88\u8d39\u6570\u636e\u7684\u4f4d\u7f6e \u7531\u4e8e\u751f\u4ea7\u8005\u751f\u4ea7\u7684\u6d88\u606f\u4f1a\u4e0d\u65ad\u8ffd\u52a0\u5230 log \u6587\u4ef6\u672b\u5c3e\uff0c\u4e3a\u9632\u6b62 log \u6587\u4ef6\u8fc7\u5927\u5bfc\u81f4\u6570\u636e\u5b9a\u4f4d \u6548\u7387\u4f4e\u4e0b\uff0cKafka \u91c7\u53d6\u4e86\u5206\u7247\u548c\u7d22\u5f15\u673a\u5236\uff0c\u5c06\u6bcf\u4e2a partition \u5206\u4e3a\u591a\u4e2a segment\u3002\u6bcf\u4e2a segment \u5bf9\u5e94\u4e24\u4e2a\u6587\u4ef6\u2014\u2014\u201c.index\u201d\u6587\u4ef6\u548c\u201c.log\u201d\u6587\u4ef6\u3002\u8fd9\u4e9b\u6587\u4ef6\u4f4d\u4e8e\u4e00\u4e2a\u6587\u4ef6\u5939\u4e0b\uff0c\u8be5\u6587\u4ef6\u5939\u7684\u547d\u540d \u89c4\u5219\u4e3a\uff1atopic \u540d\u79f0+\u5206\u533a\u5e8f\u53f7\u3002\u4f8b\u5982\uff0cfirst \u8fd9\u4e2a topic \u6709\u4e09\u4e2a\u5206\u533a\uff0c\u5219\u5176\u5bf9\u5e94\u7684\u6587\u4ef6\u5939\u4e3a first-0,first-1,first-2\u3002 index \u548c log \u6587\u4ef6\u4ee5\u5f53\u524d segment \u7684\u7b2c\u4e00\u6761\u6d88\u606f\u7684 offset \u547d\u540d\u3002\u4e0b\u56fe\u4e3a index \u6587\u4ef6\u548c log \u6587\u4ef6\u7684\u7ed3\u6784\u793a\u610f\u56fe\u3002 \u201c.index\u201d\u6587\u4ef6\u5b58\u50a8\u5927\u91cf\u7684\u7d22\u5f15\u4fe1\u606f\uff0c\u201c.log\u201d\u6587\u4ef6\u5b58\u50a8\u5927\u91cf\u7684\u6570\u636e\uff0c\u7d22\u5f15\u6587\u4ef6\u4e2d\u7684\u5143 \u6570\u636e\u6307\u5411\u5bf9\u5e94\u6570\u636e\u6587\u4ef6\u4e2d message \u7684\u7269\u7406\u504f\u79fb\u5730\u5740\u3002 \u9ed8\u8ba4\u4f1a\u5b587\u5929 168h \u751f\u4ea7\u8005 \u5206\u533a\u7b56\u7565 \u5206\u533a\u539f\u56e0 \u65b9\u4fbf\u5728\u96c6\u7fa4\u6269\u5c55\uff1a\u53ef\u4ee5\u4fee\u6539\u5206\u533a\u6570\u91cf\u4ee5\u9002\u5e94\u5b83\u6240\u5728\u7684\u673a\u5668 \u9ad8\u5e76\u53d1\uff1a\u56e0\u4e3a\u53ef\u4ee5\u4ee5 Partition \u4e3a\u5355\u4f4d\u8bfb\u5199\u4e86\u3002 \u5982\u4f55\u5206\u533a \u6307\u660e partition \u7684\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u5c06\u6307\u660e\u7684\u503c\u76f4\u63a5\u4f5c\u4e3a partiton \u503c\uff1b \u6ca1\u6709\u6307\u660e partition \u503c\u4f46\u6709 key \u7684\u60c5\u51b5\u4e0b\uff0c\u5c06 key \u7684 hash \u503c\u4e0e topic \u7684 partition \u6570\u8fdb\u884c\u53d6\u4f59\u5f97\u5230 partition \u503c\uff1b \u65e2\u6ca1\u6709 partition \u503c\u53c8\u6ca1\u6709 key \u503c\u7684\u60c5\u51b5\u4e0b\uff0c\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\u968f\u673a\u751f\u6210\u4e00\u4e2a\u6574\u6570\uff08\u540e \u9762\u6bcf\u6b21\u8c03\u7528\u5728\u8fd9\u4e2a\u6574\u6570\u4e0a\u81ea\u589e\uff09\uff0c\u5c06\u8fd9\u4e2a\u503c\u4e0e topic \u53ef\u7528\u7684 partition \u603b\u6570\u53d6\u4f59\u5f97\u5230 partition \u503c\uff0c\u4e5f\u5c31\u662f\u5e38\u8bf4\u7684 round-robin \u7b97\u6cd5\u3002 \u6570\u636e\u53ef\u9760\u6027 \u4e3a\u4fdd\u8bc1 producer \u53d1\u9001\u7684\u6570\u636e\uff0c\u80fd\u53ef\u9760\u7684\u53d1\u9001\u5230\u6307\u5b9a\u7684 topic\uff0ctopic \u7684\u6bcf\u4e2a partition \u6536\u5230 producer \u53d1\u9001\u7684\u6570\u636e\u540e\uff0c\u90fd\u9700\u8981\u5411 producer \u53d1\u9001 ack\uff08acknowledgement \u786e\u8ba4\u6536\u5230\uff09\uff0c\u5982\u679c producer \u6536\u5230 ack\uff0c\u5c31\u4f1a\u8fdb\u884c\u4e0b\u4e00\u8f6e\u7684\u53d1\u9001\uff0c\u5426\u5219\u91cd\u65b0\u53d1\u9001\u6570\u636e\u3002 \u526f\u672c\u540c\u6b65\u7b56\u7565 \u65b9\u6848 \u4f18\u70b9 \u7f3a\u70b9 \u534a\u6570\u4ee5\u4e0a\u5b8c\u6210\u540c\u6b65\uff0c\u5c31\u53d1 \u9001 ack \u5ef6\u8fdf\u4f4e \u9009\u4e3e\u65b0\u7684 leader \u65f6\uff0c\u5bb9\u5fcd n \u53f0 \u8282\u70b9\u7684\u6545\u969c\uff0c\u9700\u8981 2n+1 \u4e2a\u526f\u672c \u5168\u90e8\u5b8c\u6210\u540c\u6b65\uff0c\u624d\u53d1\u9001 ack \u9009\u4e3e\u65b0\u7684 leader \u65f6\uff0c\u5bb9\u5fcd n \u53f0 \u8282\u70b9\u7684\u6545\u969c\uff0c\u9700\u8981 n+1 \u4e2a\u526f \u672c \u5ef6\u8fdf\u9ad8 Kafka \u9009\u62e9\u4e86\u7b2c\u4e8c\u79cd\u65b9\u6848\uff0c\u539f\u56e0\u5982\u4e0b\uff1a 1.\u540c\u6837\u4e3a\u4e86\u5bb9\u5fcd n \u53f0\u8282\u70b9\u7684\u6545\u969c\uff0c\u7b2c\u4e00\u79cd\u65b9\u6848\u9700\u8981 2n+1 \u4e2a\u526f\u672c\uff0c\u800c\u7b2c\u4e8c\u79cd\u65b9\u6848\u53ea\u9700\u8981 n+1 \u4e2a\u526f\u672c\uff0c \u800c Kafka \u7684\u6bcf\u4e2a\u5206\u533a\u90fd\u6709\u5927\u91cf\u7684\u6570\u636e\uff0c\u7b2c\u4e00\u79cd\u65b9\u6848\u4f1a\u9020\u6210\u5927\u91cf\u6570\u636e\u7684\u5197\u4f59\u3002 2.\u867d\u7136\u7b2c\u4e8c\u79cd\u65b9\u6848\u7684\u7f51\u7edc\u5ef6\u8fdf\u4f1a\u6bd4\u8f83\u9ad8\uff0c\u4f46\u7f51\u7edc\u5ef6\u8fdf\u5bf9 Kafka \u7684\u5f71\u54cd\u8f83\u5c0f \u526f\u672c\u6570 3 1 \u4e2a leader 2 \u4e2a follower ISR \u95ee\u9898\uff1a\u5982\u679c\u91c7\u7528\u65b9\u6848\u4e8c\u540c\u6b65\uff0c\u56e0\u4e3a\u67d0\u79cd\u6545\u969c\uff0cleader\u4e0d\u80fd\u548cfollower\u540c\u6b65\uff0c\u90a3\u4e48leader\u5c31\u4f1a\u4e00\u76f4\u4e0d\u80fd\u7ed9\u751f\u4ea7\u8005\u53d1\u9001ack Leader \u7ef4\u62a4\u4e86\u4e00\u4e2a\u52a8\u6001\u7684 in-sync replica set (ISR)\uff0c\u610f\u4e3a\u548c leader \u4fdd\u6301\u540c\u6b65\u7684 follower \u96c6 \u5408\u3002\u5f53 ISR \u4e2d\u7684 follower \u5b8c\u6210\u6570\u636e\u7684\u540c\u6b65\u4e4b\u540e\uff0cleader \u5c31\u4f1a\u7ed9 follower \u53d1\u9001 ack\u3002\u5982\u679c follower \u957f\u65f6\u95f4 \u672a \u5411 leader \u540c \u6b65 \u6570 \u636e \uff0c \u5219 \u8be5 follower \u5c06 \u88ab \u8e22 \u51fa ISR \uff0c \u8be5 \u65f6 \u95f4 \u9608 \u503c \u7531 replica.lag.time.max.ms \u53c2\u6570\u8bbe\u5b9a\u3002Leader \u53d1\u751f\u6545\u969c\u4e4b\u540e\uff0c\u5c31\u4f1a\u4ece ISR \u4e2d\u9009\u4e3e\u65b0\u7684 leader\u3002 ack \u5e94\u7b54\u673a\u5236 acks\uff1a 0\uff1aproducer \u4e0d\u7b49\u5f85 broker \u7684 ack\uff0c\u8fd9\u4e00\u64cd\u4f5c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6700\u4f4e\u7684\u5ef6\u8fdf\uff0cbroker \u4e00\u63a5\u6536\u5230\u8fd8 \u6ca1\u6709\u5199\u5165\u78c1\u76d8\u5c31\u5df2\u7ecf\u8fd4\u56de\uff0c\u5f53 broker \u6545\u969c\u65f6\u6709\u53ef\u80fd\u4e22\u5931\u6570\u636e\uff1b 1\uff1aproducer \u7b49\u5f85 broker \u7684 ack\uff0cpartition \u7684 leader \u843d\u76d8\u6210\u529f\u540e\u8fd4\u56de ack\uff0c\u5982\u679c\u5728 follower \u540c\u6b65\u6210\u529f\u4e4b\u524d leader \u6545\u969c\uff0c\u90a3\u4e48\u5c06\u4f1a\u4e22\u5931\u6570\u636e\uff1b -1\uff08all\uff09\uff1aproducer \u7b49\u5f85 broker \u7684 ack\uff0cpartition \u7684 leader \u548c follower \u5168\u90e8\u843d\u76d8\u6210\u529f\u540e\u624d \u8fd4\u56de ack\u3002\u4f46\u662f\u5982\u679c\u5728 follower \u540c\u6b65\u5b8c\u6210\u540e\uff0cbroker \u53d1\u9001 ack \u4e4b\u524d\uff0cleader \u53d1\u751f\u6545\u969c\uff0c\u90a3\u4e48\u4f1a \u9020\u6210\u6570\u636e\u91cd\u590d\u3002 \u6545\u969c\u5904\u7406 1.follower\u6545\u969c follower \u53d1\u751f\u6545\u969c\u540e\u4f1a\u88ab\u4e34\u65f6\u8e22\u51fa ISR\uff0c\u5f85\u8be5 follower \u6062\u590d\u540e\uff0cfollower \u4f1a\u8bfb\u53d6\u672c\u5730\u78c1\u76d8 \u8bb0\u5f55\u7684\u4e0a\u6b21\u7684 HW\uff0c\u5e76\u5c06 log \u6587\u4ef6\u9ad8\u4e8e HW \u7684\u90e8\u5206\u622a\u53d6\u6389\uff0c\u4ece HW \u5f00\u59cb\u5411 leader \u8fdb\u884c\u540c\u6b65\u3002 \u7b49\u8be5 follower \u7684 LEO \u5927\u4e8e\u7b49\u4e8e\u8be5 Partition \u7684 HW\uff0c\u5373 follower \u8ffd\u4e0a leader \u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u91cd \u65b0\u52a0\u5165 ISR \u4e86\u3002 2.leader\u6545\u969c leader \u53d1\u751f\u6545\u969c\u4e4b\u540e\uff0c\u4f1a\u4ece ISR \u4e2d\u9009\u51fa\u4e00\u4e2a\u65b0\u7684 leader\uff0c\u4e4b\u540e\uff0c\u4e3a\u4fdd\u8bc1\u591a\u4e2a\u526f\u672c\u4e4b\u95f4\u7684\u6570\u636e\u4e00\u81f4\u6027\uff0c\u5176\u4f59\u7684 follower \u4f1a\u5148\u5c06\u5404\u81ea\u7684 log \u6587\u4ef6\u9ad8\u4e8e HW \u7684\u90e8\u5206\u622a\u6389\uff0c\u7136\u540e\u4ece\u65b0\u7684 leader \u540c\u6b65\u6570\u636e\u3002 \u6ce8\u610f\uff1a\u8fd9\u53ea\u80fd\u4fdd\u8bc1\u526f\u672c\u4e4b\u95f4\u7684\u6570\u636e\u4e00\u81f4\u6027\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6570\u636e\u4e0d\u4e22\u5931\u6216\u8005\u4e0d\u91cd\u590d\u3002 Exactly Once \u5c06\u670d\u52a1\u5668\u7684 ACK \u7ea7\u522b\u8bbe\u7f6e\u4e3a-1\uff0c\u53ef\u4ee5\u4fdd\u8bc1 Producer \u5230 Server \u4e4b\u95f4\u4e0d\u4f1a\u4e22\u5931\u6570\u636e\uff0c\u5373 At Least Once \u8bed\u4e49\u3002\u76f8\u5bf9\u7684\uff0c\u5c06\u670d\u52a1\u5668 ACK \u7ea7\u522b\u8bbe\u7f6e\u4e3a 0\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u751f\u4ea7\u8005\u6bcf\u6761\u6d88\u606f\u53ea\u4f1a\u88ab \u53d1\u9001\u4e00\u6b21\uff0c\u5373 At Most Once \u8bed\u4e49\u3002 At Least Once:\u4e0d\u4e22\u5931\uff0c\u53ef\u80fd\u4f1a\u91cd\u590d At Most Once\uff1a\u4e0d\u91cd\u590d\uff0c\u53ef\u80fd\u4f1a\u4e22\u5931 At Least Once + \u5e42\u7b49\u6027 = Exactly Once \u8981\u542f\u7528\u5e42\u7b49\u6027\uff0c\u53ea\u9700\u8981\u5c06 Producer \u7684\u53c2\u6570\u4e2d enable.idompotence \u8bbe\u7f6e\u4e3a true \u5373\u53ef\u3002Kafka \u7684\u5e42\u7b49\u6027\u5b9e\u73b0\u5176\u5b9e\u5c31\u662f\u5c06\u539f\u6765\u4e0b\u6e38\u9700\u8981\u505a\u7684\u53bb\u91cd\u653e\u5728\u4e86\u6570\u636e\u4e0a\u6e38\u3002\u5f00\u542f\u5e42\u7b49\u6027\u7684 Producer \u5728 \u521d\u59cb\u5316\u7684\u65f6\u5019\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a PID\uff0c\u53d1\u5f80\u540c\u4e00 Partition \u7684\u6d88\u606f\u4f1a\u9644\u5e26 Sequence Number\u3002\u800c Broker \u7aef\u4f1a\u5bf9\u505a\u7f13\u5b58\uff0c\u5f53\u5177\u6709\u76f8\u540c\u4e3b\u952e\u7684\u6d88\u606f\u63d0\u4ea4\u65f6\uff0cBroker \u53ea \u4f1a\u6301\u4e45\u5316\u4e00\u6761\u3002 \u4f46\u662f PID \u91cd\u542f\u5c31\u4f1a\u53d8\u5316\uff0c\u540c\u65f6\u4e0d\u540c\u7684 Partition \u4e5f\u5177\u6709\u4e0d\u540c\u4e3b\u952e\uff0c\u6240\u4ee5\u5e42\u7b49\u6027\u65e0\u6cd5\u4fdd\u8bc1\u8de8 \u5206\u533a\u8de8\u4f1a\u8bdd\u7684 Exactly Once\u3002 \u6d88\u8d39\u8005 \u6d88\u8d39\u65b9\u5f0f consumer \u91c7\u7528 pull\uff08\u62c9\uff09\u6a21\u5f0f\u4ece broker \u4e2d\u8bfb\u53d6\u6570\u636e\u3002 push\uff08\u63a8\uff09\u6a21\u5f0f\u5f88\u96be\u9002\u5e94\u6d88\u8d39\u901f\u7387\u4e0d\u540c\u7684\u6d88\u8d39\u8005\uff0c\u56e0\u4e3a\u6d88\u606f\u53d1\u9001\u901f\u7387\u662f\u7531 broker \u51b3\u5b9a\u7684\u3002\u6d88\u8d39\u8005\u4f1a\u963b\u585e pull \u6a21\u5f0f\u4e0d\u8db3\u4e4b\u5904\u662f\uff0c\u5982\u679c kafka \u6ca1\u6709\u6570\u636e\uff0c\u6d88\u8d39\u8005\u4f1a\u4e00\u76f4\u8f6e\u8be2\u3002\u9488\u5bf9\u8fd9\u4e00\u70b9\uff0cKafka \u7684\u6d88\u8d39\u8005\u5728\u6d88\u8d39\u6570\u636e\u65f6\u4f1a\u4f20\u5165\u4e00\u4e2a\u65f6\u957f\u53c2\u6570 timeout\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709 \u6570\u636e\u53ef\u4f9b\u6d88\u8d39\uff0cconsumer \u4f1a\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u518d\u8fd4\u56de\uff0c\u8fd9\u6bb5\u65f6\u957f\u5373\u4e3a timeout\u3002 \u5206\u533a\u5206\u914d\u7b56\u7565 \u53c2\u8003 \u5206\u533a\u5206\u914d \u4e00\u4e2atopic\u4f1a\u6709\u591a\u4e2a\u5206\u533a\u3002\u4e00\u4e2a\u6d88\u8d39\u8005\u7ec4\u4f1a\u6709\u591a\u4e2a\u6d88\u8d39\u8005 RoundRobin 1.\u6d88\u8d39\u8005\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f c0 c1 c2... 2.topic\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u5e76\u5f97\u5230\u6bcf\u4e2atopic\u6240\u6709\u7684\u5206\u533a\uff0c\u4ece\u800c\u5f97\u5230\u5206\u533a\u96c6\u5408 3.\u904d\u5386\u5206\u533a\u96c6\u5408\uff0c\u540c\u65f6\u8f6e\u8be2\u6d88\u8d39\u8005 4.\u5982\u679c\u8f6e\u8be2\u7684\u6d88\u8d39\u8005\u6ca1\u6709\u8ba2\u9605\u5f53\u524d\u5206\u533a\u6240\u5728\u7684topic\u5219\u8df3\u8fc7\u5f53\u524d\u6d88\u8d39\u8005,g\u7ed9\u5f53\u524d\u5206\u533a\u7ed9\u4e0b\u4e00\u4e2a\u6d88\u8d39\u8005\u5426\u5219\u5206\u914d\u7ed9\u5f53\u524d\u6d88\u8d39\u8005 \u540c\u65f6\u904d\u5386\u5206\u533a 3\u4e2aTopic\uff1aT0\uff083\u4e2a\u5206\u533a0, 1, 2\uff09, T1\uff08\u4e24\u4e2a\u5206\u533a0, 1\uff09, T2\uff084\u4e2a\u5206\u533a0, 1, 2, 3\uff09\uff1b 3\u4e2aconsumer: C0\u8ba2\u9605\u4e86[T0, T1]\uff0c C1\u8ba2\u9605\u4e86[T1, T2]\uff0c C2\u8ba2\u9605\u4e86[T2, T0]\uff1b roundrobin\u7ed3\u679c\u5206\u914d\u7ed3\u679c\u5982\u4e0b\uff1a T0-P0\u5206\u914d\u7ed9C0\uff0cT0-P1\u5206\u914d\u7ed9C2\uff0cT0-P2\u5206\u914d\u7ed9C0\uff0c T1-P0\u5206\u914d\u7ed9C1\uff0cT1-P1\u5206\u914d\u7ed9C0\uff0c T2-P0\u5206\u914d\u7ed9C1\uff0cT2-P1\u5206\u914d\u7ed9C2\uff0cT2-P2\u5206\u914d\u7ed9C1\uff0cT0-P3\u5206\u914d\u7ed9C2\uff1b range 1.\u83b7\u53d6topic\u4e0b\u7684\u6240\u6709\u5206\u533a p0 p1 p2 2.\u6d88\u8d39\u8005\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f c0 c1 c2 3.\u5206\u533a\u6570\u9664\u6d88\u8d39\u8005\u6570\uff0c\u5f97\u5230n 4.\u5206\u533a\u6570\u5bf9\u6d88\u8d39\u8005\u6570\u53d6\u4f59\uff0c\u5f97\u5230m 5.\u6d88\u8d39\u8005\u96c6\u5408\u4e2d\uff0c\u524dm\u4e2a\u6d88\u8d39\u8005\u6709n+1\u5206\u533a\uff0c\u5269\u4f59\u7684\u6d88\u8d39\u8005\u5206\u914dn\u4e2a\u5206\u533a \u6ce8\u610f \u5f53\u6d88\u8d39\u8005\u7ec4\u5185\u6d88\u8d39\u8005\u53d1\u751f\u53d8\u5316\u65f6 \u5206\u533a\u91cd\u65b0\u5206\u914d offset \u7ef4\u62a4 \u8bb0\u5f55\u6d88\u8d39\u8005\u6d88\u8d39\u5230\u54ea\u6761\u6d88\u606f Kafka 0.9 \u7248\u672c\u4e4b\u524d\uff0cconsumer \u9ed8\u8ba4\u5c06 offset \u4fdd\u5b58\u5728 Zookeeper \u4e2d\uff0c\u4ece 0.9 \u7248\u672c\u5f00\u59cb\uff0c consumer \u9ed8\u8ba4\u5c06 offset \u4fdd\u5b58\u5728 Kafka \u4e00\u4e2a\u5185\u7f6e\u7684 topic \u4e2d\uff0c\u8be5 topic \u4e3a__consumer_offsets\u3002 offset \u6d88\u8d39\u8005\u7ec4 + \u4e3b\u9898 + \u5206\u533a consumer.properties exclude.internal.topics=false 1.zk ./kafka-console-consumer.sh --topic __consumer_offsets --zookeeper matt05:2181 --formatter \"kafka.coordinator.group.GroupMetadataManager\\$OffsetsMessageFormatter\" --consumer.config ../config/consumer.properties --from-beginning 2\u3001mq [console-consumer-39623,bigdata,0]::[OffsetMetadata[4,NO_METADATA],CommitTime 1637488435475,ExpirationTime 1637574835475] [console-consumer-39623,bigdata,1]::[OffsetMetadata[4,NO_METADATA],CommitTime 1637488435475,ExpirationTime 1637574835475] \u9a8c\u8bc1\u4e00\u4e2a\u5206\u533a\u53ea\u53ef\u4ee5\u88ab\u4e00\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39 matt05 matt06 vi consumer.properties matt05 matt06 group.id=matt 5 6 \u542f\u52a8\u6d88\u8d39\u8005 ./kafka-console-consumer.sh --zookeeper matt05:2181 --topic first --consumer.config ../config/consumer.properties 7\u751f\u4ea7\u8005 ./kafka-console-producer.sh --broker-list matt05:9092 --topic first kafka 1\uff09\u987a\u5e8f\u5199\u78c1\u76d8 Kafka \u7684 producer \u751f\u4ea7\u6570\u636e\uff0c\u8981\u5199\u5165\u5230 log \u6587\u4ef6\u4e2d\uff0c\u5199\u7684\u8fc7\u7a0b\u662f\u4e00\u76f4\u8ffd\u52a0\u5230\u6587\u4ef6\u672b\u7aef\uff0c \u4e3a\u987a\u5e8f\u5199\u3002\u5b98\u7f51\u6709\u6570\u636e\u8868\u660e\uff0c\u540c\u6837\u7684\u78c1\u76d8\uff0c\u987a\u5e8f\u5199\u80fd\u5230 600M/s\uff0c\u800c\u968f\u673a\u5199\u53ea\u6709 100K/s\u3002\u8fd9 \u4e0e\u78c1\u76d8\u7684\u673a\u68b0\u673a\u6784\u6709\u5173\uff0c\u987a\u5e8f\u5199\u4e4b\u6240\u4ee5\u5feb\uff0c\u662f\u56e0\u4e3a\u5176\u7701\u53bb\u4e86\u5927\u91cf\u78c1\u5934\u5bfb\u5740\u7684\u65f6\u95f4\u3002 2\uff09\u96f6\u62f7\u8d1d zk Kafka \u96c6\u7fa4\u4e2d\u6709\u4e00\u4e2a broker \u4f1a\u88ab\u9009\u4e3e\u4e3a Controller\uff0c\u8d1f\u8d23\u7ba1\u7406\u96c6\u7fa4 broker \u7684\u4e0a\u4e0b\u7ebf\uff0c\u6240 \u6709 topic \u7684\u5206\u533a\u526f\u672c\u5206\u914d\u548c leader \u9009\u4e3e\u7b49\u5de5\u4f5c\u3002 Controller \u7684\u7ba1\u7406\u5de5\u4f5c\u90fd\u662f\u4f9d\u8d56\u4e8e Zookeeper \u7684 zk:\u76d1\u542c\u8282\u70b9 \u4e8b\u52a1 Kafka \u4ece 0.11 \u7248\u672c\u5f00\u59cb\u5f15\u5165\u4e86\u4e8b\u52a1\u652f\u6301\u3002\u4e8b\u52a1\u53ef\u4ee5\u4fdd\u8bc1 Kafka \u5728 Exactly Once \u8bed\u4e49\u7684\u57fa \u7840\u4e0a\uff0c\u751f\u4ea7\u548c\u6d88\u8d39\u53ef\u4ee5\u8de8\u5206\u533a\u548c\u4f1a\u8bdd\uff0c\u8981\u4e48\u5168\u90e8\u6210\u529f\uff0c\u8981\u4e48\u5168\u90e8\u5931\u8d25\u3002 producer Transaction ID\uff0c\u5e76\u5c06 Producer \u83b7\u5f97\u7684PID \u548cTransaction ID \u7ed1\u5b9a\u3002\u5e76\u5199\u5165\u5185\u90e8topic\u3002 TransactionL\uff1a\u7528\u6237\u7ed9\u5b9a\u7684 consumer \u6d88\u8d39\u8005 \u4e8b\u52a1\u8f83\u5f31 \u7528\u6237\u53ef\u4ee5\u4fee\u6539offset","title":"Source"},{"location":"mq/kafka/source/#_1","text":"","title":"\u6574\u4f53\u67b6\u6784"},{"location":"mq/kafka/source/#kafka","text":"kafka\u4e2d\u6d88\u606f\u6309\u7167topic\u8fdb\u884c\u5206\u7c7b topic\u662f\u903b\u8f91\u4e0a\u7684\uff0cpartition\u662f\u7269\u7406\u7684 \u6bcf\u4e2apartition\u5bf9\u5e94\u4e00\u4e2alog\u6587\u4ef6\uff0c\u8be5log\u6587\u4ef6\u5b58\u50a8producer\u751f\u4ea7\u7684\u6570\u636e\uff0cproducer\u751f\u4ea7\u7684\u6570\u636e\u4f1a\u8ffd\u52a0\u5230\u8be5\u6587\u4ef6\u7684\u672b\u7aef\uff0c\u4e14\u6bcf\u6761\u6570\u636e\u90fd\u6709\u81ea\u5df1offset\uff0c\u8bb0\u5f55\u6d88\u8d39\u8005\u6d88\u8d39\u6570\u636e\u7684\u4f4d\u7f6e \u7531\u4e8e\u751f\u4ea7\u8005\u751f\u4ea7\u7684\u6d88\u606f\u4f1a\u4e0d\u65ad\u8ffd\u52a0\u5230 log \u6587\u4ef6\u672b\u5c3e\uff0c\u4e3a\u9632\u6b62 log \u6587\u4ef6\u8fc7\u5927\u5bfc\u81f4\u6570\u636e\u5b9a\u4f4d \u6548\u7387\u4f4e\u4e0b\uff0cKafka \u91c7\u53d6\u4e86\u5206\u7247\u548c\u7d22\u5f15\u673a\u5236\uff0c\u5c06\u6bcf\u4e2a partition \u5206\u4e3a\u591a\u4e2a segment\u3002\u6bcf\u4e2a segment \u5bf9\u5e94\u4e24\u4e2a\u6587\u4ef6\u2014\u2014\u201c.index\u201d\u6587\u4ef6\u548c\u201c.log\u201d\u6587\u4ef6\u3002\u8fd9\u4e9b\u6587\u4ef6\u4f4d\u4e8e\u4e00\u4e2a\u6587\u4ef6\u5939\u4e0b\uff0c\u8be5\u6587\u4ef6\u5939\u7684\u547d\u540d \u89c4\u5219\u4e3a\uff1atopic \u540d\u79f0+\u5206\u533a\u5e8f\u53f7\u3002\u4f8b\u5982\uff0cfirst \u8fd9\u4e2a topic \u6709\u4e09\u4e2a\u5206\u533a\uff0c\u5219\u5176\u5bf9\u5e94\u7684\u6587\u4ef6\u5939\u4e3a first-0,first-1,first-2\u3002 index \u548c log \u6587\u4ef6\u4ee5\u5f53\u524d segment \u7684\u7b2c\u4e00\u6761\u6d88\u606f\u7684 offset \u547d\u540d\u3002\u4e0b\u56fe\u4e3a index \u6587\u4ef6\u548c log \u6587\u4ef6\u7684\u7ed3\u6784\u793a\u610f\u56fe\u3002 \u201c.index\u201d\u6587\u4ef6\u5b58\u50a8\u5927\u91cf\u7684\u7d22\u5f15\u4fe1\u606f\uff0c\u201c.log\u201d\u6587\u4ef6\u5b58\u50a8\u5927\u91cf\u7684\u6570\u636e\uff0c\u7d22\u5f15\u6587\u4ef6\u4e2d\u7684\u5143 \u6570\u636e\u6307\u5411\u5bf9\u5e94\u6570\u636e\u6587\u4ef6\u4e2d message \u7684\u7269\u7406\u504f\u79fb\u5730\u5740\u3002 \u9ed8\u8ba4\u4f1a\u5b587\u5929 168h","title":"kafka\u5de5\u4f5c\u6d41\u7a0b"},{"location":"mq/kafka/source/#_2","text":"","title":"\u751f\u4ea7\u8005"},{"location":"mq/kafka/source/#_3","text":"","title":"\u5206\u533a\u7b56\u7565"},{"location":"mq/kafka/source/#_4","text":"\u65b9\u4fbf\u5728\u96c6\u7fa4\u6269\u5c55\uff1a\u53ef\u4ee5\u4fee\u6539\u5206\u533a\u6570\u91cf\u4ee5\u9002\u5e94\u5b83\u6240\u5728\u7684\u673a\u5668 \u9ad8\u5e76\u53d1\uff1a\u56e0\u4e3a\u53ef\u4ee5\u4ee5 Partition \u4e3a\u5355\u4f4d\u8bfb\u5199\u4e86\u3002","title":"\u5206\u533a\u539f\u56e0"},{"location":"mq/kafka/source/#_5","text":"\u6307\u660e partition \u7684\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u5c06\u6307\u660e\u7684\u503c\u76f4\u63a5\u4f5c\u4e3a partiton \u503c\uff1b \u6ca1\u6709\u6307\u660e partition \u503c\u4f46\u6709 key \u7684\u60c5\u51b5\u4e0b\uff0c\u5c06 key \u7684 hash \u503c\u4e0e topic \u7684 partition \u6570\u8fdb\u884c\u53d6\u4f59\u5f97\u5230 partition \u503c\uff1b \u65e2\u6ca1\u6709 partition \u503c\u53c8\u6ca1\u6709 key \u503c\u7684\u60c5\u51b5\u4e0b\uff0c\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\u968f\u673a\u751f\u6210\u4e00\u4e2a\u6574\u6570\uff08\u540e \u9762\u6bcf\u6b21\u8c03\u7528\u5728\u8fd9\u4e2a\u6574\u6570\u4e0a\u81ea\u589e\uff09\uff0c\u5c06\u8fd9\u4e2a\u503c\u4e0e topic \u53ef\u7528\u7684 partition \u603b\u6570\u53d6\u4f59\u5f97\u5230 partition \u503c\uff0c\u4e5f\u5c31\u662f\u5e38\u8bf4\u7684 round-robin \u7b97\u6cd5\u3002","title":"\u5982\u4f55\u5206\u533a"},{"location":"mq/kafka/source/#_6","text":"\u4e3a\u4fdd\u8bc1 producer \u53d1\u9001\u7684\u6570\u636e\uff0c\u80fd\u53ef\u9760\u7684\u53d1\u9001\u5230\u6307\u5b9a\u7684 topic\uff0ctopic \u7684\u6bcf\u4e2a partition \u6536\u5230 producer \u53d1\u9001\u7684\u6570\u636e\u540e\uff0c\u90fd\u9700\u8981\u5411 producer \u53d1\u9001 ack\uff08acknowledgement \u786e\u8ba4\u6536\u5230\uff09\uff0c\u5982\u679c producer \u6536\u5230 ack\uff0c\u5c31\u4f1a\u8fdb\u884c\u4e0b\u4e00\u8f6e\u7684\u53d1\u9001\uff0c\u5426\u5219\u91cd\u65b0\u53d1\u9001\u6570\u636e\u3002","title":"\u6570\u636e\u53ef\u9760\u6027"},{"location":"mq/kafka/source/#_7","text":"\u65b9\u6848 \u4f18\u70b9 \u7f3a\u70b9 \u534a\u6570\u4ee5\u4e0a\u5b8c\u6210\u540c\u6b65\uff0c\u5c31\u53d1 \u9001 ack \u5ef6\u8fdf\u4f4e \u9009\u4e3e\u65b0\u7684 leader \u65f6\uff0c\u5bb9\u5fcd n \u53f0 \u8282\u70b9\u7684\u6545\u969c\uff0c\u9700\u8981 2n+1 \u4e2a\u526f\u672c \u5168\u90e8\u5b8c\u6210\u540c\u6b65\uff0c\u624d\u53d1\u9001 ack \u9009\u4e3e\u65b0\u7684 leader \u65f6\uff0c\u5bb9\u5fcd n \u53f0 \u8282\u70b9\u7684\u6545\u969c\uff0c\u9700\u8981 n+1 \u4e2a\u526f \u672c \u5ef6\u8fdf\u9ad8 Kafka \u9009\u62e9\u4e86\u7b2c\u4e8c\u79cd\u65b9\u6848\uff0c\u539f\u56e0\u5982\u4e0b\uff1a 1.\u540c\u6837\u4e3a\u4e86\u5bb9\u5fcd n \u53f0\u8282\u70b9\u7684\u6545\u969c\uff0c\u7b2c\u4e00\u79cd\u65b9\u6848\u9700\u8981 2n+1 \u4e2a\u526f\u672c\uff0c\u800c\u7b2c\u4e8c\u79cd\u65b9\u6848\u53ea\u9700\u8981 n+1 \u4e2a\u526f\u672c\uff0c \u800c Kafka \u7684\u6bcf\u4e2a\u5206\u533a\u90fd\u6709\u5927\u91cf\u7684\u6570\u636e\uff0c\u7b2c\u4e00\u79cd\u65b9\u6848\u4f1a\u9020\u6210\u5927\u91cf\u6570\u636e\u7684\u5197\u4f59\u3002 2.\u867d\u7136\u7b2c\u4e8c\u79cd\u65b9\u6848\u7684\u7f51\u7edc\u5ef6\u8fdf\u4f1a\u6bd4\u8f83\u9ad8\uff0c\u4f46\u7f51\u7edc\u5ef6\u8fdf\u5bf9 Kafka \u7684\u5f71\u54cd\u8f83\u5c0f \u526f\u672c\u6570 3 1 \u4e2a leader 2 \u4e2a follower","title":"\u526f\u672c\u540c\u6b65\u7b56\u7565"},{"location":"mq/kafka/source/#isr","text":"\u95ee\u9898\uff1a\u5982\u679c\u91c7\u7528\u65b9\u6848\u4e8c\u540c\u6b65\uff0c\u56e0\u4e3a\u67d0\u79cd\u6545\u969c\uff0cleader\u4e0d\u80fd\u548cfollower\u540c\u6b65\uff0c\u90a3\u4e48leader\u5c31\u4f1a\u4e00\u76f4\u4e0d\u80fd\u7ed9\u751f\u4ea7\u8005\u53d1\u9001ack Leader \u7ef4\u62a4\u4e86\u4e00\u4e2a\u52a8\u6001\u7684 in-sync replica set (ISR)\uff0c\u610f\u4e3a\u548c leader \u4fdd\u6301\u540c\u6b65\u7684 follower \u96c6 \u5408\u3002\u5f53 ISR \u4e2d\u7684 follower \u5b8c\u6210\u6570\u636e\u7684\u540c\u6b65\u4e4b\u540e\uff0cleader \u5c31\u4f1a\u7ed9 follower \u53d1\u9001 ack\u3002\u5982\u679c follower \u957f\u65f6\u95f4 \u672a \u5411 leader \u540c \u6b65 \u6570 \u636e \uff0c \u5219 \u8be5 follower \u5c06 \u88ab \u8e22 \u51fa ISR \uff0c \u8be5 \u65f6 \u95f4 \u9608 \u503c \u7531 replica.lag.time.max.ms \u53c2\u6570\u8bbe\u5b9a\u3002Leader \u53d1\u751f\u6545\u969c\u4e4b\u540e\uff0c\u5c31\u4f1a\u4ece ISR \u4e2d\u9009\u4e3e\u65b0\u7684 leader\u3002","title":"ISR"},{"location":"mq/kafka/source/#ack","text":"acks\uff1a 0\uff1aproducer \u4e0d\u7b49\u5f85 broker \u7684 ack\uff0c\u8fd9\u4e00\u64cd\u4f5c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6700\u4f4e\u7684\u5ef6\u8fdf\uff0cbroker \u4e00\u63a5\u6536\u5230\u8fd8 \u6ca1\u6709\u5199\u5165\u78c1\u76d8\u5c31\u5df2\u7ecf\u8fd4\u56de\uff0c\u5f53 broker \u6545\u969c\u65f6\u6709\u53ef\u80fd\u4e22\u5931\u6570\u636e\uff1b 1\uff1aproducer \u7b49\u5f85 broker \u7684 ack\uff0cpartition \u7684 leader \u843d\u76d8\u6210\u529f\u540e\u8fd4\u56de ack\uff0c\u5982\u679c\u5728 follower \u540c\u6b65\u6210\u529f\u4e4b\u524d leader \u6545\u969c\uff0c\u90a3\u4e48\u5c06\u4f1a\u4e22\u5931\u6570\u636e\uff1b -1\uff08all\uff09\uff1aproducer \u7b49\u5f85 broker \u7684 ack\uff0cpartition \u7684 leader \u548c follower \u5168\u90e8\u843d\u76d8\u6210\u529f\u540e\u624d \u8fd4\u56de ack\u3002\u4f46\u662f\u5982\u679c\u5728 follower \u540c\u6b65\u5b8c\u6210\u540e\uff0cbroker \u53d1\u9001 ack \u4e4b\u524d\uff0cleader \u53d1\u751f\u6545\u969c\uff0c\u90a3\u4e48\u4f1a \u9020\u6210\u6570\u636e\u91cd\u590d\u3002","title":"ack \u5e94\u7b54\u673a\u5236"},{"location":"mq/kafka/source/#_8","text":"","title":"\u6545\u969c\u5904\u7406"},{"location":"mq/kafka/source/#1follower","text":"follower \u53d1\u751f\u6545\u969c\u540e\u4f1a\u88ab\u4e34\u65f6\u8e22\u51fa ISR\uff0c\u5f85\u8be5 follower \u6062\u590d\u540e\uff0cfollower \u4f1a\u8bfb\u53d6\u672c\u5730\u78c1\u76d8 \u8bb0\u5f55\u7684\u4e0a\u6b21\u7684 HW\uff0c\u5e76\u5c06 log \u6587\u4ef6\u9ad8\u4e8e HW \u7684\u90e8\u5206\u622a\u53d6\u6389\uff0c\u4ece HW \u5f00\u59cb\u5411 leader \u8fdb\u884c\u540c\u6b65\u3002 \u7b49\u8be5 follower \u7684 LEO \u5927\u4e8e\u7b49\u4e8e\u8be5 Partition \u7684 HW\uff0c\u5373 follower \u8ffd\u4e0a leader \u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u91cd \u65b0\u52a0\u5165 ISR \u4e86\u3002","title":"1.follower\u6545\u969c"},{"location":"mq/kafka/source/#2leader","text":"leader \u53d1\u751f\u6545\u969c\u4e4b\u540e\uff0c\u4f1a\u4ece ISR \u4e2d\u9009\u51fa\u4e00\u4e2a\u65b0\u7684 leader\uff0c\u4e4b\u540e\uff0c\u4e3a\u4fdd\u8bc1\u591a\u4e2a\u526f\u672c\u4e4b\u95f4\u7684\u6570\u636e\u4e00\u81f4\u6027\uff0c\u5176\u4f59\u7684 follower \u4f1a\u5148\u5c06\u5404\u81ea\u7684 log \u6587\u4ef6\u9ad8\u4e8e HW \u7684\u90e8\u5206\u622a\u6389\uff0c\u7136\u540e\u4ece\u65b0\u7684 leader \u540c\u6b65\u6570\u636e\u3002 \u6ce8\u610f\uff1a\u8fd9\u53ea\u80fd\u4fdd\u8bc1\u526f\u672c\u4e4b\u95f4\u7684\u6570\u636e\u4e00\u81f4\u6027\uff0c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6570\u636e\u4e0d\u4e22\u5931\u6216\u8005\u4e0d\u91cd\u590d\u3002","title":"2.leader\u6545\u969c"},{"location":"mq/kafka/source/#exactly-once","text":"\u5c06\u670d\u52a1\u5668\u7684 ACK \u7ea7\u522b\u8bbe\u7f6e\u4e3a-1\uff0c\u53ef\u4ee5\u4fdd\u8bc1 Producer \u5230 Server \u4e4b\u95f4\u4e0d\u4f1a\u4e22\u5931\u6570\u636e\uff0c\u5373 At Least Once \u8bed\u4e49\u3002\u76f8\u5bf9\u7684\uff0c\u5c06\u670d\u52a1\u5668 ACK \u7ea7\u522b\u8bbe\u7f6e\u4e3a 0\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u751f\u4ea7\u8005\u6bcf\u6761\u6d88\u606f\u53ea\u4f1a\u88ab \u53d1\u9001\u4e00\u6b21\uff0c\u5373 At Most Once \u8bed\u4e49\u3002 At Least Once:\u4e0d\u4e22\u5931\uff0c\u53ef\u80fd\u4f1a\u91cd\u590d At Most Once\uff1a\u4e0d\u91cd\u590d\uff0c\u53ef\u80fd\u4f1a\u4e22\u5931 At Least Once + \u5e42\u7b49\u6027 = Exactly Once \u8981\u542f\u7528\u5e42\u7b49\u6027\uff0c\u53ea\u9700\u8981\u5c06 Producer \u7684\u53c2\u6570\u4e2d enable.idompotence \u8bbe\u7f6e\u4e3a true \u5373\u53ef\u3002Kafka \u7684\u5e42\u7b49\u6027\u5b9e\u73b0\u5176\u5b9e\u5c31\u662f\u5c06\u539f\u6765\u4e0b\u6e38\u9700\u8981\u505a\u7684\u53bb\u91cd\u653e\u5728\u4e86\u6570\u636e\u4e0a\u6e38\u3002\u5f00\u542f\u5e42\u7b49\u6027\u7684 Producer \u5728 \u521d\u59cb\u5316\u7684\u65f6\u5019\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a PID\uff0c\u53d1\u5f80\u540c\u4e00 Partition \u7684\u6d88\u606f\u4f1a\u9644\u5e26 Sequence Number\u3002\u800c Broker \u7aef\u4f1a\u5bf9\u505a\u7f13\u5b58\uff0c\u5f53\u5177\u6709\u76f8\u540c\u4e3b\u952e\u7684\u6d88\u606f\u63d0\u4ea4\u65f6\uff0cBroker \u53ea \u4f1a\u6301\u4e45\u5316\u4e00\u6761\u3002 \u4f46\u662f PID \u91cd\u542f\u5c31\u4f1a\u53d8\u5316\uff0c\u540c\u65f6\u4e0d\u540c\u7684 Partition \u4e5f\u5177\u6709\u4e0d\u540c\u4e3b\u952e\uff0c\u6240\u4ee5\u5e42\u7b49\u6027\u65e0\u6cd5\u4fdd\u8bc1\u8de8 \u5206\u533a\u8de8\u4f1a\u8bdd\u7684 Exactly Once\u3002","title":"Exactly Once"},{"location":"mq/kafka/source/#_9","text":"","title":"\u6d88\u8d39\u8005"},{"location":"mq/kafka/source/#_10","text":"consumer \u91c7\u7528 pull\uff08\u62c9\uff09\u6a21\u5f0f\u4ece broker \u4e2d\u8bfb\u53d6\u6570\u636e\u3002 push\uff08\u63a8\uff09\u6a21\u5f0f\u5f88\u96be\u9002\u5e94\u6d88\u8d39\u901f\u7387\u4e0d\u540c\u7684\u6d88\u8d39\u8005\uff0c\u56e0\u4e3a\u6d88\u606f\u53d1\u9001\u901f\u7387\u662f\u7531 broker \u51b3\u5b9a\u7684\u3002\u6d88\u8d39\u8005\u4f1a\u963b\u585e pull \u6a21\u5f0f\u4e0d\u8db3\u4e4b\u5904\u662f\uff0c\u5982\u679c kafka \u6ca1\u6709\u6570\u636e\uff0c\u6d88\u8d39\u8005\u4f1a\u4e00\u76f4\u8f6e\u8be2\u3002\u9488\u5bf9\u8fd9\u4e00\u70b9\uff0cKafka \u7684\u6d88\u8d39\u8005\u5728\u6d88\u8d39\u6570\u636e\u65f6\u4f1a\u4f20\u5165\u4e00\u4e2a\u65f6\u957f\u53c2\u6570 timeout\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709 \u6570\u636e\u53ef\u4f9b\u6d88\u8d39\uff0cconsumer \u4f1a\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u518d\u8fd4\u56de\uff0c\u8fd9\u6bb5\u65f6\u957f\u5373\u4e3a timeout\u3002","title":"\u6d88\u8d39\u65b9\u5f0f"},{"location":"mq/kafka/source/#_11","text":"\u53c2\u8003 \u5206\u533a\u5206\u914d \u4e00\u4e2atopic\u4f1a\u6709\u591a\u4e2a\u5206\u533a\u3002\u4e00\u4e2a\u6d88\u8d39\u8005\u7ec4\u4f1a\u6709\u591a\u4e2a\u6d88\u8d39\u8005","title":"\u5206\u533a\u5206\u914d\u7b56\u7565"},{"location":"mq/kafka/source/#roundrobin","text":"1.\u6d88\u8d39\u8005\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f c0 c1 c2... 2.topic\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u5e76\u5f97\u5230\u6bcf\u4e2atopic\u6240\u6709\u7684\u5206\u533a\uff0c\u4ece\u800c\u5f97\u5230\u5206\u533a\u96c6\u5408 3.\u904d\u5386\u5206\u533a\u96c6\u5408\uff0c\u540c\u65f6\u8f6e\u8be2\u6d88\u8d39\u8005 4.\u5982\u679c\u8f6e\u8be2\u7684\u6d88\u8d39\u8005\u6ca1\u6709\u8ba2\u9605\u5f53\u524d\u5206\u533a\u6240\u5728\u7684topic\u5219\u8df3\u8fc7\u5f53\u524d\u6d88\u8d39\u8005,g\u7ed9\u5f53\u524d\u5206\u533a\u7ed9\u4e0b\u4e00\u4e2a\u6d88\u8d39\u8005\u5426\u5219\u5206\u914d\u7ed9\u5f53\u524d\u6d88\u8d39\u8005 \u540c\u65f6\u904d\u5386\u5206\u533a 3\u4e2aTopic\uff1aT0\uff083\u4e2a\u5206\u533a0, 1, 2\uff09, T1\uff08\u4e24\u4e2a\u5206\u533a0, 1\uff09, T2\uff084\u4e2a\u5206\u533a0, 1, 2, 3\uff09\uff1b 3\u4e2aconsumer: C0\u8ba2\u9605\u4e86[T0, T1]\uff0c C1\u8ba2\u9605\u4e86[T1, T2]\uff0c C2\u8ba2\u9605\u4e86[T2, T0]\uff1b roundrobin\u7ed3\u679c\u5206\u914d\u7ed3\u679c\u5982\u4e0b\uff1a T0-P0\u5206\u914d\u7ed9C0\uff0cT0-P1\u5206\u914d\u7ed9C2\uff0cT0-P2\u5206\u914d\u7ed9C0\uff0c T1-P0\u5206\u914d\u7ed9C1\uff0cT1-P1\u5206\u914d\u7ed9C0\uff0c T2-P0\u5206\u914d\u7ed9C1\uff0cT2-P1\u5206\u914d\u7ed9C2\uff0cT2-P2\u5206\u914d\u7ed9C1\uff0cT0-P3\u5206\u914d\u7ed9C2\uff1b","title":"RoundRobin"},{"location":"mq/kafka/source/#range","text":"1.\u83b7\u53d6topic\u4e0b\u7684\u6240\u6709\u5206\u533a p0 p1 p2 2.\u6d88\u8d39\u8005\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f c0 c1 c2 3.\u5206\u533a\u6570\u9664\u6d88\u8d39\u8005\u6570\uff0c\u5f97\u5230n 4.\u5206\u533a\u6570\u5bf9\u6d88\u8d39\u8005\u6570\u53d6\u4f59\uff0c\u5f97\u5230m 5.\u6d88\u8d39\u8005\u96c6\u5408\u4e2d\uff0c\u524dm\u4e2a\u6d88\u8d39\u8005\u6709n+1\u5206\u533a\uff0c\u5269\u4f59\u7684\u6d88\u8d39\u8005\u5206\u914dn\u4e2a\u5206\u533a","title":"range"},{"location":"mq/kafka/source/#_12","text":"\u5f53\u6d88\u8d39\u8005\u7ec4\u5185\u6d88\u8d39\u8005\u53d1\u751f\u53d8\u5316\u65f6 \u5206\u533a\u91cd\u65b0\u5206\u914d","title":"\u6ce8\u610f"},{"location":"mq/kafka/source/#offset","text":"\u8bb0\u5f55\u6d88\u8d39\u8005\u6d88\u8d39\u5230\u54ea\u6761\u6d88\u606f Kafka 0.9 \u7248\u672c\u4e4b\u524d\uff0cconsumer \u9ed8\u8ba4\u5c06 offset \u4fdd\u5b58\u5728 Zookeeper \u4e2d\uff0c\u4ece 0.9 \u7248\u672c\u5f00\u59cb\uff0c consumer \u9ed8\u8ba4\u5c06 offset \u4fdd\u5b58\u5728 Kafka \u4e00\u4e2a\u5185\u7f6e\u7684 topic \u4e2d\uff0c\u8be5 topic \u4e3a__consumer_offsets\u3002 offset \u6d88\u8d39\u8005\u7ec4 + \u4e3b\u9898 + \u5206\u533a consumer.properties exclude.internal.topics=false","title":"offset \u7ef4\u62a4"},{"location":"mq/kafka/source/#1zk","text":"./kafka-console-consumer.sh --topic __consumer_offsets --zookeeper matt05:2181 --formatter \"kafka.coordinator.group.GroupMetadataManager\\$OffsetsMessageFormatter\" --consumer.config ../config/consumer.properties --from-beginning","title":"1.zk"},{"location":"mq/kafka/source/#2mq","text":"[console-consumer-39623,bigdata,0]::[OffsetMetadata[4,NO_METADATA],CommitTime 1637488435475,ExpirationTime 1637574835475] [console-consumer-39623,bigdata,1]::[OffsetMetadata[4,NO_METADATA],CommitTime 1637488435475,ExpirationTime 1637574835475]","title":"2\u3001mq"},{"location":"mq/kafka/source/#_13","text":"matt05 matt06 vi consumer.properties matt05 matt06 group.id=matt 5 6 \u542f\u52a8\u6d88\u8d39\u8005 ./kafka-console-consumer.sh --zookeeper matt05:2181 --topic first --consumer.config ../config/consumer.properties 7\u751f\u4ea7\u8005 ./kafka-console-producer.sh --broker-list matt05:9092 --topic first","title":"\u9a8c\u8bc1\u4e00\u4e2a\u5206\u533a\u53ea\u53ef\u4ee5\u88ab\u4e00\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39"},{"location":"mq/kafka/source/#kafka_1","text":"1\uff09\u987a\u5e8f\u5199\u78c1\u76d8 Kafka \u7684 producer \u751f\u4ea7\u6570\u636e\uff0c\u8981\u5199\u5165\u5230 log \u6587\u4ef6\u4e2d\uff0c\u5199\u7684\u8fc7\u7a0b\u662f\u4e00\u76f4\u8ffd\u52a0\u5230\u6587\u4ef6\u672b\u7aef\uff0c \u4e3a\u987a\u5e8f\u5199\u3002\u5b98\u7f51\u6709\u6570\u636e\u8868\u660e\uff0c\u540c\u6837\u7684\u78c1\u76d8\uff0c\u987a\u5e8f\u5199\u80fd\u5230 600M/s\uff0c\u800c\u968f\u673a\u5199\u53ea\u6709 100K/s\u3002\u8fd9 \u4e0e\u78c1\u76d8\u7684\u673a\u68b0\u673a\u6784\u6709\u5173\uff0c\u987a\u5e8f\u5199\u4e4b\u6240\u4ee5\u5feb\uff0c\u662f\u56e0\u4e3a\u5176\u7701\u53bb\u4e86\u5927\u91cf\u78c1\u5934\u5bfb\u5740\u7684\u65f6\u95f4\u3002 2\uff09\u96f6\u62f7\u8d1d","title":"kafka"},{"location":"mq/kafka/source/#zk","text":"Kafka \u96c6\u7fa4\u4e2d\u6709\u4e00\u4e2a broker \u4f1a\u88ab\u9009\u4e3e\u4e3a Controller\uff0c\u8d1f\u8d23\u7ba1\u7406\u96c6\u7fa4 broker \u7684\u4e0a\u4e0b\u7ebf\uff0c\u6240 \u6709 topic \u7684\u5206\u533a\u526f\u672c\u5206\u914d\u548c leader \u9009\u4e3e\u7b49\u5de5\u4f5c\u3002 Controller \u7684\u7ba1\u7406\u5de5\u4f5c\u90fd\u662f\u4f9d\u8d56\u4e8e Zookeeper \u7684 zk:\u76d1\u542c\u8282\u70b9","title":"zk"},{"location":"mq/kafka/source/#_14","text":"Kafka \u4ece 0.11 \u7248\u672c\u5f00\u59cb\u5f15\u5165\u4e86\u4e8b\u52a1\u652f\u6301\u3002\u4e8b\u52a1\u53ef\u4ee5\u4fdd\u8bc1 Kafka \u5728 Exactly Once \u8bed\u4e49\u7684\u57fa \u7840\u4e0a\uff0c\u751f\u4ea7\u548c\u6d88\u8d39\u53ef\u4ee5\u8de8\u5206\u533a\u548c\u4f1a\u8bdd\uff0c\u8981\u4e48\u5168\u90e8\u6210\u529f\uff0c\u8981\u4e48\u5168\u90e8\u5931\u8d25\u3002","title":"\u4e8b\u52a1"},{"location":"mq/kafka/source/#producer","text":"Transaction ID\uff0c\u5e76\u5c06 Producer \u83b7\u5f97\u7684PID \u548cTransaction ID \u7ed1\u5b9a\u3002\u5e76\u5199\u5165\u5185\u90e8topic\u3002 TransactionL\uff1a\u7528\u6237\u7ed9\u5b9a\u7684","title":"producer"},{"location":"mq/kafka/source/#consumer","text":"\u6d88\u8d39\u8005 \u4e8b\u52a1\u8f83\u5f31 \u7528\u6237\u53ef\u4ee5\u4fee\u6539offset","title":"consumer"},{"location":"question/question/","text":"","title":"Question"},{"location":"util/file/","text":"windows AppData \u2003\u2003xxApp:\u7cfb\u7edf\u6570\u636e \u2003\u2003soft develop \u2003\u2003dev \u2003\u2003 env home \u2003\u2003matt \u2003\u2003\u2003\u2003 download \u2003\u2003\u2003\u2003 life \u2003\u2003\u2003\u2003\u2003\u2003img \u2003\u2003\u2003\u2003\u2003\u2003music \u2003\u2003\u2003\u2003\u2003\u2003video \u2003\u2003\u2003\u2003\u2003\u2003file \u2003\u2003\u2003\u2003\u2003\u2003self \u2003\u2003\u2003\u2003 study \u2003\u2003\u2003\u2003\u2003\u2003api \u2003\u2003\u2003\u2003\u2003\u2003book \u2003\u2003\u2003\u2003\u2003\u2003res \u2003\u2003\u2003\u2003\u2003\u2003note \u2003\u2003\u2003\u2003 wordkspace ProgramFiles var life:img,video,self study work:\u5165\u804c\uff0c","title":"File"},{"location":"util/ui/","text":"node \u5b89\u88c5 brew install node \u9a8c\u8bc1 node -v npm -v \u914d\u7f6e\u955c\u50cf sudo npm install -g cnpm --registry=https://registry.npm.taobao.org","title":"Ui"},{"location":"util/ui/#node","text":"","title":"node"},{"location":"util/ui/#_1","text":"brew install node","title":"\u5b89\u88c5"},{"location":"util/ui/#_2","text":"node -v npm -v","title":"\u9a8c\u8bc1"},{"location":"util/ui/#_3","text":"sudo npm install -g cnpm --registry=https://registry.npm.taobao.org","title":"\u914d\u7f6e\u955c\u50cf"},{"location":"util/blog/gitbook/","text":"\u5b89\u88c5nodejs \u5b89\u88c5 gitbook-cli npm install gitbook-cli -g gitbook init ./t /opt/homebrew/lib/node_modules/gitbook-cli/node_modules/npm/node_modules/graceful-fs polyfills.js \u6ce8\u91ca\u6389\u5373\u53ef","title":"Gitbook"},{"location":"util/blog/mkdocs/","text":"Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. \u5185\u5bb9\u9009\u9879\u5361 === \"C\" c linenums=\"1\" #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } === \"C++\" c++ linenums=\"1\" #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ??? note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. ??? a aa bb cc ee eeeeee ??? cc hello word","title":"Mkdocs"},{"location":"util/blog/mkdocs/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"util/blog/mkdocs/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. \u5185\u5bb9\u9009\u9879\u5361 === \"C\" c linenums=\"1\" #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } === \"C++\" c++ linenums=\"1\" #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ??? note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. ??? a aa bb cc ee eeeeee ??? cc hello word","title":"Project layout"},{"location":"util/dev/git/","text":"\u5b89\u88c5 Mac \u5b89\u88c5 https://www.git-scm.com/download/mac \u4e0b\u8f7d\u5b89\u88c5 \u914d\u7f6e git config --global user.name \"matt\" # \u4f60\u7684\u540d\u5b57 git config --global user.email \"imattdu@gmail.com\" # \u4f60\u7684\u90ae\u7bb1 # \u914d\u7f6egit\u4ee3\u7406 git config --global http.proxy 'http://127.0.0.1:7890/' git config --global https.proxy 'http://127.0.0.1:7890/' # \u914d\u7f6egithub\u4ee3\u7406 git config --global http.https://github.com.proxy 'http://127.0.0.1:7890/' # \u53d6\u6d88\u4ee3\u7406 git config --global --unset http.https://github.com.proxy 'http://127.0.0.1:7890/' \u53ef\u4ee5\u5148\u5b89\u88c5brew brew install git \u5c06\u672c\u5730\u5b89\u88c5\u7684git\u5378\u8f7d cd \uff0fusr\uff0fbin sudo rm \uff0drf git\uff0a Windows SSH\u767b\u5f55 cd ~ # \u8fdb\u5165\u5bb6\u76ee\u5f55 rm -rvf .ssh # \u5220\u9664.ssh \u76ee\u5f55 ssh-keygen -t rsa -C matt17@qq.com # \u8fd0\u884c\u547d\u4ee4\u751f\u6210.ssh \u5bc6\u94a5\u76ee\u5f55 cd .ssh cat id_rsa.pub \u590d\u5236 id_rsa.pub \u6587\u4ef6\u5185\u5bb9\uff0c\u767b\u5f55 GitHub\uff0c\u70b9\u51fb\u7528\u6237\u5934\u50cf\u2192Settings\u2192SSH and GPG keys New SSH Key \u8f93\u5165\u590d\u5236\u7684\u5bc6\u94a5\u4fe1\u606f 1.failed to push some refs to 'git@github.com:pavi-du/note.git' \u95ee\u9898\uff1a\u81ea\u5df1\u5728\u8fdc\u7a0b\u4ed3\u5e93\u66f4\u6539\u4e86\u5185\u5bb9\uff0c\u800c\u672c\u5730\u4e0d\u77e5\u9053\uff0c\u76f4\u63a5\u63d0\u4ea4 \u89e3\u51b3\uff1a // git fetch+merge git pull origin master \u547d\u4ee4 \u57fa\u672c // \u7b2c\u4e00\u4e0b\u514b\u9686\u4e0b\u6765 git clone https://github.com/imattdu/note.git git remote -v // \u8bbe\u7f6e\u522b\u540d git remote add origin https://github.com/imattdu/note.git // \u62c9\u53d6 git pull origin // git add --all git add --all git commit -m \"xxxm\" // \u63a8\u9001 //git push <\u8fdc\u7a0b\u4e3b\u673a\u540d> <\u672c\u5730\u5206\u652f\u540d>:<\u8fdc\u7a0b\u5206\u652f\u540d> git push origin master:master \u5206\u652f git branch // \u67e5\u770b\u672c\u5730\u5206\u652f git branch -r // \u67e5\u770b\u8fdc\u7a0b\u5206\u652f git branch -a // \u67e5\u770b\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f git branch test // \u521b\u5efatest\u5206\u652f git checkout test // \u5207\u6362test\u5206\u652f git merge test // \u5408\u5e76test\u5206\u652f \u4fee\u6539\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 git remote rm origin git remote add origin git@github.com:imattdu/studyhdfs.git git remote set-url origin https://github.com/vuejs/vue.git \u9519\u8bef \u7531\u4e8e\u7b2c\u4e00\u6b21\u4f7f\u7528\u4e0d\u662fgit clone \u7136\u540e\u76f4\u63a5\u63a8\u9001 git pull origin master --allow-unrelated-histories // \u5408\u5e76\u4fe9\u4e2a\u72ec\u7acb\u7684\u4ed3\u5e93 IDEA\u5982\u4f55\u7b2c\u4e00\u6b21\u521b\u5efa\u9879\u76ee\u63d0\u4ea4 \u9996\u5148\u5728githup\u4e2d\u521b\u5efa\u9879\u76ee \u4e4b\u540e\u7684\u4fe9\u6b65 \u8fd9\u91cc\u8bb0\u5f97\u548c\u8fdc\u7a0b\u4ed3\u5e93\u7684\u540d\u5b57\u76f8\u540c\uff0c\u5982\u679c\u8fdc\u7a0b\u662fmaster,\u8fd9\u91cc\u4e5f\u5f97\u662fmaster \u4e4b\u540e\u53ef\u80fd\u4f1a\u51fa\u73b0 Push rejected: Push to origin/master was rejected \u6211\u4eec\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9\u5373\u53ef git pull origin master --allow-unrelated-histories // master\u8fdc\u7a0b\u4ed3\u5e93\u5206\u652f\u540d \u7d27\u63a5\u7740add,commit,push\u5373\u53ef # IntelliJ project files .idea *.iml out gen # Compiled class file *.class # Log file *.log # BlueJ files *.ctxt # Mobile Tools for Java (J2ME) .mtj.tmp/ # Package Files # *.jar *.war *.nar *.ear *.zip *.tar.gz *.rar # virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml hs_err_pid* .classpath .project .settings target # .gitignore git config --global http.https://github.com.proxy https://127.0.0.1:XXXX git config --global https.https://github.com.proxy https://127.0.0.1:XXXX git config --global --unset http.proxy git config --global --unset https.proxy git config --global --unset http.https://github.com.proxy git config --global --unset https.https://github.com.proxy git config --global -l git\u8bbe\u7f6e\u4ee3\u7406 git config --global http.proxy 'http://127.0.0.1:10809/' git config --global https.proxy 'http://127.0.0.1:10809/' \u6253\u5f00\u8bbe\u7f6e-\u300b\u7f51\u7edc\u8bbe\u7f6e-\u300b\u627e\u4ee3\u7406-\u300b\u7aef\u53e3\u53f7 git config --global --unset http.proxy # github\u8bbe\u7f6e\u4ee3\u7406 git config --global http.https://github.com.proxy 'http://127.0.0.1:10809/' # \u53d6\u6d88\u4ee3\u7406 git config --global --unset http.https://github.com.proxy 'http://127.0.0.1:10809/' \u67e5\u9605\u4e86\u4e00\u4e0b\u8d44\u6599\uff0c\u53d1\u73b0\u53ef\u4ee5\u5728pull\u547d\u4ee4\u540e\u7d27\u63a5\u7740\u4f7f\u7528 --allow-unrelated-history \u9009\u9879\u6765\u89e3\u51b3\u95ee\u9898\uff08\u8be5\u9009\u9879\u53ef\u4ee5\u5408\u5e76\u4e24\u4e2a\u72ec\u7acb\u542f\u52a8\u4ed3\u5e93\u7684\u5386\u53f2\uff09\u3002 git stash #\u5c01\u5b58\u4fee\u6539 $git pull origin master --allow-unrelated-histories git stash pop #\u628a\u4fee\u6539\u8fd8\u539f $ git push <\u8fdc\u7a0b\u4e3b\u673a\u540d> <\u672c\u5730\u5206\u652f\u540d>:<\u8fdc\u7a0b\u5206\u652f\u540d> \u4e5f\u5c31\u662f $git push origin master:master \u63d0\u4ea4\u6210\u529f\u3002 git stash\uff1a\u5907\u4efd\u5f53\u524d\u5de5\u4f5c\u533a\u5185\u5bb9\uff0c\u4ece\u6700\u8fd1\u7684\u4e00\u6b21\u63d0\u4ea4\u4e2d\u8bfb\u53d6\u76f8\u5173\u5185\u5bb9\uff0c\u8ba9\u5de5\u4f5c\u533a\u4fdd\u8bc1\u548c\u4e0a\u6b21\u63d0\u4ea4\u7684\u5185\u5bb9\u4e00\u81f4\u3002\u540c\u65f6\uff0c\u5c06\u5f53\u524d\u5de5\u4f5c\u533a\u5185\u5bb9\u4fdd\u5b58\u5230Git\u6808\u4e2d git pull\uff1a\u62c9\u53d6\u670d\u52a1\u5668\u4e0a\u5f53\u524d\u5206\u652f\u4ee3\u7801 git stash pop\uff1a\u4eceGit\u6808\u4e2d\u8bfb\u53d6\u6700\u8fd1\u4e00\u6b21\u4fdd\u5b58\u7684\u5185\u5bb9\uff0c\u6062\u590d\u5de5\u4f5c\u533a\u76f8\u5173\u5185\u5bb9\u3002\u540c\u65f6\uff0c\u7528\u6237\u53ef\u80fd\u8fdb\u884c\u591a\u6b21stash\u64cd\u4f5c\uff0c\u9700\u8981\u4fdd\u8bc1\u540estash\u7684\u6700\u5148\u88ab\u53d6\u5230\uff0c\u6240\u4ee5\u7528\u6808\uff08\u5148\u8fdb\u540e\u51fa\uff09\u6765\u7ba1\u7406\uff1bpop\u53d6\u6808\u9876\u7684\u5185\u5bb9\u5e76\u6062\u590d git stash list\uff1a\u663e\u793aGit\u6808\u5185\u7684\u6240\u6709\u5907\u4efd\uff0c\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u5217\u8868\u6765\u51b3\u5b9a\u4ece\u90a3\u4e2a\u5730\u65b9\u6062\u590d\u3002 git stash clear\uff1a\u6e05\u7a7aGit\u6808 git clone -b dev \u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 // \u9ed8\u8ba4\u62c9\u53d6master\u5206\u652f git clone xxxx git fetch origin dev git checkout -b dev origin/dev git pull origin dev:dev \u8fdc\u7a0b\u4ed3\u5e93\u521b\u5efa-\u672c\u5730\u4ed3\u5e93\u521b\u5efa // \u672c\u5730\u521d\u59cb\u5316 git init git add --all git commit -m \"\" // \u5173\u8054\u4ed3\u5e93 git remote add origin \u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 git remote -v git push origin master:master //\u63d0\u793a\u51fa\u9519\uff0c\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u5408\u5e76\u5373\u53ef // \u5408\u5e76\u4fe9\u4e2a\u72ec\u7acb\u7684\u4ed3\u5e93 git pull origin master --allow-unrelated-histories // \u521b\u5efa\u5206\u652f git branch dev //\u5207\u6362\u5206\u652f git checkout dev git branch -a // \u5f53\u524d\u5728master\u5206\u652f\uff0c\u5408\u5e76devf git merge dev //// \u67e5\u770b\u51b2\u7a81\u6587\u4ef6 \u6362\u884c\u5f15\u53d1\u7684\u53d1\u6587 git config --global core.autocrlf false https://cnbin.github.io/blog/2015/06/19/git-core-dot-autocrlf-pei-zhi-shuo-ming/ \u63d0\u793a\uff1a git config pull.rebase false # \u5408\u5e76 \u63d0\u793a\uff1a git config pull.rebase true # \u53d8\u57fa \u63d0\u793a\uff1a git config pull.ff only # \u4ec5\u5feb\u8fdb \u5408\u5e76 \u5206\u652f\u5e76\u6ca1\u6709\u6539\u53d8\u00b71 \u53d8\u57fa\uff1a \u5206\u652f\u4e5f\u57fa\u4e8e\u6700\u65b0\u7684\u57fa\u7840\u6539\u53d8\u4e86 // master\u5206\u652f\u6267\u884cb1\u7684\u64cd\u4f5c \u57fa\u4e8e\u4ed6\u4eec\u6700\u8fd1\u7684\u7956\u5148 git rebase b1 // \u63d0\u4ea4\u5df2\u89e3\u51b3\u7684\u4e8b\u9879 git add . git rebase --continue // \u9000\u51fa\u53d8\u57fa git rebase --abort // \u4e0d\u63a8\u8350 git stash pop --index \u6062\u590d\u6700\u65b0\u7684\u8fdb\u5ea6\u5230\u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a git stash save \"xxx\" git stash list git stash pop git stash pop stash@{1} git stash apply stash@{1} git stash drop stash@{1} git stash clear \u5de5\u4f5c\u533a add \u6682\u5b58\u533a commit \u5206\u652f git reset --hard --soft # \u8fd8\u539f HEAD --mixed # \u8fd8\u539f HEAD\u3001Index # \u9ed8\u8ba4\u53c2\u6570 --hard # \u8fd8\u539f HEAD\u3001Index\u3001Working Directory \u5ffd\u7565\u6587\u4ef6 \u7b26 \u53f7 \u8bf4\u660e \u7a7a\u683c \u4e0d\u5339\u914d\u4efb\u610f\u6587\u4ef6\uff0c\u53ef\u4f5c\u4e3a\u5206\u9694\u7b26\uff0c\u53ef\u7528\u53cd\u659c\u6760\u8f6c\u4e49 # \u5f00\u5934 \u6807\u8bc6\u6ce8\u91ca\uff0c\u53ef\u4ee5\u4f7f\u7528\u53cd\u659c\u6760\u8fdb\u884c\u8f6c\u4e49 ! \u5f00\u5934 \u6807\u8bc6\u5426\u5b9a\uff0c\u8be5\u6587\u4ef6\u5c06\u4f1a\u518d\u6b21\u88ab\u5305\u542b\uff0c\u5982\u679c\u6392\u9664\u4e86\u8be5\u6587\u4ef6\u7684\u7236\u7ea7\u76ee\u5f55\uff0c\u5219\u4f7f\u7528 ! \u4e5f\u4e0d\u4f1a\u518d\u6b21\u88ab\u5305\u542b\u3002\u53ef\u4ee5\u4f7f\u7528\u53cd\u659c\u6760\u8fdb\u884c\u8f6c\u4e49 / \u7ed3\u675f \u53ea\u5339\u914d\u6587\u4ef6\u5939\u4ee5\u53ca\u5728\u8be5\u6587\u4ef6\u5939\u8def\u5f84\u4e0b\u7684\u5185\u5bb9\uff0c\u4f46\u662f\u4e0d\u5339\u914d\u8be5\u6587\u4ef6 / \u5f00\u59cb\u7684\u6a21\u5f0f \u5339\u914d\u9879\u76ee\u8ddf\u76ee\u5f55 ** \u5339\u914d\u591a\u7ea7\u76ee\u5f55\uff0c\u53ef\u5728\u5f00\u59cb\uff0c\u4e2d\u95f4\uff0c\u7ed3\u675f ? \u901a\u7528\u5339\u914d\u5355\u4e2a\u5b57\u7b26 [] \u901a\u7528\u5339\u914d\u5355\u4e2a\u5b57\u7b26\u5217\u8868 * \u901a\u7528\u5339\u914d\u591a\u4e2a\u5b57\u7b26 \u914d\u7f6e \u6362\u884c\u7b26 autocrlf \u6362\u884c \\r = CR = Carriage-Return = \u56de\u8f66 \\n = LF = Line-Feed = \u6362\u884c \\r\\n = CRLF = Carriage-Return Line-Feed = \u56de\u8f66\u6362\u884c Windows \u4e0b\u9ed8\u8ba4\u7684\u6587\u672c\u6362\u884c\u7b26\u662f \\r\\n\uff0cLinux \u4e0b\u9ed8\u8ba4\u7684\u6362\u884c\u7b26\u662f \\n\uff0cMac \u4e0b\u9ed8\u8ba4\u7684\u6362\u884c\u7b26\u662f \\r\u3002 autocrlf \u53ef\u9009\u53c2\u6570 true \u8868\u793a\u5728\u63a8\u9001\u65f6\u8f6c\u6210 \\n\uff0c\u5728\u62c9\u53d6\u65f6\u8f6c\u6210 \\r\\n\u3002\u8fd9\u6837\u7684\u8bbe\u7f6e\u8ba9 Windows \u7684\u5f00\u53d1\u8005\u80fd\u517c\u5bb9\u5f88\u591a\u7684\u5f00\u53d1\u5de5\u5177\uff08\u6bd4\u5982\u65e9\u671f\u7684\u8bb0\u4e8b\u672c\uff0c\u65b0\u7684\u5df2\u7ecf\u652f\u6301 \\r\\n \u4e86\uff09\uff0c\u4e0d\u81f3\u4e8e\u9047\u5230\u5f88\u591a\u6362\u884c\u7b26\u95ee\u9898\u3002 false \u8868\u793a\u5728\u63a8\u9001\u65f6\u548c\u62c9\u53d6\u65f6\u90fd\u539f\u6837\u4fdd\u7559\u6362\u884c\u7b26\u3002\u8fd9\u6837\u7684\u8bbe\u7f6e\u5728\u6240\u6709\u7a0b\u5e8f\u5458\u90fd\u5728\u540c\u4e00\u4e2a\u5e73\u53f0\u5f00\u53d1\u65f6\u5f88\u6709\u7528\uff0cgit \u5b8c\u5168\u4e0d\u5904\u7406\u6362\u884c\u7b26\uff0c\u5168\u90e8\u6539\u7531\u5f00\u53d1\u8005\u81ea\u884c\u89e3\u51b3\u3002 input \u8868\u793a\u5728\u63a8\u9001\u65f6\u8f6c\u6210 \\n\uff0c\u5728\u62c9\u53d6\u65f6\u539f\u6837\u4fdd\u7559\u6362\u884c\u7b26\u3002\u6ce8\u610f\u5230\uff0c\u8fd9\u6837\u7684\u8bbe\u7f6e\u4f1a\u8ba9\u4ed3\u5e93\u91cc\u6240\u6709\u7684\u6362\u884c\u7b26\u90fd\u53d8\u6210 \\n \u4e0d\u518d\u6709\u4ec0\u4e48\u65f6\u5019\u6709 \\r\\n \u4e86\uff0c\u6240\u4ee5\u5bf9 Windows \u5e73\u53f0\u7684\u5f00\u53d1\u8005\u5e76\u4e0d\u53cb\u597d\u3002 \u5177\u4f53\u914d\u7f6e mac,linux\u8bbe\u7f6e\u4e3ainput win10 \u5982\u679c\u9879\u76ee\u5747\u5728win\u5219\u8bbe\u7f6e\u4e3afalse \u5426\u5219\u8bbe\u7f6e\u4e3atrue [core] autocrlf = true git rm -r --cached log","title":"git"},{"location":"util/dev/git/#_1","text":"","title":"\u5b89\u88c5"},{"location":"util/dev/git/#mac","text":"","title":"Mac"},{"location":"util/dev/git/#_2","text":"https://www.git-scm.com/download/mac \u4e0b\u8f7d\u5b89\u88c5","title":"\u5b89\u88c5"},{"location":"util/dev/git/#_3","text":"git config --global user.name \"matt\" # \u4f60\u7684\u540d\u5b57 git config --global user.email \"imattdu@gmail.com\" # \u4f60\u7684\u90ae\u7bb1 # \u914d\u7f6egit\u4ee3\u7406 git config --global http.proxy 'http://127.0.0.1:7890/' git config --global https.proxy 'http://127.0.0.1:7890/' # \u914d\u7f6egithub\u4ee3\u7406 git config --global http.https://github.com.proxy 'http://127.0.0.1:7890/' # \u53d6\u6d88\u4ee3\u7406 git config --global --unset http.https://github.com.proxy 'http://127.0.0.1:7890/' \u53ef\u4ee5\u5148\u5b89\u88c5brew brew install git","title":"\u914d\u7f6e"},{"location":"util/dev/git/#git","text":"cd \uff0fusr\uff0fbin sudo rm \uff0drf git\uff0a","title":"\u5c06\u672c\u5730\u5b89\u88c5\u7684git\u5378\u8f7d"},{"location":"util/dev/git/#windows","text":"","title":"Windows"},{"location":"util/dev/git/#ssh","text":"cd ~ # \u8fdb\u5165\u5bb6\u76ee\u5f55 rm -rvf .ssh # \u5220\u9664.ssh \u76ee\u5f55 ssh-keygen -t rsa -C matt17@qq.com # \u8fd0\u884c\u547d\u4ee4\u751f\u6210.ssh \u5bc6\u94a5\u76ee\u5f55 cd .ssh cat id_rsa.pub \u590d\u5236 id_rsa.pub \u6587\u4ef6\u5185\u5bb9\uff0c\u767b\u5f55 GitHub\uff0c\u70b9\u51fb\u7528\u6237\u5934\u50cf\u2192Settings\u2192SSH and GPG keys New SSH Key \u8f93\u5165\u590d\u5236\u7684\u5bc6\u94a5\u4fe1\u606f 1.failed to push some refs to 'git@github.com:pavi-du/note.git' \u95ee\u9898\uff1a\u81ea\u5df1\u5728\u8fdc\u7a0b\u4ed3\u5e93\u66f4\u6539\u4e86\u5185\u5bb9\uff0c\u800c\u672c\u5730\u4e0d\u77e5\u9053\uff0c\u76f4\u63a5\u63d0\u4ea4 \u89e3\u51b3\uff1a // git fetch+merge git pull origin master","title":"SSH\u767b\u5f55"},{"location":"util/dev/git/#_4","text":"","title":"\u547d\u4ee4"},{"location":"util/dev/git/#_5","text":"// \u7b2c\u4e00\u4e0b\u514b\u9686\u4e0b\u6765 git clone https://github.com/imattdu/note.git git remote -v // \u8bbe\u7f6e\u522b\u540d git remote add origin https://github.com/imattdu/note.git // \u62c9\u53d6 git pull origin // git add --all git add --all git commit -m \"xxxm\" // \u63a8\u9001 //git push <\u8fdc\u7a0b\u4e3b\u673a\u540d> <\u672c\u5730\u5206\u652f\u540d>:<\u8fdc\u7a0b\u5206\u652f\u540d> git push origin master:master","title":"\u57fa\u672c"},{"location":"util/dev/git/#_6","text":"git branch // \u67e5\u770b\u672c\u5730\u5206\u652f git branch -r // \u67e5\u770b\u8fdc\u7a0b\u5206\u652f git branch -a // \u67e5\u770b\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f git branch test // \u521b\u5efatest\u5206\u652f git checkout test // \u5207\u6362test\u5206\u652f git merge test // \u5408\u5e76test\u5206\u652f","title":"\u5206\u652f"},{"location":"util/dev/git/#_7","text":"git remote rm origin git remote add origin git@github.com:imattdu/studyhdfs.git git remote set-url origin https://github.com/vuejs/vue.git","title":"\u4fee\u6539\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740"},{"location":"util/dev/git/#_8","text":"","title":"\u9519\u8bef"},{"location":"util/dev/git/#git-clone","text":"git pull origin master --allow-unrelated-histories // \u5408\u5e76\u4fe9\u4e2a\u72ec\u7acb\u7684\u4ed3\u5e93 IDEA\u5982\u4f55\u7b2c\u4e00\u6b21\u521b\u5efa\u9879\u76ee\u63d0\u4ea4 \u9996\u5148\u5728githup\u4e2d\u521b\u5efa\u9879\u76ee \u4e4b\u540e\u7684\u4fe9\u6b65 \u8fd9\u91cc\u8bb0\u5f97\u548c\u8fdc\u7a0b\u4ed3\u5e93\u7684\u540d\u5b57\u76f8\u540c\uff0c\u5982\u679c\u8fdc\u7a0b\u662fmaster,\u8fd9\u91cc\u4e5f\u5f97\u662fmaster \u4e4b\u540e\u53ef\u80fd\u4f1a\u51fa\u73b0 Push rejected: Push to origin/master was rejected \u6211\u4eec\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9\u5373\u53ef git pull origin master --allow-unrelated-histories // master\u8fdc\u7a0b\u4ed3\u5e93\u5206\u652f\u540d \u7d27\u63a5\u7740add,commit,push\u5373\u53ef # IntelliJ project files .idea *.iml out gen # Compiled class file *.class # Log file *.log # BlueJ files *.ctxt # Mobile Tools for Java (J2ME) .mtj.tmp/ # Package Files # *.jar *.war *.nar *.ear *.zip *.tar.gz *.rar # virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml hs_err_pid* .classpath .project .settings target # .gitignore git config --global http.https://github.com.proxy https://127.0.0.1:XXXX git config --global https.https://github.com.proxy https://127.0.0.1:XXXX git config --global --unset http.proxy git config --global --unset https.proxy git config --global --unset http.https://github.com.proxy git config --global --unset https.https://github.com.proxy git config --global -l git\u8bbe\u7f6e\u4ee3\u7406 git config --global http.proxy 'http://127.0.0.1:10809/' git config --global https.proxy 'http://127.0.0.1:10809/' \u6253\u5f00\u8bbe\u7f6e-\u300b\u7f51\u7edc\u8bbe\u7f6e-\u300b\u627e\u4ee3\u7406-\u300b\u7aef\u53e3\u53f7 git config --global --unset http.proxy # github\u8bbe\u7f6e\u4ee3\u7406 git config --global http.https://github.com.proxy 'http://127.0.0.1:10809/' # \u53d6\u6d88\u4ee3\u7406 git config --global --unset http.https://github.com.proxy 'http://127.0.0.1:10809/' \u67e5\u9605\u4e86\u4e00\u4e0b\u8d44\u6599\uff0c\u53d1\u73b0\u53ef\u4ee5\u5728pull\u547d\u4ee4\u540e\u7d27\u63a5\u7740\u4f7f\u7528 --allow-unrelated-history \u9009\u9879\u6765\u89e3\u51b3\u95ee\u9898\uff08\u8be5\u9009\u9879\u53ef\u4ee5\u5408\u5e76\u4e24\u4e2a\u72ec\u7acb\u542f\u52a8\u4ed3\u5e93\u7684\u5386\u53f2\uff09\u3002 git stash #\u5c01\u5b58\u4fee\u6539 $git pull origin master --allow-unrelated-histories git stash pop #\u628a\u4fee\u6539\u8fd8\u539f $ git push <\u8fdc\u7a0b\u4e3b\u673a\u540d> <\u672c\u5730\u5206\u652f\u540d>:<\u8fdc\u7a0b\u5206\u652f\u540d> \u4e5f\u5c31\u662f $git push origin master:master \u63d0\u4ea4\u6210\u529f\u3002 git stash\uff1a\u5907\u4efd\u5f53\u524d\u5de5\u4f5c\u533a\u5185\u5bb9\uff0c\u4ece\u6700\u8fd1\u7684\u4e00\u6b21\u63d0\u4ea4\u4e2d\u8bfb\u53d6\u76f8\u5173\u5185\u5bb9\uff0c\u8ba9\u5de5\u4f5c\u533a\u4fdd\u8bc1\u548c\u4e0a\u6b21\u63d0\u4ea4\u7684\u5185\u5bb9\u4e00\u81f4\u3002\u540c\u65f6\uff0c\u5c06\u5f53\u524d\u5de5\u4f5c\u533a\u5185\u5bb9\u4fdd\u5b58\u5230Git\u6808\u4e2d git pull\uff1a\u62c9\u53d6\u670d\u52a1\u5668\u4e0a\u5f53\u524d\u5206\u652f\u4ee3\u7801 git stash pop\uff1a\u4eceGit\u6808\u4e2d\u8bfb\u53d6\u6700\u8fd1\u4e00\u6b21\u4fdd\u5b58\u7684\u5185\u5bb9\uff0c\u6062\u590d\u5de5\u4f5c\u533a\u76f8\u5173\u5185\u5bb9\u3002\u540c\u65f6\uff0c\u7528\u6237\u53ef\u80fd\u8fdb\u884c\u591a\u6b21stash\u64cd\u4f5c\uff0c\u9700\u8981\u4fdd\u8bc1\u540estash\u7684\u6700\u5148\u88ab\u53d6\u5230\uff0c\u6240\u4ee5\u7528\u6808\uff08\u5148\u8fdb\u540e\u51fa\uff09\u6765\u7ba1\u7406\uff1bpop\u53d6\u6808\u9876\u7684\u5185\u5bb9\u5e76\u6062\u590d git stash list\uff1a\u663e\u793aGit\u6808\u5185\u7684\u6240\u6709\u5907\u4efd\uff0c\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u5217\u8868\u6765\u51b3\u5b9a\u4ece\u90a3\u4e2a\u5730\u65b9\u6062\u590d\u3002 git stash clear\uff1a\u6e05\u7a7aGit\u6808 git clone -b dev \u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 // \u9ed8\u8ba4\u62c9\u53d6master\u5206\u652f git clone xxxx git fetch origin dev git checkout -b dev origin/dev git pull origin dev:dev","title":"\u7531\u4e8e\u7b2c\u4e00\u6b21\u4f7f\u7528\u4e0d\u662fgit clone \u7136\u540e\u76f4\u63a5\u63a8\u9001"},{"location":"util/dev/git/#-","text":"// \u672c\u5730\u521d\u59cb\u5316 git init git add --all git commit -m \"\" // \u5173\u8054\u4ed3\u5e93 git remote add origin \u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 git remote -v git push origin master:master //\u63d0\u793a\u51fa\u9519\uff0c\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u5408\u5e76\u5373\u53ef // \u5408\u5e76\u4fe9\u4e2a\u72ec\u7acb\u7684\u4ed3\u5e93 git pull origin master --allow-unrelated-histories // \u521b\u5efa\u5206\u652f git branch dev //\u5207\u6362\u5206\u652f git checkout dev git branch -a // \u5f53\u524d\u5728master\u5206\u652f\uff0c\u5408\u5e76devf git merge dev //// \u67e5\u770b\u51b2\u7a81\u6587\u4ef6","title":"\u8fdc\u7a0b\u4ed3\u5e93\u521b\u5efa-\u672c\u5730\u4ed3\u5e93\u521b\u5efa"},{"location":"util/dev/git/#_9","text":"git config --global core.autocrlf false https://cnbin.github.io/blog/2015/06/19/git-core-dot-autocrlf-pei-zhi-shuo-ming/ \u63d0\u793a\uff1a git config pull.rebase false # \u5408\u5e76 \u63d0\u793a\uff1a git config pull.rebase true # \u53d8\u57fa \u63d0\u793a\uff1a git config pull.ff only # \u4ec5\u5feb\u8fdb \u5408\u5e76 \u5206\u652f\u5e76\u6ca1\u6709\u6539\u53d8\u00b71 \u53d8\u57fa\uff1a \u5206\u652f\u4e5f\u57fa\u4e8e\u6700\u65b0\u7684\u57fa\u7840\u6539\u53d8\u4e86 // master\u5206\u652f\u6267\u884cb1\u7684\u64cd\u4f5c \u57fa\u4e8e\u4ed6\u4eec\u6700\u8fd1\u7684\u7956\u5148 git rebase b1 // \u63d0\u4ea4\u5df2\u89e3\u51b3\u7684\u4e8b\u9879 git add . git rebase --continue // \u9000\u51fa\u53d8\u57fa git rebase --abort // \u4e0d\u63a8\u8350 git stash pop --index \u6062\u590d\u6700\u65b0\u7684\u8fdb\u5ea6\u5230\u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a git stash save \"xxx\" git stash list git stash pop git stash pop stash@{1} git stash apply stash@{1} git stash drop stash@{1} git stash clear \u5de5\u4f5c\u533a add \u6682\u5b58\u533a commit \u5206\u652f git reset --hard --soft # \u8fd8\u539f HEAD --mixed # \u8fd8\u539f HEAD\u3001Index # \u9ed8\u8ba4\u53c2\u6570 --hard # \u8fd8\u539f HEAD\u3001Index\u3001Working Directory","title":"\u6362\u884c\u5f15\u53d1\u7684\u53d1\u6587"},{"location":"util/dev/git/#_10","text":"\u7b26 \u53f7 \u8bf4\u660e \u7a7a\u683c \u4e0d\u5339\u914d\u4efb\u610f\u6587\u4ef6\uff0c\u53ef\u4f5c\u4e3a\u5206\u9694\u7b26\uff0c\u53ef\u7528\u53cd\u659c\u6760\u8f6c\u4e49 # \u5f00\u5934 \u6807\u8bc6\u6ce8\u91ca\uff0c\u53ef\u4ee5\u4f7f\u7528\u53cd\u659c\u6760\u8fdb\u884c\u8f6c\u4e49 ! \u5f00\u5934 \u6807\u8bc6\u5426\u5b9a\uff0c\u8be5\u6587\u4ef6\u5c06\u4f1a\u518d\u6b21\u88ab\u5305\u542b\uff0c\u5982\u679c\u6392\u9664\u4e86\u8be5\u6587\u4ef6\u7684\u7236\u7ea7\u76ee\u5f55\uff0c\u5219\u4f7f\u7528 ! \u4e5f\u4e0d\u4f1a\u518d\u6b21\u88ab\u5305\u542b\u3002\u53ef\u4ee5\u4f7f\u7528\u53cd\u659c\u6760\u8fdb\u884c\u8f6c\u4e49 / \u7ed3\u675f \u53ea\u5339\u914d\u6587\u4ef6\u5939\u4ee5\u53ca\u5728\u8be5\u6587\u4ef6\u5939\u8def\u5f84\u4e0b\u7684\u5185\u5bb9\uff0c\u4f46\u662f\u4e0d\u5339\u914d\u8be5\u6587\u4ef6 / \u5f00\u59cb\u7684\u6a21\u5f0f \u5339\u914d\u9879\u76ee\u8ddf\u76ee\u5f55 ** \u5339\u914d\u591a\u7ea7\u76ee\u5f55\uff0c\u53ef\u5728\u5f00\u59cb\uff0c\u4e2d\u95f4\uff0c\u7ed3\u675f ? \u901a\u7528\u5339\u914d\u5355\u4e2a\u5b57\u7b26 [] \u901a\u7528\u5339\u914d\u5355\u4e2a\u5b57\u7b26\u5217\u8868 * \u901a\u7528\u5339\u914d\u591a\u4e2a\u5b57\u7b26","title":"\u5ffd\u7565\u6587\u4ef6"},{"location":"util/dev/git/#_11","text":"","title":"\u914d\u7f6e"},{"location":"util/dev/git/#autocrlf","text":"","title":"\u6362\u884c\u7b26 autocrlf"},{"location":"util/dev/git/#_12","text":"\\r = CR = Carriage-Return = \u56de\u8f66 \\n = LF = Line-Feed = \u6362\u884c \\r\\n = CRLF = Carriage-Return Line-Feed = \u56de\u8f66\u6362\u884c Windows \u4e0b\u9ed8\u8ba4\u7684\u6587\u672c\u6362\u884c\u7b26\u662f \\r\\n\uff0cLinux \u4e0b\u9ed8\u8ba4\u7684\u6362\u884c\u7b26\u662f \\n\uff0cMac \u4e0b\u9ed8\u8ba4\u7684\u6362\u884c\u7b26\u662f \\r\u3002","title":"\u6362\u884c"},{"location":"util/dev/git/#autocrlf_1","text":"true \u8868\u793a\u5728\u63a8\u9001\u65f6\u8f6c\u6210 \\n\uff0c\u5728\u62c9\u53d6\u65f6\u8f6c\u6210 \\r\\n\u3002\u8fd9\u6837\u7684\u8bbe\u7f6e\u8ba9 Windows \u7684\u5f00\u53d1\u8005\u80fd\u517c\u5bb9\u5f88\u591a\u7684\u5f00\u53d1\u5de5\u5177\uff08\u6bd4\u5982\u65e9\u671f\u7684\u8bb0\u4e8b\u672c\uff0c\u65b0\u7684\u5df2\u7ecf\u652f\u6301 \\r\\n \u4e86\uff09\uff0c\u4e0d\u81f3\u4e8e\u9047\u5230\u5f88\u591a\u6362\u884c\u7b26\u95ee\u9898\u3002 false \u8868\u793a\u5728\u63a8\u9001\u65f6\u548c\u62c9\u53d6\u65f6\u90fd\u539f\u6837\u4fdd\u7559\u6362\u884c\u7b26\u3002\u8fd9\u6837\u7684\u8bbe\u7f6e\u5728\u6240\u6709\u7a0b\u5e8f\u5458\u90fd\u5728\u540c\u4e00\u4e2a\u5e73\u53f0\u5f00\u53d1\u65f6\u5f88\u6709\u7528\uff0cgit \u5b8c\u5168\u4e0d\u5904\u7406\u6362\u884c\u7b26\uff0c\u5168\u90e8\u6539\u7531\u5f00\u53d1\u8005\u81ea\u884c\u89e3\u51b3\u3002 input \u8868\u793a\u5728\u63a8\u9001\u65f6\u8f6c\u6210 \\n\uff0c\u5728\u62c9\u53d6\u65f6\u539f\u6837\u4fdd\u7559\u6362\u884c\u7b26\u3002\u6ce8\u610f\u5230\uff0c\u8fd9\u6837\u7684\u8bbe\u7f6e\u4f1a\u8ba9\u4ed3\u5e93\u91cc\u6240\u6709\u7684\u6362\u884c\u7b26\u90fd\u53d8\u6210 \\n \u4e0d\u518d\u6709\u4ec0\u4e48\u65f6\u5019\u6709 \\r\\n \u4e86\uff0c\u6240\u4ee5\u5bf9 Windows \u5e73\u53f0\u7684\u5f00\u53d1\u8005\u5e76\u4e0d\u53cb\u597d\u3002","title":"autocrlf \u53ef\u9009\u53c2\u6570"},{"location":"util/dev/git/#_13","text":"mac,linux\u8bbe\u7f6e\u4e3ainput win10 \u5982\u679c\u9879\u76ee\u5747\u5728win\u5219\u8bbe\u7f6e\u4e3afalse \u5426\u5219\u8bbe\u7f6e\u4e3atrue [core] autocrlf = true git rm -r --cached log","title":"\u5177\u4f53\u914d\u7f6e"},{"location":"util/dev/jetBrains/","text":"\u5b89\u88c5 \u65b9\u5f0f\u4e00 \u9002\u7528 <=2021.2 \u5177\u4f53\u6b65\u9aa4 \u4e0b\u4e00\u6b65\u4e0b\u4e00\u6b65\u5b89\u88c5\u5373\u53ef\uff0c\u5b89\u88c5\u65f6\u9009\u62e9\u8981\u5b89\u88c5\u7684\u7ec4\u4ef6\uff0c\u6ce8\u610f\u5b58\u50a8\u4f4d\u7f6e \u5728 Settings/Preferences... -> Plugins \u5185\u624b\u52a8\u6dfb\u52a0\u7b2c\u4e09\u65b9\u63d2\u4ef6\u4ed3\u5e93\u5730\u5740\uff1a https://plugins.zhile.io \u641c\u7d22\uff1aIDE Eval Reset \u63d2\u4ef6\u8fdb\u884c\u5b89\u88c5\u3002 \u914d\u7f6e \u5e38\u89c4\u914d\u7f6e \u89c6\u56fe\u663e\u793a \u663e\u793a\u83dc\u5355\u5b57\u4f53 \u63a7\u5236\u53f0\u5b57\u4f53 \u8bbe\u7f6e\u9f20\u6807\u6eda\u8f6e\u4fee\u6539\u5b57\u4f53\u5927\u5c0f \u8bbe\u7f6e\u81ea\u52a8\u5bfc\u5305 \u5ffd\u7565\u5927\u5c0f\u5199 Git\u914d\u7f6e maven\u914d\u7f6e \u6ce8\u91ca \u7c7b\u7684\u6ce8\u91ca /** @author matt @date ${YEAR}-${MONTH}-${DAY} ${TIME} @desc xxx */ \u65b9\u6cd5\u7684\u6ce8\u91ca ** * @desc xxx * @author matt * @date $date$ $param$ * @return $return$ */ groovyScript(\"def result=''; def params=\\\"${_1}\\\".replaceAll('[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]', '').split(',').toList(); for(i = 0; i < params.size(); i++) {result+=' * @param ' + params[i] + ((i < params.size() - 1) ? '\\\\n':'')}; return result\", methodParameters()) \u6ce8\u91ca\u9876\u683c \u53d6\u6d88\u81ea\u52a8\u66f4\u65b0 \u7ec8\u7aef\u914d\u7f6e \u63d2\u4ef6 \u5173\u95ed\u62fc\u5199\u68c0\u67e5 Spelling spring \u590d\u5236\u5230idea\u4e2d\u7684\u6587\u4ef6\u9700\u8981\u91cd\u6784\u9879\u76ee\u5426\u5219\u65e0\u6cd5\u8bbf\u95ee404 junit\u65e0\u6cd5\u4ece\u63a7\u5236\u53f0\u8f93\u5165 help ->Edit Custom VM Options -Deditable.java.test.console=true properties\u6587\u4ef6\u4e71\u7801 \u5982\u679c\u8fd8\u662f\u4e0d\u8d77\u4f5c\u7528\u5220\u9664\u6587\u4ef6\u91cd\u65b0\u521b\u5efa\u5373\u53ef pycharm\u914d\u7f6e pycharm\u53d6\u6d88\u6ce2\u6d6a\u7ebf\u63d0\u793a \u8fdb\u5165\u6ce2\u6d6a\u7ebf\u8bbe\u7f6e\u754c\u9762\u770b\u770b\u5230\u4e0a\u65b9\u6709\u4e09\u4e2a\u8bbe\u7f6e\u9879None\u3001Syntax\u3001Inspections\uff0c\u53ef\u4ee5\u62d6\u52a8\u7bad\u5934\u8bbe\u7f6e\u3002 1.None\u8868\u793a\u6ca1\u6709\u6ce2\u6d6a\u7ebf\uff1b 2.Syntax\u8868\u793a\u53ea\u6709\u8bed\u6cd5\u9519\u8bef\u663e\u793a\u6ce2\u6d6a\u7ebf\uff1b 3.Inspections\u8868\u793a\u8bed\u6cd5\u9519\u8bef\u548c\u4e0d\u7b26\u5408PEP8\u89c4\u8303\u663e\u793a\u6ce2\u6d6a\u7ebf\u3002 \u4f7f\u7528 IDEA \u6253\u5f00\u4e00\u4e2a\u9879\u76ee \u5bf9\u4e8emaven\u9879\u76ee\u6211\u4eec\u6253\u5f00\u9009\u62e9pom.xml\u5373\u53ef \u5982\u4f55\u91cd\u542f springboot\u4e2d\u7684pom.xml \u52a0\u8f7d\u5931\u8d25 pycharm pycharm\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u9879\u76ee 1.\u8bbe\u7f6e\u65b0\u9879\u76ee\u540d\u79f0\u548c\u5b58\u50a8\u8def\u5f84\uff08untitled\u53ef\u4ee5\u4fee\u6539\uff09\uff1b 2. Project Interpreter \u8bbe\u7f6e\u65b0\u5efa\u9879\u76ee\u6240\u4f9d\u8d56\u7684python\u73af\u5883\uff1b \u200b 2.1 New environment using \u8bbe\u7f6e\u65b0\u7684\u4f9d\u8d56\u73af\u5883\u3002\u5728\u9879\u76ee\u4e2d\u65b0\u5efa\u4e00\u4e2avenv\uff08virtualenv\uff09\u76ee\u5f55\uff0c\u7528\u4e8e\u5b58\u653e\u865a\u62df\u7684python\u73af\u5883\uff0c\u8fd9\u91cc\u6240\u6709\u7684\u7c7b\u5e93\u4f9d\u8d56\u90fd\u53ef\u4ee5\u76f4\u63a5\u8131\u79bb\u7cfb\u7edf\u5b89\u88c5\u7684python\u72ec\u7acb\u8fd0\u884c\uff1b \u200b 2.1.1 \u52fe\u9009\u4e0a Inherit global site-packages \u5219\u53ef\u4ee5\u4f7f\u7528base interpreter\uff08\u57fa\u7840\u89e3\u91ca\u5668\uff09\u4e2d\u5b89\u88c5\u7684\u7b2c\u4e09\u65b9\u5e93\uff08\u5373\u672c\u5730Python\u7684 site-packages\u76ee\u5f55\u4e2d\u7684\u7c7b\u5e93 \uff09\uff1b\u4e0d\u9009\u5c06\u548c\u5916\u754c\u5b8c\u5168\u9694\u79bb\uff08\u4f1a\u5728base interpreter\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u865a\u62df\u89e3\u91ca\u5668\uff09\uff1b \u200b 2.1.2 \u52fe\u9009\u4e0a Make available to all projects \u5219\u53ef\u4ee5\u5c06\u6b64\u9879\u76ee\u7684\u865a\u62df\u73af\u5883\u63d0\u4f9b\u7ed9\u5176\u4ed6\u9879\u76ee\u4f7f\u7528\uff1b \u200b 2.2 Existing Interpreter \u5173\u8054\u5df2\u7ecf\u5b58\u5728\u7684python\u89e3\u91ca\u5668\uff0c\u53ef\u4ee5\u4f7f\u7528\u8be5\u89e3\u91ca\u5668\u6240\u5b89\u88c5\u7684Python\u5e93\uff1b \u5efa\u8bae\u9009\u62e9 New environment using \u53ef\u4ee5\u5728Base Interpreter\u9009\u62e9\u7cfb\u7edf\u4e2d\u5b89\u88c5\u7684Python\u89e3\u91ca\u5668\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u9879\u76ee\u72ec\u7acb\u90e8\u7f72\u8fd0\u884c\uff0c\u4e5f\u53ef\u4ee5\u907f\u514d\u4e00\u53f0\u670d\u52a1\u5668\u90e8\u7f72\u591a\u4e2a\u9879\u76ee\u4e4b\u95f4\u5b58\u5728\u7c7b\u5e93\u7684\u7248\u672c\u4f9d\u8d56\u95ee\u3002 clion \u914d\u7f6e \u914d\u7f6ecpp\u73af\u5883 1.\u5b89\u88c5command line tools xcode-select --install \u5378\u8f7d xcode-select --print-path rm -rvf xxx 2.\u5b89\u88c5gcc \u4f7f\u7528\u9ed8\u8ba4clang \u65e0\u6cd5\u4f7f\u7528bits/stdc++.h brew install gcc /opt/homebrew/Cellar/gcc/12.2.0/bin/gcc-12 /opt/homebrew/Cellar/gcc/12.2.0/bin/g++-12 -D CMAKE_CXX_COMPILER=/opt/homebrew/Cellar/gcc/12.2.0/bin/g++-12 3.\u66ff\u6362clang alias gcc='gcc-12' alias cc='gcc-12' alias g++='g++-12' alias c++='c++-12' \u5982\u4f55 \u591a\u4e2amain\u51fd\u6570 CMakeLists.txt cmake_minimum_required(VERSION 3.19) project(demo) set(CMAKE_CXX_STANDARD 14) # \u904d\u5386\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6240\u6709\u7684 .cpp \u6587\u4ef6 file (GLOB_RECURSE files *.cpp) foreach (file ${files}) string(REGEX REPLACE \".+/(.+)/(.+)\\\\..*\" \"\\\\1-\\\\2\" exe ${file}) add_executable (${exe} ${file}) message (\\ \\ \\ \\ --\\ src/${exe}.cpp\\ will\\ be\\ compiled\\ to\\ bin/${exe}) endforeach ()","title":"jetBrains"},{"location":"util/dev/jetBrains/#_1","text":"","title":"\u5b89\u88c5"},{"location":"util/dev/jetBrains/#_2","text":"","title":"\u65b9\u5f0f\u4e00"},{"location":"util/dev/jetBrains/#_3","text":"<=2021.2","title":"\u9002\u7528"},{"location":"util/dev/jetBrains/#_4","text":"\u4e0b\u4e00\u6b65\u4e0b\u4e00\u6b65\u5b89\u88c5\u5373\u53ef\uff0c\u5b89\u88c5\u65f6\u9009\u62e9\u8981\u5b89\u88c5\u7684\u7ec4\u4ef6\uff0c\u6ce8\u610f\u5b58\u50a8\u4f4d\u7f6e \u5728 Settings/Preferences... -> Plugins \u5185\u624b\u52a8\u6dfb\u52a0\u7b2c\u4e09\u65b9\u63d2\u4ef6\u4ed3\u5e93\u5730\u5740\uff1a https://plugins.zhile.io \u641c\u7d22\uff1aIDE Eval Reset \u63d2\u4ef6\u8fdb\u884c\u5b89\u88c5\u3002","title":"\u5177\u4f53\u6b65\u9aa4"},{"location":"util/dev/jetBrains/#_5","text":"","title":"\u914d\u7f6e"},{"location":"util/dev/jetBrains/#_6","text":"","title":"\u5e38\u89c4\u914d\u7f6e"},{"location":"util/dev/jetBrains/#_7","text":"","title":"\u89c6\u56fe\u663e\u793a"},{"location":"util/dev/jetBrains/#_8","text":"","title":"\u663e\u793a\u83dc\u5355\u5b57\u4f53"},{"location":"util/dev/jetBrains/#_9","text":"","title":"\u63a7\u5236\u53f0\u5b57\u4f53"},{"location":"util/dev/jetBrains/#_10","text":"","title":"\u8bbe\u7f6e\u9f20\u6807\u6eda\u8f6e\u4fee\u6539\u5b57\u4f53\u5927\u5c0f"},{"location":"util/dev/jetBrains/#_11","text":"\u5ffd\u7565\u5927\u5c0f\u5199","title":"\u8bbe\u7f6e\u81ea\u52a8\u5bfc\u5305"},{"location":"util/dev/jetBrains/#git","text":"","title":"Git\u914d\u7f6e"},{"location":"util/dev/jetBrains/#maven","text":"","title":"maven\u914d\u7f6e"},{"location":"util/dev/jetBrains/#_12","text":"","title":"\u6ce8\u91ca"},{"location":"util/dev/jetBrains/#_13","text":"/** @author matt @date ${YEAR}-${MONTH}-${DAY} ${TIME} @desc xxx */","title":"\u7c7b\u7684\u6ce8\u91ca"},{"location":"util/dev/jetBrains/#_14","text":"** * @desc xxx * @author matt * @date $date$ $param$ * @return $return$ */ groovyScript(\"def result=''; def params=\\\"${_1}\\\".replaceAll('[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]', '').split(',').toList(); for(i = 0; i < params.size(); i++) {result+=' * @param ' + params[i] + ((i < params.size() - 1) ? '\\\\n':'')}; return result\", methodParameters())","title":"\u65b9\u6cd5\u7684\u6ce8\u91ca"},{"location":"util/dev/jetBrains/#_15","text":"","title":"\u6ce8\u91ca\u9876\u683c"},{"location":"util/dev/jetBrains/#_16","text":"","title":"\u53d6\u6d88\u81ea\u52a8\u66f4\u65b0"},{"location":"util/dev/jetBrains/#_17","text":"","title":"\u7ec8\u7aef\u914d\u7f6e"},{"location":"util/dev/jetBrains/#_18","text":"","title":"\u63d2\u4ef6"},{"location":"util/dev/jetBrains/#_19","text":"Spelling","title":"\u5173\u95ed\u62fc\u5199\u68c0\u67e5"},{"location":"util/dev/jetBrains/#spring","text":"","title":"spring"},{"location":"util/dev/jetBrains/#idea404","text":"","title":"\u590d\u5236\u5230idea\u4e2d\u7684\u6587\u4ef6\u9700\u8981\u91cd\u6784\u9879\u76ee\u5426\u5219\u65e0\u6cd5\u8bbf\u95ee404"},{"location":"util/dev/jetBrains/#junit","text":"help ->Edit Custom VM Options -Deditable.java.test.console=true","title":"junit\u65e0\u6cd5\u4ece\u63a7\u5236\u53f0\u8f93\u5165"},{"location":"util/dev/jetBrains/#properties","text":"\u5982\u679c\u8fd8\u662f\u4e0d\u8d77\u4f5c\u7528\u5220\u9664\u6587\u4ef6\u91cd\u65b0\u521b\u5efa\u5373\u53ef","title":"properties\u6587\u4ef6\u4e71\u7801"},{"location":"util/dev/jetBrains/#pycharm","text":"","title":"pycharm\u914d\u7f6e"},{"location":"util/dev/jetBrains/#pycharm_1","text":"\u8fdb\u5165\u6ce2\u6d6a\u7ebf\u8bbe\u7f6e\u754c\u9762\u770b\u770b\u5230\u4e0a\u65b9\u6709\u4e09\u4e2a\u8bbe\u7f6e\u9879None\u3001Syntax\u3001Inspections\uff0c\u53ef\u4ee5\u62d6\u52a8\u7bad\u5934\u8bbe\u7f6e\u3002 1.None\u8868\u793a\u6ca1\u6709\u6ce2\u6d6a\u7ebf\uff1b 2.Syntax\u8868\u793a\u53ea\u6709\u8bed\u6cd5\u9519\u8bef\u663e\u793a\u6ce2\u6d6a\u7ebf\uff1b 3.Inspections\u8868\u793a\u8bed\u6cd5\u9519\u8bef\u548c\u4e0d\u7b26\u5408PEP8\u89c4\u8303\u663e\u793a\u6ce2\u6d6a\u7ebf\u3002","title":"pycharm\u53d6\u6d88\u6ce2\u6d6a\u7ebf\u63d0\u793a"},{"location":"util/dev/jetBrains/#_20","text":"","title":"\u4f7f\u7528"},{"location":"util/dev/jetBrains/#idea","text":"","title":"IDEA"},{"location":"util/dev/jetBrains/#_21","text":"\u5bf9\u4e8emaven\u9879\u76ee\u6211\u4eec\u6253\u5f00\u9009\u62e9pom.xml\u5373\u53ef","title":"\u6253\u5f00\u4e00\u4e2a\u9879\u76ee"},{"location":"util/dev/jetBrains/#_22","text":"springboot\u4e2d\u7684pom.xml \u52a0\u8f7d\u5931\u8d25","title":"\u5982\u4f55\u91cd\u542f"},{"location":"util/dev/jetBrains/#pycharm_2","text":"","title":"pycharm"},{"location":"util/dev/jetBrains/#pycharm_3","text":"1.\u8bbe\u7f6e\u65b0\u9879\u76ee\u540d\u79f0\u548c\u5b58\u50a8\u8def\u5f84\uff08untitled\u53ef\u4ee5\u4fee\u6539\uff09\uff1b 2. Project Interpreter \u8bbe\u7f6e\u65b0\u5efa\u9879\u76ee\u6240\u4f9d\u8d56\u7684python\u73af\u5883\uff1b \u200b 2.1 New environment using \u8bbe\u7f6e\u65b0\u7684\u4f9d\u8d56\u73af\u5883\u3002\u5728\u9879\u76ee\u4e2d\u65b0\u5efa\u4e00\u4e2avenv\uff08virtualenv\uff09\u76ee\u5f55\uff0c\u7528\u4e8e\u5b58\u653e\u865a\u62df\u7684python\u73af\u5883\uff0c\u8fd9\u91cc\u6240\u6709\u7684\u7c7b\u5e93\u4f9d\u8d56\u90fd\u53ef\u4ee5\u76f4\u63a5\u8131\u79bb\u7cfb\u7edf\u5b89\u88c5\u7684python\u72ec\u7acb\u8fd0\u884c\uff1b \u200b 2.1.1 \u52fe\u9009\u4e0a Inherit global site-packages \u5219\u53ef\u4ee5\u4f7f\u7528base interpreter\uff08\u57fa\u7840\u89e3\u91ca\u5668\uff09\u4e2d\u5b89\u88c5\u7684\u7b2c\u4e09\u65b9\u5e93\uff08\u5373\u672c\u5730Python\u7684 site-packages\u76ee\u5f55\u4e2d\u7684\u7c7b\u5e93 \uff09\uff1b\u4e0d\u9009\u5c06\u548c\u5916\u754c\u5b8c\u5168\u9694\u79bb\uff08\u4f1a\u5728base interpreter\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u865a\u62df\u89e3\u91ca\u5668\uff09\uff1b \u200b 2.1.2 \u52fe\u9009\u4e0a Make available to all projects \u5219\u53ef\u4ee5\u5c06\u6b64\u9879\u76ee\u7684\u865a\u62df\u73af\u5883\u63d0\u4f9b\u7ed9\u5176\u4ed6\u9879\u76ee\u4f7f\u7528\uff1b \u200b 2.2 Existing Interpreter \u5173\u8054\u5df2\u7ecf\u5b58\u5728\u7684python\u89e3\u91ca\u5668\uff0c\u53ef\u4ee5\u4f7f\u7528\u8be5\u89e3\u91ca\u5668\u6240\u5b89\u88c5\u7684Python\u5e93\uff1b \u5efa\u8bae\u9009\u62e9 New environment using \u53ef\u4ee5\u5728Base Interpreter\u9009\u62e9\u7cfb\u7edf\u4e2d\u5b89\u88c5\u7684Python\u89e3\u91ca\u5668\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u9879\u76ee\u72ec\u7acb\u90e8\u7f72\u8fd0\u884c\uff0c\u4e5f\u53ef\u4ee5\u907f\u514d\u4e00\u53f0\u670d\u52a1\u5668\u90e8\u7f72\u591a\u4e2a\u9879\u76ee\u4e4b\u95f4\u5b58\u5728\u7c7b\u5e93\u7684\u7248\u672c\u4f9d\u8d56\u95ee\u3002","title":"pycharm\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u9879\u76ee"},{"location":"util/dev/jetBrains/#clion","text":"","title":"clion"},{"location":"util/dev/jetBrains/#_23","text":"","title":"\u914d\u7f6e"},{"location":"util/dev/jetBrains/#cpp","text":"","title":"\u914d\u7f6ecpp\u73af\u5883"},{"location":"util/dev/jetBrains/#1command-line-tools","text":"xcode-select --install \u5378\u8f7d xcode-select --print-path rm -rvf xxx","title":"1.\u5b89\u88c5command line tools"},{"location":"util/dev/jetBrains/#2gcc","text":"\u4f7f\u7528\u9ed8\u8ba4clang \u65e0\u6cd5\u4f7f\u7528bits/stdc++.h brew install gcc /opt/homebrew/Cellar/gcc/12.2.0/bin/gcc-12 /opt/homebrew/Cellar/gcc/12.2.0/bin/g++-12 -D CMAKE_CXX_COMPILER=/opt/homebrew/Cellar/gcc/12.2.0/bin/g++-12","title":"2.\u5b89\u88c5gcc"},{"location":"util/dev/jetBrains/#3clang","text":"alias gcc='gcc-12' alias cc='gcc-12' alias g++='g++-12' alias c++='c++-12'","title":"3.\u66ff\u6362clang"},{"location":"util/dev/jetBrains/#main","text":"CMakeLists.txt cmake_minimum_required(VERSION 3.19) project(demo) set(CMAKE_CXX_STANDARD 14) # \u904d\u5386\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6240\u6709\u7684 .cpp \u6587\u4ef6 file (GLOB_RECURSE files *.cpp) foreach (file ${files}) string(REGEX REPLACE \".+/(.+)/(.+)\\\\..*\" \"\\\\1-\\\\2\" exe ${file}) add_executable (${exe} ${file}) message (\\ \\ \\ \\ --\\ src/${exe}.cpp\\ will\\ be\\ compiled\\ to\\ bin/${exe}) endforeach ()","title":"\u5982\u4f55 \u591a\u4e2amain\u51fd\u6570"},{"location":"util/dev/jetBrains_%E5%BF%AB%E6%8D%B7%E9%94%AE/","text":"win CTRL+ALT+ENTER:\u4e0a\u8863\u884c SHIFT+ENTER:\u4e0b\u4e00\u884c ctrl+d:\u590d\u5236\u4e00\u884c ctrl+x:\u5220\u9664\u4e00\u884c\uff0c\u672c\u6765\u662fctrl+y,\u4f46\u662f\u7cfb\u7edf\u51b2\u7a81 shift+shift\uff1a\u5168\u5c40\u641c\u7d22 ctrl+h:\u67e5\u770b\u7ee7\u627f\u5173\u7cfb CTRL+ALT+B: \u67e5\u770b\u7c7b\u7684\u5b9e\u73b0 mac \u53c2\u8003\uff1a mac-idea-keymap \u5feb\u6377\u952e\u7ec4\u5408\uff08\u7f16\u7801\u76f8\u5173\uff09 \u5feb\u6377\u952e\u7ec4\u5408\uff08\u7f16\u7801\u76f8\u5173\uff09 \u5feb\u6377\u952e\u4f5c\u7528 command+C \u590d\u5236 command+X \u5220\u9664\u4e00\u884c\uff0f\u526a\u5207 command+V \u7c98\u8d34 command+D \u590d\u5236\u4e0a\u4e00\u884c command+W \u5173\u95ed\u5f53\u524d\u7c7b\u7a97\u53e3 command+O \u67e5\u627e\u6253\u5f00\u7c7b\u6587\u4ef6 command+F \u5f53\u524d\u6587\u672c\u67e5\u627e(\u53ef\u4e0a\u4e0b\u952e\u5207\u6362) command+\u21e7+F \u5168\u5c40\u67e5\u627e command+R \u5f53\u524d\u6587\u672c\u66ff\u6362 command+\u21e7+R \u5168\u5c40\u66ff\u6362 command+N \u751f\u4ea7\u4ee3\u7801 getter\u3001setter\u7b49\u7b49 command+S \u4fdd\u5b58 command+Z \u64a4\u9500\u4e00\u6b65 command+G \u5b9a\u4f4d\uff0c\u914d\u5408\u67e5\u627e\u4f7f\u7528\u66f4\u65b9\u4fbf command+/\uff08\u6ce8\u610f\u8f93\u5165\u6cd5\u8981\u5728\u82f1\u6587\u72b6\u6001\uff09 \u6ce8\u91ca\uff0f\u89e3\u9664\u6ce8\u91ca control+\u21e7+/\uff08\u6ce8\u610f\u8f93\u5165\u6cd5\u8981\u5728\u82f1\u6587\u72b6\u6001\uff09 \u6ce8\u91ca:/**/ command+option+L \u683c\u5f0f\u5316\u4ee3\u7801 control+\u7a7a\u683c\uff08\u6ce8\u610f\u9ed8\u8ba4\u51b2\u7a81\uff09 \u4ee3\u7801\u8865\u5168 control+option+\u7a7a\u683c\uff08\u6ce8\u610f\u9ed8\u8ba4\u51b2\u7a81\uff09 \u667a\u80fd\u4ee3\u7801\u8865\u5168 control+option+O \u53bb\u9664\u65e0\u6548import Command+Option+\u65b9\u5411\u952e\u5de6 / \u53f3 \u9000\u56de / \u524d\u8fdb\u5230\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u7684\u5730\u65b9 command+\u9f20\u6807\u60ac\u505c\uff0c\u70b9\u51fb \u67e5\u770b\u65b9\u6cd5\u8bf4\u660e\uff0c\u8fdb\u5165\u65b9\u6cd5 command + shift + +/- \u5c55\u5f00/\u6298\u53e0 \u6240\u6709\u65b9\u6cd5 command + option + +/- \u6298\u53e0\u5f53\u524d\u65b9\u6cd5 \u5feb\u6377\u952e\u7ec4\u5408\uff08\u5de5\u5177\u76f8\u5173\uff09 \u5feb\u6377\u952e\u7ec4\u5408\uff08\u5de5\u5177\u76f8\u5173\uff09 \u4f5c\u7528 command+\uff0c \u6253\u5f00preferences command+\u56de\u8f66\uff08\u9009\u62e9\u5de5\u7a0b\uff09 \u6253\u5f00resource \u21e7+F6 \u91cd\u547d\u540d \u21e7+F9 \u7f16\u8bd1\u5f53\u524d\u5de5\u7a0b Control + R \u8fd0\u884c\u5de5\u7a0b Control + D debug\u5de5\u7a0b \u5feb\u6377\u952e\u7ec4\u5408\uff08\u8c03\u8bd5\u76f8\u5173\uff09 \u5feb\u6377\u952e\u7ec4\u5408\uff08\u8c03\u8bd5\u76f8\u5173\uff09 \u4f5c\u7528 F8 \u8fdb\u5165\u4e0b\u4e00\u6b65\uff0c\u5982\u679c\u5f53\u524d\u884c\u65ad\u70b9\u662f\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5219\u4e0d\u8fdb\u5165\u5f53\u524d\u65b9\u6cd5\u4f53\u5185 F7 \u8fdb\u5165\u4e0b\u4e00\u6b65\uff0c\u5982\u679c\u5f53\u524d\u884c\u65ad\u70b9\u662f\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5219\u8fdb\u5165\u5f53\u524d\u65b9\u6cd5\u4f53\u5185\uff0c\u5982\u679c\u8be5\u65b9\u6cd5\u4f53\u8fd8\u6709\u65b9\u6cd5\uff0c\u5219\u4e0d\u4f1a\u8fdb\u5165\u8be5\u5185\u5d4c\u7684\u65b9\u6cd5\u4e2d Shift + F7 \u667a\u80fd\u6b65\u5165\uff0c\u65ad\u70b9\u6240\u5728\u884c\u4e0a\u6709\u591a\u4e2a\u65b9\u6cd5\u8c03\u7528\uff0c\u4f1a\u5f39\u51fa\u8fdb\u5165\u54ea\u4e2a\u65b9\u6cd5 Option + F9 \u8fd0\u884c\u5230\u5149\u6807\u5904\uff0c\u5982\u679c\u5149\u6807\u524d\u6709\u5176\u4ed6\u65ad\u70b9\u4f1a\u8fdb\u5165\u5230\u8be5\u65ad\u70b9 Command + Option + R \u6062\u590d\u7a0b\u5e8f\u8fd0\u884c\uff0c\u5982\u679c\u8be5\u65ad\u70b9\u4e0b\u9762\u4ee3\u7801\u8fd8\u6709\u65ad\u70b9\u5219\u505c\u5728\u4e0b\u4e00\u4e2a\u65ad\u70b9\u4e0a Command + F8 \u5207\u6362\u65ad\u70b9\uff08\u82e5\u5149\u6807\u5f53\u524d\u884c\u6709\u65ad\u70b9\u5219\u53d6\u6d88\u65ad\u70b9\uff0c\u6ca1\u6709\u5219\u52a0\u4e0a\u65ad\u70b9\uff09 Command + Shift + F8 \u67e5\u770b\u65ad\u70b9\u4fe1","title":"jetBrains_\u5feb\u6377\u952e"},{"location":"util/dev/jetBrains_%E5%BF%AB%E6%8D%B7%E9%94%AE/#win","text":"CTRL+ALT+ENTER:\u4e0a\u8863\u884c SHIFT+ENTER:\u4e0b\u4e00\u884c ctrl+d:\u590d\u5236\u4e00\u884c ctrl+x:\u5220\u9664\u4e00\u884c\uff0c\u672c\u6765\u662fctrl+y,\u4f46\u662f\u7cfb\u7edf\u51b2\u7a81 shift+shift\uff1a\u5168\u5c40\u641c\u7d22 ctrl+h:\u67e5\u770b\u7ee7\u627f\u5173\u7cfb CTRL+ALT+B: \u67e5\u770b\u7c7b\u7684\u5b9e\u73b0","title":"win"},{"location":"util/dev/jetBrains_%E5%BF%AB%E6%8D%B7%E9%94%AE/#mac","text":"\u53c2\u8003\uff1a mac-idea-keymap","title":"mac"},{"location":"util/dev/jetBrains_%E5%BF%AB%E6%8D%B7%E9%94%AE/#_1","text":"\u5feb\u6377\u952e\u7ec4\u5408\uff08\u7f16\u7801\u76f8\u5173\uff09 \u5feb\u6377\u952e\u4f5c\u7528 command+C \u590d\u5236 command+X \u5220\u9664\u4e00\u884c\uff0f\u526a\u5207 command+V \u7c98\u8d34 command+D \u590d\u5236\u4e0a\u4e00\u884c command+W \u5173\u95ed\u5f53\u524d\u7c7b\u7a97\u53e3 command+O \u67e5\u627e\u6253\u5f00\u7c7b\u6587\u4ef6 command+F \u5f53\u524d\u6587\u672c\u67e5\u627e(\u53ef\u4e0a\u4e0b\u952e\u5207\u6362) command+\u21e7+F \u5168\u5c40\u67e5\u627e command+R \u5f53\u524d\u6587\u672c\u66ff\u6362 command+\u21e7+R \u5168\u5c40\u66ff\u6362 command+N \u751f\u4ea7\u4ee3\u7801 getter\u3001setter\u7b49\u7b49 command+S \u4fdd\u5b58 command+Z \u64a4\u9500\u4e00\u6b65 command+G \u5b9a\u4f4d\uff0c\u914d\u5408\u67e5\u627e\u4f7f\u7528\u66f4\u65b9\u4fbf command+/\uff08\u6ce8\u610f\u8f93\u5165\u6cd5\u8981\u5728\u82f1\u6587\u72b6\u6001\uff09 \u6ce8\u91ca\uff0f\u89e3\u9664\u6ce8\u91ca control+\u21e7+/\uff08\u6ce8\u610f\u8f93\u5165\u6cd5\u8981\u5728\u82f1\u6587\u72b6\u6001\uff09 \u6ce8\u91ca:/**/ command+option+L \u683c\u5f0f\u5316\u4ee3\u7801 control+\u7a7a\u683c\uff08\u6ce8\u610f\u9ed8\u8ba4\u51b2\u7a81\uff09 \u4ee3\u7801\u8865\u5168 control+option+\u7a7a\u683c\uff08\u6ce8\u610f\u9ed8\u8ba4\u51b2\u7a81\uff09 \u667a\u80fd\u4ee3\u7801\u8865\u5168 control+option+O \u53bb\u9664\u65e0\u6548import Command+Option+\u65b9\u5411\u952e\u5de6 / \u53f3 \u9000\u56de / \u524d\u8fdb\u5230\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u7684\u5730\u65b9 command+\u9f20\u6807\u60ac\u505c\uff0c\u70b9\u51fb \u67e5\u770b\u65b9\u6cd5\u8bf4\u660e\uff0c\u8fdb\u5165\u65b9\u6cd5 command + shift + +/- \u5c55\u5f00/\u6298\u53e0 \u6240\u6709\u65b9\u6cd5 command + option + +/- \u6298\u53e0\u5f53\u524d\u65b9\u6cd5","title":"\u5feb\u6377\u952e\u7ec4\u5408\uff08\u7f16\u7801\u76f8\u5173\uff09"},{"location":"util/dev/jetBrains_%E5%BF%AB%E6%8D%B7%E9%94%AE/#_2","text":"\u5feb\u6377\u952e\u7ec4\u5408\uff08\u5de5\u5177\u76f8\u5173\uff09 \u4f5c\u7528 command+\uff0c \u6253\u5f00preferences command+\u56de\u8f66\uff08\u9009\u62e9\u5de5\u7a0b\uff09 \u6253\u5f00resource \u21e7+F6 \u91cd\u547d\u540d \u21e7+F9 \u7f16\u8bd1\u5f53\u524d\u5de5\u7a0b Control + R \u8fd0\u884c\u5de5\u7a0b Control + D debug\u5de5\u7a0b","title":"\u5feb\u6377\u952e\u7ec4\u5408\uff08\u5de5\u5177\u76f8\u5173\uff09"},{"location":"util/dev/jetBrains_%E5%BF%AB%E6%8D%B7%E9%94%AE/#_3","text":"\u5feb\u6377\u952e\u7ec4\u5408\uff08\u8c03\u8bd5\u76f8\u5173\uff09 \u4f5c\u7528 F8 \u8fdb\u5165\u4e0b\u4e00\u6b65\uff0c\u5982\u679c\u5f53\u524d\u884c\u65ad\u70b9\u662f\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5219\u4e0d\u8fdb\u5165\u5f53\u524d\u65b9\u6cd5\u4f53\u5185 F7 \u8fdb\u5165\u4e0b\u4e00\u6b65\uff0c\u5982\u679c\u5f53\u524d\u884c\u65ad\u70b9\u662f\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5219\u8fdb\u5165\u5f53\u524d\u65b9\u6cd5\u4f53\u5185\uff0c\u5982\u679c\u8be5\u65b9\u6cd5\u4f53\u8fd8\u6709\u65b9\u6cd5\uff0c\u5219\u4e0d\u4f1a\u8fdb\u5165\u8be5\u5185\u5d4c\u7684\u65b9\u6cd5\u4e2d Shift + F7 \u667a\u80fd\u6b65\u5165\uff0c\u65ad\u70b9\u6240\u5728\u884c\u4e0a\u6709\u591a\u4e2a\u65b9\u6cd5\u8c03\u7528\uff0c\u4f1a\u5f39\u51fa\u8fdb\u5165\u54ea\u4e2a\u65b9\u6cd5 Option + F9 \u8fd0\u884c\u5230\u5149\u6807\u5904\uff0c\u5982\u679c\u5149\u6807\u524d\u6709\u5176\u4ed6\u65ad\u70b9\u4f1a\u8fdb\u5165\u5230\u8be5\u65ad\u70b9 Command + Option + R \u6062\u590d\u7a0b\u5e8f\u8fd0\u884c\uff0c\u5982\u679c\u8be5\u65ad\u70b9\u4e0b\u9762\u4ee3\u7801\u8fd8\u6709\u65ad\u70b9\u5219\u505c\u5728\u4e0b\u4e00\u4e2a\u65ad\u70b9\u4e0a Command + F8 \u5207\u6362\u65ad\u70b9\uff08\u82e5\u5149\u6807\u5f53\u524d\u884c\u6709\u65ad\u70b9\u5219\u53d6\u6d88\u65ad\u70b9\uff0c\u6ca1\u6709\u5219\u52a0\u4e0a\u65ad\u70b9\uff09 Command + Shift + F8 \u67e5\u770b\u65ad\u70b9\u4fe1","title":"\u5feb\u6377\u952e\u7ec4\u5408\uff08\u8c03\u8bd5\u76f8\u5173\uff09"},{"location":"util/dev/main/","text":"\u4ee3\u7406\u5bfc\u81f4curl\u5931\u6548 \u5173\u95ed\u7ec8\u7aef\u914d\u7f6e\u7684\u9ed8\u8ba4\u4ee3\u7406\u5373\u53ef npm install -g json curl xxx -s | json","title":"Main"},{"location":"util/dev/node/","text":"npm config ls npm -g \u53ef\u901a\u8fc7\u547d\u4ee4 npm config get prefix \u67e5\u770b npm \u5b89\u88c5\u8def\u5f84\uff08npm config set prefix \u53ef\u8bbe\u7f6e npm \u5b89\u88c5\u8def\u5f84\uff09\uff1b \u914d\u7f6e\u5b89\u88c5\u4f4d\u7f6e npm config set prefix /Users/matt/workspace/nodeModules npm install -g cnpm npm config list //\u67e5\u770b\u57fa\u672c\u914d\u7f6e npm config list -l //\u67e5\u770b\u6240\u6709\u914d\u7f6e npm config get prefix npm config set registry https://registry.npmmirror.com","title":"Node"},{"location":"util/dev/postman/","text":"postman \u200b","title":"Postman"},{"location":"util/dev/vscode/","text":"+++ title = \"vscode\" date = 2022-01-20T17:25:20+08:00 featured = false comment = true toc = true reward = true weight = 9 categories = [ \"tool\" ] tags = [ ] series = [ ] images = [] aliases = [ ] +++ vscode \u65b0\u5efa\u6587\u4ef6\u5939 vscode\u6253\u5f00\u8be5\u6587\u4ef6\u5939 \u6587\u4ef6->\u9996\u9009\u9879->\u8bbe\u7f6e->\u641c\u7d22auto save off: \u5173\u95ed\u81ea\u52a8\u4fdd\u5b58 afterDelay: XX\u6beb\u79d2\u540e\u81ea\u52a8\u4fdd\u5b58\uff0c\u8fd9\u4e2a\u5c31\u662f\u6211\u6240\u8bb2\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u4e0b\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd onFocusChange: \u5f53\u7126\u70b9\u79fb\u51fa\u7f16\u8f91\u6846 onWindowChange: \u5f53\u7126\u70b9\u79fb\u51faVSCode\u7a97\u53e3 \u8fd9\u91cc\u8bf4\u7684\u662f\u7126\u70b9\u800c\u4e0d\u662f\u9f20\u6807\uff0c\u79fb\u5230\u5916\u9762\u53bb\u540e\u8fd8\u8981\u70b9\u4e00\u4e0b\u611f\u89c9\u8fd8\u662f\u4e0d\u592a\u65b9\u4fbf\uff0c\u8fd9\u4e5f\u662f\u7f51\u4e0a\u641c\u5230\u7684\u5927\u591a\u6570\u7b54\u6848\u3002\u3002\u3002\u6240\u4ee5\u6211\u4eec\u679c\u65ad\u9009\u62e9afterDelay\uff0c\u7136\u540e\u518d\u5982\u4e0b\u56fe\u8bbe\u7f6e\u81ea\u52a8\u4fdd\u5b58\u65f6\u95f4\u95f4\u9694","title":"Vscode"},{"location":"util/docker/docker/","text":"\u6982\u8ff0 \u662f\u4ec0\u4e48 \u4e00\u6b21\u5c01\u88c5\uff0c \u5230\u5904\u8fd0\u884c \u901a\u8fc7\u955c\u50cf\u6784\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0c\u8fd9\u4e2a\u5bb9\u5668\u4f1a\u63d0\u524d\u5b89\u88c5\u4e00\u4e9b\u8f6f\u4ef6 \u5b89\u88c5\u5378\u8f7d \u5b89\u88c5 \u8be5\u6559\u7a0b\u9002\u7528centos7 \u53c2\u8003\u624b\u518c https://docs.docker.com/install/linux/docker-ce/centos/ \u67e5\u770b\u7248\u672c\u53f7 cat /etc/redhat-release \u786e\u4fdd\u7f51\u7edc\u6b63\u5e38\uff0c\u5b89\u88c5gcc yum -y install gcc \u5b89\u88c5gcc-c++ yum -y install gcc-c++ \u5378\u8f7d\u65e7\u7684\u7248\u672c yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-engine \u5b89\u88c5\u9700\u8981\u7684\u8f6f\u4ef6\u5305 yum install -y yum-utils \u8bbe\u7f6estable\u955c\u50cf\u4ed3\u5e93 \u63a8\u8350\u4f7f\u7528\u8fd9\u4e2a yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo \u66f4\u65b0yum\u8f6f\u4ef6\u5305\u7d22\u5f15 yum makecache fast \u5b89\u88c5DOCKER CE yum install docker-ce docker-ce-cli containerd.io \u542f\u52a8docker systemctl start docker docker version \u6d4b\u8bd5 docker run hello-world \u914d\u7f6e\u963f\u91cc\u4e91\u955c\u50cf mkdir -p /etc/docker vim /etc/docker/daemon.json \u963f\u91cc\u4e91 { \"registry-mirrors\": [\"https://l0s7i35d.mirror.aliyuncs.com\"] } systemctl daemon-reload systemctl restart docker \u5378\u8f7d systemctl stop docker yum -y remove docker-ce docker-ce-cli containerd.io rm -rf /var/lib/docker rm -rf /var/lib/containerd \u9519\u8bef \u53ef\u4ee5\u53c2\u8003linux \u76ee\u5f55\u4e0bLinux\u5b89\u88c5\u548c\u57fa\u672c\u914d\u7f6e.md\u4e2d\u7684\u78c1\u76d8\u6269\u5bb9\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u5b89\u88c5\u7684\u65f6\u5019\u63a8\u835050g\u7a7a\u95f4 \u7a7a\u95f4\u4e0d\u8db3 \u57fa\u672c\u7ec4\u6210 \u955c\u50cf\uff1aDocker \u955c\u50cf\uff08Image\uff09\u5c31\u662f\u4e00\u4e2a\u53ea\u8bfb\u7684\u6a21\u677f\u3002\u955c\u50cf\u53ef\u4ee5\u7528\u6765\u521b\u5efa Docker \u5bb9\u5668\uff0c\u4e00\u4e2a\u955c\u50cf\u53ef\u4ee5\u521b\u5efa\u5f88\u591a\u5bb9\u5668\u3002 \u5bb9\u5668\uff1aDocker \u5229\u7528\u5bb9\u5668\uff08Container\uff09\u72ec\u7acb\u8fd0\u884c\u7684\u4e00\u4e2a\u6216\u4e00\u7ec4\u5e94\u7528\u3002\u5bb9\u5668\u662f\u7528\u955c\u50cf\u521b\u5efa\u7684\u8fd0\u884c\u5b9e\u4f8b\u3002 \u4ed3\u5e93\uff1a\u4ed3\u5e93\uff08Repository\uff09\u662f\u96c6\u4e2d\u5b58\u653e\u955c\u50cf\u6587\u4ef6\u7684\u573a\u6240\u3002 \u539f\u7406 \u5982\u4f55\u5de5\u4f5c Docker\u662f\u4e00\u4e2aClient-Server\u7ed3\u6784\u7684\u7cfb\u7edf\uff0cDocker\u5b88\u62a4\u8fdb\u7a0b\u8fd0\u884c\u5728\u4e3b\u673a\u4e0a\uff0c \u7136\u540e\u901a\u8fc7Socket\u8fde\u63a5\u4ece\u5ba2\u6237\u7aef\u8bbf\u95ee\uff0c\u5b88\u62a4\u8fdb\u7a0b\u4ece\u5ba2\u6237\u7aef\u63a5\u53d7\u547d\u4ee4\u5e76\u7ba1\u7406\u8fd0\u884c\u5728\u4e3b\u673a\u4e0a\u7684\u5bb9\u5668\u3002 \u5bb9\u5668\uff0c\u662f\u4e00\u4e2a\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u5c31\u662f\u6211\u4eec\u524d\u9762\u8bf4\u5230\u7684\u96c6\u88c5\u7bb1\u3002 \u4e3a\u4ec0\u4e48\u6bd4vm\u5feb (1)docker\u6709\u7740\u6bd4\u865a\u62df\u673a\u66f4\u5c11\u7684\u62bd\u8c61\u5c42\u3002\u7531\u4e8ddocker\u4e0d\u9700\u8981Hypervisor\u5b9e\u73b0\u786c\u4ef6\u8d44\u6e90\u865a\u62df\u5316,\u8fd0\u884c\u5728docker\u5bb9\u5668\u4e0a\u7684\u7a0b\u5e8f\u76f4\u63a5\u4f7f\u7528\u7684\u90fd\u662f\u5b9e\u9645\u7269\u7406\u673a\u7684\u786c\u4ef6\u8d44\u6e90\u3002\u56e0\u6b64\u5728CPU\u3001\u5185\u5b58\u5229\u7528\u7387\u4e0adocker\u5c06\u4f1a\u5728\u6548\u7387\u4e0a\u6709\u660e\u663e\u4f18\u52bf\u3002 (2)docker\u5229\u7528\u7684\u662f\u5bbf\u4e3b\u673a\u7684\u5185\u6838,\u800c\u4e0d\u9700\u8981Guest OS\u3002\u56e0\u6b64,\u5f53\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\u65f6,docker\u4e0d\u9700\u8981\u548c\u865a\u62df\u673a\u4e00\u6837\u91cd\u65b0\u52a0\u8f7d\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u3002\u4ecd\u800c\u907f\u514d\u5f15\u5bfb\u3001\u52a0\u8f7d\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u8fd4\u4e2a\u6bd4\u8f83\u8d39\u65f6\u8d39\u8d44\u6e90\u7684\u8fc7\u7a0b,\u5f53\u65b0\u5efa\u4e00\u4e2a\u865a\u62df\u673a\u65f6,\u865a\u62df\u673a\u8f6f\u4ef6\u9700\u8981\u52a0\u8f7dGuest OS,\u8fd4\u4e2a\u65b0\u5efa\u8fc7\u7a0b\u662f\u5206\u949f\u7ea7\u522b\u7684\u3002\u800cdocker\u7531\u4e8e\u76f4\u63a5\u5229\u7528\u5bbf\u4e3b\u673a\u7684\u64cd\u4f5c\u7cfb\u7edf,\u5219\u7701\u7565\u4e86\u8fd4\u4e2a\u8fc7\u7a0b,\u56e0\u6b64\u65b0\u5efa\u4e00\u4e2adocker\u5bb9\u5668\u53ea\u9700\u8981\u51e0\u79d2\u949f\u3002 \u5e38\u7528\u547d\u4ee4 \u5e2e\u52a9\u547d\u4ee4 docker version docker info docker --help \u955c\u50cf\u547d\u4ee4 docker images\u5217\u51fa\u672c\u5730\u4e3b\u673a\u4e0a\u7684\u955c\u50cf docker images REPOSITORY\uff1a\u8868\u793a\u955c\u50cf\u7684\u4ed3\u5e93\u6e90 TAG\uff1a\u955c\u50cf\u7684\u6807\u7b7e IMAGE ID\uff1a\u955c\u50cfID CREATED\uff1a\u955c\u50cf\u521b\u5efa\u65f6\u95f4 SIZE\uff1a\u955c\u50cf\u5927\u5c0f [root@iz2zeiw2bqogm8ir3ugpvqz ~]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE hello-world latest d1165f221234 5 months ago 13.3kB \u540c\u4e00\u4ed3\u5e93\u6e90\u53ef\u4ee5\u6709\u591a\u4e2a TAG\uff0c\u4ee3\u8868\u8fd9\u4e2a\u4ed3\u5e93\u6e90\u7684\u4e0d\u540c\u4e2a\u7248\u672c\uff0c\u6211\u4eec\u4f7f\u7528 REPOSITORY:TAG \u6765\u5b9a\u4e49\u4e0d\u540c\u7684\u955c\u50cf\u3002 \u5982\u679c\u4f60\u4e0d\u6307\u5b9a\u4e00\u4e2a\u955c\u50cf\u7684\u7248\u672c\u6807\u7b7e\uff0c\u4f8b\u5982\u4f60\u53ea\u4f7f\u7528 ubuntu\uff0cdocker \u5c06\u9ed8\u8ba4\u4f7f\u7528 ubuntu:latest \u955c\u50cf -a :\u5217\u51fa\u672c\u5730\u6240\u6709\u7684\u955c\u50cf\uff08\u542b\u4e2d\u95f4\u6620\u50cf\u5c42\uff09 -q :\u53ea\u663e\u793a\u955c\u50cfID\u3002 --digests :\u663e\u793a\u955c\u50cf\u7684\u6458\u8981\u4fe1\u606f --no-trunc :\u663e\u793a\u5b8c\u6574\u7684\u955c\u50cf\u4fe1\u606f docker images --digests docker search docker search:\u4ecedocker hub\u4e2d\u641c\uff0c\u4e0b\u8f7d\u4ece\u963f\u91cc\u4e91\u955c\u50cf docker search [OPTIONS] \u955c\u50cf\u540d\u5b57 https://hub.docker.com docker search tomcat --no-trunc : \u663e\u793a\u5b8c\u6574\u7684\u955c\u50cf\u63cf\u8ff0 docker pull docker pull \u955c\u50cf\u540d\u5b57[:TAG] docker pull tomcat docker rmi docker rmi \u67d0\u4e2aXXX\u955c\u50cf\u540d\u5b57ID \u5220\u9664\u5355\u4e2a docker rmi -f \u955c\u50cfID \u5220\u9664\u591a\u4e2a docker rmi -f \u955c\u50cf\u540d1:TAG \u955c\u50cf\u540d2:TAG \u5220\u9664\u5168\u90e8 docker rmi -f $(docker images -qa) \u5bb9\u5668\u547d\u4ee4 \u65b0\u5efa\u5e76\u542f\u52a8\u5bb9\u5668 docker run [OPTIONS] IMAGE [COMMAND] [ARG...] OPTIONS\u8bf4\u660e\uff08\u5e38\u7528\uff09\uff1a\u6709\u4e9b\u662f\u4e00\u4e2a\u51cf\u53f7\uff0c\u6709\u4e9b\u662f\u4e24\u4e2a\u51cf\u53f7 --name=\"\u5bb9\u5668\u65b0\u540d\u5b57\": \u4e3a\u5bb9\u5668\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0\uff1b -d: \u540e\u53f0\u8fd0\u884c\u5bb9\u5668\uff0c\u5e76\u8fd4\u56de\u5bb9\u5668ID\uff0c\u4e5f\u5373\u542f\u52a8\u5b88\u62a4\u5f0f\u5bb9\u5668\uff1b -i\uff1a\u4ee5\u4ea4\u4e92\u6a21\u5f0f\u8fd0\u884c\u5bb9\u5668\uff0c\u901a\u5e38\u4e0e -t \u540c\u65f6\u4f7f\u7528\uff1b -t\uff1a\u4e3a\u5bb9\u5668\u91cd\u65b0\u5206\u914d\u4e00\u4e2a\u4f2a\u8f93\u5165\u7ec8\u7aef\uff0c\u901a\u5e38\u4e0e -i \u540c\u65f6\u4f7f\u7528\uff1b -P: \u968f\u673a\u7aef\u53e3\u6620\u5c04\uff1b -p: \u6307\u5b9a\u7aef\u53e3\u6620\u5c04\uff0c\u6709\u4ee5\u4e0b\u56db\u79cd\u683c\u5f0f ip:hostPort:containerPort ip::containerPort hostPort:containerPort containerPort docker run -it centos /bin/bash \u9000\u51fa\u5bb9\u5668 \u5bb9\u5668\u4e0d\u505c\u6b62 ctrl+p+q \u5bb9\u5668\u505c\u6b62 exit \u5217\u51fa\u5f53\u524d\u8fd0\u884c\u7684\u5bb9\u5668 docker ps [OPTIONS] docker ps OPTIONS\u8bf4\u660e\uff08\u5e38\u7528\uff09\uff1a -a :\u5217\u51fa\u5f53\u524d\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668+\u5386\u53f2\u4e0a\u8fd0\u884c\u8fc7\u7684 -l :\u663e\u793a\u6700\u8fd1\u521b\u5efa\u7684\u5bb9\u5668\u3002 -n\uff1a\u663e\u793a\u6700\u8fd1n\u4e2a\u521b\u5efa\u7684\u5bb9\u5668\u3002 -q :\u9759\u9ed8\u6a21\u5f0f\uff0c\u53ea\u663e\u793a\u5bb9\u5668\u7f16\u53f7\u3002 --no-trunc :\u4e0d\u622a\u65ad\u8f93\u51fa\u3002 \u5e38\u7528 docker ps -qa docker ps -a \u542f\u52a8\u5bb9\u5668 //docker start \u5bb9\u5668ID\u6216\u8005\u5bb9\u5668\u540d docker start centos:centos7 \u91cd\u542f\u5bb9\u5668 docker restart \u5bb9\u5668ID\u6216\u8005\u5bb9\u5668\u540d \u505c\u6b62\u5bb9\u5668 docker stop \u5bb9\u5668ID\u6216\u8005\u5bb9\u5668\u540d \u5f3a\u5236\u505c\u6b62\u5bb9\u5668 docker kill \u5bb9\u5668ID\u6216\u8005\u5bb9\u5668\u540d \u5220\u9664\u5df2\u505c\u6b62\u7684\u5bb9\u5668 docker rm \u5bb9\u5668ID \u4e00\u6b21\u5220\u9664\u591a\u4e2a docker rm -f $(docker ps -a -q) docker ps -a -q | xargs docker rm \u8fdb\u5165\u5bb9\u5668 docker exec -it \u5bb9\u5668id /bin/baah docker attach \u5bb9\u5668i \u91cd\u8981\u547d\u4ee4 \u4ee5\u540e\u53f0\u65b9\u5f0f\u542f\u52a8 docker run -d \u5bb9\u5668\u540d docker run -d tomcat \u67e5\u770b\u5bb9\u5668\u65e5\u5fd7 docker logs -f -t --tail \u5bb9\u5668ID -t \u662f\u52a0\u5165\u65f6\u95f4\u6233 -f \u8ddf\u968f\u6700\u65b0\u7684\u65e5\u5fd7\u6253\u5370 --tail \u6570\u5b57 \u663e\u793a\u6700\u540e\u591a\u5c11\u6761 \u67e5\u770b\u5bb9\u5668\u5185\u8fd0\u884c\u7684\u8fdb\u7a0b docker top \u5bb9\u5668ID \u67e5\u770b\u5bb9\u5668\u5185\u90e8\u7ec6\u8282 docker inspect \u5bb9\u5668ID \u8fdb\u5165\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u5e76\u4ee5\u547d\u4ee4\u884c\u4ea4\u4e92 docker exec -it \u5bb9\u5668ID bashShell docker exec -it xxccc /bin/bash docker attach \u5bb9\u5668ID \u533a\u522b attach \u76f4\u63a5\u8fdb\u5165\u5bb9\u5668\u542f\u52a8\u547d\u4ee4\u7684\u7ec8\u7aef\uff0c\u4e0d\u4f1a\u542f\u52a8\u65b0\u7684\u8fdb\u7a0b exec \u662f\u5728\u5bb9\u5668\u4e2d\u6253\u5f00\u65b0\u7684\u7ec8\u7aef\uff0c\u5e76\u4e14\u53ef\u4ee5\u542f\u52a8\u65b0\u7684\u8fdb\u7a0b \u4ece\u5bb9\u5668\u5185\u62f7\u8d1d\u6587\u4ef6\u5230\u4e3b\u673a\u4e0a docker cp \u5bb9\u5668ID:\u5bb9\u5668\u5185\u8def\u5f84 \u76ee\u7684\u4e3b\u673a\u8def\u5f84 attach Attach to a running container # \u5f53\u524d shell \u4e0b attach \u8fde\u63a5\u6307\u5b9a\u8fd0\u884c\u955c\u50cf build Build an image from a Dockerfile # \u901a\u8fc7 Dockerfile \u5b9a\u5236\u955c\u50cf commit Create a new image from a container changes # \u63d0\u4ea4\u5f53\u524d\u5bb9\u5668\u4e3a\u65b0\u7684\u955c\u50cf cp Copy files/folders from the containers filesystem to the host path #\u4ece\u5bb9\u5668\u4e2d\u62f7\u8d1d\u6307\u5b9a\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u5230\u5bbf\u4e3b\u673a\u4e2d create Create a new container # \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bb9\u5668\uff0c\u540c run\uff0c\u4f46\u4e0d\u542f\u52a8\u5bb9\u5668 diff Inspect changes on a container's filesystem # \u67e5\u770b docker \u5bb9\u5668\u53d8\u5316 events Get real time events from the server # \u4ece docker \u670d\u52a1\u83b7\u53d6\u5bb9\u5668\u5b9e\u65f6\u4e8b\u4ef6 exec Run a command in an existing container # \u5728\u5df2\u5b58\u5728\u7684\u5bb9\u5668\u4e0a\u8fd0\u884c\u547d\u4ee4 export Stream the contents of a container as a tar archive # \u5bfc\u51fa\u5bb9\u5668\u7684\u5185\u5bb9\u6d41\u4f5c\u4e3a\u4e00\u4e2a tar \u5f52\u6863\u6587\u4ef6[\u5bf9\u5e94 import ] history Show the history of an image # \u5c55\u793a\u4e00\u4e2a\u955c\u50cf\u5f62\u6210\u5386\u53f2 images List images # \u5217\u51fa\u7cfb\u7edf\u5f53\u524d\u955c\u50cf import Create a new filesystem image from the contents of a tarball # \u4ecetar\u5305\u4e2d\u7684\u5185\u5bb9\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u7cfb\u7edf\u6620\u50cf[\u5bf9\u5e94export] info Display system-wide information # \u663e\u793a\u7cfb\u7edf\u76f8\u5173\u4fe1\u606f inspect Return low-level information on a container # \u67e5\u770b\u5bb9\u5668\u8be6\u7ec6\u4fe1\u606f kill Kill a running container # kill \u6307\u5b9a docker \u5bb9\u5668 load Load an image from a tar archive # \u4ece\u4e00\u4e2a tar \u5305\u4e2d\u52a0\u8f7d\u4e00\u4e2a\u955c\u50cf[\u5bf9\u5e94 save] login Register or Login to the docker registry server # \u6ce8\u518c\u6216\u8005\u767b\u9646\u4e00\u4e2a docker \u6e90\u670d\u52a1\u5668 logout Log out from a Docker registry server # \u4ece\u5f53\u524d Docker registry \u9000\u51fa logs Fetch the logs of a container # \u8f93\u51fa\u5f53\u524d\u5bb9\u5668\u65e5\u5fd7\u4fe1\u606f port Lookup the public-facing port which is NAT-ed to PRIVATE_PORT # \u67e5\u770b\u6620\u5c04\u7aef\u53e3\u5bf9\u5e94\u7684\u5bb9\u5668\u5185\u90e8\u6e90\u7aef\u53e3 pause Pause all processes within a container # \u6682\u505c\u5bb9\u5668 ps List containers # \u5217\u51fa\u5bb9\u5668\u5217\u8868 pull Pull an image or a repository from the docker registry server # \u4ecedocker\u955c\u50cf\u6e90\u670d\u52a1\u5668\u62c9\u53d6\u6307\u5b9a\u955c\u50cf\u6216\u8005\u5e93\u955c\u50cf push Push an image or a repository to the docker registry server # \u63a8\u9001\u6307\u5b9a\u955c\u50cf\u6216\u8005\u5e93\u955c\u50cf\u81f3docker\u6e90\u670d\u52a1\u5668 restart Restart a running container # \u91cd\u542f\u8fd0\u884c\u7684\u5bb9\u5668 rm Remove one or more containers # \u79fb\u9664\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5bb9\u5668 rmi Remove one or more images # \u79fb\u9664\u4e00\u4e2a\u6216\u591a\u4e2a\u955c\u50cf[\u65e0\u5bb9\u5668\u4f7f\u7528\u8be5\u955c\u50cf\u624d\u53ef\u5220\u9664\uff0c\u5426\u5219\u9700\u5220\u9664\u76f8\u5173\u5bb9\u5668\u624d\u53ef\u7ee7\u7eed\u6216 -f \u5f3a\u5236\u5220\u9664] run Run a command in a new container # \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bb9\u5668\u5e76\u8fd0\u884c\u4e00\u4e2a\u547d\u4ee4 save Save an image to a tar archive # \u4fdd\u5b58\u4e00\u4e2a\u955c\u50cf\u4e3a\u4e00\u4e2a tar \u5305[\u5bf9\u5e94 load] search Search for an image on the Docker Hub # \u5728 docker hub \u4e2d\u641c\u7d22\u955c\u50cf start Start a stopped containers # \u542f\u52a8\u5bb9\u5668 stop Stop a running containers # \u505c\u6b62\u5bb9\u5668 tag Tag an image into a repository # \u7ed9\u6e90\u4e2d\u955c\u50cf\u6253\u6807\u7b7e top Lookup the running processes of a container # \u67e5\u770b\u5bb9\u5668\u4e2d\u8fd0\u884c\u7684\u8fdb\u7a0b\u4fe1\u606f unpause Unpause a paused container # \u53d6\u6d88\u6682\u505c\u5bb9\u5668 version Show the docker version information # \u67e5\u770b docker \u7248\u672c\u53f7 wait Block until a container stops, then print its exit code # \u622a\u53d6\u5bb9\u5668\u505c\u6b62\u65f6\u7684\u9000\u51fa\u72b6\u6001\u503c \u955c\u50cf \u662f\u4ec0\u4e48 \u4e00\u79cd\u53ef\u4ee5\u521b\u5efa\u8fd0\u884c\u73af\u5883\u7684\u8f6f\u4ef6 \u7279\u70b9 Docker\u955c\u50cf\u90fd\u662f\u53ea\u8bfb\u7684 \u5f53\u5bb9\u5668\u542f\u52a8\u65f6\uff0c\u4e00\u4e2a\u65b0\u7684\u53ef\u5199\u5c42\u88ab\u52a0\u8f7d\u5230\u955c\u50cf\u7684\u9876\u90e8\u3002 \u8fd9\u4e00\u5c42\u901a\u5e38\u88ab\u79f0\u4f5c\u201c\u5bb9\u5668\u5c42\u201d\uff0c\u201c\u5bb9\u5668\u5c42\u201d\u4e4b\u4e0b\u7684\u90fd\u53eb\u201c\u955c\u50cf\u5c42\u201d\u3002 docker commit docker commit\u63d0\u4ea4\u5bb9\u5668\u526f\u672c\u4f7f\u4e4b\u6210\u4e3a\u4e00\u4e2a\u65b0\u7684\u955c\u50cf docker commit -m=\u201c\u63d0\u4ea4\u7684\u63cf\u8ff0\u4fe1\u606f\u201d -a=\u201c\u4f5c\u8005\u201d \u5bb9\u5668ID \u8981\u521b\u5efa\u7684\u76ee\u6807\u955c\u50cf\u540d:[\u6807\u7b7e\u540d] docker run -it -p 8080:8080 tomcat cd /usr/local/tomcat/webapps touch a.txt docker commit -m=\"my centos\" -a=\"matt\" xxcc mcentos:1.0 \u5bb9\u5668\u6570\u636e\u5377 \u53ef\u4ee5\u5e72\u4ec0\u4e48 \u5bb9\u5668\u7684\u6301\u4e45\u5316 \u5bb9\u5668\u5efa\u7ee7\u627f+\u5171\u4eab\u6570\u636e \u6570\u636e\u5377 \u547d\u4ee4 docker run -it -v /\u5bbf\u4e3b\u673a\u7edd\u5bf9\u8def\u5f84\u76ee\u5f55:/\u5bb9\u5668\u5185\u76ee\u5f55 \u955c\u50cf\u540d # \u67e5\u770b\u5bb9\u5668\u662f\u5426\u6302\u8f7d\u6210\u529f docker inspect \u5bb9\u5668ID # \u53ea\u8bfb docker run -it -v /\u5bbf\u4e3b\u673a\u7edd\u5bf9\u8def\u5f84\u76ee\u5f55:/\u5bb9\u5668\u5185\u76ee\u5f55:ro \u955c\u50cf\u540d \u5bb9\u5668\u505c\u6b62\uff0c\u5bf9\u5bbf\u4e3b\u673a\u7684\u4fee\u6539\u4ecd\u53ef\u4ee5\u5bf9\u5bb9\u5668\u53d1\u751f\u6539\u53d8 docker run -it -v /home/matt/dataVolumeContainer:/dataVolumeContainer centos /bin/bash Dockerfile # volume test FROM centos VOLUME [\"/dataVolumeContainer1\",\"/dataVolumeContainer2\"] CMD echo \"finished,--------success1\" CMD /bin/bash docker build -f /home/matt/docker/Dockerfile -t matt/centos . \u955c\u50cf\u662f\u5343\u5c42\u997c\uff0c\u4e00\u4e2a\u955c\u50cf\u53ef\u80fd\u591a\u5c42\u7ec4\u6210 !> \u4e00\u6bb5\u91cd\u8981\u7684\u5185\u5bb9\uff0c\u968f\u673a\u7aef\u53e3\u53f7 docker run -dit -P 8080 tomcat \u5bbf\u4e3b\u673a\u7aef\u53e3\u968f\u673a\u5206\u914d \u95ee\u9898 \u6ca1\u9047\u5230 Docker\u6302\u8f7d\u4e3b\u673a\u76ee\u5f55Docker\u8bbf\u95ee\u51fa\u73b0cannot open directory .: Permission denied \u89e3\u51b3\u529e\u6cd5\uff1a\u5728\u6302\u8f7d\u76ee\u5f55\u540e\u591a\u52a0\u4e00\u4e2a--privileged=true\u53c2\u6570\u5373\u53ef \u6570\u636e\u5377\u5bb9\u5668 \u662f\u4ec0\u4e48 \u547d\u540d\u7684\u5bb9\u5668\u6302\u8f7d\u6570\u636e\u5377\uff0c\u5176\u5b83\u5bb9\u5668\u901a\u8fc7\u6302\u8f7d\u8fd9\u4e2a(\u7236\u5bb9\u5668)\u5b9e\u73b0\u6570\u636e\u5171\u4eab\uff0c\u6302\u8f7d\u6570\u636e\u5377\u7684\u5bb9\u5668\uff0c\u79f0\u4e4b\u4e3a\u6570\u636e\u5377\u5bb9\u5668 c1 docker run -it --name c1 matt/centos c2\u7ee7\u627fc1 docker run -it --name c2 --volumes-from c1 matt/centos docker run -it --name c3 --volumes-from c1 matt/centos c2\uff0cc3\u6570\u636e\u5c31\u53ef\u4ee5\u5171\u4eab\uff0c\u5373\u4f7f\u5220\u9664c1\uff0c\u4ecd\u7136\u53ef\u4ee5\u5171\u4eab \u5bb9\u5668\u4e4b\u95f4\u914d\u7f6e\u4fe1\u606f\u7684\u4f20\u9012\uff0c\u6570\u636e\u5377\u7684\u751f\u547d\u5468\u671f\u4e00\u76f4\u6301\u7eed\u5230\u6ca1\u6709\u5bb9\u5668\u4f7f\u7528\u5b83\u4e3a\u6b62","title":"Docker"},{"location":"util/docker/docker/#_1","text":"","title":"\u6982\u8ff0"},{"location":"util/docker/docker/#_2","text":"\u4e00\u6b21\u5c01\u88c5\uff0c \u5230\u5904\u8fd0\u884c \u901a\u8fc7\u955c\u50cf\u6784\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0c\u8fd9\u4e2a\u5bb9\u5668\u4f1a\u63d0\u524d\u5b89\u88c5\u4e00\u4e9b\u8f6f\u4ef6","title":"\u662f\u4ec0\u4e48"},{"location":"util/docker/docker/#_3","text":"","title":"\u5b89\u88c5\u5378\u8f7d"},{"location":"util/docker/docker/#_4","text":"\u8be5\u6559\u7a0b\u9002\u7528centos7","title":"\u5b89\u88c5"},{"location":"util/docker/docker/#_5","text":"https://docs.docker.com/install/linux/docker-ce/centos/","title":"\u53c2\u8003\u624b\u518c"},{"location":"util/docker/docker/#_6","text":"cat /etc/redhat-release","title":"\u67e5\u770b\u7248\u672c\u53f7"},{"location":"util/docker/docker/#gcc","text":"yum -y install gcc","title":"\u786e\u4fdd\u7f51\u7edc\u6b63\u5e38\uff0c\u5b89\u88c5gcc"},{"location":"util/docker/docker/#gcc-c","text":"yum -y install gcc-c++","title":"\u5b89\u88c5gcc-c++"},{"location":"util/docker/docker/#_7","text":"yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-engine","title":"\u5378\u8f7d\u65e7\u7684\u7248\u672c"},{"location":"util/docker/docker/#_8","text":"yum install -y yum-utils","title":"\u5b89\u88c5\u9700\u8981\u7684\u8f6f\u4ef6\u5305"},{"location":"util/docker/docker/#stable","text":"\u63a8\u8350\u4f7f\u7528\u8fd9\u4e2a yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo","title":"\u8bbe\u7f6estable\u955c\u50cf\u4ed3\u5e93"},{"location":"util/docker/docker/#yum","text":"yum makecache fast","title":"\u66f4\u65b0yum\u8f6f\u4ef6\u5305\u7d22\u5f15"},{"location":"util/docker/docker/#docker-ce","text":"yum install docker-ce docker-ce-cli containerd.io","title":"\u5b89\u88c5DOCKER CE"},{"location":"util/docker/docker/#docker","text":"systemctl start docker docker version","title":"\u542f\u52a8docker"},{"location":"util/docker/docker/#_9","text":"docker run hello-world","title":"\u6d4b\u8bd5"},{"location":"util/docker/docker/#_10","text":"mkdir -p /etc/docker vim /etc/docker/daemon.json","title":"\u914d\u7f6e\u963f\u91cc\u4e91\u955c\u50cf"},{"location":"util/docker/docker/#_11","text":"{ \"registry-mirrors\": [\"https://l0s7i35d.mirror.aliyuncs.com\"] } systemctl daemon-reload systemctl restart docker","title":"\u963f\u91cc\u4e91"},{"location":"util/docker/docker/#_12","text":"systemctl stop docker yum -y remove docker-ce docker-ce-cli containerd.io rm -rf /var/lib/docker rm -rf /var/lib/containerd","title":"\u5378\u8f7d"},{"location":"util/docker/docker/#_13","text":"\u53ef\u4ee5\u53c2\u8003linux \u76ee\u5f55\u4e0bLinux\u5b89\u88c5\u548c\u57fa\u672c\u914d\u7f6e.md\u4e2d\u7684\u78c1\u76d8\u6269\u5bb9\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u5b89\u88c5\u7684\u65f6\u5019\u63a8\u835050g\u7a7a\u95f4 \u7a7a\u95f4\u4e0d\u8db3","title":"\u9519\u8bef"},{"location":"util/docker/docker/#_14","text":"\u955c\u50cf\uff1aDocker \u955c\u50cf\uff08Image\uff09\u5c31\u662f\u4e00\u4e2a\u53ea\u8bfb\u7684\u6a21\u677f\u3002\u955c\u50cf\u53ef\u4ee5\u7528\u6765\u521b\u5efa Docker \u5bb9\u5668\uff0c\u4e00\u4e2a\u955c\u50cf\u53ef\u4ee5\u521b\u5efa\u5f88\u591a\u5bb9\u5668\u3002 \u5bb9\u5668\uff1aDocker \u5229\u7528\u5bb9\u5668\uff08Container\uff09\u72ec\u7acb\u8fd0\u884c\u7684\u4e00\u4e2a\u6216\u4e00\u7ec4\u5e94\u7528\u3002\u5bb9\u5668\u662f\u7528\u955c\u50cf\u521b\u5efa\u7684\u8fd0\u884c\u5b9e\u4f8b\u3002 \u4ed3\u5e93\uff1a\u4ed3\u5e93\uff08Repository\uff09\u662f\u96c6\u4e2d\u5b58\u653e\u955c\u50cf\u6587\u4ef6\u7684\u573a\u6240\u3002","title":"\u57fa\u672c\u7ec4\u6210"},{"location":"util/docker/docker/#_15","text":"","title":"\u539f\u7406"},{"location":"util/docker/docker/#_16","text":"Docker\u662f\u4e00\u4e2aClient-Server\u7ed3\u6784\u7684\u7cfb\u7edf\uff0cDocker\u5b88\u62a4\u8fdb\u7a0b\u8fd0\u884c\u5728\u4e3b\u673a\u4e0a\uff0c \u7136\u540e\u901a\u8fc7Socket\u8fde\u63a5\u4ece\u5ba2\u6237\u7aef\u8bbf\u95ee\uff0c\u5b88\u62a4\u8fdb\u7a0b\u4ece\u5ba2\u6237\u7aef\u63a5\u53d7\u547d\u4ee4\u5e76\u7ba1\u7406\u8fd0\u884c\u5728\u4e3b\u673a\u4e0a\u7684\u5bb9\u5668\u3002 \u5bb9\u5668\uff0c\u662f\u4e00\u4e2a\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u5c31\u662f\u6211\u4eec\u524d\u9762\u8bf4\u5230\u7684\u96c6\u88c5\u7bb1\u3002","title":"\u5982\u4f55\u5de5\u4f5c"},{"location":"util/docker/docker/#vm","text":"(1)docker\u6709\u7740\u6bd4\u865a\u62df\u673a\u66f4\u5c11\u7684\u62bd\u8c61\u5c42\u3002\u7531\u4e8ddocker\u4e0d\u9700\u8981Hypervisor\u5b9e\u73b0\u786c\u4ef6\u8d44\u6e90\u865a\u62df\u5316,\u8fd0\u884c\u5728docker\u5bb9\u5668\u4e0a\u7684\u7a0b\u5e8f\u76f4\u63a5\u4f7f\u7528\u7684\u90fd\u662f\u5b9e\u9645\u7269\u7406\u673a\u7684\u786c\u4ef6\u8d44\u6e90\u3002\u56e0\u6b64\u5728CPU\u3001\u5185\u5b58\u5229\u7528\u7387\u4e0adocker\u5c06\u4f1a\u5728\u6548\u7387\u4e0a\u6709\u660e\u663e\u4f18\u52bf\u3002 (2)docker\u5229\u7528\u7684\u662f\u5bbf\u4e3b\u673a\u7684\u5185\u6838,\u800c\u4e0d\u9700\u8981Guest OS\u3002\u56e0\u6b64,\u5f53\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\u65f6,docker\u4e0d\u9700\u8981\u548c\u865a\u62df\u673a\u4e00\u6837\u91cd\u65b0\u52a0\u8f7d\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u3002\u4ecd\u800c\u907f\u514d\u5f15\u5bfb\u3001\u52a0\u8f7d\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u8fd4\u4e2a\u6bd4\u8f83\u8d39\u65f6\u8d39\u8d44\u6e90\u7684\u8fc7\u7a0b,\u5f53\u65b0\u5efa\u4e00\u4e2a\u865a\u62df\u673a\u65f6,\u865a\u62df\u673a\u8f6f\u4ef6\u9700\u8981\u52a0\u8f7dGuest OS,\u8fd4\u4e2a\u65b0\u5efa\u8fc7\u7a0b\u662f\u5206\u949f\u7ea7\u522b\u7684\u3002\u800cdocker\u7531\u4e8e\u76f4\u63a5\u5229\u7528\u5bbf\u4e3b\u673a\u7684\u64cd\u4f5c\u7cfb\u7edf,\u5219\u7701\u7565\u4e86\u8fd4\u4e2a\u8fc7\u7a0b,\u56e0\u6b64\u65b0\u5efa\u4e00\u4e2adocker\u5bb9\u5668\u53ea\u9700\u8981\u51e0\u79d2\u949f\u3002","title":"\u4e3a\u4ec0\u4e48\u6bd4vm\u5feb"},{"location":"util/docker/docker/#_17","text":"","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"util/docker/docker/#_18","text":"docker version docker info docker --help","title":"\u5e2e\u52a9\u547d\u4ee4"},{"location":"util/docker/docker/#_19","text":"","title":"\u955c\u50cf\u547d\u4ee4"},{"location":"util/docker/docker/#docker-images","text":"docker images REPOSITORY\uff1a\u8868\u793a\u955c\u50cf\u7684\u4ed3\u5e93\u6e90 TAG\uff1a\u955c\u50cf\u7684\u6807\u7b7e IMAGE ID\uff1a\u955c\u50cfID CREATED\uff1a\u955c\u50cf\u521b\u5efa\u65f6\u95f4 SIZE\uff1a\u955c\u50cf\u5927\u5c0f [root@iz2zeiw2bqogm8ir3ugpvqz ~]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE hello-world latest d1165f221234 5 months ago 13.3kB \u540c\u4e00\u4ed3\u5e93\u6e90\u53ef\u4ee5\u6709\u591a\u4e2a TAG\uff0c\u4ee3\u8868\u8fd9\u4e2a\u4ed3\u5e93\u6e90\u7684\u4e0d\u540c\u4e2a\u7248\u672c\uff0c\u6211\u4eec\u4f7f\u7528 REPOSITORY:TAG \u6765\u5b9a\u4e49\u4e0d\u540c\u7684\u955c\u50cf\u3002 \u5982\u679c\u4f60\u4e0d\u6307\u5b9a\u4e00\u4e2a\u955c\u50cf\u7684\u7248\u672c\u6807\u7b7e\uff0c\u4f8b\u5982\u4f60\u53ea\u4f7f\u7528 ubuntu\uff0cdocker \u5c06\u9ed8\u8ba4\u4f7f\u7528 ubuntu:latest \u955c\u50cf -a :\u5217\u51fa\u672c\u5730\u6240\u6709\u7684\u955c\u50cf\uff08\u542b\u4e2d\u95f4\u6620\u50cf\u5c42\uff09 -q :\u53ea\u663e\u793a\u955c\u50cfID\u3002 --digests :\u663e\u793a\u955c\u50cf\u7684\u6458\u8981\u4fe1\u606f --no-trunc :\u663e\u793a\u5b8c\u6574\u7684\u955c\u50cf\u4fe1\u606f docker images --digests","title":"docker images\u5217\u51fa\u672c\u5730\u4e3b\u673a\u4e0a\u7684\u955c\u50cf"},{"location":"util/docker/docker/#docker-search","text":"docker search:\u4ecedocker hub\u4e2d\u641c\uff0c\u4e0b\u8f7d\u4ece\u963f\u91cc\u4e91\u955c\u50cf docker search [OPTIONS] \u955c\u50cf\u540d\u5b57 https://hub.docker.com docker search tomcat --no-trunc : \u663e\u793a\u5b8c\u6574\u7684\u955c\u50cf\u63cf\u8ff0","title":"docker search"},{"location":"util/docker/docker/#docker-pull","text":"docker pull \u955c\u50cf\u540d\u5b57[:TAG] docker pull tomcat","title":"docker pull"},{"location":"util/docker/docker/#docker-rmi","text":"docker rmi \u67d0\u4e2aXXX\u955c\u50cf\u540d\u5b57ID \u5220\u9664\u5355\u4e2a docker rmi -f \u955c\u50cfID \u5220\u9664\u591a\u4e2a docker rmi -f \u955c\u50cf\u540d1:TAG \u955c\u50cf\u540d2:TAG \u5220\u9664\u5168\u90e8 docker rmi -f $(docker images -qa)","title":"docker rmi"},{"location":"util/docker/docker/#_20","text":"","title":"\u5bb9\u5668\u547d\u4ee4"},{"location":"util/docker/docker/#_21","text":"docker run [OPTIONS] IMAGE [COMMAND] [ARG...] OPTIONS\u8bf4\u660e\uff08\u5e38\u7528\uff09\uff1a\u6709\u4e9b\u662f\u4e00\u4e2a\u51cf\u53f7\uff0c\u6709\u4e9b\u662f\u4e24\u4e2a\u51cf\u53f7 --name=\"\u5bb9\u5668\u65b0\u540d\u5b57\": \u4e3a\u5bb9\u5668\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0\uff1b -d: \u540e\u53f0\u8fd0\u884c\u5bb9\u5668\uff0c\u5e76\u8fd4\u56de\u5bb9\u5668ID\uff0c\u4e5f\u5373\u542f\u52a8\u5b88\u62a4\u5f0f\u5bb9\u5668\uff1b -i\uff1a\u4ee5\u4ea4\u4e92\u6a21\u5f0f\u8fd0\u884c\u5bb9\u5668\uff0c\u901a\u5e38\u4e0e -t \u540c\u65f6\u4f7f\u7528\uff1b -t\uff1a\u4e3a\u5bb9\u5668\u91cd\u65b0\u5206\u914d\u4e00\u4e2a\u4f2a\u8f93\u5165\u7ec8\u7aef\uff0c\u901a\u5e38\u4e0e -i \u540c\u65f6\u4f7f\u7528\uff1b -P: \u968f\u673a\u7aef\u53e3\u6620\u5c04\uff1b -p: \u6307\u5b9a\u7aef\u53e3\u6620\u5c04\uff0c\u6709\u4ee5\u4e0b\u56db\u79cd\u683c\u5f0f ip:hostPort:containerPort ip::containerPort hostPort:containerPort containerPort docker run -it centos /bin/bash","title":"\u65b0\u5efa\u5e76\u542f\u52a8\u5bb9\u5668"},{"location":"util/docker/docker/#_22","text":"\u5bb9\u5668\u4e0d\u505c\u6b62 ctrl+p+q \u5bb9\u5668\u505c\u6b62 exit","title":"\u9000\u51fa\u5bb9\u5668"},{"location":"util/docker/docker/#_23","text":"docker ps [OPTIONS] docker ps OPTIONS\u8bf4\u660e\uff08\u5e38\u7528\uff09\uff1a -a :\u5217\u51fa\u5f53\u524d\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668+\u5386\u53f2\u4e0a\u8fd0\u884c\u8fc7\u7684 -l :\u663e\u793a\u6700\u8fd1\u521b\u5efa\u7684\u5bb9\u5668\u3002 -n\uff1a\u663e\u793a\u6700\u8fd1n\u4e2a\u521b\u5efa\u7684\u5bb9\u5668\u3002 -q :\u9759\u9ed8\u6a21\u5f0f\uff0c\u53ea\u663e\u793a\u5bb9\u5668\u7f16\u53f7\u3002 --no-trunc :\u4e0d\u622a\u65ad\u8f93\u51fa\u3002 \u5e38\u7528 docker ps -qa docker ps -a","title":"\u5217\u51fa\u5f53\u524d\u8fd0\u884c\u7684\u5bb9\u5668"},{"location":"util/docker/docker/#_24","text":"//docker start \u5bb9\u5668ID\u6216\u8005\u5bb9\u5668\u540d docker start centos:centos7","title":"\u542f\u52a8\u5bb9\u5668"},{"location":"util/docker/docker/#_25","text":"docker restart \u5bb9\u5668ID\u6216\u8005\u5bb9\u5668\u540d","title":"\u91cd\u542f\u5bb9\u5668"},{"location":"util/docker/docker/#_26","text":"docker stop \u5bb9\u5668ID\u6216\u8005\u5bb9\u5668\u540d","title":"\u505c\u6b62\u5bb9\u5668"},{"location":"util/docker/docker/#_27","text":"docker kill \u5bb9\u5668ID\u6216\u8005\u5bb9\u5668\u540d","title":"\u5f3a\u5236\u505c\u6b62\u5bb9\u5668"},{"location":"util/docker/docker/#_28","text":"docker rm \u5bb9\u5668ID \u4e00\u6b21\u5220\u9664\u591a\u4e2a docker rm -f $(docker ps -a -q) docker ps -a -q | xargs docker rm","title":"\u5220\u9664\u5df2\u505c\u6b62\u7684\u5bb9\u5668"},{"location":"util/docker/docker/#_29","text":"docker exec -it \u5bb9\u5668id /bin/baah docker attach \u5bb9\u5668i","title":"\u8fdb\u5165\u5bb9\u5668"},{"location":"util/docker/docker/#_30","text":"","title":"\u91cd\u8981\u547d\u4ee4"},{"location":"util/docker/docker/#_31","text":"docker run -d \u5bb9\u5668\u540d docker run -d tomcat","title":"\u4ee5\u540e\u53f0\u65b9\u5f0f\u542f\u52a8"},{"location":"util/docker/docker/#_32","text":"docker logs -f -t --tail \u5bb9\u5668ID -t \u662f\u52a0\u5165\u65f6\u95f4\u6233 -f \u8ddf\u968f\u6700\u65b0\u7684\u65e5\u5fd7\u6253\u5370 --tail \u6570\u5b57 \u663e\u793a\u6700\u540e\u591a\u5c11\u6761","title":"\u67e5\u770b\u5bb9\u5668\u65e5\u5fd7"},{"location":"util/docker/docker/#_33","text":"docker top \u5bb9\u5668ID","title":"\u67e5\u770b\u5bb9\u5668\u5185\u8fd0\u884c\u7684\u8fdb\u7a0b"},{"location":"util/docker/docker/#_34","text":"docker inspect \u5bb9\u5668ID","title":"\u67e5\u770b\u5bb9\u5668\u5185\u90e8\u7ec6\u8282"},{"location":"util/docker/docker/#_35","text":"docker exec -it \u5bb9\u5668ID bashShell docker exec -it xxccc /bin/bash docker attach \u5bb9\u5668ID \u533a\u522b attach \u76f4\u63a5\u8fdb\u5165\u5bb9\u5668\u542f\u52a8\u547d\u4ee4\u7684\u7ec8\u7aef\uff0c\u4e0d\u4f1a\u542f\u52a8\u65b0\u7684\u8fdb\u7a0b exec \u662f\u5728\u5bb9\u5668\u4e2d\u6253\u5f00\u65b0\u7684\u7ec8\u7aef\uff0c\u5e76\u4e14\u53ef\u4ee5\u542f\u52a8\u65b0\u7684\u8fdb\u7a0b","title":"\u8fdb\u5165\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u5e76\u4ee5\u547d\u4ee4\u884c\u4ea4\u4e92"},{"location":"util/docker/docker/#_36","text":"docker cp \u5bb9\u5668ID:\u5bb9\u5668\u5185\u8def\u5f84 \u76ee\u7684\u4e3b\u673a\u8def\u5f84 attach Attach to a running container # \u5f53\u524d shell \u4e0b attach \u8fde\u63a5\u6307\u5b9a\u8fd0\u884c\u955c\u50cf build Build an image from a Dockerfile # \u901a\u8fc7 Dockerfile \u5b9a\u5236\u955c\u50cf commit Create a new image from a container changes # \u63d0\u4ea4\u5f53\u524d\u5bb9\u5668\u4e3a\u65b0\u7684\u955c\u50cf cp Copy files/folders from the containers filesystem to the host path #\u4ece\u5bb9\u5668\u4e2d\u62f7\u8d1d\u6307\u5b9a\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u5230\u5bbf\u4e3b\u673a\u4e2d create Create a new container # \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bb9\u5668\uff0c\u540c run\uff0c\u4f46\u4e0d\u542f\u52a8\u5bb9\u5668 diff Inspect changes on a container's filesystem # \u67e5\u770b docker \u5bb9\u5668\u53d8\u5316 events Get real time events from the server # \u4ece docker \u670d\u52a1\u83b7\u53d6\u5bb9\u5668\u5b9e\u65f6\u4e8b\u4ef6 exec Run a command in an existing container # \u5728\u5df2\u5b58\u5728\u7684\u5bb9\u5668\u4e0a\u8fd0\u884c\u547d\u4ee4 export Stream the contents of a container as a tar archive # \u5bfc\u51fa\u5bb9\u5668\u7684\u5185\u5bb9\u6d41\u4f5c\u4e3a\u4e00\u4e2a tar \u5f52\u6863\u6587\u4ef6[\u5bf9\u5e94 import ] history Show the history of an image # \u5c55\u793a\u4e00\u4e2a\u955c\u50cf\u5f62\u6210\u5386\u53f2 images List images # \u5217\u51fa\u7cfb\u7edf\u5f53\u524d\u955c\u50cf import Create a new filesystem image from the contents of a tarball # \u4ecetar\u5305\u4e2d\u7684\u5185\u5bb9\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u7cfb\u7edf\u6620\u50cf[\u5bf9\u5e94export] info Display system-wide information # \u663e\u793a\u7cfb\u7edf\u76f8\u5173\u4fe1\u606f inspect Return low-level information on a container # \u67e5\u770b\u5bb9\u5668\u8be6\u7ec6\u4fe1\u606f kill Kill a running container # kill \u6307\u5b9a docker \u5bb9\u5668 load Load an image from a tar archive # \u4ece\u4e00\u4e2a tar \u5305\u4e2d\u52a0\u8f7d\u4e00\u4e2a\u955c\u50cf[\u5bf9\u5e94 save] login Register or Login to the docker registry server # \u6ce8\u518c\u6216\u8005\u767b\u9646\u4e00\u4e2a docker \u6e90\u670d\u52a1\u5668 logout Log out from a Docker registry server # \u4ece\u5f53\u524d Docker registry \u9000\u51fa logs Fetch the logs of a container # \u8f93\u51fa\u5f53\u524d\u5bb9\u5668\u65e5\u5fd7\u4fe1\u606f port Lookup the public-facing port which is NAT-ed to PRIVATE_PORT # \u67e5\u770b\u6620\u5c04\u7aef\u53e3\u5bf9\u5e94\u7684\u5bb9\u5668\u5185\u90e8\u6e90\u7aef\u53e3 pause Pause all processes within a container # \u6682\u505c\u5bb9\u5668 ps List containers # \u5217\u51fa\u5bb9\u5668\u5217\u8868 pull Pull an image or a repository from the docker registry server # \u4ecedocker\u955c\u50cf\u6e90\u670d\u52a1\u5668\u62c9\u53d6\u6307\u5b9a\u955c\u50cf\u6216\u8005\u5e93\u955c\u50cf push Push an image or a repository to the docker registry server # \u63a8\u9001\u6307\u5b9a\u955c\u50cf\u6216\u8005\u5e93\u955c\u50cf\u81f3docker\u6e90\u670d\u52a1\u5668 restart Restart a running container # \u91cd\u542f\u8fd0\u884c\u7684\u5bb9\u5668 rm Remove one or more containers # \u79fb\u9664\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5bb9\u5668 rmi Remove one or more images # \u79fb\u9664\u4e00\u4e2a\u6216\u591a\u4e2a\u955c\u50cf[\u65e0\u5bb9\u5668\u4f7f\u7528\u8be5\u955c\u50cf\u624d\u53ef\u5220\u9664\uff0c\u5426\u5219\u9700\u5220\u9664\u76f8\u5173\u5bb9\u5668\u624d\u53ef\u7ee7\u7eed\u6216 -f \u5f3a\u5236\u5220\u9664] run Run a command in a new container # \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bb9\u5668\u5e76\u8fd0\u884c\u4e00\u4e2a\u547d\u4ee4 save Save an image to a tar archive # \u4fdd\u5b58\u4e00\u4e2a\u955c\u50cf\u4e3a\u4e00\u4e2a tar \u5305[\u5bf9\u5e94 load] search Search for an image on the Docker Hub # \u5728 docker hub \u4e2d\u641c\u7d22\u955c\u50cf start Start a stopped containers # \u542f\u52a8\u5bb9\u5668 stop Stop a running containers # \u505c\u6b62\u5bb9\u5668 tag Tag an image into a repository # \u7ed9\u6e90\u4e2d\u955c\u50cf\u6253\u6807\u7b7e top Lookup the running processes of a container # \u67e5\u770b\u5bb9\u5668\u4e2d\u8fd0\u884c\u7684\u8fdb\u7a0b\u4fe1\u606f unpause Unpause a paused container # \u53d6\u6d88\u6682\u505c\u5bb9\u5668 version Show the docker version information # \u67e5\u770b docker \u7248\u672c\u53f7 wait Block until a container stops, then print its exit code # \u622a\u53d6\u5bb9\u5668\u505c\u6b62\u65f6\u7684\u9000\u51fa\u72b6\u6001\u503c","title":"\u4ece\u5bb9\u5668\u5185\u62f7\u8d1d\u6587\u4ef6\u5230\u4e3b\u673a\u4e0a"},{"location":"util/docker/docker/#_37","text":"","title":"\u955c\u50cf"},{"location":"util/docker/docker/#_38","text":"\u4e00\u79cd\u53ef\u4ee5\u521b\u5efa\u8fd0\u884c\u73af\u5883\u7684\u8f6f\u4ef6","title":"\u662f\u4ec0\u4e48"},{"location":"util/docker/docker/#_39","text":"Docker\u955c\u50cf\u90fd\u662f\u53ea\u8bfb\u7684 \u5f53\u5bb9\u5668\u542f\u52a8\u65f6\uff0c\u4e00\u4e2a\u65b0\u7684\u53ef\u5199\u5c42\u88ab\u52a0\u8f7d\u5230\u955c\u50cf\u7684\u9876\u90e8\u3002 \u8fd9\u4e00\u5c42\u901a\u5e38\u88ab\u79f0\u4f5c\u201c\u5bb9\u5668\u5c42\u201d\uff0c\u201c\u5bb9\u5668\u5c42\u201d\u4e4b\u4e0b\u7684\u90fd\u53eb\u201c\u955c\u50cf\u5c42\u201d\u3002","title":"\u7279\u70b9"},{"location":"util/docker/docker/#docker-commit","text":"docker commit\u63d0\u4ea4\u5bb9\u5668\u526f\u672c\u4f7f\u4e4b\u6210\u4e3a\u4e00\u4e2a\u65b0\u7684\u955c\u50cf docker commit -m=\u201c\u63d0\u4ea4\u7684\u63cf\u8ff0\u4fe1\u606f\u201d -a=\u201c\u4f5c\u8005\u201d \u5bb9\u5668ID \u8981\u521b\u5efa\u7684\u76ee\u6807\u955c\u50cf\u540d:[\u6807\u7b7e\u540d] docker run -it -p 8080:8080 tomcat cd /usr/local/tomcat/webapps touch a.txt docker commit -m=\"my centos\" -a=\"matt\" xxcc mcentos:1.0","title":"docker commit"},{"location":"util/docker/docker/#_40","text":"","title":"\u5bb9\u5668\u6570\u636e\u5377"},{"location":"util/docker/docker/#_41","text":"\u5bb9\u5668\u7684\u6301\u4e45\u5316 \u5bb9\u5668\u5efa\u7ee7\u627f+\u5171\u4eab\u6570\u636e","title":"\u53ef\u4ee5\u5e72\u4ec0\u4e48"},{"location":"util/docker/docker/#_42","text":"","title":"\u6570\u636e\u5377"},{"location":"util/docker/docker/#_43","text":"docker run -it -v /\u5bbf\u4e3b\u673a\u7edd\u5bf9\u8def\u5f84\u76ee\u5f55:/\u5bb9\u5668\u5185\u76ee\u5f55 \u955c\u50cf\u540d # \u67e5\u770b\u5bb9\u5668\u662f\u5426\u6302\u8f7d\u6210\u529f docker inspect \u5bb9\u5668ID # \u53ea\u8bfb docker run -it -v /\u5bbf\u4e3b\u673a\u7edd\u5bf9\u8def\u5f84\u76ee\u5f55:/\u5bb9\u5668\u5185\u76ee\u5f55:ro \u955c\u50cf\u540d \u5bb9\u5668\u505c\u6b62\uff0c\u5bf9\u5bbf\u4e3b\u673a\u7684\u4fee\u6539\u4ecd\u53ef\u4ee5\u5bf9\u5bb9\u5668\u53d1\u751f\u6539\u53d8 docker run -it -v /home/matt/dataVolumeContainer:/dataVolumeContainer centos /bin/bash","title":"\u547d\u4ee4"},{"location":"util/docker/docker/#dockerfile","text":"# volume test FROM centos VOLUME [\"/dataVolumeContainer1\",\"/dataVolumeContainer2\"] CMD echo \"finished,--------success1\" CMD /bin/bash docker build -f /home/matt/docker/Dockerfile -t matt/centos . \u955c\u50cf\u662f\u5343\u5c42\u997c\uff0c\u4e00\u4e2a\u955c\u50cf\u53ef\u80fd\u591a\u5c42\u7ec4\u6210 !> \u4e00\u6bb5\u91cd\u8981\u7684\u5185\u5bb9\uff0c\u968f\u673a\u7aef\u53e3\u53f7 docker run -dit -P 8080 tomcat \u5bbf\u4e3b\u673a\u7aef\u53e3\u968f\u673a\u5206\u914d","title":"Dockerfile"},{"location":"util/docker/docker/#_44","text":"\u6ca1\u9047\u5230 Docker\u6302\u8f7d\u4e3b\u673a\u76ee\u5f55Docker\u8bbf\u95ee\u51fa\u73b0cannot open directory .: Permission denied \u89e3\u51b3\u529e\u6cd5\uff1a\u5728\u6302\u8f7d\u76ee\u5f55\u540e\u591a\u52a0\u4e00\u4e2a--privileged=true\u53c2\u6570\u5373\u53ef","title":"\u95ee\u9898"},{"location":"util/docker/docker/#_45","text":"","title":"\u6570\u636e\u5377\u5bb9\u5668"},{"location":"util/docker/docker/#_46","text":"\u547d\u540d\u7684\u5bb9\u5668\u6302\u8f7d\u6570\u636e\u5377\uff0c\u5176\u5b83\u5bb9\u5668\u901a\u8fc7\u6302\u8f7d\u8fd9\u4e2a(\u7236\u5bb9\u5668)\u5b9e\u73b0\u6570\u636e\u5171\u4eab\uff0c\u6302\u8f7d\u6570\u636e\u5377\u7684\u5bb9\u5668\uff0c\u79f0\u4e4b\u4e3a\u6570\u636e\u5377\u5bb9\u5668 c1 docker run -it --name c1 matt/centos c2\u7ee7\u627fc1 docker run -it --name c2 --volumes-from c1 matt/centos docker run -it --name c3 --volumes-from c1 matt/centos c2\uff0cc3\u6570\u636e\u5c31\u53ef\u4ee5\u5171\u4eab\uff0c\u5373\u4f7f\u5220\u9664c1\uff0c\u4ecd\u7136\u53ef\u4ee5\u5171\u4eab \u5bb9\u5668\u4e4b\u95f4\u914d\u7f6e\u4fe1\u606f\u7684\u4f20\u9012\uff0c\u6570\u636e\u5377\u7684\u751f\u547d\u5468\u671f\u4e00\u76f4\u6301\u7eed\u5230\u6ca1\u6709\u5bb9\u5668\u4f7f\u7528\u5b83\u4e3a\u6b62","title":"\u662f\u4ec0\u4e48"},{"location":"util/docker/dockerfile/","text":"dockerfile \u662f\u4ec0\u4e48 Dockerfile\u662f\u7528\u6765\u6784\u5efaDocker\u955c\u50cf\u7684\u6784\u5efa\u6587\u4ef6\uff0c\u662f\u7531\u4e00\u7cfb\u5217\u547d\u4ee4\u548c\u53c2\u6570\u6784\u6210\u7684\u811a\u672c\u3002 \u6784\u5efa\u8fc7\u7a0b\u89e3\u6790 Dockerfile\u5185\u5bb9\u57fa\u7840\u77e5\u8bc6 \u6bcf\u6761\u4fdd\u7559\u5b57\u6307\u4ee4\u90fd\u5fc5\u987b\u4e3a\u5927\u5199\u5b57\u6bcd\u4e14\u540e\u9762\u8981\u8ddf\u968f\u81f3\u5c11\u4e00\u4e2a\u53c2\u6570 \u6307\u4ee4\u6309\u7167\u4ece\u4e0a\u5230\u4e0b\uff0c\u987a\u5e8f\u6267\u884c \u8868\u793a\u6ce8\u91ca \u6bcf\u6761\u6307\u4ee4\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u955c\u50cf\u5c42\uff0c\u5e76\u5bf9\u955c\u50cf\u8fdb\u884c\u63d0\u4ea4 Dockerfile\u662f\u8f6f\u4ef6\u7684\u539f\u6750\u6599 Docker\u955c\u50cf\u662f\u8f6f\u4ef6\u7684\u4ea4\u4ed8\u54c1 Docker\u5bb9\u5668\u5219\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8f6f\u4ef6\u7684\u8fd0\u884c\u6001\u3002 \u5927\u81f4\u6d41\u7a0b \uff081\uff09docker\u4ece\u57fa\u7840\u955c\u50cf\u8fd0\u884c\u4e00\u4e2a\u5bb9\u5668 \uff082\uff09\u6267\u884c\u4e00\u6761\u6307\u4ee4\u5e76\u5bf9\u5bb9\u5668\u4f5c\u51fa\u4fee\u6539 \uff083\uff09\u6267\u884c\u7c7b\u4f3cdocker commit\u7684\u64cd\u4f5c\u63d0\u4ea4\u4e00\u4e2a\u65b0\u7684\u955c\u50cf\u5c42 \uff084\uff09docker\u518d\u57fa\u4e8e\u521a\u63d0\u4ea4\u7684\u955c\u50cf\u8fd0\u884c\u4e00\u4e2a\u65b0\u5bb9\u5668 \uff085\uff09\u6267\u884cdockerfile\u4e2d\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u76f4\u5230\u6240\u6709\u6307\u4ee4\u90fd\u6267\u884c\u5b8c\u6210 \u5173\u952e\u5b57 \u5173\u952e\u5b57 \u63cf\u8ff0 FROM \u57fa\u7840\u955c\u50cf\uff0c\u5f53\u524d\u65b0\u955c\u50cf\u662f\u57fa\u4e8e\u54ea\u4e2a\u955c\u50cf\u7684 MAINTAINER \u955c\u50cf\u7ef4\u62a4\u8005\u7684\u59d3\u540d\u548c\u90ae\u7bb1\u5730\u5740 RUN \u5bb9\u5668\u6784\u5efa\u65f6\u9700\u8981\u8fd0\u884c\u7684\u547d\u4ee4 EXPOSE \u5f53\u524d\u5bb9\u5668\u5bf9\u5916\u66b4\u9732\u51fa\u7684\u7aef\u53e3 WORKDIR \u6307\u5b9a\u5728\u521b\u5efa\u5bb9\u5668\u540e\uff0c\u7ec8\u7aef\u9ed8\u8ba4\u767b\u9646\u7684\u8fdb\u6765\u5de5\u4f5c\u76ee\u5f55\uff0c\u4e00\u4e2a\u843d\u811a\u70b9 ENV \u7528\u6765\u5728\u6784\u5efa\u955c\u50cf\u8fc7\u7a0b\u4e2d\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf ADD \u5c06\u5bbf\u4e3b\u673a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u62f7\u8d1d\u8fdb\u955c\u50cf\u4e14ADD\u547d\u4ee4\u4f1a\u81ea\u52a8\u5904\u7406URL\u548c\u89e3\u538btar\u538b\u7f29\u5305 COPY \u7c7b\u4f3cADD\uff0c\u62f7\u8d1d\u6587\u4ef6\u548c\u76ee\u5f55\u5230\u955c\u50cf\u4e2d\u3002 \u5c06\u4ece\u6784\u5efa\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e2d <\u6e90\u8def\u5f84> \u7684\u6587\u4ef6/\u76ee\u5f55\u590d\u5236\u5230\u65b0\u7684\u4e00\u5c42\u7684\u955c\u50cf\u5185\u7684 <\u76ee\u6807\u8def\u5f84> \u4f4d\u7f6e VOLUME \u5bb9\u5668\u6570\u636e\u5377\uff0c\u7528\u4e8e\u6570\u636e\u4fdd\u5b58\u548c\u6301\u4e45\u5316\u5de5\u4f5c CMD \u6307\u5b9a\u4e00\u4e2a\u5bb9\u5668\u542f\u52a8\u65f6\u8981\u8fd0\u884c\u7684\u547d\u4ee4 \uff08Dockerfile \u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a CMD \u6307\u4ee4\uff0c\u4f46\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u751f\u6548\uff0c CMD \u4f1a\u88ab docker run \u4e4b\u540e\u7684\u53c2\u6570\u66ff\u6362\uff09 ENTRYPOINT \u6307\u5b9a\u4e00\u4e2a\u5bb9\u5668\u542f\u52a8\u65f6\u8981\u8fd0\u884c\u7684\u547d\u4ee4 \uff08ENTRYPOINT \u7684\u76ee\u7684\u548c CMD \u4e00\u6837\uff0c\u90fd\u662f\u5728\u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u7a0b\u5e8f\u53ca\u53c2\u6570\uff09 ONBUILD \u5f53\u6784\u5efa\u4e00\u4e2a\u88ab\u7ee7\u627f\u7684Dockerfile\u65f6\u8fd0\u884c\u547d\u4ee4\uff0c\u7236\u955c\u50cf\u5728\u88ab\u5b50\u7ee7\u627f\u540e\u7236\u955c\u50cf\u7684onbuild\u88ab\u89e6\u53d1 ENV MY_PATH /usr/mytest \u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u5728\u540e\u7eed\u7684\u4efb\u4f55RUN\u6307\u4ee4\u4e2d\u4f7f\u7528\uff0c\u8fd9\u5c31\u5982\u540c\u5728\u547d\u4ee4\u524d\u9762\u6307\u5b9a\u4e86\u73af\u5883\u53d8\u91cf\u524d\u7f00\u4e00\u6837\uff1b \u4e5f\u53ef\u4ee5\u5728\u5176\u5b83\u6307\u4ee4\u4e2d\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\uff0c \u6bd4\u5982\uff1aWORKDIR $MY_PATH ONBUILD \u6848\u4f8b dockerfile FROM centos:centos7 MAINTAINER matt<matt@qq.com> #\u628a\u5bbf\u4e3b\u673a\u5f53\u524d\u4e0a\u4e0b\u6587\u7684c.txt\u62f7\u8d1d\u5230\u5bb9\u5668/usr/local/\u8def\u5f84\u4e0b COPY c.txt /usr/local/cincontainer.txt #\u628ajava\u4e0etomcat\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d ADD jdk-8u171-linux-x64.tar.gz /usr/local/ ADD apache-tomcat-9.0.8.tar.gz /usr/local/ #\u5b89\u88c5vim\u7f16\u8f91\u5668 RUN yum -y install vim #\u8bbe\u7f6e\u5de5\u4f5c\u8bbf\u95ee\u65f6\u5019\u7684WORKDIR\u8def\u5f84\uff0c\u767b\u5f55\u843d\u811a\u70b9 ENV MYPATH /usr/local WORKDIR $MYPATH #\u914d\u7f6ejava\u4e0etomcat\u73af\u5883\u53d8\u91cf ENV JAVA_HOME /usr/local/jdk1.8.0_171 ENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar ENV CATALINA_HOME /usr/local/apache-tomcat-9.0.8 ENV CATALINA_BASE /usr/local/apache-tomcat-9.0.8 ENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin #\u5bb9\u5668\u8fd0\u884c\u65f6\u76d1\u542c\u7684\u7aef\u53e3 EXPOSE 8080 #\u542f\u52a8\u65f6\u8fd0\u884ctomcat # ENTRYPOINT [\"/usr/local/apache-tomcat-9.0.8/bin/startup.sh\" ] # CMD [\"/usr/local/apache-tomcat-9.0.8/bin/catalina.sh\",\"run\"] CMD /usr/local/apache-tomcat-9.0.8/bin/startup.sh && tail -F /usr/local/apache-tomcat-9.0.8/bin/logs/catalina.out \u6784\u5efa docker build -t mcentos:1 # \u9ed8\u8ba4\u4f1a\u4f7f\u7528\u8be5\u6587\u4ef6\u5939Dockerfile \u4e5f\u53ef\u4ee5\u901a\u8fc7-f\u6307\u5b9a\u5176\u4ed6\u6587\u4ef6\u5939 docker build -f Dockerfile -t mcentos:1 \u5e38\u7528\u8f6f\u4ef6\u5b89\u88c5 mysql docker pull mysql:5.6 docker run -p 12345:3306 --name mysql -v /zzyyuse/mysql/conf:/etc/mysql/conf.d -v /zzyyuse/mysql/logs:/logs -v /zzyyuse/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.6 docker run -p 12345:3306 --name mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.6 redis docker pull redis:3.2 # --appendonly yes \u5f00\u542f\u6301\u4e45\u5316 docker run -p 6379:6379 -v /home/matt/myredis/data:/data -v /home/matt/myredis/conf/redis.conf:/usr/local/etc/redis/redis.conf -d redis:3.2 redis-server /usr/local/etc/redis/redis.conf --appendonly yes aliyun https://dev.aliyun.com/search.html","title":"Dockerfile"},{"location":"util/docker/dockerfile/#dockerfile","text":"","title":"dockerfile"},{"location":"util/docker/dockerfile/#_1","text":"Dockerfile\u662f\u7528\u6765\u6784\u5efaDocker\u955c\u50cf\u7684\u6784\u5efa\u6587\u4ef6\uff0c\u662f\u7531\u4e00\u7cfb\u5217\u547d\u4ee4\u548c\u53c2\u6570\u6784\u6210\u7684\u811a\u672c\u3002","title":"\u662f\u4ec0\u4e48"},{"location":"util/docker/dockerfile/#_2","text":"","title":"\u6784\u5efa\u8fc7\u7a0b\u89e3\u6790"},{"location":"util/docker/dockerfile/#dockerfile_1","text":"\u6bcf\u6761\u4fdd\u7559\u5b57\u6307\u4ee4\u90fd\u5fc5\u987b\u4e3a\u5927\u5199\u5b57\u6bcd\u4e14\u540e\u9762\u8981\u8ddf\u968f\u81f3\u5c11\u4e00\u4e2a\u53c2\u6570 \u6307\u4ee4\u6309\u7167\u4ece\u4e0a\u5230\u4e0b\uff0c\u987a\u5e8f\u6267\u884c","title":"Dockerfile\u5185\u5bb9\u57fa\u7840\u77e5\u8bc6"},{"location":"util/docker/dockerfile/#_3","text":"\u6bcf\u6761\u6307\u4ee4\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u955c\u50cf\u5c42\uff0c\u5e76\u5bf9\u955c\u50cf\u8fdb\u884c\u63d0\u4ea4 Dockerfile\u662f\u8f6f\u4ef6\u7684\u539f\u6750\u6599 Docker\u955c\u50cf\u662f\u8f6f\u4ef6\u7684\u4ea4\u4ed8\u54c1 Docker\u5bb9\u5668\u5219\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8f6f\u4ef6\u7684\u8fd0\u884c\u6001\u3002","title":"\u8868\u793a\u6ce8\u91ca"},{"location":"util/docker/dockerfile/#_4","text":"\uff081\uff09docker\u4ece\u57fa\u7840\u955c\u50cf\u8fd0\u884c\u4e00\u4e2a\u5bb9\u5668 \uff082\uff09\u6267\u884c\u4e00\u6761\u6307\u4ee4\u5e76\u5bf9\u5bb9\u5668\u4f5c\u51fa\u4fee\u6539 \uff083\uff09\u6267\u884c\u7c7b\u4f3cdocker commit\u7684\u64cd\u4f5c\u63d0\u4ea4\u4e00\u4e2a\u65b0\u7684\u955c\u50cf\u5c42 \uff084\uff09docker\u518d\u57fa\u4e8e\u521a\u63d0\u4ea4\u7684\u955c\u50cf\u8fd0\u884c\u4e00\u4e2a\u65b0\u5bb9\u5668 \uff085\uff09\u6267\u884cdockerfile\u4e2d\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u76f4\u5230\u6240\u6709\u6307\u4ee4\u90fd\u6267\u884c\u5b8c\u6210","title":"\u5927\u81f4\u6d41\u7a0b"},{"location":"util/docker/dockerfile/#_5","text":"\u5173\u952e\u5b57 \u63cf\u8ff0 FROM \u57fa\u7840\u955c\u50cf\uff0c\u5f53\u524d\u65b0\u955c\u50cf\u662f\u57fa\u4e8e\u54ea\u4e2a\u955c\u50cf\u7684 MAINTAINER \u955c\u50cf\u7ef4\u62a4\u8005\u7684\u59d3\u540d\u548c\u90ae\u7bb1\u5730\u5740 RUN \u5bb9\u5668\u6784\u5efa\u65f6\u9700\u8981\u8fd0\u884c\u7684\u547d\u4ee4 EXPOSE \u5f53\u524d\u5bb9\u5668\u5bf9\u5916\u66b4\u9732\u51fa\u7684\u7aef\u53e3 WORKDIR \u6307\u5b9a\u5728\u521b\u5efa\u5bb9\u5668\u540e\uff0c\u7ec8\u7aef\u9ed8\u8ba4\u767b\u9646\u7684\u8fdb\u6765\u5de5\u4f5c\u76ee\u5f55\uff0c\u4e00\u4e2a\u843d\u811a\u70b9 ENV \u7528\u6765\u5728\u6784\u5efa\u955c\u50cf\u8fc7\u7a0b\u4e2d\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf ADD \u5c06\u5bbf\u4e3b\u673a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u62f7\u8d1d\u8fdb\u955c\u50cf\u4e14ADD\u547d\u4ee4\u4f1a\u81ea\u52a8\u5904\u7406URL\u548c\u89e3\u538btar\u538b\u7f29\u5305 COPY \u7c7b\u4f3cADD\uff0c\u62f7\u8d1d\u6587\u4ef6\u548c\u76ee\u5f55\u5230\u955c\u50cf\u4e2d\u3002 \u5c06\u4ece\u6784\u5efa\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e2d <\u6e90\u8def\u5f84> \u7684\u6587\u4ef6/\u76ee\u5f55\u590d\u5236\u5230\u65b0\u7684\u4e00\u5c42\u7684\u955c\u50cf\u5185\u7684 <\u76ee\u6807\u8def\u5f84> \u4f4d\u7f6e VOLUME \u5bb9\u5668\u6570\u636e\u5377\uff0c\u7528\u4e8e\u6570\u636e\u4fdd\u5b58\u548c\u6301\u4e45\u5316\u5de5\u4f5c CMD \u6307\u5b9a\u4e00\u4e2a\u5bb9\u5668\u542f\u52a8\u65f6\u8981\u8fd0\u884c\u7684\u547d\u4ee4 \uff08Dockerfile \u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a CMD \u6307\u4ee4\uff0c\u4f46\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u751f\u6548\uff0c CMD \u4f1a\u88ab docker run \u4e4b\u540e\u7684\u53c2\u6570\u66ff\u6362\uff09 ENTRYPOINT \u6307\u5b9a\u4e00\u4e2a\u5bb9\u5668\u542f\u52a8\u65f6\u8981\u8fd0\u884c\u7684\u547d\u4ee4 \uff08ENTRYPOINT \u7684\u76ee\u7684\u548c CMD \u4e00\u6837\uff0c\u90fd\u662f\u5728\u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u7a0b\u5e8f\u53ca\u53c2\u6570\uff09 ONBUILD \u5f53\u6784\u5efa\u4e00\u4e2a\u88ab\u7ee7\u627f\u7684Dockerfile\u65f6\u8fd0\u884c\u547d\u4ee4\uff0c\u7236\u955c\u50cf\u5728\u88ab\u5b50\u7ee7\u627f\u540e\u7236\u955c\u50cf\u7684onbuild\u88ab\u89e6\u53d1 ENV MY_PATH /usr/mytest \u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u5728\u540e\u7eed\u7684\u4efb\u4f55RUN\u6307\u4ee4\u4e2d\u4f7f\u7528\uff0c\u8fd9\u5c31\u5982\u540c\u5728\u547d\u4ee4\u524d\u9762\u6307\u5b9a\u4e86\u73af\u5883\u53d8\u91cf\u524d\u7f00\u4e00\u6837\uff1b \u4e5f\u53ef\u4ee5\u5728\u5176\u5b83\u6307\u4ee4\u4e2d\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\uff0c \u6bd4\u5982\uff1aWORKDIR $MY_PATH ONBUILD","title":"\u5173\u952e\u5b57"},{"location":"util/docker/dockerfile/#_6","text":"","title":"\u6848\u4f8b"},{"location":"util/docker/dockerfile/#dockerfile_2","text":"FROM centos:centos7 MAINTAINER matt<matt@qq.com> #\u628a\u5bbf\u4e3b\u673a\u5f53\u524d\u4e0a\u4e0b\u6587\u7684c.txt\u62f7\u8d1d\u5230\u5bb9\u5668/usr/local/\u8def\u5f84\u4e0b COPY c.txt /usr/local/cincontainer.txt #\u628ajava\u4e0etomcat\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d ADD jdk-8u171-linux-x64.tar.gz /usr/local/ ADD apache-tomcat-9.0.8.tar.gz /usr/local/ #\u5b89\u88c5vim\u7f16\u8f91\u5668 RUN yum -y install vim #\u8bbe\u7f6e\u5de5\u4f5c\u8bbf\u95ee\u65f6\u5019\u7684WORKDIR\u8def\u5f84\uff0c\u767b\u5f55\u843d\u811a\u70b9 ENV MYPATH /usr/local WORKDIR $MYPATH #\u914d\u7f6ejava\u4e0etomcat\u73af\u5883\u53d8\u91cf ENV JAVA_HOME /usr/local/jdk1.8.0_171 ENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar ENV CATALINA_HOME /usr/local/apache-tomcat-9.0.8 ENV CATALINA_BASE /usr/local/apache-tomcat-9.0.8 ENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin #\u5bb9\u5668\u8fd0\u884c\u65f6\u76d1\u542c\u7684\u7aef\u53e3 EXPOSE 8080 #\u542f\u52a8\u65f6\u8fd0\u884ctomcat # ENTRYPOINT [\"/usr/local/apache-tomcat-9.0.8/bin/startup.sh\" ] # CMD [\"/usr/local/apache-tomcat-9.0.8/bin/catalina.sh\",\"run\"] CMD /usr/local/apache-tomcat-9.0.8/bin/startup.sh && tail -F /usr/local/apache-tomcat-9.0.8/bin/logs/catalina.out","title":"dockerfile"},{"location":"util/docker/dockerfile/#_7","text":"docker build -t mcentos:1 # \u9ed8\u8ba4\u4f1a\u4f7f\u7528\u8be5\u6587\u4ef6\u5939Dockerfile \u4e5f\u53ef\u4ee5\u901a\u8fc7-f\u6307\u5b9a\u5176\u4ed6\u6587\u4ef6\u5939 docker build -f Dockerfile -t mcentos:1","title":"\u6784\u5efa"},{"location":"util/docker/dockerfile/#_8","text":"","title":"\u5e38\u7528\u8f6f\u4ef6\u5b89\u88c5"},{"location":"util/docker/dockerfile/#mysql","text":"docker pull mysql:5.6 docker run -p 12345:3306 --name mysql -v /zzyyuse/mysql/conf:/etc/mysql/conf.d -v /zzyyuse/mysql/logs:/logs -v /zzyyuse/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.6 docker run -p 12345:3306 --name mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.6","title":"mysql"},{"location":"util/docker/dockerfile/#redis","text":"docker pull redis:3.2 # --appendonly yes \u5f00\u542f\u6301\u4e45\u5316 docker run -p 6379:6379 -v /home/matt/myredis/data:/data -v /home/matt/myredis/conf/redis.conf:/usr/local/etc/redis/redis.conf -d redis:3.2 redis-server /usr/local/etc/redis/redis.conf --appendonly yes aliyun https://dev.aliyun.com/search.html","title":"redis"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/","text":"centos 7 \u955c\u50cf \u955c\u50cf\u4ecb\u7ecd \u5404\u79cd\u683c\u5f0f \u865a\u62df\u673a\u9ed8\u8ba4\u5b89\u88c5\u5373\u53ef \u865a\u62df\u5316 \u5b89\u88c5centos \u57fa\u7840 \u5904\u7406\u5668 \u5185\u5b58 2\u4e2a\u5904\u7406\u5668\u3001\u6bcf\u4e2a\u5904\u7406\u5668\u4e00\u4e2a\u6838\u5fc3\u6570\u91cf \u5185\u5b582g \u7f51\u7edc \u78c1\u76d8 \u865a\u62df\u673a\u8bbe\u7f6e \u5f00\u673a \u5f00\u673a\u56de\u8f66 \u5206\u533a 1g 45g 4g \u6807\u51c6\u5206\u533a\uff0c/boot\uff0c1g,\u6587\u4ef6\u7cfb\u7edf\uff0c ext4 \u6839\u5206\u533a\u65b0\u5efa\uff0c\u8bbe\u5907\u7c7b\u578b\u201c\u6807\u51c6\u5206\u533a\u201d\uff0c\u6302\u8f7d\u70b9\u4e3a\u201c/\u201d\uff0c\u6587\u4ef6\u7cfb\u7edf\u4e3a\u201cxfs\u201d swap\u5206\u533a\u8bbe\u7f6e\uff0c\u6587\u4ef6\u7cfb\u7edf\u4e3a\u201cswap\u201d,Swap:\u5185\u5b58\u4e0d\u8db3\u6709\u786c\u76d8\u66ff\u6362 \u6587\u4ef6\u7cfb\u7edf\u8981\u9009\u62e9\u5bf9 \u4e0d\u542f\u7528Kdump \u4e0d\u542f\u7528dump,kdump\u7528\u4e8e\u7cfb\u7edf\u5d29\u6e83\u4fdd\u5b58\u6570\u636e \u4fee\u6539\u4e3b\u673a\u540d \u5f00\u59cb\u5b89\u88c5\uff0c\u8bbe\u7f6eRoot\u5bc6\u7801\u5373\u53ef\u7b49\u5f85\u5b89\u88c5\u5b8c\u6210 \u91cd\u542f\u540c\u610f\u8bb8\u53ef\u8bc1\u5b8c\u6210\u914d\u7f6e\u5373\u53ef \u5b8c\u6210\u914d\u7f6e\u5728\u7ebf\u8d26\u53f7\u8df3\u8fc7\u3001\u8bbe\u7f6e\u8d26\u53f7\u6ce8\u9500\u4f7f\u7528root\u767b\u5f55\u5373\u53ef \u7f51\u7edc \u4ecb\u7ecd \u8bbe\u7f6eNAT \u5982\u679cwin10\u6ca1\u51fa\u73b0v8 \u90a3\u4e48\u5728\u865a\u62df\u673a\u4e2d\u66f4\u6539\u6000\u8fdc\u914d\u7f6e \u8bbe\u7f6e\u4e3b\u673a\u865a\u62df\u7f51\u7edcv8 \u8bbe\u7f6e\u9759\u6001ip \u8bbe\u7f6e\u865a\u62df\u673a\u7f51\u7edc \u5b50\u7f51ip\uff0c\u4e3b\u673a\u548c\u865a\u62df\u673a \u9700\u8981\u5728\u540c\u4e00\u7f51\u6bb5\uff08\u56e0\u4e3a\u5728\u4e00\u4e2a\u5185\u7f51\u4e0b\uff09 \u5173\u95edwindows\u9632\u706b\u5899 \u8bbe\u7f6ecentos\u7f51\u7edc vim /etc/sysconfig/network-scripts/ifcfg-ens33 TYPE=\"Ethernet\" PROXY_METHOD=\"none\" BROWSER_ONLY=\"no\" BOOTPROTO=\"dhcp\" DEFROUTE=\"yes\" IPV4_FAILURE_FATAL=\"no\" IPV6INIT=\"yes\" IPV6_AUTOCONF=\"yes\" IPV6_DEFROUTE=\"yes\" IPV6_FAILURE_FATAL=\"no\" IPV6_ADDR_GEN_MODE=\"stable-privacy\" NAME=\"ens33\" UUID=\"6b84fa31-a207-4928-9e53-61ad2ec7b485\" DEVICE=\"ens33\" ONBOOT=\"yes\" TYPE=\"Ethernet\" PROXY_METHOD=\"none\" BROWSER_ONLY=\"no\" BOOTPROTO=\"static\" // \u66f4\u6539\u8be5\u503c DEFROUTE=\"yes\" IPV4_FAILURE_FATAL=\"no\" IPV6INIT=\"yes\" IPV6_AUTOCONF=\"yes\" IPV6_DEFROUTE=\"yes\" IPV6_FAILURE_FATAL=\"no\" IPV6_ADDR_GEN_MODE=\"stable-privacy\" NAME=\"ens33\" UUID=\"6b84fa31-a207-4928-9e53-61ad2ec7b485\" DEVICE=\"ens33\" ONBOOT=\"yes\" // \u6539 IPADDR=192.168.96.129 // ip \u5730\u5740,\u524d\u4e09\u4f4d\u548c\u5b50\u7f51ip\u4e00\u81f4 GATEWAY=192.168.96.2 // ip.2 DNS1=192.168.96.2 // \u9ed8\u8ba4 TYPE=Ethernet PROXY_METHOD=none BROWSER_ONLY=no BOOTPROTO=dhcp DEFROUTE=yes IPV4_FAILURE_FATAL=no IPV6INIT=yes IPV6_AUTOCONF=yes IPV6_DEFROUTE=yes IPV6_FAILURE_FATAL=no IPV6_ADDR_GEN_MODE=stable-privacy NAME=ens33 UUID=dba7c9df-22d1-43b7-8291-e28dc76ed1dd DEVICE=ens33 ONBOOT=no \u91cd\u542f\u7f51\u7edc\u6216\u8005\u91cd\u542f \u63a8\u8350\u91cd\u542f\u5373\u53ef service network restart systemctl restart network \u5982\u679c\u65e0\u6cd5\u4e0a\u7f51\u70b9\u51fb\u6709\u7ebf\u8fde\u63a5\u5373\u53ef \u9632\u706b\u5899 \u67e5\u770b\u9632\u706b\u5899\u72b6\u6001 systemctl status firewalld.service \u5173\u95ed\u9632\u706b\u5899 systemctl stop firewalld.service \u7981\u6b62\u5f00\u673a\u542f\u52a8 systemctl disable firewalld.service \u8bbe\u7f6e\u4e3b\u673a\u540d\u79f0 vim /etc/hostname \u4e3b\u673aip\u6620\u5c04 \u4e3b\u673a\u540d\u548cip\u6620\u5c04 vim /etc/hosts 192.168.96.128 matt04 \u521b\u5efa\u975eroot\u7528\u6237 \u521b\u5efamatt\u7528\u6237 useradd matt passwd matt \u4e3amatt\u7528\u6237\u6dfb\u52a0sudo\u6743\u9650 \u4fee\u6539/etc/sudoers \u6587\u4ef6\uff0c\u5728%wheel \u8fd9\u884c\u4e0b\u9762\u6dfb\u52a0\u4e00\u884c\uff0c\u5982\u4e0b\u6240\u793a\uff1a vim /etc/sudoers ## Allows people in group wheel to run all commands %wheel ALL=(ALL) ALL matt ALL=(ALL) NOPASSWD:ALL \u521b\u5efa\u8f6f\u4ef6\u5b89\u88c5\u76ee\u5f55 mkdir /opt/software mkdir /opt/module \u4fee\u6539\u521b\u5efa\u7684\u6587\u4ef6\u7684\u7528\u6237\u548c\u7528\u6237\u7ec4\u4e3amatt chown -R matt:matt /opt/software chown -R matt:matt /opt/module \u9a8c\u8bc1 ll \u865a\u62df\u673a\u514b\u9686 \u5728\u7f51\u7edc\u914d\u7f6e\u597d\u5728\u514b\u9686\u8bb0\u5f97\u4e00\u5b9a\u8981\u5173\u673a\u4e0b \u8bb0\u5f97\u4fee\u6539ip,\u670d\u52a1\u5668\u540d\uff0c\u4e3b\u673aIP\u6620\u5c04 \u5b89\u88c5ssh \u68c0\u67e5\u662f\u5426\u5b89\u88c5ssh yum list installed | grep openssh-server \u5b89\u88c5ssh yum install -y openssl openssh-server \u914d\u7f6e vim /etc/ssh/sshd_config \u4ee5\u4e0b\u6253\u5f00 port,ListenAddress PermitRootLogin,PubkeyAuthentication,Password \u9000\u51fa logout 123.56.135.43 //\u9000\u51fassh\u8fde\u63a5 exit \u514d\u5bc6\u767b\u5f55 ssh-keygen cd /home/matt/.ssh ssh-copy-id -i id_rsa.pub root@192.168.96.128 \u865a\u62df\u673a\u6269\u5bb9 \u67e5\u770b\u672c\u673a\u78c1\u76d8\u73af\u5883 df -h lsblk \u6dfb\u52a0\u78c1\u76d8\u5206\u533a fdisk /dev/sda \u8f93\u5165p\u4e0d\u662f\u9ed8\u8ba4e,\u7b2c\u4e8c\u4e2a\u9ed8\u8ba4 \u8bb0\u5f97\u91cd\u542f lsblk \u5f00\u59cb\u6269\u5bb9 \u521b\u5efa\u7269\u7406\u5377 [root@localhost ~]# lvm lvm> pvcreate /dev/sda4 WARNING: dos signature detected on /dev/sda4 at offset 510. Wipe it? [y/n]: y Wiping dos signature on /dev/sda4. Physical volume \"/dev/sda4\" successfully created. \u67e5\u770b\u7269\u7406\u5377\u548c\u5377\u7ec4\uff1a lvm> pvdisplay --- Physical volume --- PV Name /dev/sda2 VG Name centos PV Size 11.23 GiB / not usable 4.00 MiB Allocatable yes (but full) PE Size 4.00 MiB Total PE 2875 Free PE 0 Allocated PE 2875 PV UUID lTqDdT-6UxW-feyh-V97X-BJEg-zN18-G5kc4Z --- Physical volume --- PV Name /dev/sda3 VG Name centos PV Size 5.00 GiB / not usable 4.00 MiB Allocatable yes (but full) PE Size 4.00 MiB Total PE 1279 Free PE 0 Allocated PE 1279 PV UUID kSnxe0-jrzC-UPoT-UZQk-2oda-eZrK-ggQXKp \"/dev/sda4\" is a new physical volume of \"2.00 GiB\" --- NEW Physical volume --- PV Name /dev/sda4 VG Name PV Size 2.00 GiB Allocatable NO PE Size 0 Total PE 0 Free PE 0 Allocated PE 0 PV UUID VVW6TL-NF39-NfgU-2oBR-zqkF-RCiN-0I73Zq lvm> vgdisplay --- Volume group --- VG Name centos System ID Format lvm2 Metadata Areas 2 Metadata Sequence No 5 VG Access read/write VG Status resizable MAX LV 0 Cur LV 2 Open LV 2 Max PV 0 Cur PV 2 Act PV 2 VG Size <16.23 GiB PE Size 4.00 MiB Total PE 4154 Alloc PE / Size 4154 / <16.23 GiB Free PE / Size 0 / 0 VG UUID 1V8J83-cmtx-C8uY-KAQZ-teqj-uGD2-Tmad21 \u5c06\u7269\u7406\u5377\u52a0\u5165\u5230\u5377\u7ec4\uff1a lvm> vgextend centos /dev/sda4 Volume group \"centos\" successfully extended lvm> vgdisplay --- Volume group --- VG Name centos System ID Format lvm2 Metadata Areas 3 Metadata Sequence No 6 VG Access read/write VG Status resizable MAX LV 0 Cur LV 2 Open LV 2 Max PV 0 Cur PV 3 Act PV 3 VG Size 18.22 GiB PE Size 4.00 MiB Total PE 4665 Alloc PE / Size 4154 / <16.23 GiB Free PE / Size 511 / <2.00 GiB VG UUID 1V8J83-cmtx-C8uY-KAQZ-teqj-uGD2-Tmad21 \u5c06\u5377\u7ec4\u5269\u4f59\u7a7a\u95f4(\u521a\u6dfb\u52a0\u76842G)\u6dfb\u52a0\u5230\u903b\u8f91\u5377/dev/centos/root : lvm> lvextend -l +100%FREE /dev/centos/root Size of logical volume centos/root changed from <14.32 GiB (3665 extents) to 16.31 GiB (4176 extents). Logical volume centos/root successfully resized. lvm> exit Exiting. \u540c\u6b65\u5230\u6587\u4ef6\u7cfb\u7edf \u4e4b\u524d\u53ea\u662f\u5bf9\u903b\u8f91\u5377\u6269\u5bb9\uff0c\u8fd8\u8981\u540c\u6b65\u5230\u6587\u4ef6\u7cfb\u7edf\uff0c\u5b9e\u73b0\u5bf9\u6839\u76ee\u5f55\u7684\u6269\u5bb9\u3002 [root@localhost ~]# xfs_growfs /dev/centos/root meta-data=/dev/mapper/centos-root isize=512 agcount=7, agsize=610304 blks = sectsz=512 attr=2, projid32bit=1 = crc=1 finobt=0 spinodes=0 data = bsize=4096 blocks=3752960, imaxpct=25 = sunit=0 swidth=0 blks naming =version 2 bsize=4096 ascii-ci=0 ftype=1 log =internal bsize=4096 blocks=2560, version=2 = sectsz=512 sunit=0 blks, lazy-count=1 realtime =none extsz=4096 blocks=0, rtextents=0 data blocks changed from 3752960 to 4276224 [root@localhost ~]# df -h \u6587\u4ef6\u7cfb\u7edf \u5bb9\u91cf \u5df2\u7528 \u53ef\u7528 \u5df2\u7528% \u6302\u8f7d\u70b9 devtmpfs 894M 0 894M 0% /dev tmpfs 910M 0 910M 0% /dev/shm tmpfs 910M 11M 900M 2% /run tmpfs 910M 0 910M 0% /sys/fs/cgroup /dev/mapper/centos-root 17G 9.3G 7.1G 57% / /dev/sda1 187M 163M 25M 87% /boot tmpfs 182M 0 182M 0% /run/user/0 tmpfs 182M 8.0K 182M 1% /run/user/42 [root@localhost ~]# \u5220\u9664\u5206\u533a \u9002\u7528\u4e8e\u8fd8\u6ca1\u6709\u6302\u8f7d\uff0c\u5982\u679c\u6302\u8f7d\u5219\u9700\u8981\u5378\u8f7d fdisk /dev/sdc # \u8f93\u5165d,\u7136\u540e\u6309\u7167\u63d0\u793a\u8f93\u5165\u5206\u533a\u53f7","title":"centos\u5b89\u88c5"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#centos","text":"","title":"\u5b89\u88c5centos"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_1","text":"","title":"\u57fa\u7840"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_2","text":"2\u4e2a\u5904\u7406\u5668\u3001\u6bcf\u4e2a\u5904\u7406\u5668\u4e00\u4e2a\u6838\u5fc3\u6570\u91cf \u5185\u5b582g","title":"\u5904\u7406\u5668 \u5185\u5b58"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_3","text":"","title":"\u7f51\u7edc"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_4","text":"","title":"\u78c1\u76d8"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_5","text":"","title":"\u865a\u62df\u673a\u8bbe\u7f6e"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_6","text":"\u5f00\u673a\u56de\u8f66","title":"\u5f00\u673a"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_7","text":"1g 45g 4g \u6807\u51c6\u5206\u533a\uff0c/boot\uff0c1g,\u6587\u4ef6\u7cfb\u7edf\uff0c ext4 \u6839\u5206\u533a\u65b0\u5efa\uff0c\u8bbe\u5907\u7c7b\u578b\u201c\u6807\u51c6\u5206\u533a\u201d\uff0c\u6302\u8f7d\u70b9\u4e3a\u201c/\u201d\uff0c\u6587\u4ef6\u7cfb\u7edf\u4e3a\u201cxfs\u201d swap\u5206\u533a\u8bbe\u7f6e\uff0c\u6587\u4ef6\u7cfb\u7edf\u4e3a\u201cswap\u201d,Swap:\u5185\u5b58\u4e0d\u8db3\u6709\u786c\u76d8\u66ff\u6362 \u6587\u4ef6\u7cfb\u7edf\u8981\u9009\u62e9\u5bf9 \u4e0d\u542f\u7528Kdump \u4e0d\u542f\u7528dump,kdump\u7528\u4e8e\u7cfb\u7edf\u5d29\u6e83\u4fdd\u5b58\u6570\u636e \u4fee\u6539\u4e3b\u673a\u540d \u5f00\u59cb\u5b89\u88c5\uff0c\u8bbe\u7f6eRoot\u5bc6\u7801\u5373\u53ef\u7b49\u5f85\u5b89\u88c5\u5b8c\u6210 \u91cd\u542f\u540c\u610f\u8bb8\u53ef\u8bc1\u5b8c\u6210\u914d\u7f6e\u5373\u53ef \u5b8c\u6210\u914d\u7f6e\u5728\u7ebf\u8d26\u53f7\u8df3\u8fc7\u3001\u8bbe\u7f6e\u8d26\u53f7\u6ce8\u9500\u4f7f\u7528root\u767b\u5f55\u5373\u53ef","title":"\u5206\u533a"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_8","text":"","title":"\u7f51\u7edc"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_9","text":"","title":"\u4ecb\u7ecd"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#nat","text":"\u5982\u679cwin10\u6ca1\u51fa\u73b0v8 \u90a3\u4e48\u5728\u865a\u62df\u673a\u4e2d\u66f4\u6539\u6000\u8fdc\u914d\u7f6e","title":"\u8bbe\u7f6eNAT"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#v8","text":"\u8bbe\u7f6e\u9759\u6001ip","title":"\u8bbe\u7f6e\u4e3b\u673a\u865a\u62df\u7f51\u7edcv8"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_10","text":"\u5b50\u7f51ip\uff0c\u4e3b\u673a\u548c\u865a\u62df\u673a \u9700\u8981\u5728\u540c\u4e00\u7f51\u6bb5\uff08\u56e0\u4e3a\u5728\u4e00\u4e2a\u5185\u7f51\u4e0b\uff09 \u5173\u95edwindows\u9632\u706b\u5899","title":"\u8bbe\u7f6e\u865a\u62df\u673a\u7f51\u7edc"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#centos_1","text":"vim /etc/sysconfig/network-scripts/ifcfg-ens33 TYPE=\"Ethernet\" PROXY_METHOD=\"none\" BROWSER_ONLY=\"no\" BOOTPROTO=\"dhcp\" DEFROUTE=\"yes\" IPV4_FAILURE_FATAL=\"no\" IPV6INIT=\"yes\" IPV6_AUTOCONF=\"yes\" IPV6_DEFROUTE=\"yes\" IPV6_FAILURE_FATAL=\"no\" IPV6_ADDR_GEN_MODE=\"stable-privacy\" NAME=\"ens33\" UUID=\"6b84fa31-a207-4928-9e53-61ad2ec7b485\" DEVICE=\"ens33\" ONBOOT=\"yes\" TYPE=\"Ethernet\" PROXY_METHOD=\"none\" BROWSER_ONLY=\"no\" BOOTPROTO=\"static\" // \u66f4\u6539\u8be5\u503c DEFROUTE=\"yes\" IPV4_FAILURE_FATAL=\"no\" IPV6INIT=\"yes\" IPV6_AUTOCONF=\"yes\" IPV6_DEFROUTE=\"yes\" IPV6_FAILURE_FATAL=\"no\" IPV6_ADDR_GEN_MODE=\"stable-privacy\" NAME=\"ens33\" UUID=\"6b84fa31-a207-4928-9e53-61ad2ec7b485\" DEVICE=\"ens33\" ONBOOT=\"yes\" // \u6539 IPADDR=192.168.96.129 // ip \u5730\u5740,\u524d\u4e09\u4f4d\u548c\u5b50\u7f51ip\u4e00\u81f4 GATEWAY=192.168.96.2 // ip.2 DNS1=192.168.96.2 // \u9ed8\u8ba4 TYPE=Ethernet PROXY_METHOD=none BROWSER_ONLY=no BOOTPROTO=dhcp DEFROUTE=yes IPV4_FAILURE_FATAL=no IPV6INIT=yes IPV6_AUTOCONF=yes IPV6_DEFROUTE=yes IPV6_FAILURE_FATAL=no IPV6_ADDR_GEN_MODE=stable-privacy NAME=ens33 UUID=dba7c9df-22d1-43b7-8291-e28dc76ed1dd DEVICE=ens33 ONBOOT=no","title":"\u8bbe\u7f6ecentos\u7f51\u7edc"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_11","text":"\u63a8\u8350\u91cd\u542f\u5373\u53ef service network restart systemctl restart network \u5982\u679c\u65e0\u6cd5\u4e0a\u7f51\u70b9\u51fb\u6709\u7ebf\u8fde\u63a5\u5373\u53ef","title":"\u91cd\u542f\u7f51\u7edc\u6216\u8005\u91cd\u542f"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_12","text":"\u67e5\u770b\u9632\u706b\u5899\u72b6\u6001 systemctl status firewalld.service \u5173\u95ed\u9632\u706b\u5899 systemctl stop firewalld.service \u7981\u6b62\u5f00\u673a\u542f\u52a8 systemctl disable firewalld.service","title":"\u9632\u706b\u5899"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_13","text":"vim /etc/hostname","title":"\u8bbe\u7f6e\u4e3b\u673a\u540d\u79f0"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#ip","text":"\u4e3b\u673a\u540d\u548cip\u6620\u5c04 vim /etc/hosts 192.168.96.128 matt04","title":"\u4e3b\u673aip\u6620\u5c04"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#root","text":"","title":"\u521b\u5efa\u975eroot\u7528\u6237"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#matt","text":"useradd matt passwd matt","title":"\u521b\u5efamatt\u7528\u6237"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#mattsudo","text":"\u4fee\u6539/etc/sudoers \u6587\u4ef6\uff0c\u5728%wheel \u8fd9\u884c\u4e0b\u9762\u6dfb\u52a0\u4e00\u884c\uff0c\u5982\u4e0b\u6240\u793a\uff1a vim /etc/sudoers ## Allows people in group wheel to run all commands %wheel ALL=(ALL) ALL matt ALL=(ALL) NOPASSWD:ALL","title":"\u4e3amatt\u7528\u6237\u6dfb\u52a0sudo\u6743\u9650"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_14","text":"mkdir /opt/software mkdir /opt/module","title":"\u521b\u5efa\u8f6f\u4ef6\u5b89\u88c5\u76ee\u5f55"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#matt_1","text":"chown -R matt:matt /opt/software chown -R matt:matt /opt/module","title":"\u4fee\u6539\u521b\u5efa\u7684\u6587\u4ef6\u7684\u7528\u6237\u548c\u7528\u6237\u7ec4\u4e3amatt"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_15","text":"ll","title":"\u9a8c\u8bc1"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_16","text":"\u5728\u7f51\u7edc\u914d\u7f6e\u597d\u5728\u514b\u9686\u8bb0\u5f97\u4e00\u5b9a\u8981\u5173\u673a\u4e0b \u8bb0\u5f97\u4fee\u6539ip,\u670d\u52a1\u5668\u540d\uff0c\u4e3b\u673aIP\u6620\u5c04","title":"\u865a\u62df\u673a\u514b\u9686"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#ssh","text":"\u68c0\u67e5\u662f\u5426\u5b89\u88c5ssh yum list installed | grep openssh-server \u5b89\u88c5ssh yum install -y openssl openssh-server \u914d\u7f6e vim /etc/ssh/sshd_config \u4ee5\u4e0b\u6253\u5f00 port,ListenAddress PermitRootLogin,PubkeyAuthentication,Password","title":"\u5b89\u88c5ssh"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_17","text":"logout 123.56.135.43 //\u9000\u51fassh\u8fde\u63a5 exit \u514d\u5bc6\u767b\u5f55 ssh-keygen cd /home/matt/.ssh ssh-copy-id -i id_rsa.pub root@192.168.96.128","title":"\u9000\u51fa"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_18","text":"","title":"\u865a\u62df\u673a\u6269\u5bb9"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_19","text":"df -h lsblk","title":"\u67e5\u770b\u672c\u673a\u78c1\u76d8\u73af\u5883"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_20","text":"fdisk /dev/sda \u8f93\u5165p\u4e0d\u662f\u9ed8\u8ba4e,\u7b2c\u4e8c\u4e2a\u9ed8\u8ba4 \u8bb0\u5f97\u91cd\u542f lsblk","title":"\u6dfb\u52a0\u78c1\u76d8\u5206\u533a"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_21","text":"\u521b\u5efa\u7269\u7406\u5377 [root@localhost ~]# lvm lvm> pvcreate /dev/sda4 WARNING: dos signature detected on /dev/sda4 at offset 510. Wipe it? [y/n]: y Wiping dos signature on /dev/sda4. Physical volume \"/dev/sda4\" successfully created. \u67e5\u770b\u7269\u7406\u5377\u548c\u5377\u7ec4\uff1a lvm> pvdisplay --- Physical volume --- PV Name /dev/sda2 VG Name centos PV Size 11.23 GiB / not usable 4.00 MiB Allocatable yes (but full) PE Size 4.00 MiB Total PE 2875 Free PE 0 Allocated PE 2875 PV UUID lTqDdT-6UxW-feyh-V97X-BJEg-zN18-G5kc4Z --- Physical volume --- PV Name /dev/sda3 VG Name centos PV Size 5.00 GiB / not usable 4.00 MiB Allocatable yes (but full) PE Size 4.00 MiB Total PE 1279 Free PE 0 Allocated PE 1279 PV UUID kSnxe0-jrzC-UPoT-UZQk-2oda-eZrK-ggQXKp \"/dev/sda4\" is a new physical volume of \"2.00 GiB\" --- NEW Physical volume --- PV Name /dev/sda4 VG Name PV Size 2.00 GiB Allocatable NO PE Size 0 Total PE 0 Free PE 0 Allocated PE 0 PV UUID VVW6TL-NF39-NfgU-2oBR-zqkF-RCiN-0I73Zq lvm> vgdisplay --- Volume group --- VG Name centos System ID Format lvm2 Metadata Areas 2 Metadata Sequence No 5 VG Access read/write VG Status resizable MAX LV 0 Cur LV 2 Open LV 2 Max PV 0 Cur PV 2 Act PV 2 VG Size <16.23 GiB PE Size 4.00 MiB Total PE 4154 Alloc PE / Size 4154 / <16.23 GiB Free PE / Size 0 / 0 VG UUID 1V8J83-cmtx-C8uY-KAQZ-teqj-uGD2-Tmad21 \u5c06\u7269\u7406\u5377\u52a0\u5165\u5230\u5377\u7ec4\uff1a lvm> vgextend centos /dev/sda4 Volume group \"centos\" successfully extended lvm> vgdisplay --- Volume group --- VG Name centos System ID Format lvm2 Metadata Areas 3 Metadata Sequence No 6 VG Access read/write VG Status resizable MAX LV 0 Cur LV 2 Open LV 2 Max PV 0 Cur PV 3 Act PV 3 VG Size 18.22 GiB PE Size 4.00 MiB Total PE 4665 Alloc PE / Size 4154 / <16.23 GiB Free PE / Size 511 / <2.00 GiB VG UUID 1V8J83-cmtx-C8uY-KAQZ-teqj-uGD2-Tmad21 \u5c06\u5377\u7ec4\u5269\u4f59\u7a7a\u95f4(\u521a\u6dfb\u52a0\u76842G)\u6dfb\u52a0\u5230\u903b\u8f91\u5377/dev/centos/root : lvm> lvextend -l +100%FREE /dev/centos/root Size of logical volume centos/root changed from <14.32 GiB (3665 extents) to 16.31 GiB (4176 extents). Logical volume centos/root successfully resized. lvm> exit Exiting.","title":"\u5f00\u59cb\u6269\u5bb9"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_22","text":"\u4e4b\u524d\u53ea\u662f\u5bf9\u903b\u8f91\u5377\u6269\u5bb9\uff0c\u8fd8\u8981\u540c\u6b65\u5230\u6587\u4ef6\u7cfb\u7edf\uff0c\u5b9e\u73b0\u5bf9\u6839\u76ee\u5f55\u7684\u6269\u5bb9\u3002 [root@localhost ~]# xfs_growfs /dev/centos/root meta-data=/dev/mapper/centos-root isize=512 agcount=7, agsize=610304 blks = sectsz=512 attr=2, projid32bit=1 = crc=1 finobt=0 spinodes=0 data = bsize=4096 blocks=3752960, imaxpct=25 = sunit=0 swidth=0 blks naming =version 2 bsize=4096 ascii-ci=0 ftype=1 log =internal bsize=4096 blocks=2560, version=2 = sectsz=512 sunit=0 blks, lazy-count=1 realtime =none extsz=4096 blocks=0, rtextents=0 data blocks changed from 3752960 to 4276224 [root@localhost ~]# df -h \u6587\u4ef6\u7cfb\u7edf \u5bb9\u91cf \u5df2\u7528 \u53ef\u7528 \u5df2\u7528% \u6302\u8f7d\u70b9 devtmpfs 894M 0 894M 0% /dev tmpfs 910M 0 910M 0% /dev/shm tmpfs 910M 11M 900M 2% /run tmpfs 910M 0 910M 0% /sys/fs/cgroup /dev/mapper/centos-root 17G 9.3G 7.1G 57% / /dev/sda1 187M 163M 25M 87% /boot tmpfs 182M 0 182M 0% /run/user/0 tmpfs 182M 8.0K 182M 1% /run/user/42 [root@localhost ~]#","title":"\u540c\u6b65\u5230\u6587\u4ef6\u7cfb\u7edf"},{"location":"util/linux/centos%E5%AE%89%E8%A3%85/#_23","text":"\u9002\u7528\u4e8e\u8fd8\u6ca1\u6709\u6302\u8f7d\uff0c\u5982\u679c\u6302\u8f7d\u5219\u9700\u8981\u5378\u8f7d fdisk /dev/sdc # \u8f93\u5165d,\u7136\u540e\u6309\u7167\u63d0\u793a\u8f93\u5165\u5206\u533a\u53f7","title":"\u5220\u9664\u5206\u533a"},{"location":"util/linux/shell/","text":"shell\u89e3\u91ca\u5668 sudo cat /etc/shells /bin/sh /bin/bash /usr/bin/sh /usr/bin/bash /bin/tcsh /bin/csh sh\u662fbash \u7684\u8f6f\u94fe\u63a5 /bin [matt@matt05 bin]$ ll | grep bash -rwxr-xr-x. 1 root root 964536 4\u6708 1 2020 bash lrwxrwxrwx. 1 root root 10 8\u6708 3 00:12 bashbug -> bashbug-64 -rwxr-xr-x. 1 root root 6964 4\u6708 1 2020 bashbug-64 lrwxrwxrwx. 1 root root 4 8\u6708 3 00:12 sh -> bas [matt@matt05 bin]$ ll /bin | grep bash [matt@matt05 bin]$ ll /bin/ | grep bash -rwxr-xr-x. 1 root root 964536 4\u6708 1 2020 bash lrwxrwxrwx. 1 root root 10 8\u6708 3 00:12 bashbug -> bashbug-64 -rwxr-xr-x. 1 root root 6964 4\u6708 1 2020 bashbug-64 lrwxrwxrwx. 1 root root 4 8\u6708 3 00:12 sh -> bas Centos\u9ed8\u8ba4\u7684\u89e3\u6790\u5668\u662fbash demo helloword.sh \u4ee3\u7801 #!/bin/bash # echo \u8f93\u51fa echo \"helloword\" \u8fd0\u884c 1 sh helloword.sh sh /home/matt/stu/helloword.sh 2 \u8fd9\u79cd\u65b9\u5f0f\u9700\u8981\u6307\u5b9a\u6267\u884c\u6743\u9650x ./helloword.sh /home/matt/stu/helloword.sh myadd.sh #!/bin/bash cd /home/matt/stu touch add.txt # \u8ffd\u52a0 echo \"hello matt\" >> add.txt \u53d8\u91cf \u7cfb\u7edf\u53d8\u91cf $HOME $USER $PWD $SHELL [matt@matt05 stu]$ echo $SHELL /bin/bash [matt@matt05 stu]$ echo $HOME /home/matt [matt@matt05 stu]$ echo $USER matt [matt@matt05 stu]$ echo $PWD /home/matt/stu [matt@matt05 stu]$ \u81ea\u5b9a\u4e49\u53d8\u91cf # = \u4e4b\u95f4\u4e0d\u53ef\u4ee5\u6709\u7a7a\u683c a=1 # \u64a4\u9500\u58f0\u660e unset a # \u53ea\u8bfb readonly a=1 # \u63d0\u5347\u4e3a\u5168\u5c40\u53d8\u91cf export a \u547d\u540d\u89c4\u8303\uff1a\u6570\u5b57\u5b57\u6bcd\u4e0b\u5212\u7ebf\uff0c\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934 \u7b49\u53f7\u4fe9\u4fa7\u4e0d\u53ef\u4ee5\u6709\u7a7a\u683c \u9ed8\u8ba4\u662f\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u6709\u7a7a\u683c\u5219\u52a0\u53cc\u5f15\u53f7\u6216\u8005\u5355\u5f15\u53f7 $n $n \uff08\u529f\u80fd\u63cf\u8ff0\uff1an\u4e3a\u6570\u5b57\uff0c$0\u4ee3\u8868\u8be5\u811a\u672c\u540d\u79f0\uff0c$1-$9\u4ee3\u8868\u7b2c\u4e00\u5230\u7b2c\u4e5d\u4e2a\u53c2\u6570\uff0c\u5341\u4ee5\u4e0a\u7684\u53c2\u6570\uff0c\u5341\u4ee5\u4e0a\u7684\u53c2\u6570\u9700\u8981\u7528\u5927\u62ec\u53f7\u5305\u542b\uff0c\u5982${10}\uff09 $# \u8f93\u5165\u53c2\u6570\u7684\u4e2a\u6570 #* #@ \u6240\u6709\u7684\u8f93\u5165\u53c2\u6570 #\uff1f \u4e0a\u4e00\u6761\u547d\u4ee4\u662f\u5426\u6267\u884c\u6210\u529f \u6210\u529f\u662f0 \u5931\u8d25\u975e0 \u8fd0\u7b97\u7b26 $[] $(()) echo $[2+3*1] expr + , - , \\*, /, % expr 1 + 2 \u6ce8\u610f\uff1aexpr\u8fd0\u7b97\u7b26\u95f4\u8981\u6709\u7a7a\u683c \u6761\u4ef6\u5224\u65ad \u57fa\u672c\u8bed\u6cd5 [ condition ]\uff08\u6ce8\u610fcondition\u524d\u540e\u8981\u6709\u7a7a\u683c\uff09 \u6ce8\u610f\uff1a\u6761\u4ef6\u975e\u7a7a\u5373\u4e3atrue\uff0c[ atguigu ]\u8fd4\u56detrue\uff0c[] \u8fd4\u56defalse\u3002 \u7b26\u53f7 \u6bd4\u8f83\u7b26\u53f7 == \u5b57\u7b26\u4e32\u6bd4\u8f83 \u6574\u6570 // < -lt // <= -le // > -gt // >= -ge // == -eq // != -ne \u6587\u4ef6 // \u8bfb\u7684\u6743\u9650 -r // \u5199\u7684\u6743\u9650 -w // \u6267\u884c\u7684\u6743\u9650 -x \u6587\u4ef6\u7c7b\u578b -f \u6587\u4ef6\u5b58\u5728\u5e76\u4e14\u662f\u4e00\u4e2a\u5e38\u89c4\u7684\u6587\u4ef6\uff08file\uff09 -e \u6587\u4ef6\u5b58\u5728\uff08existence\uff09 -d \u6587\u4ef6\u5b58\u5728\u5e76\u662f\u4e00\u4e2a\u76ee\u5f55\uff08directory\uff09 \u6848\u4f8b [matt@matt05 stu]$ [ 23 -eq 22 ] [matt@matt05 stu]$ echo $? 1 [matt@matt05 stu]$ [ 23 -eq 23 ] [matt@matt05 stu]$ echo $? 0 [matt@matt05 stu]$ \u6ce8\u610f \u591a\u6761\u4ef6\u5224\u65ad\uff08&& \u8868\u793a\u524d\u4e00\u6761\u547d\u4ee4\u6267\u884c\u6210\u529f\u65f6\uff0c\u624d\u6267\u884c\u540e\u4e00\u6761\u547d\u4ee4\uff0c|| \u8868\u793a\u4e0a\u4e00\u6761\u547d\u4ee4\u6267\u884c\u5931\u8d25\u540e\uff0c\u624d\u6267\u884c\u4e0b\u4e00\u6761\u547d\u4ee4\uff09 [matt@matt05 stu]$ [ -e a.txt ] || echo 'matt' matt [matt@matt05 stu]$ \u6d41\u7a0b\u63a7\u5236 if #!/bin/bash # if\u540e\u9762\u6709\u7a7a\u683c # [] \u91cc\u9762\u5404\u4e2a\u7b26\u53f7\u4e4b\u95f4\u7684\u7a7a\u683c if [ 121 -eq 1 ]; then echo 'bb' elif [ 1 -le 2 ]; then echo 'aaa' fi if [ 'aaaa' == 'aa' ]; then echo '==' else echo '!=' fi case #!/bin/bash case $1 in \"1\") echo \"1\" # ;; \u76f8\u5f53\u4e8ebreak ;; \"2\") echo \"2\" ;; # * \u76f8\u5f53\u4e8edefault *) echo default ;; esac for #!/bin/bash sum=0 for((i=1;i<10;i++)) do sum=$[$sum+$i] done echo $sum #!/bin/bash for i in $* # do\u5199\u5728\u4e0b\u4e00\u884c do echo \"134343 $i\" done for i in $@ do echo \"@@ $i\" done for i in \"$*\" do echo \"$i\" done for j in \"$@\" do echo \"$j\" done [matt@matt05 stu]$ sh for2.sh 2 3 134343 2 134343 3 @@ 2 @@ 3 2 3 2 3 $*\u548c$@\u90fd\u8868\u793a\u4f20\u9012\u7ed9\u51fd\u6570\u6216\u811a\u672c\u7684\u6240\u6709\u53c2\u6570\uff0c\u4e0d\u88ab\u53cc\u5f15\u53f7\u201c\u201d\u5305\u542b\u65f6\uff0c\u90fd\u4ee5$1 $2 \u2026$n\u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570 \u5f53\u5b83\u4eec\u88ab\u53cc\u5f15\u53f7\u201c\u201d\u5305\u542b\u65f6\uff0c\u201c$*\u201d\u4f1a\u5c06\u6240\u6709\u7684\u53c2\u6570\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u4ee5\u201c$1 $2 \u2026$n\u201d\u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\uff1b\u201c$@\u201d\u4f1a\u5c06\u5404\u4e2a\u53c2\u6570\u5206\u5f00\uff0c\u4ee5\u201c$1\u201d \u201c$2\u201d\u2026\u201d$n\u201d\u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\u3002 while #!/bin/bash i=1 while [ $i -lt 10 ] do echo $i i=$[$i+1] done read #!/bin/bash # -t \u5199\u5728\u524d\u9762 3s \u6ca1\u8f93\u5165\u5c31\u4f1a\u7ec8\u6b62 read -t 3 -p \"3 s\u5185please your name\" name echo $name \u51fd\u6570 basename # .sh \u53c2\u6570\u662f\u53ef\u9009\u7684 \u4ed6\u662f\u53bb\u9664\u540e\u7f00 basename /home/matt/stu/for2.sh .sh for2 dirname [matt@matt05 stu]$ dirname /home/matt/stu/for2.txt /home/matt/stu \u81ea\u5b9a\u4e49\u51fd\u6570 #!/bin/bash function sum() { s=0 s=$[$1+$2] echo $s $? } # \u9700\u8981\u6307\u5b9a\u53c2\u6570 sum $1 $2 if [ 0 -eq 0 ] then echo 111 fi \u51fd\u6570\u8fd4\u56de\u503c\uff0c\u53ea\u80fd\u901a\u8fc7$?\u7cfb\u7edf\u53d8\u91cf\u83b7\u5f97\uff0c\u53ef\u4ee5\u663e\u793a\u52a0\uff1areturn\u8fd4\u56de\uff0c\u5982\u679c\u4e0d\u52a0\uff0c\u5c06\u4ee5\u6700\u540e\u4e00\u6761\u547d\u4ee4\u8fd0\u884c\u7ed3\u679c\uff0c\u4f5c\u4e3a\u8fd4\u56de\u503c\u3002return\u540e\u8ddf\u6570\u503cn(0-255) \u7a7a\u683c\u5206\u5f00 \u7b2c\u4e00\u5217\u6570\u636e cut -d \" \" -f 1 cut.txt cut -d \" \" -f 2,3 cut.txt [matt@matt05 stu]$ sed \"2a matt siry\" sed.txt dong shen guan zhen matt siry wo wo lai lai le le [matt@matt05 stu]$ sed \"/do/d\" sed.txt guan zhen wo wo lai lai le le # /g \u5168\u5c40\u66ff\u6362 [matt@matt05 stu]$ sed \"s/wo/ma/g\" sed.txt dong shen guan zhen ma ma lai lai le le \u5220\u9664\u7b2c\u4e8c\u884c [matt@matt05 stu]$ sed -e '2d' -e 's/wo/ni/g' sed.txt dong shen ni ni lai lai le le \u7b2c7\u5217 [matt@matt05 awk]$ awk -F ':' '/^root/{print $7}' passwd /bin/bash [matt@matt05 awk]$ awk -F \":\" '/^root/{print $1,$7}' passwd root /bin/bash awk -F ':' 'BEGIN{print \"user,matt\"} {print $1\".\"$7} END{print \"matt\"}' passwd awk -F ':' -v i=1 '{print $3+i}' passwd \u8fd9\u4e09\u4e2a\u53d8\u91cf\u4e0d\u80fd\u5728BEGIN\u4e2d\u4f7f\u7528 awk -F ':' '{print FILENAME} {print NR\"-\"NF}' passwd ifconfig ens33 | awk -F : '{print $1}' sort -t : -nrk 3 sort.txt","title":"Shell"},{"location":"util/linux/shell/#shell","text":"sudo cat /etc/shells /bin/sh /bin/bash /usr/bin/sh /usr/bin/bash /bin/tcsh /bin/csh","title":"shell\u89e3\u91ca\u5668"},{"location":"util/linux/shell/#shbash","text":"/bin [matt@matt05 bin]$ ll | grep bash -rwxr-xr-x. 1 root root 964536 4\u6708 1 2020 bash lrwxrwxrwx. 1 root root 10 8\u6708 3 00:12 bashbug -> bashbug-64 -rwxr-xr-x. 1 root root 6964 4\u6708 1 2020 bashbug-64 lrwxrwxrwx. 1 root root 4 8\u6708 3 00:12 sh -> bas [matt@matt05 bin]$ ll /bin | grep bash [matt@matt05 bin]$ ll /bin/ | grep bash -rwxr-xr-x. 1 root root 964536 4\u6708 1 2020 bash lrwxrwxrwx. 1 root root 10 8\u6708 3 00:12 bashbug -> bashbug-64 -rwxr-xr-x. 1 root root 6964 4\u6708 1 2020 bashbug-64 lrwxrwxrwx. 1 root root 4 8\u6708 3 00:12 sh -> bas","title":"sh\u662fbash \u7684\u8f6f\u94fe\u63a5"},{"location":"util/linux/shell/#centosbash","text":"","title":"Centos\u9ed8\u8ba4\u7684\u89e3\u6790\u5668\u662fbash"},{"location":"util/linux/shell/#demo","text":"","title":"demo"},{"location":"util/linux/shell/#hellowordsh","text":"","title":"helloword.sh"},{"location":"util/linux/shell/#_1","text":"#!/bin/bash # echo \u8f93\u51fa echo \"helloword\"","title":"\u4ee3\u7801"},{"location":"util/linux/shell/#_2","text":"1 sh helloword.sh sh /home/matt/stu/helloword.sh 2 \u8fd9\u79cd\u65b9\u5f0f\u9700\u8981\u6307\u5b9a\u6267\u884c\u6743\u9650x ./helloword.sh /home/matt/stu/helloword.sh","title":"\u8fd0\u884c"},{"location":"util/linux/shell/#myaddsh","text":"#!/bin/bash cd /home/matt/stu touch add.txt # \u8ffd\u52a0 echo \"hello matt\" >> add.txt","title":"myadd.sh"},{"location":"util/linux/shell/#_3","text":"","title":"\u53d8\u91cf"},{"location":"util/linux/shell/#_4","text":"$HOME $USER $PWD $SHELL [matt@matt05 stu]$ echo $SHELL /bin/bash [matt@matt05 stu]$ echo $HOME /home/matt [matt@matt05 stu]$ echo $USER matt [matt@matt05 stu]$ echo $PWD /home/matt/stu [matt@matt05 stu]$","title":"\u7cfb\u7edf\u53d8\u91cf"},{"location":"util/linux/shell/#_5","text":"# = \u4e4b\u95f4\u4e0d\u53ef\u4ee5\u6709\u7a7a\u683c a=1 # \u64a4\u9500\u58f0\u660e unset a # \u53ea\u8bfb readonly a=1 # \u63d0\u5347\u4e3a\u5168\u5c40\u53d8\u91cf export a \u547d\u540d\u89c4\u8303\uff1a\u6570\u5b57\u5b57\u6bcd\u4e0b\u5212\u7ebf\uff0c\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934 \u7b49\u53f7\u4fe9\u4fa7\u4e0d\u53ef\u4ee5\u6709\u7a7a\u683c \u9ed8\u8ba4\u662f\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u6709\u7a7a\u683c\u5219\u52a0\u53cc\u5f15\u53f7\u6216\u8005\u5355\u5f15\u53f7","title":"\u81ea\u5b9a\u4e49\u53d8\u91cf"},{"location":"util/linux/shell/#n","text":"$n \uff08\u529f\u80fd\u63cf\u8ff0\uff1an\u4e3a\u6570\u5b57\uff0c$0\u4ee3\u8868\u8be5\u811a\u672c\u540d\u79f0\uff0c$1-$9\u4ee3\u8868\u7b2c\u4e00\u5230\u7b2c\u4e5d\u4e2a\u53c2\u6570\uff0c\u5341\u4ee5\u4e0a\u7684\u53c2\u6570\uff0c\u5341\u4ee5\u4e0a\u7684\u53c2\u6570\u9700\u8981\u7528\u5927\u62ec\u53f7\u5305\u542b\uff0c\u5982${10}\uff09","title":"$n"},{"location":"util/linux/shell/#_6","text":"","title":"$# \u8f93\u5165\u53c2\u6570\u7684\u4e2a\u6570"},{"location":"util/linux/shell/#_7","text":"","title":"#* #@ \u6240\u6709\u7684\u8f93\u5165\u53c2\u6570"},{"location":"util/linux/shell/#0-0","text":"","title":"#\uff1f \u4e0a\u4e00\u6761\u547d\u4ee4\u662f\u5426\u6267\u884c\u6210\u529f \u6210\u529f\u662f0 \u5931\u8d25\u975e0"},{"location":"util/linux/shell/#_8","text":"","title":"\u8fd0\u7b97\u7b26"},{"location":"util/linux/shell/#_9","text":"echo $[2+3*1]","title":"$[]    $(())"},{"location":"util/linux/shell/#expr","text":"+ , - , \\*, /, % expr 1 + 2 \u6ce8\u610f\uff1aexpr\u8fd0\u7b97\u7b26\u95f4\u8981\u6709\u7a7a\u683c","title":"expr"},{"location":"util/linux/shell/#_10","text":"","title":"\u6761\u4ef6\u5224\u65ad"},{"location":"util/linux/shell/#_11","text":"[ condition ]\uff08\u6ce8\u610fcondition\u524d\u540e\u8981\u6709\u7a7a\u683c\uff09 \u6ce8\u610f\uff1a\u6761\u4ef6\u975e\u7a7a\u5373\u4e3atrue\uff0c[ atguigu ]\u8fd4\u56detrue\uff0c[] \u8fd4\u56defalse\u3002","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"util/linux/shell/#_12","text":"","title":"\u7b26\u53f7"},{"location":"util/linux/shell/#_13","text":"== \u5b57\u7b26\u4e32\u6bd4\u8f83","title":"\u6bd4\u8f83\u7b26\u53f7"},{"location":"util/linux/shell/#_14","text":"// < -lt // <= -le // > -gt // >= -ge // == -eq // != -ne","title":"\u6574\u6570"},{"location":"util/linux/shell/#_15","text":"// \u8bfb\u7684\u6743\u9650 -r // \u5199\u7684\u6743\u9650 -w // \u6267\u884c\u7684\u6743\u9650 -x","title":"\u6587\u4ef6"},{"location":"util/linux/shell/#_16","text":"-f \u6587\u4ef6\u5b58\u5728\u5e76\u4e14\u662f\u4e00\u4e2a\u5e38\u89c4\u7684\u6587\u4ef6\uff08file\uff09 -e \u6587\u4ef6\u5b58\u5728\uff08existence\uff09 -d \u6587\u4ef6\u5b58\u5728\u5e76\u662f\u4e00\u4e2a\u76ee\u5f55\uff08directory\uff09","title":"\u6587\u4ef6\u7c7b\u578b"},{"location":"util/linux/shell/#_17","text":"[matt@matt05 stu]$ [ 23 -eq 22 ] [matt@matt05 stu]$ echo $? 1 [matt@matt05 stu]$ [ 23 -eq 23 ] [matt@matt05 stu]$ echo $? 0 [matt@matt05 stu]$","title":"\u6848\u4f8b"},{"location":"util/linux/shell/#_18","text":"\u591a\u6761\u4ef6\u5224\u65ad\uff08&& \u8868\u793a\u524d\u4e00\u6761\u547d\u4ee4\u6267\u884c\u6210\u529f\u65f6\uff0c\u624d\u6267\u884c\u540e\u4e00\u6761\u547d\u4ee4\uff0c|| \u8868\u793a\u4e0a\u4e00\u6761\u547d\u4ee4\u6267\u884c\u5931\u8d25\u540e\uff0c\u624d\u6267\u884c\u4e0b\u4e00\u6761\u547d\u4ee4\uff09 [matt@matt05 stu]$ [ -e a.txt ] || echo 'matt' matt [matt@matt05 stu]$","title":"\u6ce8\u610f"},{"location":"util/linux/shell/#_19","text":"","title":"\u6d41\u7a0b\u63a7\u5236"},{"location":"util/linux/shell/#if","text":"#!/bin/bash # if\u540e\u9762\u6709\u7a7a\u683c # [] \u91cc\u9762\u5404\u4e2a\u7b26\u53f7\u4e4b\u95f4\u7684\u7a7a\u683c if [ 121 -eq 1 ]; then echo 'bb' elif [ 1 -le 2 ]; then echo 'aaa' fi if [ 'aaaa' == 'aa' ]; then echo '==' else echo '!=' fi","title":"if"},{"location":"util/linux/shell/#case","text":"#!/bin/bash case $1 in \"1\") echo \"1\" # ;; \u76f8\u5f53\u4e8ebreak ;; \"2\") echo \"2\" ;; # * \u76f8\u5f53\u4e8edefault *) echo default ;; esac","title":"case"},{"location":"util/linux/shell/#for","text":"#!/bin/bash sum=0 for((i=1;i<10;i++)) do sum=$[$sum+$i] done echo $sum #!/bin/bash for i in $* # do\u5199\u5728\u4e0b\u4e00\u884c do echo \"134343 $i\" done for i in $@ do echo \"@@ $i\" done for i in \"$*\" do echo \"$i\" done for j in \"$@\" do echo \"$j\" done [matt@matt05 stu]$ sh for2.sh 2 3 134343 2 134343 3 @@ 2 @@ 3 2 3 2 3 $*\u548c$@\u90fd\u8868\u793a\u4f20\u9012\u7ed9\u51fd\u6570\u6216\u811a\u672c\u7684\u6240\u6709\u53c2\u6570\uff0c\u4e0d\u88ab\u53cc\u5f15\u53f7\u201c\u201d\u5305\u542b\u65f6\uff0c\u90fd\u4ee5$1 $2 \u2026$n\u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570 \u5f53\u5b83\u4eec\u88ab\u53cc\u5f15\u53f7\u201c\u201d\u5305\u542b\u65f6\uff0c\u201c$*\u201d\u4f1a\u5c06\u6240\u6709\u7684\u53c2\u6570\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u4ee5\u201c$1 $2 \u2026$n\u201d\u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\uff1b\u201c$@\u201d\u4f1a\u5c06\u5404\u4e2a\u53c2\u6570\u5206\u5f00\uff0c\u4ee5\u201c$1\u201d \u201c$2\u201d\u2026\u201d$n\u201d\u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\u3002","title":"for"},{"location":"util/linux/shell/#while","text":"#!/bin/bash i=1 while [ $i -lt 10 ] do echo $i i=$[$i+1] done","title":"while"},{"location":"util/linux/shell/#read","text":"#!/bin/bash # -t \u5199\u5728\u524d\u9762 3s \u6ca1\u8f93\u5165\u5c31\u4f1a\u7ec8\u6b62 read -t 3 -p \"3 s\u5185please your name\" name echo $name","title":"read"},{"location":"util/linux/shell/#_20","text":"","title":"\u51fd\u6570"},{"location":"util/linux/shell/#basename","text":"# .sh \u53c2\u6570\u662f\u53ef\u9009\u7684 \u4ed6\u662f\u53bb\u9664\u540e\u7f00 basename /home/matt/stu/for2.sh .sh for2","title":"basename"},{"location":"util/linux/shell/#dirname","text":"[matt@matt05 stu]$ dirname /home/matt/stu/for2.txt /home/matt/stu","title":"dirname"},{"location":"util/linux/shell/#_21","text":"#!/bin/bash function sum() { s=0 s=$[$1+$2] echo $s $? } # \u9700\u8981\u6307\u5b9a\u53c2\u6570 sum $1 $2 if [ 0 -eq 0 ] then echo 111 fi \u51fd\u6570\u8fd4\u56de\u503c\uff0c\u53ea\u80fd\u901a\u8fc7$?\u7cfb\u7edf\u53d8\u91cf\u83b7\u5f97\uff0c\u53ef\u4ee5\u663e\u793a\u52a0\uff1areturn\u8fd4\u56de\uff0c\u5982\u679c\u4e0d\u52a0\uff0c\u5c06\u4ee5\u6700\u540e\u4e00\u6761\u547d\u4ee4\u8fd0\u884c\u7ed3\u679c\uff0c\u4f5c\u4e3a\u8fd4\u56de\u503c\u3002return\u540e\u8ddf\u6570\u503cn(0-255) \u7a7a\u683c\u5206\u5f00 \u7b2c\u4e00\u5217\u6570\u636e cut -d \" \" -f 1 cut.txt cut -d \" \" -f 2,3 cut.txt [matt@matt05 stu]$ sed \"2a matt siry\" sed.txt dong shen guan zhen matt siry wo wo lai lai le le [matt@matt05 stu]$ sed \"/do/d\" sed.txt guan zhen wo wo lai lai le le # /g \u5168\u5c40\u66ff\u6362 [matt@matt05 stu]$ sed \"s/wo/ma/g\" sed.txt dong shen guan zhen ma ma lai lai le le \u5220\u9664\u7b2c\u4e8c\u884c [matt@matt05 stu]$ sed -e '2d' -e 's/wo/ni/g' sed.txt dong shen ni ni lai lai le le \u7b2c7\u5217 [matt@matt05 awk]$ awk -F ':' '/^root/{print $7}' passwd /bin/bash [matt@matt05 awk]$ awk -F \":\" '/^root/{print $1,$7}' passwd root /bin/bash awk -F ':' 'BEGIN{print \"user,matt\"} {print $1\".\"$7} END{print \"matt\"}' passwd awk -F ':' -v i=1 '{print $3+i}' passwd \u8fd9\u4e09\u4e2a\u53d8\u91cf\u4e0d\u80fd\u5728BEGIN\u4e2d\u4f7f\u7528 awk -F ':' '{print FILENAME} {print NR\"-\"NF}' passwd ifconfig ens33 | awk -F : '{print $1}' sort -t : -nrk 3 sort.txt","title":"\u81ea\u5b9a\u4e49\u51fd\u6570"},{"location":"util/linux/ubuntu/","text":"apt = apt-get\u3001apt-cache \u548c apt-config \u4e2d\u6700\u5e38\u7528\u547d\u4ee4\u9009\u9879\u7684\u96c6\u5408\u3002 # \u66f4\u65b0\u8f6f\u4ef6\u5217\u8868 apt update # \u66f4\u65b0\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305 apt upgrade \u5305\u540d apt list # \u663e\u793a\u5df2\u7ecf\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305 apt list --installed # \u663e\u793a\u53ef\u5347\u7ea7\u7684\u8f6f\u4ef6\u5305 apt list --upgradeable apt install xxx apt remove xxx # \u81ea\u52a8\u6e05\u7406\u4e0d\u5728\u4f7f\u7528\u7684\u4f9d\u8d56 apt autoremove apt show xxx","title":"Ubuntu"},{"location":"util/linux/vim/","text":"vim esc+\u5c0f\u5199o:\u8df3\u5230\u4e0b\u4e00\u884c","title":"vim"},{"location":"util/linux/vim/#vim","text":"esc+\u5c0f\u5199o:\u8df3\u5230\u4e0b\u4e00\u884c","title":"vim"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","text":"\u5e2e\u52a9\u547d\u4ee4 man cd cd --help \u6587\u4ef6\u76ee\u5f55\u57fa\u7840\u547d\u4ee4 /tmp:\u662f\u4e34\u65f6\u76ee\u5f55\uff0c\u5b9a\u671f\u4f1a\u5220\u9664 \u6309table\u5373\u53ef\u770b\u5230\u5f53\u524d\u76ee\u5f55\u6587\u4ef6 touch hello.txt vim hello.txt mkdir -p ./a/b rmdir ./a rm -rvf ./a cd ./a pwd ls ./ ls -l ./ // \u5217\u51fa\u5f53\u524d\u6240\u6709\u6587\u4ef6\u76ee\u5f55 ls -a ./ // \u67e5\u770b\u6587\u4ef6\u6700\u540e20\u884c tail -n 20 a.txt // \u76d1\u89c6\u6587\u4ef6\u7684\u5185\u5bb9 -n 10 \u5faa\u73af\u663e\u793a\u6700\u540e10\u884c\u5185\u5bb9 tail -f a.txt cat hello.txt # \u521b\u5efa\u6587\u4ef6 cat > hello.txt # a.txt b.txt\u5185\u5bb9\u8ffd\u52a0\u5230hello.txt cat a.txt b.txt > hello.txt cp hello.txt copy.txt // \u590d\u5236\u4e00\u4e2a\u6587\u4ef6\u5939 cp -r ./a ./b mv hello.txt a.txt mv hello.txt ../ // s:soft\u8f6f\u94fe\u63a5 ln -s a.txt a history echo // :\u4e00\u822c\u7528\u4e8e\u914d\u5236\u6587\u4ef6\u914d\u5236\u53d8\u91cf export grep \u6587\u4ef6\u538b\u7f29 tar -zcvf xx.tar.gz xx.txt tar -zcvf xxx.tar.gz xxxx \u538b\u7f29\u6587\u4ef6 tar -zxvf xxx.tar.gz \u89e3\u538b\u7f29\u6587\u4ef6 tar -zxvf aa.tar.gz -C ./a zip a.zip a.txt zip -r a.zip ./ unzip xxx.zip \u7528\u6237 groupadd g1 groupdel g1 useradd -g g1 u1 passwd u1 userdel -r u1 id u1 whoami su - u1 sudo:\u4ee5root\u7528\u6237\u8fd0\u884c \u7528\u6237\u6587\u4ef6\u6743\u9650 \u6587\u4ef6\u7c7b\u578b-\u6240\u6709\u8005-\u540c\u4e00\u4e2a\u7ec4-\u5176\u4ed6\u7528\u6237 r\uff1a\u8bfb4 w\uff1a\u51992 x\uff1a\u6267\u884c1 ```] chmod 777 aa.txt chmod u+rwx,g+rwx,o+rwx aa.txt chown u1 aa.txt chown u1:g1 aa.txt chown -R u1:u1 /opt/sofrware chgrp g1 aa.txt # \u5b89\u88c5\u5378\u8f7d ### yum rpm yum list yum install tomcat yum remove tomcat xxx:\u5305\u540d rpm -ivh xxx rpm -e xxx rpm -qa # \u8fdb\u7a0b ```go kill -9 9000 // \u67e5\u770b\u8fdb\u7a0b ps -ef // \u67e5\u770b\u7f51\u7edc\u60c5\u51b5 netstat -anp netstat -anp | grep 9000 // \u67e5\u770b\u7aef\u53e3\u53f7\u4e3a9000\u7684\u8fdb\u7a0b ping www.baidu.com ping 192.168.96.128 # \u67e5\u770bip ifconfig netstat -tulnp Active Internet connections (servers and established) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 1904/sshd tcp 0 0 127.0.0.1:631 0.0.0.0:* LISTEN 1750/cupsd tcp 0 0 0.0.0.0:44567 0.0.0.0:* LISTEN 1713/rpc.statd tcp 0 0 0.0.0.0:10050 0.0.0.0:* LISTEN 1965/zabbix_agentd tcp 0 0 172.172.230.211:3306 0.0.0.0:* LISTEN 31849/mysqld tcp 0 0 0.0.0.0:111 0.0.0.0:* LISTEN 1576/rpcbind tcp 0 0 172.172.230.211:46327 172.172.100.3:80 TIME_WAIT - tcp 0 0 172.172.230.211:46329 172.172.100.3:80 TIME_WAIT - tcp 0 52 172.172.230.211:22 172.172.173.222:50043 ESTABLISHED 6095/sshd tcp 0 0 172.172.230.211:46326 172.172.100.3:80 TIME_WAIT - tcp 0 0 172.172.230.211:5401 172.172.100.3:443 TIME_WAIT - tcp 0 0 :::22 :::* LISTEN 1904/sshd tcp 0 0 ::1:631 :::* LISTEN 1750/cupsd ps -ef UID PID PPID C STIME TTY TIME CMD zzw 14124 13991 0 00:38 pts/0 00:00:00 grep -- UID \uff1a\u7a0b\u5e8f\u88ab\u8be5 UID \u6240\u62e5\u6709 PID \uff1a\u5c31\u662f\u8fd9\u4e2a\u7a0b\u5e8f\u7684 ID PPID \uff1a\u5219\u662f\u5176\u4e0a\u7ea7\u7236\u7a0b\u5e8f\u7684ID C \uff1aCPU\u4f7f\u7528\u7684\u8d44\u6e90\u767e\u5206\u6bd4 STIME \uff1a\u7cfb\u7edf\u542f\u52a8\u65f6\u95f4 TTY \uff1a\u767b\u5165\u8005\u7684\u7ec8\u7aef\u673a\u4f4d\u7f6e TIME \uff1a\u4f7f\u7528\u6389\u7684CPU\u65f6\u95f4\u3002 CMD \uff1a\u6240\u4e0b\u8fbe\u7684\u662f\u4ec0\u4e48\u6307\u4ee4 // \u67e5\u770bjava \u8fdb\u7a0b jps // \u5168\u683c\u5f0f\u67e5\u770b jps -l \u5982\u4f55\u67e5\u770b\u67d0\u4e00\u5e94\u7528\u7a0b\u5e8f\u5360\u7528\u7aef\u53e3\u53f7 // \u83b7\u5f97\u8fdb\u7a0bid ps -ef | grep zookeeeper // \u6839\u636e\u8fdb\u7a0bid\u83b7\u53d6\u7aef\u53e3\u53f7 netstat -anp | grep 4795 \u5173\u673a\u5f00\u673a \u5173\u673a shutdown -h now // \u7acb\u5373\u5173\u673a \u91cd\u542f shutdown -r now // \u7acb\u5373\u91cd\u542f top \u7528\u4e8e\u67e5\u770b\u7cfb\u7edf\u8d44\u6e90\u4f7f\u7528\u72b6\u51b5\u548c\u8fdb\u7a0b\u7684\u57fa\u672c\u4fe1\u606f top -H \u5728\u7ec8\u7aef\u4e2d\u8f93\u5165 top \uff0c\u56de\u8f66\u540e\u4f1a\u663e\u793a\u5982\u4e0b\u5185\u5bb9\uff1a \u4e00\u3001\u7cfb\u7edf\u4fe1\u606f\u7edf\u8ba1 \u524d\u4e94\u884c\u662f\u7cfb\u7edf\u6574\u4f53\u72b6\u6001\u7684\u7edf\u8ba1\u4fe1\u606f\u5c55\u793a\u533a\u57df\u3002\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u6bcf\u4e00\u884c\u4e2d\u7684\u5185\u5bb9\uff1a 1\u3001\u7b2c\u4e00\u884c\u663e\u793a\u670d\u52a1\u5668\u6982\u51b5 \u5982\u4e0b\u6240\u793a\uff0c\u7b2c\u4e00\u884c\u5217\u51fa\u4e86\u670d\u52a1\u5668\u8fd0\u884c\u4e86\u591a\u957f\u65f6\u95f4\uff0c\u5f53\u524d\u6709\u591a\u5c11\u4e2a\u7528\u6237\u767b\u5f55\uff0c\u670d\u52a1\u5668\u7684\u8d1f\u8377\u60c5\u51b5\u7b49\uff0c\u4f7f\u7528 uptime \u547d\u4ee4\u80fd\u83b7\u5f97\u540c\u6837\u7684\u7ed3\u679c\u3002 top - 21:48:39 up 8:57, 2 users, load average: 0.36, 0.24, 0.14 / / / \\ \u5f53\u524d\u65f6\u95f4 \u8fd0\u884c\u65f6\u957f \u5f53\u524d\u767b\u5f55\u7528\u6237\u6570 \u5e73\u5747\u8d1f\u8f7d\uff081\u5206\u949f\u30015\u5206\u949f\u300115\u5206\u949f\uff09 \u5e73\u5747\u8d1f\u8f7d\u7684\u503c\u8d8a\u5c0f\u4ee3\u8868\u7cfb\u7edf\u538b\u529b\u8d8a\u5c0f\uff0c\u8d8a\u5927\u5219\u4ee3\u8868\u7cfb\u7edf\u538b\u529b\u8d8a\u5927\u3002\u901a\u5e38\uff0c\u6211\u4eec\u4f1a\u4ee5\u6700\u540e\u4e00\u4e2a\u6570\u503c\uff0c\u4e5f\u5c31\u662f15\u5206\u949f\u5185\u7684\u5e73\u5747\u8d1f\u8f7d\u4f5c\u4e3a\u53c2\u8003\u6765\u8bc4\u4f30\u7cfb\u7edf\u7684\u8d1f\u8f7d\u60c5\u51b5\u3002 \u5bf9\u4e8e\u53ea\u6709\u5355\u6838cpu\u7684\u7cfb\u7edf\uff0c 1.0 \u662f\u8be5\u7cfb\u7edf\u6240\u80fd\u627f\u53d7\u8d1f\u8377\u7684\u8fb9\u754c\u503c\uff0c\u5927\u4e8e1.0\u5219\u6709\u5904\u7406\u9700\u8981\u7b49\u5f85\u3002 \u4e00\u4e2a\u5355\u6838cpu\u7684\u7cfb\u7edf\uff0c\u5e73\u5747\u8d1f\u8f7d\u7684\u5408\u9002\u503c\u662f 0.7 \u4ee5\u4e0b\u3002\u5982\u679c\u8d1f\u8f7d\u957f\u671f\u5f98\u5f8a\u57281.0\uff0c\u5219\u9700\u8981\u8003\u8651\u9a6c\u4e0a\u5904\u7406\u4e86\u3002\u8d85\u8fc71.0\u7684\u8d1f\u8f7d\uff0c\u53ef\u80fd\u4f1a\u5e26\u6765\u975e\u5e38\u4e25\u91cd\u7684\u540e\u679c\u3002 \u5f53\u7136\uff0c\u591a\u6838cpu\u7684\u7cfb\u7edf\u662f\u5728\u524d\u8ff0\u503c\u7684\u57fa\u7840\u4e0a\u4e58\u4ee5cpu\u5185\u6838\u7684\u4e2a\u6570\u3002\u5982\u5bf9\u4e8e\u591a\u6838cpu\u7684\u7cfb\u7edf\uff0c\u6709N\u4e2a\u6838\u5219\u6240\u80fd\u627f\u53d7\u7684\u8fb9\u754c\u503c\u4e3a N.0 \u3002 \u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u67e5\u770b\u6bcf\u4e2a\u5904\u7406\u5668\u7684\u4fe1\u606f\uff1a cat /proc/cpuinfo \u5982\u679c\u53ea\u60f3\u8ba1\u7b97\u6709\u591a\u5c11\u4e2acpu\u5185\u6838\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a cat /proc/cpuinfo | grep 'model name' | wc -l 2\u3001\u7b2c\u4e8c\u884c\u662f\u8fdb\u7a0b\u4fe1\u606f\uff1a Tasks: 322 total, 2 running, 320 sleeping, 0 stopped, 0 zombie / / / / / \u8fdb\u7a0b\u603b\u6570 \u6b63\u8fd0\u884c\u8fdb\u7a0b\u6570 \u7761\u7720\u8fdb\u7a0b\u6570 \u505c\u6b62\u8fdb\u7a0b\u6570 \u50f5\u5c38\u8fdb\u7a0b\u6570 3\u3001\u7b2c\u4e09\u884c\u662fCPU\u4fe1\u606f\uff1a %Cpu(s): 5.0 us \u7528\u6237\u7a7a\u95f4CPU\u5360\u6bd4 1.7 sy \u5185\u6838\u7a7a\u95f4CPU\u5360\u6bd4 0.0 ni \u7528\u6237\u8fdb\u7a0b\u7a7a\u95f4\u6539\u8fc7\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0bCPU\u5360\u6bd4 93.0 id \u7a7a\u95f2CPU\u5360\u6bd4 0.0 wa \u5f85\u8f93\u5165\u8f93\u51faCPU\u5360\u6bd4 0.3 hi \u786c\u4e2d\u65ad\uff08Hardware IRQ\uff09CPU\u5360\u6bd4 0.0 si \u8f6f\u4e2d\u65ad\uff08Software Interrupts\uff09CPU\u5360\u6bd4 0.0 st - us,sy 4\u3001\u7b2c\u56db\u884c\u662f\u5185\u5b58\u4fe1\u606f\uff1a KiB Mem: 1010504 total, 937416 used, 73088 free, 23708 buffers / / / / \u7269\u7406\u5185\u5b58\u603b\u91cf \u4f7f\u7528\u4e2d\u603b\u91cf \u7a7a\u95f2\u603b\u91cf \u7f13\u5b58\u7684\u5185\u5b58\u91cf 5\u3001\u7b2c\u4e94\u884c\u662fswap\u4ea4\u6362\u5206\u533a\u4fe1\u606f\uff1a KiB Swap: 1046524 total, 280708 used, 765816 free, 365556 cached Mem / / / / \u4ea4\u6362\u533a\u603b\u91cf \u4f7f\u7528\u4e2d\u603b\u91cf \u7a7a\u95f2\u603b\u91cf \u7f13\u5b58\u7684\u5185\u5b58\u91cf \u4f7f\u7528\u4e2d\u7684\u5185\u5b58\u603b\u91cf\uff08used\uff09\u6307\u7684\u662f\u73b0\u5728\u7cfb\u7edf\u5185\u6838\u63a7\u5236\u7684\u5185\u5b58\u6570\uff0c\u7a7a\u95f2\u5185\u5b58\u603b\u91cf\uff08free\uff09\u662f\u5185\u6838\u8fd8\u672a\u7eb3\u5165\u5176\u7ba1\u63a7\u8303\u56f4\u7684\u6570\u91cf\u3002\u7eb3\u5165\u5185\u6838\u7ba1\u7406\u7684\u5185\u5b58\u4e0d\u89c1\u5f97\u90fd\u5728\u4f7f\u7528\u4e2d\uff0c\u8fd8\u5305\u62ec\u8fc7\u53bb\u4f7f\u7528\u8fc7\u7684\u73b0\u5728\u53ef\u4ee5\u88ab\u91cd\u590d\u5229\u7528\u7684\u5185\u5b58\uff0c\u5185\u6838\u5e76\u4e0d\u628a\u8fd9\u4e9b\u53ef\u88ab\u91cd\u65b0\u4f7f\u7528\u7684\u5185\u5b58\u4ea4\u8fd8\u5230free\u4e2d\u53bb\uff0c\u56e0\u6b64\u5728 linux \u4e0afree\u5185\u5b58\u4f1a\u8d8a\u6765\u8d8a\u5c11\uff0c\u4f46\u4e0d\u7528\u4e3a\u6b64\u62c5\u5fc3\u3002 \u5982\u679c\u51fa\u4e8e\u4e60\u60ef\u53bb\u8ba1\u7b97\u53ef\u7528\u5185\u5b58\u6570\uff0c\u8fd9\u91cc\u6709\u4e2a\u8fd1\u4f3c\u7684\u8ba1\u7b97\u516c\u5f0f\uff1a\u7b2c\u56db\u884c\u7684free + \u7b2c\u56db\u884c\u7684buffers + \u7b2c\u4e94\u884c\u7684cached\uff0c\u6309\u8fd9\u4e2a\u516c\u5f0f\u6b64\u53f0\u670d\u52a1\u5668\u7684\u53ef\u7528\u5185\u5b58\uff1a73088+23708+365556 = 451M\u3002 \u5bf9\u4e8e\u5185\u5b58\u76d1\u63a7\uff0c\u5728top\u91cc\u6211\u4eec\u8981\u65f6\u523b\u76d1\u63a7\u7b2c\u4e94\u884cswap\u4ea4\u6362\u5206\u533a\u7684used\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u503c\u5728\u4e0d\u65ad\u7684\u53d8\u5316\uff0c\u8bf4\u660e\u5185\u6838\u5728\u4e0d\u65ad\u8fdb\u884c\u5185\u5b58\u548cswap\u7684\u6570\u636e\u4ea4\u6362\uff0c\u8fd9\u662f\u771f\u6b63\u7684\u5185\u5b58\u4e0d\u591f\u7528\u4e86\u3002 \u4e8c\u3001\u8fdb\u7a0b\uff08\u4efb\u52a1\uff09\u72b6\u6001\u76d1\u63a7 \u7b2c\u4e03\u884c\u53ca\u4ee5\u4e0b\u663e\u793a\u4e86\u5404\u8fdb\u7a0b\uff08\u4efb\u52a1\uff09\u7684\u72b6\u6001\u76d1\u63a7\u3002\u5404\u5217\u6240\u4ee3\u8868\u7684\u542b\u4e49\u5982\u4e0b\uff1a PID \u8fdb\u7a0bid USER \u8fdb\u7a0b\u6240\u6709\u8005 PR \u8fdb\u7a0b\u4f18\u5148\u7ea7 NI nice\u503c\u3002\u8d1f\u503c\u8868\u793a\u9ad8\u4f18\u5148\u7ea7\uff0c\u6b63\u503c\u8868\u793a\u4f4e\u4f18\u5148\u7ea7 VIRT \u8fdb\u7a0b\u4f7f\u7528\u7684\u865a\u62df\u5185\u5b58\u603b\u91cf\uff0c\u5355\u4f4dkb\u3002VIRT=SWAP+RES RES \u8fdb\u7a0b\u4f7f\u7528\u7684\u3001\u672a\u88ab\u6362\u51fa\u7684\u7269\u7406\u5185\u5b58\u5927\u5c0f\uff0c\u5355\u4f4dkb\u3002RES=CODE+DATA SHR \u5171\u4eab\u5185\u5b58\u5927\u5c0f\uff0c\u5355\u4f4dkb S \u8fdb\u7a0b\u72b6\u6001\u3002D=\u4e0d\u53ef\u4e2d\u65ad\u7684\u7761\u7720\u72b6\u6001 R=\u8fd0\u884c S=\u7761\u7720 T=\u8ddf\u8e2a/\u505c\u6b62 Z=\u50f5\u5c38\u8fdb\u7a0b %CPU \u4e0a\u6b21\u66f4\u65b0\u5230\u73b0\u5728\u7684CPU\u65f6\u95f4\u5360\u7528\u767e\u5206\u6bd4 %MEM \u8fdb\u7a0b\u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u767e\u5206\u6bd4 TIME+ \u8fdb\u7a0b\u4f7f\u7528\u7684CPU\u65f6\u95f4\u603b\u8ba1\uff0c\u5355\u4f4d1/100\u79d2 COMMAND \u8fdb\u7a0b\u540d\u79f0\uff08\u547d\u4ee4\u540d/\u547d\u4ee4\u884c\uff09 Cpu(s)\u8868\u793a\u7684\u662f \u6240\u6709\u7528\u6237\u8fdb\u7a0b\u5360\u7528\u6574\u4e2acpu\u7684\u5e73\u5747\u503c\uff0c\u7531\u4e8e\u6bcf\u4e2a\u6838\u5fc3\u5360\u7528\u7684\u767e\u5206\u6bd4\u4e0d\u540c\uff0c\u6240\u4ee5\u6309\u5e73\u5747\u503c\u6765\u7b97\u6bd4\u8f83\u6709\u53c2\u8003\u610f\u4e49\u3002 %CPU\u663e\u793a\u7684\u662f\u8fdb\u7a0b\u5360\u7528\u4e00\u4e2a\u6838\u7684\u767e\u5206\u6bd4\uff0c\u800c\u4e0d\u662f\u6574\u4e2acpu\uff0812\u6838\uff09\u7684\u767e\u5206\u6bd4\uff0c\u6709\u65f6\u5019\u53ef\u80fd\u5927\u4e8e100\uff0c\u90a3\u662f\u56e0\u4e3a\u8be5\u8fdb\u7a0b\u542f\u7528\u4e86\u591a\u7ebf\u7a0b\u5360\u7528\u4e86\u591a\u4e2a\u6838\u5fc3\uff0c\u6240\u4ee5\u6709\u65f6\u5019\u6211\u4eec\u770b\u8be5\u503c\u5f97\u65f6\u5019\u4f1a\u8d85\u8fc7100%\uff0c\u4f46\u4e0d\u4f1a\u8d85\u8fc7\u603b\u6838\u6570*100\u3002 \u4e09\u3001\u4e0etop\u4ea4\u4e92 \u6309\u952e b \u6253\u5f00\u6216\u5173\u95ed \u8fd0\u884c\u4e2d\u8fdb\u7a0b\u7684\u9ad8\u4eae\u6548\u679c \u6309\u952e x \u6253\u5f00\u6216\u5173\u95ed \u6392\u5e8f\u5217\u7684\u9ad8\u4eae\u6548\u679c shift + > \u6216 shift + < \u53ef\u4ee5\u5411\u53f3\u6216\u5de6\u6539\u53d8\u6392\u5e8f\u5217 f \u952e\uff0c\u53ef\u4ee5\u8fdb\u5165\u7f16\u8f91\u8981\u663e\u793a\u5b57\u6bb5\u7684\u89c6\u56fe\uff0c\u6709 * \u53f7\u7684\u5b57\u6bb5\u4f1a\u663e\u793a\uff0c\u65e0 * \u53f7\u4e0d\u663e\u793a\uff0c\u53ef\u6839\u636e\u9875\u9762\u63d0\u793a\u9009\u62e9\u6216\u53d6\u6d88\u5b57\u6bb5\u3002 \u95ee\u9898 \u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6bcf\u6b21\u90fd\u8981\u91cd\u542f\u7f51\u5173 win10\u4e2d\u7684v8\u4e2ddns\u5173\u4e86 curl --request POST '127.0.0.1:8080/test' --header 'Content-Type: application/json;charset=UTF-8' --data '{\"name\":\"matt\"}' curl curl 'http://127.0.0.1:8080/user?hname=matt&age=11' curl -G --data-urlencode 'age=12 23' -d 'name=matt' 127.0.0.1:8080 curl -H 'A: A' -H 'b: B' -G --data-urlencode 'age=12 23' -d 'name=matt' 127.0.0.1:8080 curl -d '{\"name\": \"matt\", \"age\": 17}' -X POST 'http://127.0.0.1:80/user' lsof -i :8080 lsof -nP -p 39284 | grep LISTEN # \u6574\u4e2a\u78c1\u76d8\u5206\u533a df -h # \u4e0d\u6307\u5b9a\u6587\u4ef6 \u5219\u603b\u8ba1 du -h du -h xxx.txt top \u547d\u4ee4 \u6392\u5e8f linux \u8f93\u5165\u5927\u5199P M mac \u8f93\u5165o \u5728\u8f93\u5165 cpu mem","title":"\u5e2e\u52a9\u547d\u4ee4"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","text":"man cd cd --help","title":"\u5e2e\u52a9\u547d\u4ee4"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_2","text":"/tmp:\u662f\u4e34\u65f6\u76ee\u5f55\uff0c\u5b9a\u671f\u4f1a\u5220\u9664 \u6309table\u5373\u53ef\u770b\u5230\u5f53\u524d\u76ee\u5f55\u6587\u4ef6 touch hello.txt vim hello.txt mkdir -p ./a/b rmdir ./a rm -rvf ./a cd ./a pwd ls ./ ls -l ./ // \u5217\u51fa\u5f53\u524d\u6240\u6709\u6587\u4ef6\u76ee\u5f55 ls -a ./ // \u67e5\u770b\u6587\u4ef6\u6700\u540e20\u884c tail -n 20 a.txt // \u76d1\u89c6\u6587\u4ef6\u7684\u5185\u5bb9 -n 10 \u5faa\u73af\u663e\u793a\u6700\u540e10\u884c\u5185\u5bb9 tail -f a.txt cat hello.txt # \u521b\u5efa\u6587\u4ef6 cat > hello.txt # a.txt b.txt\u5185\u5bb9\u8ffd\u52a0\u5230hello.txt cat a.txt b.txt > hello.txt cp hello.txt copy.txt // \u590d\u5236\u4e00\u4e2a\u6587\u4ef6\u5939 cp -r ./a ./b mv hello.txt a.txt mv hello.txt ../ // s:soft\u8f6f\u94fe\u63a5 ln -s a.txt a history echo // :\u4e00\u822c\u7528\u4e8e\u914d\u5236\u6587\u4ef6\u914d\u5236\u53d8\u91cf export grep","title":"\u6587\u4ef6\u76ee\u5f55\u57fa\u7840\u547d\u4ee4"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_3","text":"tar -zcvf xx.tar.gz xx.txt tar -zcvf xxx.tar.gz xxxx \u538b\u7f29\u6587\u4ef6 tar -zxvf xxx.tar.gz \u89e3\u538b\u7f29\u6587\u4ef6 tar -zxvf aa.tar.gz -C ./a zip a.zip a.txt zip -r a.zip ./ unzip xxx.zip","title":"\u6587\u4ef6\u538b\u7f29"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_4","text":"groupadd g1 groupdel g1 useradd -g g1 u1 passwd u1 userdel -r u1 id u1 whoami su - u1 sudo:\u4ee5root\u7528\u6237\u8fd0\u884c","title":"\u7528\u6237"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_5","text":"\u6587\u4ef6\u7c7b\u578b-\u6240\u6709\u8005-\u540c\u4e00\u4e2a\u7ec4-\u5176\u4ed6\u7528\u6237 r\uff1a\u8bfb4 w\uff1a\u51992 x\uff1a\u6267\u884c1 ```] chmod 777 aa.txt chmod u+rwx,g+rwx,o+rwx aa.txt chown u1 aa.txt chown u1:g1 aa.txt chown -R u1:u1 /opt/sofrware chgrp g1 aa.txt # \u5b89\u88c5\u5378\u8f7d ### yum rpm yum list yum install tomcat yum remove tomcat xxx:\u5305\u540d rpm -ivh xxx rpm -e xxx rpm -qa # \u8fdb\u7a0b ```go kill -9 9000 // \u67e5\u770b\u8fdb\u7a0b ps -ef // \u67e5\u770b\u7f51\u7edc\u60c5\u51b5 netstat -anp netstat -anp | grep 9000 // \u67e5\u770b\u7aef\u53e3\u53f7\u4e3a9000\u7684\u8fdb\u7a0b ping www.baidu.com ping 192.168.96.128 # \u67e5\u770bip ifconfig netstat -tulnp Active Internet connections (servers and established) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 1904/sshd tcp 0 0 127.0.0.1:631 0.0.0.0:* LISTEN 1750/cupsd tcp 0 0 0.0.0.0:44567 0.0.0.0:* LISTEN 1713/rpc.statd tcp 0 0 0.0.0.0:10050 0.0.0.0:* LISTEN 1965/zabbix_agentd tcp 0 0 172.172.230.211:3306 0.0.0.0:* LISTEN 31849/mysqld tcp 0 0 0.0.0.0:111 0.0.0.0:* LISTEN 1576/rpcbind tcp 0 0 172.172.230.211:46327 172.172.100.3:80 TIME_WAIT - tcp 0 0 172.172.230.211:46329 172.172.100.3:80 TIME_WAIT - tcp 0 52 172.172.230.211:22 172.172.173.222:50043 ESTABLISHED 6095/sshd tcp 0 0 172.172.230.211:46326 172.172.100.3:80 TIME_WAIT - tcp 0 0 172.172.230.211:5401 172.172.100.3:443 TIME_WAIT - tcp 0 0 :::22 :::* LISTEN 1904/sshd tcp 0 0 ::1:631 :::* LISTEN 1750/cupsd ps -ef UID PID PPID C STIME TTY TIME CMD zzw 14124 13991 0 00:38 pts/0 00:00:00 grep -- UID \uff1a\u7a0b\u5e8f\u88ab\u8be5 UID \u6240\u62e5\u6709 PID \uff1a\u5c31\u662f\u8fd9\u4e2a\u7a0b\u5e8f\u7684 ID PPID \uff1a\u5219\u662f\u5176\u4e0a\u7ea7\u7236\u7a0b\u5e8f\u7684ID C \uff1aCPU\u4f7f\u7528\u7684\u8d44\u6e90\u767e\u5206\u6bd4 STIME \uff1a\u7cfb\u7edf\u542f\u52a8\u65f6\u95f4 TTY \uff1a\u767b\u5165\u8005\u7684\u7ec8\u7aef\u673a\u4f4d\u7f6e TIME \uff1a\u4f7f\u7528\u6389\u7684CPU\u65f6\u95f4\u3002 CMD \uff1a\u6240\u4e0b\u8fbe\u7684\u662f\u4ec0\u4e48\u6307\u4ee4 // \u67e5\u770bjava \u8fdb\u7a0b jps // \u5168\u683c\u5f0f\u67e5\u770b jps -l \u5982\u4f55\u67e5\u770b\u67d0\u4e00\u5e94\u7528\u7a0b\u5e8f\u5360\u7528\u7aef\u53e3\u53f7 // \u83b7\u5f97\u8fdb\u7a0bid ps -ef | grep zookeeeper // \u6839\u636e\u8fdb\u7a0bid\u83b7\u53d6\u7aef\u53e3\u53f7 netstat -anp | grep 4795","title":"\u7528\u6237\u6587\u4ef6\u6743\u9650"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_6","text":"\u5173\u673a shutdown -h now // \u7acb\u5373\u5173\u673a \u91cd\u542f shutdown -r now // \u7acb\u5373\u91cd\u542f","title":"\u5173\u673a\u5f00\u673a"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#top","text":"\u7528\u4e8e\u67e5\u770b\u7cfb\u7edf\u8d44\u6e90\u4f7f\u7528\u72b6\u51b5\u548c\u8fdb\u7a0b\u7684\u57fa\u672c\u4fe1\u606f top -H \u5728\u7ec8\u7aef\u4e2d\u8f93\u5165 top \uff0c\u56de\u8f66\u540e\u4f1a\u663e\u793a\u5982\u4e0b\u5185\u5bb9\uff1a","title":"top"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_7","text":"\u524d\u4e94\u884c\u662f\u7cfb\u7edf\u6574\u4f53\u72b6\u6001\u7684\u7edf\u8ba1\u4fe1\u606f\u5c55\u793a\u533a\u57df\u3002\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u6bcf\u4e00\u884c\u4e2d\u7684\u5185\u5bb9\uff1a","title":"\u4e00\u3001\u7cfb\u7edf\u4fe1\u606f\u7edf\u8ba1"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#1","text":"\u5982\u4e0b\u6240\u793a\uff0c\u7b2c\u4e00\u884c\u5217\u51fa\u4e86\u670d\u52a1\u5668\u8fd0\u884c\u4e86\u591a\u957f\u65f6\u95f4\uff0c\u5f53\u524d\u6709\u591a\u5c11\u4e2a\u7528\u6237\u767b\u5f55\uff0c\u670d\u52a1\u5668\u7684\u8d1f\u8377\u60c5\u51b5\u7b49\uff0c\u4f7f\u7528 uptime \u547d\u4ee4\u80fd\u83b7\u5f97\u540c\u6837\u7684\u7ed3\u679c\u3002 top - 21:48:39 up 8:57, 2 users, load average: 0.36, 0.24, 0.14 / / / \\ \u5f53\u524d\u65f6\u95f4 \u8fd0\u884c\u65f6\u957f \u5f53\u524d\u767b\u5f55\u7528\u6237\u6570 \u5e73\u5747\u8d1f\u8f7d\uff081\u5206\u949f\u30015\u5206\u949f\u300115\u5206\u949f\uff09 \u5e73\u5747\u8d1f\u8f7d\u7684\u503c\u8d8a\u5c0f\u4ee3\u8868\u7cfb\u7edf\u538b\u529b\u8d8a\u5c0f\uff0c\u8d8a\u5927\u5219\u4ee3\u8868\u7cfb\u7edf\u538b\u529b\u8d8a\u5927\u3002\u901a\u5e38\uff0c\u6211\u4eec\u4f1a\u4ee5\u6700\u540e\u4e00\u4e2a\u6570\u503c\uff0c\u4e5f\u5c31\u662f15\u5206\u949f\u5185\u7684\u5e73\u5747\u8d1f\u8f7d\u4f5c\u4e3a\u53c2\u8003\u6765\u8bc4\u4f30\u7cfb\u7edf\u7684\u8d1f\u8f7d\u60c5\u51b5\u3002 \u5bf9\u4e8e\u53ea\u6709\u5355\u6838cpu\u7684\u7cfb\u7edf\uff0c 1.0 \u662f\u8be5\u7cfb\u7edf\u6240\u80fd\u627f\u53d7\u8d1f\u8377\u7684\u8fb9\u754c\u503c\uff0c\u5927\u4e8e1.0\u5219\u6709\u5904\u7406\u9700\u8981\u7b49\u5f85\u3002 \u4e00\u4e2a\u5355\u6838cpu\u7684\u7cfb\u7edf\uff0c\u5e73\u5747\u8d1f\u8f7d\u7684\u5408\u9002\u503c\u662f 0.7 \u4ee5\u4e0b\u3002\u5982\u679c\u8d1f\u8f7d\u957f\u671f\u5f98\u5f8a\u57281.0\uff0c\u5219\u9700\u8981\u8003\u8651\u9a6c\u4e0a\u5904\u7406\u4e86\u3002\u8d85\u8fc71.0\u7684\u8d1f\u8f7d\uff0c\u53ef\u80fd\u4f1a\u5e26\u6765\u975e\u5e38\u4e25\u91cd\u7684\u540e\u679c\u3002 \u5f53\u7136\uff0c\u591a\u6838cpu\u7684\u7cfb\u7edf\u662f\u5728\u524d\u8ff0\u503c\u7684\u57fa\u7840\u4e0a\u4e58\u4ee5cpu\u5185\u6838\u7684\u4e2a\u6570\u3002\u5982\u5bf9\u4e8e\u591a\u6838cpu\u7684\u7cfb\u7edf\uff0c\u6709N\u4e2a\u6838\u5219\u6240\u80fd\u627f\u53d7\u7684\u8fb9\u754c\u503c\u4e3a N.0 \u3002 \u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u67e5\u770b\u6bcf\u4e2a\u5904\u7406\u5668\u7684\u4fe1\u606f\uff1a cat /proc/cpuinfo \u5982\u679c\u53ea\u60f3\u8ba1\u7b97\u6709\u591a\u5c11\u4e2acpu\u5185\u6838\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a cat /proc/cpuinfo | grep 'model name' | wc -l","title":"1\u3001\u7b2c\u4e00\u884c\u663e\u793a\u670d\u52a1\u5668\u6982\u51b5"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#2","text":"Tasks: 322 total, 2 running, 320 sleeping, 0 stopped, 0 zombie / / / / / \u8fdb\u7a0b\u603b\u6570 \u6b63\u8fd0\u884c\u8fdb\u7a0b\u6570 \u7761\u7720\u8fdb\u7a0b\u6570 \u505c\u6b62\u8fdb\u7a0b\u6570 \u50f5\u5c38\u8fdb\u7a0b\u6570","title":"2\u3001\u7b2c\u4e8c\u884c\u662f\u8fdb\u7a0b\u4fe1\u606f\uff1a"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#3cpu","text":"%Cpu(s): 5.0 us \u7528\u6237\u7a7a\u95f4CPU\u5360\u6bd4 1.7 sy \u5185\u6838\u7a7a\u95f4CPU\u5360\u6bd4 0.0 ni \u7528\u6237\u8fdb\u7a0b\u7a7a\u95f4\u6539\u8fc7\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0bCPU\u5360\u6bd4 93.0 id \u7a7a\u95f2CPU\u5360\u6bd4 0.0 wa \u5f85\u8f93\u5165\u8f93\u51faCPU\u5360\u6bd4 0.3 hi \u786c\u4e2d\u65ad\uff08Hardware IRQ\uff09CPU\u5360\u6bd4 0.0 si \u8f6f\u4e2d\u65ad\uff08Software Interrupts\uff09CPU\u5360\u6bd4 0.0 st -","title":"3\u3001\u7b2c\u4e09\u884c\u662fCPU\u4fe1\u606f\uff1a"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#ussy","text":"","title":"us,sy"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#4","text":"KiB Mem: 1010504 total, 937416 used, 73088 free, 23708 buffers / / / / \u7269\u7406\u5185\u5b58\u603b\u91cf \u4f7f\u7528\u4e2d\u603b\u91cf \u7a7a\u95f2\u603b\u91cf \u7f13\u5b58\u7684\u5185\u5b58\u91cf","title":"4\u3001\u7b2c\u56db\u884c\u662f\u5185\u5b58\u4fe1\u606f\uff1a"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#5swap","text":"KiB Swap: 1046524 total, 280708 used, 765816 free, 365556 cached Mem / / / / \u4ea4\u6362\u533a\u603b\u91cf \u4f7f\u7528\u4e2d\u603b\u91cf \u7a7a\u95f2\u603b\u91cf \u7f13\u5b58\u7684\u5185\u5b58\u91cf \u4f7f\u7528\u4e2d\u7684\u5185\u5b58\u603b\u91cf\uff08used\uff09\u6307\u7684\u662f\u73b0\u5728\u7cfb\u7edf\u5185\u6838\u63a7\u5236\u7684\u5185\u5b58\u6570\uff0c\u7a7a\u95f2\u5185\u5b58\u603b\u91cf\uff08free\uff09\u662f\u5185\u6838\u8fd8\u672a\u7eb3\u5165\u5176\u7ba1\u63a7\u8303\u56f4\u7684\u6570\u91cf\u3002\u7eb3\u5165\u5185\u6838\u7ba1\u7406\u7684\u5185\u5b58\u4e0d\u89c1\u5f97\u90fd\u5728\u4f7f\u7528\u4e2d\uff0c\u8fd8\u5305\u62ec\u8fc7\u53bb\u4f7f\u7528\u8fc7\u7684\u73b0\u5728\u53ef\u4ee5\u88ab\u91cd\u590d\u5229\u7528\u7684\u5185\u5b58\uff0c\u5185\u6838\u5e76\u4e0d\u628a\u8fd9\u4e9b\u53ef\u88ab\u91cd\u65b0\u4f7f\u7528\u7684\u5185\u5b58\u4ea4\u8fd8\u5230free\u4e2d\u53bb\uff0c\u56e0\u6b64\u5728 linux \u4e0afree\u5185\u5b58\u4f1a\u8d8a\u6765\u8d8a\u5c11\uff0c\u4f46\u4e0d\u7528\u4e3a\u6b64\u62c5\u5fc3\u3002 \u5982\u679c\u51fa\u4e8e\u4e60\u60ef\u53bb\u8ba1\u7b97\u53ef\u7528\u5185\u5b58\u6570\uff0c\u8fd9\u91cc\u6709\u4e2a\u8fd1\u4f3c\u7684\u8ba1\u7b97\u516c\u5f0f\uff1a\u7b2c\u56db\u884c\u7684free + \u7b2c\u56db\u884c\u7684buffers + \u7b2c\u4e94\u884c\u7684cached\uff0c\u6309\u8fd9\u4e2a\u516c\u5f0f\u6b64\u53f0\u670d\u52a1\u5668\u7684\u53ef\u7528\u5185\u5b58\uff1a73088+23708+365556 = 451M\u3002 \u5bf9\u4e8e\u5185\u5b58\u76d1\u63a7\uff0c\u5728top\u91cc\u6211\u4eec\u8981\u65f6\u523b\u76d1\u63a7\u7b2c\u4e94\u884cswap\u4ea4\u6362\u5206\u533a\u7684used\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u503c\u5728\u4e0d\u65ad\u7684\u53d8\u5316\uff0c\u8bf4\u660e\u5185\u6838\u5728\u4e0d\u65ad\u8fdb\u884c\u5185\u5b58\u548cswap\u7684\u6570\u636e\u4ea4\u6362\uff0c\u8fd9\u662f\u771f\u6b63\u7684\u5185\u5b58\u4e0d\u591f\u7528\u4e86\u3002","title":"5\u3001\u7b2c\u4e94\u884c\u662fswap\u4ea4\u6362\u5206\u533a\u4fe1\u606f\uff1a"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_8","text":"\u7b2c\u4e03\u884c\u53ca\u4ee5\u4e0b\u663e\u793a\u4e86\u5404\u8fdb\u7a0b\uff08\u4efb\u52a1\uff09\u7684\u72b6\u6001\u76d1\u63a7\u3002\u5404\u5217\u6240\u4ee3\u8868\u7684\u542b\u4e49\u5982\u4e0b\uff1a PID \u8fdb\u7a0bid USER \u8fdb\u7a0b\u6240\u6709\u8005 PR \u8fdb\u7a0b\u4f18\u5148\u7ea7 NI nice\u503c\u3002\u8d1f\u503c\u8868\u793a\u9ad8\u4f18\u5148\u7ea7\uff0c\u6b63\u503c\u8868\u793a\u4f4e\u4f18\u5148\u7ea7 VIRT \u8fdb\u7a0b\u4f7f\u7528\u7684\u865a\u62df\u5185\u5b58\u603b\u91cf\uff0c\u5355\u4f4dkb\u3002VIRT=SWAP+RES RES \u8fdb\u7a0b\u4f7f\u7528\u7684\u3001\u672a\u88ab\u6362\u51fa\u7684\u7269\u7406\u5185\u5b58\u5927\u5c0f\uff0c\u5355\u4f4dkb\u3002RES=CODE+DATA SHR \u5171\u4eab\u5185\u5b58\u5927\u5c0f\uff0c\u5355\u4f4dkb S \u8fdb\u7a0b\u72b6\u6001\u3002D=\u4e0d\u53ef\u4e2d\u65ad\u7684\u7761\u7720\u72b6\u6001 R=\u8fd0\u884c S=\u7761\u7720 T=\u8ddf\u8e2a/\u505c\u6b62 Z=\u50f5\u5c38\u8fdb\u7a0b %CPU \u4e0a\u6b21\u66f4\u65b0\u5230\u73b0\u5728\u7684CPU\u65f6\u95f4\u5360\u7528\u767e\u5206\u6bd4 %MEM \u8fdb\u7a0b\u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u767e\u5206\u6bd4 TIME+ \u8fdb\u7a0b\u4f7f\u7528\u7684CPU\u65f6\u95f4\u603b\u8ba1\uff0c\u5355\u4f4d1/100\u79d2 COMMAND \u8fdb\u7a0b\u540d\u79f0\uff08\u547d\u4ee4\u540d/\u547d\u4ee4\u884c\uff09 Cpu(s)\u8868\u793a\u7684\u662f \u6240\u6709\u7528\u6237\u8fdb\u7a0b\u5360\u7528\u6574\u4e2acpu\u7684\u5e73\u5747\u503c\uff0c\u7531\u4e8e\u6bcf\u4e2a\u6838\u5fc3\u5360\u7528\u7684\u767e\u5206\u6bd4\u4e0d\u540c\uff0c\u6240\u4ee5\u6309\u5e73\u5747\u503c\u6765\u7b97\u6bd4\u8f83\u6709\u53c2\u8003\u610f\u4e49\u3002 %CPU\u663e\u793a\u7684\u662f\u8fdb\u7a0b\u5360\u7528\u4e00\u4e2a\u6838\u7684\u767e\u5206\u6bd4\uff0c\u800c\u4e0d\u662f\u6574\u4e2acpu\uff0812\u6838\uff09\u7684\u767e\u5206\u6bd4\uff0c\u6709\u65f6\u5019\u53ef\u80fd\u5927\u4e8e100\uff0c\u90a3\u662f\u56e0\u4e3a\u8be5\u8fdb\u7a0b\u542f\u7528\u4e86\u591a\u7ebf\u7a0b\u5360\u7528\u4e86\u591a\u4e2a\u6838\u5fc3\uff0c\u6240\u4ee5\u6709\u65f6\u5019\u6211\u4eec\u770b\u8be5\u503c\u5f97\u65f6\u5019\u4f1a\u8d85\u8fc7100%\uff0c\u4f46\u4e0d\u4f1a\u8d85\u8fc7\u603b\u6838\u6570*100\u3002","title":"\u4e8c\u3001\u8fdb\u7a0b\uff08\u4efb\u52a1\uff09\u72b6\u6001\u76d1\u63a7"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#top_1","text":"\u6309\u952e b \u6253\u5f00\u6216\u5173\u95ed \u8fd0\u884c\u4e2d\u8fdb\u7a0b\u7684\u9ad8\u4eae\u6548\u679c \u6309\u952e x \u6253\u5f00\u6216\u5173\u95ed \u6392\u5e8f\u5217\u7684\u9ad8\u4eae\u6548\u679c shift + > \u6216 shift + < \u53ef\u4ee5\u5411\u53f3\u6216\u5de6\u6539\u53d8\u6392\u5e8f\u5217 f \u952e\uff0c\u53ef\u4ee5\u8fdb\u5165\u7f16\u8f91\u8981\u663e\u793a\u5b57\u6bb5\u7684\u89c6\u56fe\uff0c\u6709 * \u53f7\u7684\u5b57\u6bb5\u4f1a\u663e\u793a\uff0c\u65e0 * \u53f7\u4e0d\u663e\u793a\uff0c\u53ef\u6839\u636e\u9875\u9762\u63d0\u793a\u9009\u62e9\u6216\u53d6\u6d88\u5b57\u6bb5\u3002","title":"\u4e09\u3001\u4e0etop\u4ea4\u4e92"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_9","text":"\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6bcf\u6b21\u90fd\u8981\u91cd\u542f\u7f51\u5173 win10\u4e2d\u7684v8\u4e2ddns\u5173\u4e86 curl --request POST '127.0.0.1:8080/test' --header 'Content-Type: application/json;charset=UTF-8' --data '{\"name\":\"matt\"}'","title":"\u95ee\u9898"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#curl","text":"curl 'http://127.0.0.1:8080/user?hname=matt&age=11' curl -G --data-urlencode 'age=12 23' -d 'name=matt' 127.0.0.1:8080 curl -H 'A: A' -H 'b: B' -G --data-urlencode 'age=12 23' -d 'name=matt' 127.0.0.1:8080 curl -d '{\"name\": \"matt\", \"age\": 17}' -X POST 'http://127.0.0.1:80/user' lsof -i :8080 lsof -nP -p 39284 | grep LISTEN # \u6574\u4e2a\u78c1\u76d8\u5206\u533a df -h # \u4e0d\u6307\u5b9a\u6587\u4ef6 \u5219\u603b\u8ba1 du -h du -h xxx.txt top \u547d\u4ee4 \u6392\u5e8f linux \u8f93\u5165\u5927\u5199P M mac \u8f93\u5165o \u5728\u8f93\u5165 cpu mem","title":"curl"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/","text":"centos \u5b89\u88c5epel-release \u6ce8\uff1aExtra Packages for Enterprise Linux \u662f\u4e3a\u201c\u7ea2\u5e3d\u7cfb\u201d\u7684\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u989d\u5916\u7684\u8f6f\u4ef6\u5305\uff0c\u9002\u7528\u4e8e RHEL\u3001CentOS \u548c Scientific Linux\u3002\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u8f6f\u4ef6\u4ed3\u5e93\uff0c\u5927\u591a\u6570 rpm\u5305\u5728\u5b98\u65b9repository \u4e2d\u662f\u627e\u4e0d\u5230\u7684\uff09 yum install -y epel-release \u5982\u679c\u662f\u6700\u5c0f\u5316\u5b89\u88c5\u5219\u8fd8\u9700\u8981\u5b89\u88c5ifconf vim\u7b49 yum install -y net-tools yum install -y vim \u5b89\u88c5gcc gcc++ yum -y install gcc gcc-c++ kernel-devel //\u5b89\u88c5gcc\u3001c++\u7f16\u8bd1\u5668\u4ee5\u53ca\u5185\u6838\u6587\u4ef6 gcc --version g++ --version JDK \u5b98\u7f51 jdk \u5378\u8f7d \u5378\u8f7d\u7cfb\u7edf\u81ea\u5e26\u7684jdk rpm -qa | grep -i java | xargs -n1 rpm -e --nodeps rpm-qa:\u67e5\u8be2\u6240\u5b89\u88c5\u7684\u6240\u6709rpm\u8f6f\u4ef6\u5305 grep -i:\u5ffd\u7565\u5927\u5c0f\u5199 xargs -n1:\u8868\u793a\u6bcf\u6b21\u53ea\u4f20\u9012\u4e00\u4e2a\u53c2\u6570 rpm -e \u2013nodeps:\u5f3a\u5236\u5378\u8f7d\u8f6f\u4ef6 \u5b89\u88c5 \u5c06jdk\u7684tar\u5305\u4f20\u8f93\u5230\u670d\u52a1\u5668, /opt/software \u89e3\u538b\u5230 /opt/module \u76ee\u5f55\u4e0b tar -zxvf jdk-8u212-linux- x64.tar.gz -C /opt/module/ \u914d\u7f6e \u914d\u7f6e\u73af\u5883 sudo vim /etc/profile.d/my_env.sh #JAVA_HOME export JAVA_HOME=/opt/module/jdk1.8.0_212 export PATH=$PATH:$JAVA_HOME/bin \u914d\u7f6e\u6587\u4ef6\u751f\u6548 # \u4e34\u65f6\u751f\u6548\uff1a source /etc/profile #\u6c38\u4e45\u751f\u6548\uff1a\u670d\u52a1\u5668\u91cd\u542f shutdown -r now \u9a8c\u8bc1 java -version tomcat tomcat8.5 \u5b89\u88c5 \u4e0b\u8f7d\u5b89\u88c5\u89e3\u538b\u5373\u53ef \u542f\u52a8 ./startup.sh MySQL \u5b89\u88c5 yum install mysql* yum install mariadb-server systemctl start mariadb.service \u914d\u7f6e \u6307\u5b9a\u5bc6\u7801 mysqladmin -u root password root \u5f00\u542f\u8fdc\u7a0b\u8fde\u63a5\u7684\u6743\u9650 update user set host='%' where user = 'root'; grant all privileges on *.* to root@'%' identified by 'root'; nginx-openresty openresty:\u5bf9nginx\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u9996\u5148\u5728\u4e0b\u9762\u94fe\u63a5\u4e0b\u8f7d openresty \u4e4b\u540e\u53d1\u9001\u5230linux\u4e2d\uff0c\u89e3\u538b\u5373\u53ef tar -zxvf xx.tar.gz \u524d\u63d0 yum -y install gcc gcc-c++ kernel-devel //\u5b89\u88c5gcc\u3001c++\u7f16\u8bd1\u5668\u4ee5\u53ca\u5185\u6838\u6587\u4ef6 yum install pcre-devel openssl-devel gcc curl \u5207\u6362\u5230\u89e3\u538b\u76ee\u5f55 cd openresty-VERSION/ \u7f16\u8bd1 make \u5b89\u88c5 sudo make install \u542f\u52a8 sbin/nginx -c conf/nginx.conf \u91cd\u542f sbin/nginx -s reload redis \u9519\u8bef server.c:5171:176: \u9519\u8bef\uff1a\u2018struct redisServer\u2019\u6ca1\u6709\u540d\u4e3a\u2018maxmemory\u2019\u7684\u6210\u5458 1\u3001\u5b89\u88c5gcc\u5957\u88c5\uff1a yum install cpp yum install binutils yum install glibc yum install glibc-kernheaders yum install glibc-common yum install gl ibc-devel yum install gcc yum install make 2\u3001\u5347\u7ea7gcc yum -y install centos-release-scl yum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils scl enable devtoolset-9 bash 3\u3001\u8bbe\u7f6e\u6c38\u4e45\u5347\u7ea7\uff1a echo \"source /opt/rh/devtoolset-9/enable\" >>/etc/profile 4\u3001\u5b89\u88c5redis\uff1a redis chmod 777 xxxx // \u8fdb\u5165redis\u5b89\u88c5\u76ee\u5f55 // \u7f16\u8bd1 make // \u5b89\u88c5 make install make clean cygwin \u65e0\u6cd5\u4f7f\u7528vim E437: terminal capability \"cm\" required \u9519\u8bef\uff1b export TERM=xterm \u6302\u8f7d /cygdrive/ Cygwin\u4f7f\u7528ssh scp a.txt root@192.168.96.128:/home/a/b \u4ee5\u7ba1\u7406\u5143\u6253\u5f00\u4e00\u76f4yes\u5373\u53ef ssh-host-config passwd matt matt","title":"\u5e38\u7528\u8f6f\u4ef6\u5b89\u88c5"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#centos","text":"","title":"centos"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#epel-release","text":"\u6ce8\uff1aExtra Packages for Enterprise Linux \u662f\u4e3a\u201c\u7ea2\u5e3d\u7cfb\u201d\u7684\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u989d\u5916\u7684\u8f6f\u4ef6\u5305\uff0c\u9002\u7528\u4e8e RHEL\u3001CentOS \u548c Scientific Linux\u3002\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u8f6f\u4ef6\u4ed3\u5e93\uff0c\u5927\u591a\u6570 rpm\u5305\u5728\u5b98\u65b9repository \u4e2d\u662f\u627e\u4e0d\u5230\u7684\uff09 yum install -y epel-release \u5982\u679c\u662f\u6700\u5c0f\u5316\u5b89\u88c5\u5219\u8fd8\u9700\u8981\u5b89\u88c5ifconf vim\u7b49 yum install -y net-tools yum install -y vim","title":"\u5b89\u88c5epel-release"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#gcc-gcc","text":"yum -y install gcc gcc-c++ kernel-devel //\u5b89\u88c5gcc\u3001c++\u7f16\u8bd1\u5668\u4ee5\u53ca\u5185\u6838\u6587\u4ef6 gcc --version g++ --version","title":"\u5b89\u88c5gcc gcc++"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#jdk","text":"\u5b98\u7f51 jdk","title":"JDK"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_1","text":"\u5378\u8f7d\u7cfb\u7edf\u81ea\u5e26\u7684jdk rpm -qa | grep -i java | xargs -n1 rpm -e --nodeps rpm-qa:\u67e5\u8be2\u6240\u5b89\u88c5\u7684\u6240\u6709rpm\u8f6f\u4ef6\u5305 grep -i:\u5ffd\u7565\u5927\u5c0f\u5199 xargs -n1:\u8868\u793a\u6bcf\u6b21\u53ea\u4f20\u9012\u4e00\u4e2a\u53c2\u6570 rpm -e \u2013nodeps:\u5f3a\u5236\u5378\u8f7d\u8f6f\u4ef6","title":"\u5378\u8f7d"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_2","text":"","title":"\u5b89\u88c5"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#jdktar-optsoftware","text":"","title":"\u5c06jdk\u7684tar\u5305\u4f20\u8f93\u5230\u670d\u52a1\u5668, /opt/software"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#optmodule","text":"tar -zxvf jdk-8u212-linux- x64.tar.gz -C /opt/module/","title":"\u89e3\u538b\u5230 /opt/module \u76ee\u5f55\u4e0b"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_3","text":"\u914d\u7f6e\u73af\u5883 sudo vim /etc/profile.d/my_env.sh #JAVA_HOME export JAVA_HOME=/opt/module/jdk1.8.0_212 export PATH=$PATH:$JAVA_HOME/bin","title":"\u914d\u7f6e"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_4","text":"# \u4e34\u65f6\u751f\u6548\uff1a source /etc/profile #\u6c38\u4e45\u751f\u6548\uff1a\u670d\u52a1\u5668\u91cd\u542f shutdown -r now","title":"\u914d\u7f6e\u6587\u4ef6\u751f\u6548"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_5","text":"java -version","title":"\u9a8c\u8bc1"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#tomcat","text":"tomcat8.5","title":"tomcat"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_6","text":"\u4e0b\u8f7d\u5b89\u88c5\u89e3\u538b\u5373\u53ef","title":"\u5b89\u88c5"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_7","text":"./startup.sh","title":"\u542f\u52a8"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#mysql","text":"","title":"MySQL"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_8","text":"yum install mysql* yum install mariadb-server systemctl start mariadb.service","title":"\u5b89\u88c5"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_9","text":"","title":"\u914d\u7f6e"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_10","text":"mysqladmin -u root password root","title":"\u6307\u5b9a\u5bc6\u7801"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_11","text":"update user set host='%' where user = 'root'; grant all privileges on *.* to root@'%' identified by 'root';","title":"\u5f00\u542f\u8fdc\u7a0b\u8fde\u63a5\u7684\u6743\u9650"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#nginx-openresty","text":"openresty:\u5bf9nginx\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u9996\u5148\u5728\u4e0b\u9762\u94fe\u63a5\u4e0b\u8f7d openresty \u4e4b\u540e\u53d1\u9001\u5230linux\u4e2d\uff0c\u89e3\u538b\u5373\u53ef tar -zxvf xx.tar.gz \u524d\u63d0 yum -y install gcc gcc-c++ kernel-devel //\u5b89\u88c5gcc\u3001c++\u7f16\u8bd1\u5668\u4ee5\u53ca\u5185\u6838\u6587\u4ef6 yum install pcre-devel openssl-devel gcc curl \u5207\u6362\u5230\u89e3\u538b\u76ee\u5f55 cd openresty-VERSION/","title":"nginx-openresty"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_12","text":"make","title":"\u7f16\u8bd1"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_13","text":"sudo make install","title":"\u5b89\u88c5"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_14","text":"sbin/nginx -c conf/nginx.conf","title":"\u542f\u52a8"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_15","text":"sbin/nginx -s reload","title":"\u91cd\u542f"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#redis","text":"\u9519\u8bef server.c:5171:176: \u9519\u8bef\uff1a\u2018struct redisServer\u2019\u6ca1\u6709\u540d\u4e3a\u2018maxmemory\u2019\u7684\u6210\u5458 1\u3001\u5b89\u88c5gcc\u5957\u88c5\uff1a yum install cpp yum install binutils yum install glibc yum install glibc-kernheaders yum install glibc-common yum install gl ibc-devel yum install gcc yum install make 2\u3001\u5347\u7ea7gcc yum -y install centos-release-scl yum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils scl enable devtoolset-9 bash 3\u3001\u8bbe\u7f6e\u6c38\u4e45\u5347\u7ea7\uff1a echo \"source /opt/rh/devtoolset-9/enable\" >>/etc/profile 4\u3001\u5b89\u88c5redis\uff1a redis chmod 777 xxxx // \u8fdb\u5165redis\u5b89\u88c5\u76ee\u5f55 // \u7f16\u8bd1 make // \u5b89\u88c5 make install make clean","title":"redis"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#cygwin","text":"","title":"cygwin"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#vim","text":"E437: terminal capability \"cm\" required \u9519\u8bef\uff1b export TERM=xterm","title":"\u65e0\u6cd5\u4f7f\u7528vim"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#_16","text":"/cygdrive/","title":"\u6302\u8f7d"},{"location":"util/linux/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/#cygwinssh","text":"scp a.txt root@192.168.96.128:/home/a/b \u4ee5\u7ba1\u7406\u5143\u6253\u5f00\u4e00\u76f4yes\u5373\u53ef ssh-host-config passwd matt matt","title":"Cygwin\u4f7f\u7528ssh"},{"location":"util/linux/%E7%BB%88%E7%AB%AF/","text":"\u8f93\u5165\u4e00\u957f\u6bb5\u5b57\u7b26 \u5feb\u901f\u5220\u9664 ctrl+u","title":"\u7ec8\u7aef"},{"location":"util/mac/0%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","text":"mac\u7cfb\u7edf option+caps lock\uff1a\u5927\u5c0f\u5199 caps lock:\u4e2d\u82f1\u6587 pd \u865a\u62df\u673a CTRL+\u4e0a\u7bad\u5934 CTRL+\u4e0a\u7bad\u5934:\u67e5\u770b\u4efb\u52a1 \u663e\u793a\u7b80\u4ecb-\u300b\u9009\u62e9\u5e94\u7528\u7a0b\u5e8f-\u3009\u66f4\u6362\u5168\u90e8 \u4f5c\u8005\uff1aCloud Strife \u94fe\u63a5\uff1ahttps://www.zhihu.com/question/22624898/answer/105234217 \u6765\u6e90\uff1a\u77e5\u4e4e \u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002 brew\u4e3b\u8981\u7528\u6765\u4e0b\u8f7d\u4e00\u4e9b\u4e0d\u5e26\u754c\u9762\u7684\u547d\u4ee4\u884c\u4e0b\u7684\u5de5\u5177\u548c\u7b2c\u4e09\u65b9\u5e93\u6765\u8fdb\u884c\u4e8c\u6b21\u5f00\u53d1 brew cask\u4e3b\u8981\u7528\u6765\u4e0b\u8f7d\u4e00\u4e9b\u5e26\u754c\u9762\u7684\u5e94\u7528\u8f6f\u4ef6\uff0c\u4e0b\u8f7d\u597d\u540e\u4f1a\u81ea\u52a8\u5b89\u88c5\uff0c\u5e76\u80fd\u5728mac\u4e2d\u76f4\u63a5\u8fd0\u884c\u4f7f\u7528 \u4e3e\u4e2a\u4f8b\u5b50\uff0c brew install curl\u53ef\u4ee5\u5b89\u88c5curl\u7b2c\u4e09\u65b9\u5e93\uff0c\u8fd9\u6837\u4f60\u5728\u5f00\u53d1\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\u7684\u5e93\u6765\u8fdb\u884c\u5f00\u53d1 brew cask install chrome\u53ef\u4ee5\u5b89\u88c5\u8c37\u6b4c\u6d4f\u89c8\u5668\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u76f4\u63a5\u8fd0\u884c brew\u504f\u7ba1\u7406\u7b2c\u4e09\u65b9\u5e93\u548c\u547d\u4ee4\u884c\u5de5\u5177\u65b9\u9762\u7684\u4e1c\u4e1c brew cask\u53ef\u4ee5\u770b\u4f5c\u662f\u82f9\u679c\u5b98\u65b9app store\u7684\u8865\u5145\uff0c\u662f\u4e00\u4e2a\u4f17\u591a\u8d21\u732e\u8005\u4eec\u7ef4\u62a4\u7684\u975e\u82f9\u679c\u5b98\u65b9\u8f6f\u4ef6\u5546\u5e97\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e0bmac\u8f6f\u4ef6\u7528 \u4e00\u4e9b\u514d\u8d39\u597d\u7528\u7684mac\u8f6f\u4ef6\u6ca1\u6709\u5728\u82f9\u679c\u5b98\u65b9app store\u5546\u5e97\u4e0a\u67b6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728brew cask\u4e2d\u4e0b\u8f7d\u3002\u5982\u679c\u6211\u8981\u4e0b\u8f7d10\u4e2a\u514d\u8d39\u5c0f\u8f6f\u4ef6\uff0c\u800c\u8fd9\u4e9b\u8f6f\u4ef6\u6ca1\u6709\u5728\u82f9\u679c\u5546\u5e97\u4e0a\u67b6\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u53bb\u8c37\u6b4c\u5b83\u4eec\u7684\u5b98\u65b9\u7f51\u7ad9\uff0c\u518d\u53bb\u8fd9\u4e9b\u8f6f\u4ef6\u7684\u5b98\u7f51\u53bb\u4e0b\u8f7d\uff0c\u6211\u4eec\u7edf\u4e00\u5728brew cask\u4e2d\u4e0b\u8f7d\u3002\u4f7f\u7528brew cask\u6765\u8fdb\u884c\u5305\u7ba1\u7406\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\uff0c\u8fd910\u4e2a\u514d\u8d39\u8f6f\u4ef6\u5982\u679c\u81ea\u8eab\u4e0d\u5e26\u5347\u7ea7\u529f\u80fd\uff0c\u4f46\u73b0\u5728\u5b83\u4eec\u6709\u66f4\u65b0\uff0c\u6211\u53ea\u80fd\u53bb\u5b98\u7f51\u91cd\u65b0\u4e0b\u8f7d\uff1f\u4e0d\uff0c\u76f4\u63a5\u5728brew cask\u91cc\u5c31\u53ef\u4ee5\u7edf\u4e00\u5347\u7ea7\u3002\u8fd9\u4e5f\u662f\u4f60\u95ee\u7684\u90a3\u53e5\u201c\u4e3a\u4f55\u7f51\u8def\u4e0a\u8ddf\u63a8\u8350\u7528brew cask\u5462\uff1f\u201d\u7684\u539f\u56e0\u3002 \u5982\u679c\u5b89\u88c5mac\u56fe\u5f62\u754c\u9762\u8f6f\u4ef6\uff0c\u63a8\u8350\u5148\u5728\u82f9\u679c\u5b98\u65b9\u5546\u5e97\u91cc\u641c\u7d22\u4e0b\u8f7d\uff0c\u6ca1\u6709\u7684\u8bdd\u53bbbrew cask\u8bd5\u8bd5\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\uff0c\u53ea\u80fd\u53bb\u8fd9\u4e2a\u8f6f\u4ef6\u7684\u5b98\u65b9\u7f51\u7ad9\u53bb\u4e0b\u8f7d\u4e86\u3002 softwareupdate --install-rosetta Type A and press return to agree\uff1aA Shift + caps lk : \u5927\u5c0f\u5199 caps lk: \u4e2d\u82f1\u6587 https -> http","title":"\u57fa\u672c\u4f7f\u7528"},{"location":"util/mac/0%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/#mac","text":"option+caps lock\uff1a\u5927\u5c0f\u5199 caps lock:\u4e2d\u82f1\u6587 pd \u865a\u62df\u673a CTRL+\u4e0a\u7bad\u5934 CTRL+\u4e0a\u7bad\u5934:\u67e5\u770b\u4efb\u52a1 \u663e\u793a\u7b80\u4ecb-\u300b\u9009\u62e9\u5e94\u7528\u7a0b\u5e8f-\u3009\u66f4\u6362\u5168\u90e8 \u4f5c\u8005\uff1aCloud Strife \u94fe\u63a5\uff1ahttps://www.zhihu.com/question/22624898/answer/105234217 \u6765\u6e90\uff1a\u77e5\u4e4e \u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002 brew\u4e3b\u8981\u7528\u6765\u4e0b\u8f7d\u4e00\u4e9b\u4e0d\u5e26\u754c\u9762\u7684\u547d\u4ee4\u884c\u4e0b\u7684\u5de5\u5177\u548c\u7b2c\u4e09\u65b9\u5e93\u6765\u8fdb\u884c\u4e8c\u6b21\u5f00\u53d1 brew cask\u4e3b\u8981\u7528\u6765\u4e0b\u8f7d\u4e00\u4e9b\u5e26\u754c\u9762\u7684\u5e94\u7528\u8f6f\u4ef6\uff0c\u4e0b\u8f7d\u597d\u540e\u4f1a\u81ea\u52a8\u5b89\u88c5\uff0c\u5e76\u80fd\u5728mac\u4e2d\u76f4\u63a5\u8fd0\u884c\u4f7f\u7528 \u4e3e\u4e2a\u4f8b\u5b50\uff0c brew install curl\u53ef\u4ee5\u5b89\u88c5curl\u7b2c\u4e09\u65b9\u5e93\uff0c\u8fd9\u6837\u4f60\u5728\u5f00\u53d1\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\u7684\u5e93\u6765\u8fdb\u884c\u5f00\u53d1 brew cask install chrome\u53ef\u4ee5\u5b89\u88c5\u8c37\u6b4c\u6d4f\u89c8\u5668\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u76f4\u63a5\u8fd0\u884c brew\u504f\u7ba1\u7406\u7b2c\u4e09\u65b9\u5e93\u548c\u547d\u4ee4\u884c\u5de5\u5177\u65b9\u9762\u7684\u4e1c\u4e1c brew cask\u53ef\u4ee5\u770b\u4f5c\u662f\u82f9\u679c\u5b98\u65b9app store\u7684\u8865\u5145\uff0c\u662f\u4e00\u4e2a\u4f17\u591a\u8d21\u732e\u8005\u4eec\u7ef4\u62a4\u7684\u975e\u82f9\u679c\u5b98\u65b9\u8f6f\u4ef6\u5546\u5e97\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e0bmac\u8f6f\u4ef6\u7528 \u4e00\u4e9b\u514d\u8d39\u597d\u7528\u7684mac\u8f6f\u4ef6\u6ca1\u6709\u5728\u82f9\u679c\u5b98\u65b9app store\u5546\u5e97\u4e0a\u67b6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728brew cask\u4e2d\u4e0b\u8f7d\u3002\u5982\u679c\u6211\u8981\u4e0b\u8f7d10\u4e2a\u514d\u8d39\u5c0f\u8f6f\u4ef6\uff0c\u800c\u8fd9\u4e9b\u8f6f\u4ef6\u6ca1\u6709\u5728\u82f9\u679c\u5546\u5e97\u4e0a\u67b6\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u53bb\u8c37\u6b4c\u5b83\u4eec\u7684\u5b98\u65b9\u7f51\u7ad9\uff0c\u518d\u53bb\u8fd9\u4e9b\u8f6f\u4ef6\u7684\u5b98\u7f51\u53bb\u4e0b\u8f7d\uff0c\u6211\u4eec\u7edf\u4e00\u5728brew cask\u4e2d\u4e0b\u8f7d\u3002\u4f7f\u7528brew cask\u6765\u8fdb\u884c\u5305\u7ba1\u7406\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\uff0c\u8fd910\u4e2a\u514d\u8d39\u8f6f\u4ef6\u5982\u679c\u81ea\u8eab\u4e0d\u5e26\u5347\u7ea7\u529f\u80fd\uff0c\u4f46\u73b0\u5728\u5b83\u4eec\u6709\u66f4\u65b0\uff0c\u6211\u53ea\u80fd\u53bb\u5b98\u7f51\u91cd\u65b0\u4e0b\u8f7d\uff1f\u4e0d\uff0c\u76f4\u63a5\u5728brew cask\u91cc\u5c31\u53ef\u4ee5\u7edf\u4e00\u5347\u7ea7\u3002\u8fd9\u4e5f\u662f\u4f60\u95ee\u7684\u90a3\u53e5\u201c\u4e3a\u4f55\u7f51\u8def\u4e0a\u8ddf\u63a8\u8350\u7528brew cask\u5462\uff1f\u201d\u7684\u539f\u56e0\u3002 \u5982\u679c\u5b89\u88c5mac\u56fe\u5f62\u754c\u9762\u8f6f\u4ef6\uff0c\u63a8\u8350\u5148\u5728\u82f9\u679c\u5b98\u65b9\u5546\u5e97\u91cc\u641c\u7d22\u4e0b\u8f7d\uff0c\u6ca1\u6709\u7684\u8bdd\u53bbbrew cask\u8bd5\u8bd5\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\uff0c\u53ea\u80fd\u53bb\u8fd9\u4e2a\u8f6f\u4ef6\u7684\u5b98\u65b9\u7f51\u7ad9\u53bb\u4e0b\u8f7d\u4e86\u3002 softwareupdate --install-rosetta Type A and press return to agree\uff1aA Shift + caps lk : \u5927\u5c0f\u5199 caps lk: \u4e2d\u82f1\u6587 https -> http","title":"mac\u7cfb\u7edf"},{"location":"util/mac/app/","text":"dev brew \u5b89\u88c5 \u65b9\u6cd5\u4e00 \u539f\u751f \u7b2c\u4e00\u6b21\u4f7f\u7528443 \uff0c\u540e\u9762\u914d\u7f6egit \u4ee3\u7406\u5c31\u89e3\u51b3\u4e86 \u4f1a\u5e2e\u4f60\u4e0b\u8f7dcommad line tool /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\" \u5b89\u88c5\u5b8c\u6210\u4f1a\u6709\u5982\u4e0b\u63d0\u793a\uff0c\u6839\u636e\u63d0\u793a\u8f93\u5165\u8fd0\u884c\u5373\u53ef echo 'eval \"$(/opt/homebrew/bin/brew shellenv)\"' >> /Users/matt/.zprofile eval \"$(/opt/homebrew/bin/brew shellenv)\" \u65b9\u6cd5\u4e8c \u4f7f\u7528\u56fd\u5185\u955c\u50cf \u6ca1\u6d4b\u8bd5\u8fc7 /bin/zsh -c \"$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)\" \u5e38\u7528\u547d\u4ee4 # \u5b89\u88c5 brew install git # \u5378\u8f7d brew uninstall git #\u66f4\u65b0 brew update git # \u66f4\u65b0\u5168\u90e8 brew update # \u4e00\u822c\u9ed8\u8ba4\u4f1a\u6267\u884c\uff0c\u73af\u5883\u53d8\u91cf\u751f\u6548 brew link git # \u5931\u6548 brew unlink git # \u641c\u7d22\u8f6f\u4ef6 \u5bf9\u53f7\u8868\u793a\u5df2\u5b89\u88c5 brew search git # \u663e\u793a\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6 brew list # \u663e\u793a\u8f6f\u4ef6\u5185\u5bb9\u4fe1\u606f brew info git dbeaver \u7248\u672c: 22.3.4.202301312050 ue 1.\u6253\u5f00\u8f6f\u4ef6\u5305\u5148\u5b89\u88c5jdk 2.\u5b89\u88c5dbeaver, \u4e0d\u8981\u5173\u95ed 3.\u8f93\u5165key \u89e3\u51b3xxx\u5df2\u635f\u574f,\u65e0\u6cd5\u6253\u5f00,\u4f60\u5e94\u8be5\u5c06\u5b83\u79fb\u5230\u5e9f\u7eb8\u7bd3 \u65b9\u5f0f1 sudo spctl --master-disable \u5148\u6253\u5f00 \u7cfb\u7edf\u504f\u597d\u8bbe\u7f6e -> \u5b89\u5168\u4e0e\u9690\u79c1 -> \u901a\u7528 \u9009\u9879\u5361\uff0c\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u542f\u7528\u4e86 \u4efb\u4f55\u6765\u6e90 \u9009\u9879\u3002\u5982\u679c\u6ca1\u6709\u542f\u7528\uff0c\u5148\u70b9\u51fb\u5de6\u4e0b\u89d2\u7684\u5c0f\u9ec4\u9501\u56fe\u6807\u89e3\u9501\uff0c\u7136\u540e\u9009\u4e2d\u4efb\u4f55\u6765\u6e90\u3002 \u73b0\u5728\u6253\u5f00\u8f6f\u4ef6 \u5982\u679c\u4e0d\u884c\u770b2 \u65b9\u5f0f2 sudo xattr -rd com.apple.quarantine /Applications/DBeaverUltimate.app \u518d\u6253\u5f00\u8f6f\u4ef6\u770b\u4e00\u4e0b mysql-navicat 16.5 sudo xattr -rd com.apple.quarantine /Applications/Navicat\\ Premium.app redis desktop manager \u5b89\u88c5\u5373\u53ef os office \u5148\u5b89\u88c5app \u5728\u5b89\u88c5\u7834\u89e3\u5305 \u4e0b\u8f7d\u5b8c\u6210\u540e\u6253\u5f00Microsoft office 2021\u955c\u50cf\u5305\uff0c\u53cc\u51fb\u3010Microsoft Office for mac.pkg\u3011\u8fdb\u884c\u5b89\u88c5 \u5b89\u88c5\u5b8c\u6210\u540e\u56de\u5230office2021\u7834\u89e3\u7248\u955c\u50cf\u5305\uff0c\u8bf7\u53cc\u51fb\u6253\u5f00office2021\u6fc0\u6d3b\u5de5\u5177 paste old \u4e0b\u8f7d\u5730\u5740 \u526a\u5207\u677f sudo xattr -rd com.apple.quarantine /Applications/Paste.app Rectangle \u4e0b\u8f7d\u5730\u5740 \u5206\u5c4f\u8f6f\u4ef6\uff0c \u5b98\u7f51\u4e0b\u8f7d\u9ed8\u8ba4\u5b89\u88c5\u5373\u53ef, free word typora img omi\u5f55\u5c4f\u4e13\u5bb6 \u89c6\u5c4f\u4e0b\u8f7d-Downie 4 \u5b89\u88c5\u5373\u53ef V4.6.8 file xmind sudo xattr -rd com.apple.quarantine /Applications/XMind.app \u538b\u7f29-The Unarchiver free tencent lemon \u4e0b\u8f7d\u5730\u5740 \u6e05\u7406\u5de5\u5177\uff0c\u5b98\u7f51\u4e0b\u8f7d\u9ed8\u8ba4\u5b89\u88c5\u5373\u53ef, free pdfreaderpro pdf\u7f16\u8f91\u9605\u8bfb \u7248\u672c2.8.22.1 (2.8.22.1) \u5b89\u88c5\u5373\u53ef \u6253\u5f00\u4e0b\u8f7d\u597d\u7684\u5b89\u88c5\u5305\uff0c\u62d6\u52a8\u3010pdf reader pro\u3011\u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5b89\u88c5\u5373\u53ef clearview X \u9605\u8bfb\u5668 Version 3.0.4 \u4e00\u6b65\u4e00\u6b65\u5b89\u88c5\u5373\u53ef \u62d6\u5230\u53f3\u4fa7\u5b89\u88c5\u5373\u53ef","title":"app"},{"location":"util/mac/app/#dev","text":"","title":"dev"},{"location":"util/mac/app/#brew","text":"","title":"brew"},{"location":"util/mac/app/#_1","text":"\u65b9\u6cd5\u4e00 \u539f\u751f \u7b2c\u4e00\u6b21\u4f7f\u7528443 \uff0c\u540e\u9762\u914d\u7f6egit \u4ee3\u7406\u5c31\u89e3\u51b3\u4e86 \u4f1a\u5e2e\u4f60\u4e0b\u8f7dcommad line tool /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\" \u5b89\u88c5\u5b8c\u6210\u4f1a\u6709\u5982\u4e0b\u63d0\u793a\uff0c\u6839\u636e\u63d0\u793a\u8f93\u5165\u8fd0\u884c\u5373\u53ef echo 'eval \"$(/opt/homebrew/bin/brew shellenv)\"' >> /Users/matt/.zprofile eval \"$(/opt/homebrew/bin/brew shellenv)\" \u65b9\u6cd5\u4e8c \u4f7f\u7528\u56fd\u5185\u955c\u50cf \u6ca1\u6d4b\u8bd5\u8fc7 /bin/zsh -c \"$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)\"","title":"\u5b89\u88c5"},{"location":"util/mac/app/#_2","text":"# \u5b89\u88c5 brew install git # \u5378\u8f7d brew uninstall git #\u66f4\u65b0 brew update git # \u66f4\u65b0\u5168\u90e8 brew update # \u4e00\u822c\u9ed8\u8ba4\u4f1a\u6267\u884c\uff0c\u73af\u5883\u53d8\u91cf\u751f\u6548 brew link git # \u5931\u6548 brew unlink git # \u641c\u7d22\u8f6f\u4ef6 \u5bf9\u53f7\u8868\u793a\u5df2\u5b89\u88c5 brew search git # \u663e\u793a\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6 brew list # \u663e\u793a\u8f6f\u4ef6\u5185\u5bb9\u4fe1\u606f brew info git","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"util/mac/app/#dbeaver","text":"\u7248\u672c: 22.3.4.202301312050 ue 1.\u6253\u5f00\u8f6f\u4ef6\u5305\u5148\u5b89\u88c5jdk 2.\u5b89\u88c5dbeaver, \u4e0d\u8981\u5173\u95ed 3.\u8f93\u5165key \u89e3\u51b3xxx\u5df2\u635f\u574f,\u65e0\u6cd5\u6253\u5f00,\u4f60\u5e94\u8be5\u5c06\u5b83\u79fb\u5230\u5e9f\u7eb8\u7bd3 \u65b9\u5f0f1 sudo spctl --master-disable \u5148\u6253\u5f00 \u7cfb\u7edf\u504f\u597d\u8bbe\u7f6e -> \u5b89\u5168\u4e0e\u9690\u79c1 -> \u901a\u7528 \u9009\u9879\u5361\uff0c\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u542f\u7528\u4e86 \u4efb\u4f55\u6765\u6e90 \u9009\u9879\u3002\u5982\u679c\u6ca1\u6709\u542f\u7528\uff0c\u5148\u70b9\u51fb\u5de6\u4e0b\u89d2\u7684\u5c0f\u9ec4\u9501\u56fe\u6807\u89e3\u9501\uff0c\u7136\u540e\u9009\u4e2d\u4efb\u4f55\u6765\u6e90\u3002 \u73b0\u5728\u6253\u5f00\u8f6f\u4ef6 \u5982\u679c\u4e0d\u884c\u770b2 \u65b9\u5f0f2 sudo xattr -rd com.apple.quarantine /Applications/DBeaverUltimate.app \u518d\u6253\u5f00\u8f6f\u4ef6\u770b\u4e00\u4e0b","title":"dbeaver"},{"location":"util/mac/app/#mysql-navicat-165","text":"sudo xattr -rd com.apple.quarantine /Applications/Navicat\\ Premium.app","title":"mysql-navicat 16.5"},{"location":"util/mac/app/#redis-desktop-manager","text":"\u5b89\u88c5\u5373\u53ef","title":"redis desktop manager"},{"location":"util/mac/app/#os","text":"","title":"os"},{"location":"util/mac/app/#office","text":"\u5148\u5b89\u88c5app \u5728\u5b89\u88c5\u7834\u89e3\u5305 \u4e0b\u8f7d\u5b8c\u6210\u540e\u6253\u5f00Microsoft office 2021\u955c\u50cf\u5305\uff0c\u53cc\u51fb\u3010Microsoft Office for mac.pkg\u3011\u8fdb\u884c\u5b89\u88c5 \u5b89\u88c5\u5b8c\u6210\u540e\u56de\u5230office2021\u7834\u89e3\u7248\u955c\u50cf\u5305\uff0c\u8bf7\u53cc\u51fb\u6253\u5f00office2021\u6fc0\u6d3b\u5de5\u5177","title":"office"},{"location":"util/mac/app/#paste","text":"old \u4e0b\u8f7d\u5730\u5740 \u526a\u5207\u677f sudo xattr -rd com.apple.quarantine /Applications/Paste.app","title":"paste"},{"location":"util/mac/app/#rectangle","text":"\u4e0b\u8f7d\u5730\u5740 \u5206\u5c4f\u8f6f\u4ef6\uff0c \u5b98\u7f51\u4e0b\u8f7d\u9ed8\u8ba4\u5b89\u88c5\u5373\u53ef, free","title":"Rectangle"},{"location":"util/mac/app/#word","text":"","title":"word"},{"location":"util/mac/app/#typora","text":"","title":"typora"},{"location":"util/mac/app/#img","text":"","title":"img"},{"location":"util/mac/app/#omi","text":"","title":"omi\u5f55\u5c4f\u4e13\u5bb6"},{"location":"util/mac/app/#-downie-4","text":"\u5b89\u88c5\u5373\u53ef V4.6.8","title":"\u89c6\u5c4f\u4e0b\u8f7d-Downie 4"},{"location":"util/mac/app/#file","text":"","title":"file"},{"location":"util/mac/app/#xmind","text":"sudo xattr -rd com.apple.quarantine /Applications/XMind.app","title":"xmind"},{"location":"util/mac/app/#-the-unarchiver","text":"free","title":"\u538b\u7f29-The Unarchiver"},{"location":"util/mac/app/#tencent-lemon","text":"\u4e0b\u8f7d\u5730\u5740 \u6e05\u7406\u5de5\u5177\uff0c\u5b98\u7f51\u4e0b\u8f7d\u9ed8\u8ba4\u5b89\u88c5\u5373\u53ef, free","title":"tencent lemon"},{"location":"util/mac/app/#pdfreaderpro","text":"pdf\u7f16\u8f91\u9605\u8bfb \u7248\u672c2.8.22.1 (2.8.22.1) \u5b89\u88c5\u5373\u53ef \u6253\u5f00\u4e0b\u8f7d\u597d\u7684\u5b89\u88c5\u5305\uff0c\u62d6\u52a8\u3010pdf reader pro\u3011\u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5b89\u88c5\u5373\u53ef","title":"pdfreaderpro"},{"location":"util/mac/app/#clearview-x","text":"\u9605\u8bfb\u5668 Version 3.0.4 \u4e00\u6b65\u4e00\u6b65\u5b89\u88c5\u5373\u53ef \u62d6\u5230\u53f3\u4fa7\u5b89\u88c5\u5373\u53ef","title":"clearview X"},{"location":"util/mac/file/","text":"windows AppData \u2003\u2003xxApp:\u7cfb\u7edf\u6570\u636e \u2003\u2003soft develop \u2003\u2003dev \u2003\u2003 env home \u2003\u2003matt \u2003\u2003\u2003\u2003 download \u2003\u2003\u2003\u2003 life \u2003\u2003\u2003\u2003\u2003\u2003img \u2003\u2003\u2003\u2003\u2003\u2003music \u2003\u2003\u2003\u2003\u2003\u2003video \u2003\u2003\u2003\u2003\u2003\u2003file \u2003\u2003\u2003\u2003\u2003\u2003self \u2003\u2003\u2003\u2003 study \u2003\u2003\u2003\u2003\u2003\u2003api \u2003\u2003\u2003\u2003\u2003\u2003book \u2003\u2003\u2003\u2003\u2003\u2003res \u2003\u2003\u2003\u2003\u2003\u2003note \u2003\u2003\u2003\u2003 wordkspace ProgramFiles var life:img,video,self study work:\u5165\u804c\uff0c","title":"File"},{"location":"util/mac/iterm2/","text":"\u5b89\u88c5 \u5b89\u88c5iterm2 \u5b89\u88c5iterm2\uff0c \u5b98\u7f51 \u4e0b\u8f7d\u5b89\u88c5\u5373\u53ef \u5b98\u7f51\u4e0b\u8f7diterm2 \u914d\u7f6e\u4ee3\u7406 git\u3001github\uff08\u53ef\u53c2\u8003git\u6587\u7ae0\uff09\u3001\u7ec8\u7aef\u914d\u7f6e\u4ee3\u7406 \u7ec8\u7aef\u914d\u7f6e\u4ee3\u7406 cd ~ vim ./.zshrc export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890 \u914d\u7f6e\u6587\u4ef6\u751f\u6548 source ./.zshrc \u5b89\u88c5oh-my-zsh sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" \u5b89\u88c5 p10k cd ./.oh-my-zsh/themes git clone https://github.com/romkatv/powerlevel10k.git vi ~/.zshrc ZSH_THEME=\"powerlevel10k/powerlevel10k\" \u5b89\u88c5\u63d2\u4ef6 \u8bed\u6cd5\u9ad8\u4eae\u3001 \u81ea\u52a8\u8865\u5168 # \u8bed\u6cd5\u9ad8\u4eae cd ~/.oh-my-zsh/custom/plugins/ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git # \u81ea\u52a8\u8865\u5168 cd ~/.oh-my-zsh/custom/plugins/ git clone https://github.com/zsh-users/zsh-autosuggestions \u9000\u51faiterm2 exit vim ./.zscrc plugins=( git zsh-syntax-highlighting zsh-autosuggestions ) HIST_STAMPS=\"yyyy-mm-dd\" # \u6587\u672b\u6dfb\u52a0 source ~/.zshrc.pre-oh-my-zsh \u5b89\u88c5autojump brew install autojump \u6253\u5f00 ~/.zshrc \u52a0\u4e00\u884c\u4ee3\u7801\uff1a [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh \u4f7f\u7528 j test \u5f00\u542fsublime\u63d2\u4ef6 vim ~/.zshrc plugins\u6dfb\u52a0sublime plugins=( git git-open sublime zsh-syntax-highlighting zsh-autosuggestions ) alias subl=\"/Users/matt/Downloads/Sublime\\ Text.app/Contents/SharedSupport/bin/subl\" git-open git clone https://github.com/paulirish/git-open.git plugins=(\u5176\u4ed6\u7684\u63d2\u4ef6 git-open) alias go=\"git-open\" rm trash\u4ee3\u66ffrm,\u53ef\u4ee5\u5c06\u5220\u9664\u7684\u6587\u4ef6\u653e\u5165\u56de\u6536\u7ad9 npm install --global trash-cli alias rm=\"trash\" \u914d\u7f6e p10k \u914d\u7f6e \u524d\u63d0\uff1a\u914d\u7f6e\u597d\u4ee3\u7406 p10k configure \u95ee\u9898\u5927\u81f4\u5982\u4e0b\uff1a \u8fd9\u4e2a\u7b26\u53f7\u770b\u8d77\u6765\u50cf\u94bb\u77f3\uff08\u65cb\u8f6c\u7684\u6b63\u65b9\u5f62\uff09\u5417\uff1f \u8fd9\u4e2a\u7b26\u53f7\u770b\u8d77\u6765\u50cf\u9501\u5417\uff1f \u8fd9\u4e2a\u7b26\u53f7\u770b\u8d77\u6765\u50cf Debian logo \u5417\uff1f \u8fd9\u4e9b\u56fe\u6807\u90fd\u4ea4\u53c9\u5206\u5e03\u5728 X \u4e4b\u95f4\u5417\uff1f \u98ce\u683c \u7f16\u7801 \u662f\u5426\u663e\u793a\u65f6\u95f4 \u76ee\u5f55\u5c42\u7ea7\u5206\u9694\u7b26 \u5934\u90e8\uff08\u5de6\u8fb9\uff09 \u5c3e\u90e8\uff08\u53f3\u8fb9\uff09 \u662f\u5426\u6362\u884c \u5de6\u8fb9\u548c\u53f3\u8fb9\u662f\u5426\u6709\u8fde\u63a5\u7ebf \u547d\u4ee4\u884c\u548c\u63d0\u793a\u662f\u5426\u8fde\u63a5 \u4e24\u884c\u547d\u4ee4\u4e4b\u95f4\u5206\u5e03\u7a00\u758f\u8fd8\u662f\u677e\u6563 \u662f\u5426\u9700\u8981\u56fe\u6807 \u5b57\u4f53 \u7b2c\u4e00\u6b65\u4f1a\u4e0b\u8f7d\u5b57\u4f53\uff0c\u5982\u679c\u5931\u8d25\u8bb0\u5f97\u914d\u7f6e\u4ee3\u7406 https://github.com/ryanoasis/nerd-fonts/releases color https://github.com/QuentinWatt/dark-flat-iterm-colors https://gist.github.com/kevin-smets/8568070 0, 40, 51","title":"iterm2"},{"location":"util/mac/iterm2/#_1","text":"","title":"\u5b89\u88c5"},{"location":"util/mac/iterm2/#iterm2","text":"\u5b89\u88c5iterm2\uff0c \u5b98\u7f51 \u4e0b\u8f7d\u5b89\u88c5\u5373\u53ef \u5b98\u7f51\u4e0b\u8f7diterm2","title":"\u5b89\u88c5iterm2"},{"location":"util/mac/iterm2/#_2","text":"git\u3001github\uff08\u53ef\u53c2\u8003git\u6587\u7ae0\uff09\u3001\u7ec8\u7aef\u914d\u7f6e\u4ee3\u7406 \u7ec8\u7aef\u914d\u7f6e\u4ee3\u7406 cd ~ vim ./.zshrc export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890 \u914d\u7f6e\u6587\u4ef6\u751f\u6548 source ./.zshrc","title":"\u914d\u7f6e\u4ee3\u7406"},{"location":"util/mac/iterm2/#oh-my-zsh","text":"sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"","title":"\u5b89\u88c5oh-my-zsh"},{"location":"util/mac/iterm2/#p10k","text":"cd ./.oh-my-zsh/themes git clone https://github.com/romkatv/powerlevel10k.git vi ~/.zshrc ZSH_THEME=\"powerlevel10k/powerlevel10k\"","title":"\u5b89\u88c5 p10k"},{"location":"util/mac/iterm2/#_3","text":"","title":"\u5b89\u88c5\u63d2\u4ef6"},{"location":"util/mac/iterm2/#_4","text":"# \u8bed\u6cd5\u9ad8\u4eae cd ~/.oh-my-zsh/custom/plugins/ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git # \u81ea\u52a8\u8865\u5168 cd ~/.oh-my-zsh/custom/plugins/ git clone https://github.com/zsh-users/zsh-autosuggestions \u9000\u51faiterm2 exit vim ./.zscrc plugins=( git zsh-syntax-highlighting zsh-autosuggestions ) HIST_STAMPS=\"yyyy-mm-dd\" # \u6587\u672b\u6dfb\u52a0 source ~/.zshrc.pre-oh-my-zsh","title":"\u8bed\u6cd5\u9ad8\u4eae\u3001 \u81ea\u52a8\u8865\u5168"},{"location":"util/mac/iterm2/#autojump","text":"brew install autojump \u6253\u5f00 ~/.zshrc \u52a0\u4e00\u884c\u4ee3\u7801\uff1a [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh \u4f7f\u7528 j test","title":"\u5b89\u88c5autojump"},{"location":"util/mac/iterm2/#sublime","text":"vim ~/.zshrc plugins\u6dfb\u52a0sublime plugins=( git git-open sublime zsh-syntax-highlighting zsh-autosuggestions ) alias subl=\"/Users/matt/Downloads/Sublime\\ Text.app/Contents/SharedSupport/bin/subl\"","title":"\u5f00\u542fsublime\u63d2\u4ef6"},{"location":"util/mac/iterm2/#git-open","text":"git clone https://github.com/paulirish/git-open.git plugins=(\u5176\u4ed6\u7684\u63d2\u4ef6 git-open) alias go=\"git-open\"","title":"git-open"},{"location":"util/mac/iterm2/#rm","text":"trash\u4ee3\u66ffrm,\u53ef\u4ee5\u5c06\u5220\u9664\u7684\u6587\u4ef6\u653e\u5165\u56de\u6536\u7ad9 npm install --global trash-cli alias rm=\"trash\"","title":"rm"},{"location":"util/mac/iterm2/#_5","text":"","title":"\u914d\u7f6e"},{"location":"util/mac/iterm2/#p10k_1","text":"\u524d\u63d0\uff1a\u914d\u7f6e\u597d\u4ee3\u7406 p10k configure \u95ee\u9898\u5927\u81f4\u5982\u4e0b\uff1a \u8fd9\u4e2a\u7b26\u53f7\u770b\u8d77\u6765\u50cf\u94bb\u77f3\uff08\u65cb\u8f6c\u7684\u6b63\u65b9\u5f62\uff09\u5417\uff1f \u8fd9\u4e2a\u7b26\u53f7\u770b\u8d77\u6765\u50cf\u9501\u5417\uff1f \u8fd9\u4e2a\u7b26\u53f7\u770b\u8d77\u6765\u50cf Debian logo \u5417\uff1f \u8fd9\u4e9b\u56fe\u6807\u90fd\u4ea4\u53c9\u5206\u5e03\u5728 X \u4e4b\u95f4\u5417\uff1f \u98ce\u683c \u7f16\u7801 \u662f\u5426\u663e\u793a\u65f6\u95f4 \u76ee\u5f55\u5c42\u7ea7\u5206\u9694\u7b26 \u5934\u90e8\uff08\u5de6\u8fb9\uff09 \u5c3e\u90e8\uff08\u53f3\u8fb9\uff09 \u662f\u5426\u6362\u884c \u5de6\u8fb9\u548c\u53f3\u8fb9\u662f\u5426\u6709\u8fde\u63a5\u7ebf \u547d\u4ee4\u884c\u548c\u63d0\u793a\u662f\u5426\u8fde\u63a5 \u4e24\u884c\u547d\u4ee4\u4e4b\u95f4\u5206\u5e03\u7a00\u758f\u8fd8\u662f\u677e\u6563 \u662f\u5426\u9700\u8981\u56fe\u6807","title":"p10k \u914d\u7f6e"},{"location":"util/mac/iterm2/#_6","text":"\u7b2c\u4e00\u6b65\u4f1a\u4e0b\u8f7d\u5b57\u4f53\uff0c\u5982\u679c\u5931\u8d25\u8bb0\u5f97\u914d\u7f6e\u4ee3\u7406 https://github.com/ryanoasis/nerd-fonts/releases","title":"\u5b57\u4f53"},{"location":"util/mac/iterm2/#color","text":"https://github.com/QuentinWatt/dark-flat-iterm-colors https://gist.github.com/kevin-smets/8568070 0, 40, 51","title":"color"},{"location":"util/mac/office/","text":"office cr:https://mp.weixin.qq.com/s/6aILoJnU0WcK-gfFGAEWUQ,\u5982\u6709\u4fb5\u6743\u8bf7\u8054\u7cfb\u6211\u5220\u9664\uff0c\u6ca1\u6709\u4f5c\u5546\u7528 \u53c2\u8003\u4f19\u4f34\u795e \u8f6f\u4ef6\u7b80\u4ecb\uff1a Office 2021 v16.55 For Mac\u7248\u662f\u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u7684\u529e\u516c\u5957\u4ef6\uff0c\u5185\u542bWord\u6587\u672c\u5904\u7406\u8f6f\u4ef6\u3001Excel\u8868\u683c\u5904\u7406\u8f6f\u4ef6 \u3001PowerPoint\u5e7b\u706f\u7247\u5236\u4f5c\u8f6f\u4ef6\u3001Outlook\u90ae\u4ef6\u6536\u53d1\u7ba1\u7406\u5ba2\u6237\u7aef\u3001OneNote\u6570\u5b57\u7b14\u8bb0\u5e94\u7528\u7b49\u51e0\u4e2a\u7ec4\u4ef6\u3002Office 2021\u4f5c\u4e3a\u5fae\u8f6f\u7684\u4e00\u4e2a\u5e9e\u5927\u7684\u529e\u516c\u8f6f\u4ef6\u96c6\u5408\uff0c\u662f\u4e00\u6b3e\u6700\u597d\u7528\uff0c\u529f\u80fd\u6700\u5168\u9762\u7684\u529e\u516c\u8f6f\u4ef6\u3002\u65b0\u7248Office 2021 Mac\u7248\u5e26\u6765\u5168\u65b0\u754c\u9762\uff0c\u529f\u80fd\u66f4\u52a0\u5f3a\u5927\u3002 \u5b89\u88c5\u6b65\u9aa4\uff1a 1.\u9009\u62e9\u6211\u4eec\u4e0b\u8f7d\u7684\u5b89\u88c5\u5305\uff0c\u53cc\u51fb\u81ea\u52a8\u89e3\u538b\u955c\u50cf\u6587\u4ef6\u3002 2.\u89e3\u538b\u540e\u5f97\u5230\u4ee5\u4e0b\u6587\u4ef6\uff0c\u53cc\u51fb\u8fd0\u884coffice\u5b89\u88c5\u7a0b\u5e8f\u3002 3.\u70b9\u51fb\u7ee7\u7eed\u3002 \u4e00\u76f4\u9009\u62e9\u9ed8\u8ba4\u5373\u53ef \u7ee7\u7eed..... 4.\u5b89\u88c5\u6210\u529f\uff0c\u70b9\u51fb\u5173\u95ed\u3002 5.\u82e5\u6709\u63d0\u793a\u66f4\u65b0\uff0c\u53bb\u6389\u52fe\u9009\u540e\uff0c\u70b9\u51fb\u5173\u95ed\u3002 6.\u53cc\u51fb\u6253\u5f00License\u8bb8\u53ef\u6fc0\u6d3b\u7a0b\u5e8f\u3002 7\u90fd\u9009\u62e9\u9ed8\u8ba4\u5373\u53ef 8\u70b9\u51fb\u8df3\u8fc7\u767b\u9646\u3002\u6ce8\u610f\u4e0d\u8981\u767b\u9646\uff0c\u9632\u6b62\u6fc0\u6d3b\u5931\u6548\u3002","title":"Office"},{"location":"util/mac/office/#_1","text":"Office 2021 v16.55 For Mac\u7248\u662f\u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u7684\u529e\u516c\u5957\u4ef6\uff0c\u5185\u542bWord\u6587\u672c\u5904\u7406\u8f6f\u4ef6\u3001Excel\u8868\u683c\u5904\u7406\u8f6f\u4ef6 \u3001PowerPoint\u5e7b\u706f\u7247\u5236\u4f5c\u8f6f\u4ef6\u3001Outlook\u90ae\u4ef6\u6536\u53d1\u7ba1\u7406\u5ba2\u6237\u7aef\u3001OneNote\u6570\u5b57\u7b14\u8bb0\u5e94\u7528\u7b49\u51e0\u4e2a\u7ec4\u4ef6\u3002Office 2021\u4f5c\u4e3a\u5fae\u8f6f\u7684\u4e00\u4e2a\u5e9e\u5927\u7684\u529e\u516c\u8f6f\u4ef6\u96c6\u5408\uff0c\u662f\u4e00\u6b3e\u6700\u597d\u7528\uff0c\u529f\u80fd\u6700\u5168\u9762\u7684\u529e\u516c\u8f6f\u4ef6\u3002\u65b0\u7248Office 2021 Mac\u7248\u5e26\u6765\u5168\u65b0\u754c\u9762\uff0c\u529f\u80fd\u66f4\u52a0\u5f3a\u5927\u3002","title":"\u8f6f\u4ef6\u7b80\u4ecb\uff1a"},{"location":"util/mac/office/#_2","text":"","title":"\u5b89\u88c5\u6b65\u9aa4\uff1a"},{"location":"util/mac/office/#1","text":"","title":"1.\u9009\u62e9\u6211\u4eec\u4e0b\u8f7d\u7684\u5b89\u88c5\u5305\uff0c\u53cc\u51fb\u81ea\u52a8\u89e3\u538b\u955c\u50cf\u6587\u4ef6\u3002"},{"location":"util/mac/office/#2office","text":"","title":"2.\u89e3\u538b\u540e\u5f97\u5230\u4ee5\u4e0b\u6587\u4ef6\uff0c\u53cc\u51fb\u8fd0\u884coffice\u5b89\u88c5\u7a0b\u5e8f\u3002"},{"location":"util/mac/office/#3","text":"\u4e00\u76f4\u9009\u62e9\u9ed8\u8ba4\u5373\u53ef \u7ee7\u7eed.....","title":"3.\u70b9\u51fb\u7ee7\u7eed\u3002"},{"location":"util/mac/office/#4","text":"","title":"4.\u5b89\u88c5\u6210\u529f\uff0c\u70b9\u51fb\u5173\u95ed\u3002"},{"location":"util/mac/office/#5","text":"","title":"5.\u82e5\u6709\u63d0\u793a\u66f4\u65b0\uff0c\u53bb\u6389\u52fe\u9009\u540e\uff0c\u70b9\u51fb\u5173\u95ed\u3002"},{"location":"util/mac/office/#6license","text":"","title":"6.\u53cc\u51fb\u6253\u5f00License\u8bb8\u53ef\u6fc0\u6d3b\u7a0b\u5e8f\u3002"},{"location":"util/mac/office/#7","text":"","title":"7\u90fd\u9009\u62e9\u9ed8\u8ba4\u5373\u53ef"},{"location":"util/mac/office/#8","text":"","title":"8\u70b9\u51fb\u8df3\u8fc7\u767b\u9646\u3002\u6ce8\u610f\u4e0d\u8981\u767b\u9646\uff0c\u9632\u6b62\u6fc0\u6d3b\u5931\u6548\u3002"},{"location":"util/mac/terminal/","text":"ctrl+a \u884c\u9996 cltr+e \u884c\u5c3e ctrl+u \u5168\u90e8 ctrl k \u540e ctrl+y \u64a4\u9500 ctrl+w \u5220\u9664\u5355\u8bcd Ctrl \u2013 c \uff1a\u7ec8\u6b62\u547d\u4ee4 Ctrl \u2013 z \uff1a\u6302\u8d77\u547d\u4ee4","title":"Terminal"},{"location":"util/mac/vm%E5%AE%89%E8%A3%85centos/","text":"\u5b89\u88c5 \u57fa\u7840\u5b89\u88c5 \u9009\u62e9\u955c\u50cf \u5904\u7406\u5668\u53ef\u4ee5\u9009\u62e92\u4e2a \u5185\u5b584096 \u78c1\u76d8 50g \u8bbe\u7f6eroot \u5bc6\u7801 \u914d\u7f6e \u914d\u7f6e\u7f51\u7edc vm\u5f00\u542fnat \u504f\u597d\u8bbe\u7f6e\uff0c\u7f51\u7edc nat cd /Library/Preferences/VMware\\ Fusion/vmnet8 \u67e5\u770bnat.conf \u7f51\u5173\u5730\u5740 \u5b50\u7f51\u63a9\u7801 cat nat.conf \u67e5\u770bdhcpd.conf cat dhcpd.conf \u67e5\u770bdns \u7cfb\u7edf\u504f\u597d\u8bbe\u7f6e -> \u7f51\u7edc \u914d\u7f6ecentos cd /etc/sysconfig/network-scripts vim ifcfg-ens160 TYPE=Ethernet PROXY_METHOD=none BROWSER_ONLY=no # \u6539 BOOTPROTO=static DEFROUTE=yes IPV4_FAILURE_FATAL=no IPV6INIT=yes IPV6_AUTOCONF=yes IPV6_DEFROUTE=yes IPV6_FAILURE_FATAL=no NAME=ens160 UUID=2c174a85-8cdc-4543-9e95-84bcf36e9d8d DEVICE=ens160 # \u4e0b\u9762\u90fd\u6539 ONBOOT=yes # \u81ea\u5b9a\u4e49\u9759\u6001ip \u9700\u8981\u5728range\u8303\u56f4 IPADDR=172.16.110.129 # \u7f51\u5173\u5730\u5740 GATEWAY=172.16.110.2 # \u5b50\u7f51\u63a9\u7801 NETMASK=255.255.255.0 # dns\u5730\u5740 DNS1=192.168.199.1 systemctl restart network \u5982\u679c\u4f60\u6362\u4e86\u4e00\u4e2a\u5730\u65b9\u4e0a\u7f51\u7684\u8bdd\uff0c\u53ef\u80fd\u4f1a\u53d1\u73b0\u4f60\u7684\u865a\u62df\u673a\u6709\u4e0d\u901a\u4e86\uff0c\u90a3\u662f\u56e0\u4e3aDNS\u5730\u5740\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u6b64\u65f6\u53ea\u9700\u8981\u518d\u6b21\u7f16\u8f91ifcfg-enxxx\u6587\u4ef6\uff0c\u7136\u540e\u52a0\u4e0a\u4f60\u73b0\u5728\u7f51\u7edc\u7684DNS\u5730\u5740\u5373\u53ef \u53c2\u8003 https://www.cnblogs.com/itbsl/p/10998696.html#%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip","title":"Vm\u5b89\u88c5centos"},{"location":"util/mac/vm%E5%AE%89%E8%A3%85centos/#_1","text":"","title":"\u5b89\u88c5"},{"location":"util/mac/vm%E5%AE%89%E8%A3%85centos/#_2","text":"","title":"\u57fa\u7840\u5b89\u88c5"},{"location":"util/mac/vm%E5%AE%89%E8%A3%85centos/#_3","text":"\u5904\u7406\u5668\u53ef\u4ee5\u9009\u62e92\u4e2a \u5185\u5b584096 \u78c1\u76d8 50g \u8bbe\u7f6eroot \u5bc6\u7801","title":"\u9009\u62e9\u955c\u50cf"},{"location":"util/mac/vm%E5%AE%89%E8%A3%85centos/#_4","text":"","title":"\u914d\u7f6e"},{"location":"util/mac/vm%E5%AE%89%E8%A3%85centos/#_5","text":"","title":"\u914d\u7f6e\u7f51\u7edc"},{"location":"util/mac/vm%E5%AE%89%E8%A3%85centos/#vmnat","text":"\u504f\u597d\u8bbe\u7f6e\uff0c\u7f51\u7edc nat cd /Library/Preferences/VMware\\ Fusion/vmnet8","title":"vm\u5f00\u542fnat"},{"location":"util/mac/vm%E5%AE%89%E8%A3%85centos/#natconf","text":"\u7f51\u5173\u5730\u5740 \u5b50\u7f51\u63a9\u7801 cat nat.conf","title":"\u67e5\u770bnat.conf"},{"location":"util/mac/vm%E5%AE%89%E8%A3%85centos/#dhcpdconf","text":"cat dhcpd.conf","title":"\u67e5\u770bdhcpd.conf"},{"location":"util/mac/vm%E5%AE%89%E8%A3%85centos/#dns","text":"\u7cfb\u7edf\u504f\u597d\u8bbe\u7f6e -> \u7f51\u7edc","title":"\u67e5\u770bdns"},{"location":"util/mac/vm%E5%AE%89%E8%A3%85centos/#centos","text":"cd /etc/sysconfig/network-scripts vim ifcfg-ens160 TYPE=Ethernet PROXY_METHOD=none BROWSER_ONLY=no # \u6539 BOOTPROTO=static DEFROUTE=yes IPV4_FAILURE_FATAL=no IPV6INIT=yes IPV6_AUTOCONF=yes IPV6_DEFROUTE=yes IPV6_FAILURE_FATAL=no NAME=ens160 UUID=2c174a85-8cdc-4543-9e95-84bcf36e9d8d DEVICE=ens160 # \u4e0b\u9762\u90fd\u6539 ONBOOT=yes # \u81ea\u5b9a\u4e49\u9759\u6001ip \u9700\u8981\u5728range\u8303\u56f4 IPADDR=172.16.110.129 # \u7f51\u5173\u5730\u5740 GATEWAY=172.16.110.2 # \u5b50\u7f51\u63a9\u7801 NETMASK=255.255.255.0 # dns\u5730\u5740 DNS1=192.168.199.1 systemctl restart network \u5982\u679c\u4f60\u6362\u4e86\u4e00\u4e2a\u5730\u65b9\u4e0a\u7f51\u7684\u8bdd\uff0c\u53ef\u80fd\u4f1a\u53d1\u73b0\u4f60\u7684\u865a\u62df\u673a\u6709\u4e0d\u901a\u4e86\uff0c\u90a3\u662f\u56e0\u4e3aDNS\u5730\u5740\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u6b64\u65f6\u53ea\u9700\u8981\u518d\u6b21\u7f16\u8f91ifcfg-enxxx\u6587\u4ef6\uff0c\u7136\u540e\u52a0\u4e0a\u4f60\u73b0\u5728\u7f51\u7edc\u7684DNS\u5730\u5740\u5373\u53ef \u53c2\u8003 https://www.cnblogs.com/itbsl/p/10998696.html#%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip","title":"\u914d\u7f6ecentos"},{"location":"util/win/windows/","text":"font-family: JetBrains Mono; word word \u5220\u9664Word\u5206\u9875\u7b26 \u5982\u679c\u7a7a\u767d\u9875\u5b58\u5728\u5206\u9875\u7b26\uff0c\u70b9\u51fb\u6587\u4e2d\u300c\u5c0f\u53cc\u7bad\u5934\u300d\uff0c\u6587\u6863\u5e95\u90e8\u5c31\u4f1a\u51fa\u73b0\u300c\u5206\u9875\u7b26\u300d\uff0c\u9009\u4e2d\u5b83\u6309\u300cDelete\u300d\u952e\u5373\u53ef\u5220\u9664\u3002 Typora Mo Dark sublime \u5b89\u88c5pac \u63d2\u4ef6 convert to utf-8 chinese :\u4e2d\u6587 pac \u2460\u5b89\u88c5package controll \u2461\u8f93\u5165pac,\u9009\u62e9install package controll\u56de\u8f66\u5373\u53ef \u66f4\u6539\u63d2\u4ef6\u76ee\u5f55\u7684\u4f4d\u7f6e \u539f\u76ee\u5f55\u5220\u9664\uff0c\u5728\u5b89\u88c5\u76ee\u5f55\u4e0b\u5efa\u7acbData\u6587\u4ef6\u5939\u5373\u53ef\u3002 Member J2TeaM Single User License EA7E-1011316 D7DA350E 1B8B0760 972F8B60 F3E64036 B9B4E234 F356F38F 0AD1E3B7 0E9C5FAD FA0A2ABE 25F65BD8 D51458E5 3923CE80 87428428 79079A01 AA69F319 A1AF29A4 A684C2DC 0B1583D4 19CBD290 217618CD 5653E0A0 BACE3948 BB2EE45E 422D2C87 DD9AF44B 99C49590 D2DBDEE1 75860FD2 8C8BB2AD B2ECE5A4 EFC08AF2 25A9B864 img fscapture FastStone Capture(FSCapture) \u6ce8\u518c\u7801 2018\u5e7407\u670818\u65e5 15:19:08 \u6b87\u83ab\u5fc6 \u9605\u8bfb\u6570\uff1a12509 \u4f01\u4e1a\u7248\u5e8f\u5217\u53f7\uff1a name\uff1abluman serial/\u5e8f\u5217\u53f7/\u6ce8\u518c\u7801\uff1aVPISCJULXUFGDDXYAUYF FastStone Capture \u6ce8\u518c\u7801 \u5e8f\u5217\u53f7\uff1a name/\u7528\u6237\u540d\uff1aTEAM JiOO key/\u6ce8\u518c\u7801\uff1aCPCWXRVCZW30HMKE8KQQUXW USER NAME:TEAM_BRAiGHTLiNG_2007 CODE:XPNMF-ISDYF-LCSED-BPATU \u63a8\u8350\u9009\u62e9\u7b2c\u4e00\u4e2a \u5b98\u7f51 [\u4e2d\u6587\u5b98\u7f51]( \u56fe\u5e8a \u63a8\u8350 picgo \u89c6\u9891 OBS-STUDIO \u5b89\u88c5 \u5b98\u7f51 \u4ece\u5b98\u7f51\u4e0b\u8f7d\uff0c next \u5b89\u88c5\u5373\u53ef \u914d\u7f6e \u663e\u793a\u952e\u76d8\u9f20\u6807 \u63d2\u4ef6\u5b98\u7f51 \u63d2\u4ef6\u4ed3\u5e93 \u9009\u62e9\u5982\u56fe\u6240\u793a\u4e0b\u8f7d\u5373\u53ef \u4e0b\u8f7d\u89e3\u538b\uff0c\u89e3\u538b\u5f97\u5230\u5982\u4e0b\u6587\u4ef6\uff0c\u5c06plugin\u4e0b\u7684\u4fe9\u4e2a\u6587\u4ef6\u5939\u653e\u5230obs\u7684\u5b89\u88c5\u76ee\u5f55\u4e0b\u5373\u53ef\uff0c \u4e0d\u662fpulugin\u6587\u4ef6\u5939\u3002 \u5728obs\u4e2d\u5982\u4e0b\u64cd\u4f5c \u914d\u7f6e\uff0c presets\u6587\u4ef6\u5939\u4e2d\uff0c\u9009\u62e9\u56fe\u6807\u3001\u9009\u62e9\u914d\u7f6e \u5173\u95ed\u9ea6\u514b\u98ce \u4f7f\u7528 file IDM idm 6.38 \u4e0b\u8f7d\u89e3\u538b\u7eff\u5316\u5373\u53ef iqbit \u6267\u884c\u56fe\u4e2dxx.exe\u5b89\u88c5\uff0c\uff08\u8df3\u8fc7\uff09\u5b89\u88c5\u5b8c\u6210\u540e\u5173\u95ed\uff0c\u5c06crack\u4e2d\u6240\u6709\u5f97\u6587\u4ef6\uff08 \u4e0d\u662fcrack\u6587\u4ef6\u5939 \uff09\u590d\u5236\u5230iqbit\u5b89\u88c5\u76ee\u5f55\u4e0b 7zip \u89e3\u538b\u538b\u7f29 pdf adobe edge \u9605\u8bfbpdf \u90fd\u4f1a\u90e8\u5206\u89e3\u6790\u5931\u8d25 xodo\u590d\u5236\u5185\u5bb9\u65f6\u4f1a\u591a\u9009 \u8c37\u6b4c\u6d4f\u89c8\u5668\u662f\u6b63\u786e\u7684 utools \u5185\u7f51\u7a7f\u900f net switchhost \u5b98\u7f51 bash cygwin 64 \u5b89\u88c5 http://www.cygwin.com/ 1.\u70b9\u51fb\u4e0b\u56fe\u94fe\u63a5\uff0c\u4e0b\u8f7d\u5b89\u88c5\u5305\uff0c\u70b9\u51fb\u5b89\u88c5\u5305\u5373\u53ef 2\u3001\u4e09\u79cd\u5b89\u88c5\u6a21\u5f0f \u2460Install from Internet\uff0c\u8fd9\u79cd\u6a21\u5f0f\u76f4\u63a5\u4eceInternet\u5b89\u88c5\uff0c\u9002\u5408\u7f51\u901f\u8f83\u5feb\u7684\u60c5\u51b5\uff1b \u2461Download Without Installing\uff0c\u8fd9\u79cd\u6a21\u5f0f\u53ea\u4ece\u7f51\u4e0a\u4e0b\u8f7dCygwin\u7684\u7ec4\u4ef6\u5305\uff0c\u4f46\u4e0d\u5b89\u88c5\uff1b \u2462Install from Local Directory\uff0c\u8fd9\u79cd\u6a21\u5f0f\u4e0e\u4e0a\u9762\u7b2c\u4e8c\u79cd\u6a21\u5f0f\u5bf9\u5e94\uff0c\u5f53\u4f60\u7684Cygwin\u7ec4\u4ef6\u5305\u5df2\u7ecf\u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u6b64\u6a21\u5f0f\u4ece\u672c\u5730\u5b89\u88c5Cygwin \u6211\u4eec\u9009\u62e9\u7b2c\u4e00\u79cd 3\u3001\u9009\u62e9\u5b89\u88c5\u8def\u5f84 \u8f6f\u4ef6\u5b89\u88c5\u7684\u4f4d\u7f6e \u7ec4\u4ef6\u5b89\u88c5\u7684\u4f4d\u7f6e 4.\u4ee3\u7406 \u2460Use System Proxy Settings \u4f7f\u7528\u7cfb\u7edf\u7684\u4ee3\u7406\u8bbe\u7f6e \u2461Direct Connection \u4e00\u822c\u591a\u6570\u7528\u6237\u90fd\u662f\u8fd9\u79cd\u76f4\u63a5\u8fde\u63a5\u7684\u7f51\u7edc\uff0c\u6240\u4ee5\u90fd\u662f\u76f4\u63a5\u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\u5373\u53ef \u2462Use HTTP/FTP Proxy \u4f7f\u7528HTTP\u6216FTP\u7c7b\u578b\u7684\u4ee3\u7406\u3002\u5982\u679c\u6709\u9700\u8981\uff0c\u81ea\u5df1\u9009\u62e9\u6b64\u9879\u540e\uff0c\u8bbe\u7f6e\u5bf9\u5e94\u7684\u4ee3\u7406\u5730\u5740\u548c\u7aef\u53e3\uff0c\u5373\u53ef 5\u3001\u9009\u62e9\u4e0b\u8f7d\u7ad9\u70b9 \u4e0d\u540c\u7684\u955c\u50cf\u5b58\u653e\u4e86\u4e0d\u540c\u7684\u5305\uff0c\u4e3a\u4e86\u83b7\u5f97\u6700\u5feb\u7684\u4e0b\u8f7d\u901f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u7f51\u6613\u5f00\u6e90\u955c\u50cfhttp://mirrors.163.com/cygwin/ \u6216\u8005 \u963f\u91cc\u4e91\u955c\u50cfhttp://mirrors.aliyun.com/cygwin/ 6.\u7ec4\u4ef6\u7684\u9009\u62e9 \u6b64\u5904\uff0c\u5bf9\u4e8e\u5b89\u88c5Cygwin\u6765\u8bf4\uff0c\u5c31\u662f\u5b89\u88c5\u5404\u79cd\u5404\u6837\u7684\u6a21\u5757\u800c\u5df2\u3002\u6700\u6838\u5fc3\u7684\uff0c\u8bb0\u4f4f\u4e00\u5b9a\u8981\u5b89\u88c5Devel\u8fd9\u4e2a\u90e8\u5206\u7684\u6a21\u5757\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5404\u79cd\u5f00\u53d1\u6240\u7528\u5230\u7684\u5de5\u5177\u6216\u6a21\u5757 \u5c55\u5f00devel \u4ece\u4e2d\u9009\u62e9binutils\u3001 gcc \u3001mingw \u3001gdb ,make\u8fdb\u884c\u5b89\u88c5\uff0c\u627e\u5230\u4ee5\u4e0b\u9009\u9879\uff0c\u70b9\u51fb\u540e\u8fb9\u7684skip\uff0c\u4f7f\u5176\u53d8\u4e3a\u7248\u672c\u53f7\u5373\u53ef gcc-core\u3001gcc-g++\u3001make\u3001gdb\u3001binutils \u70b9\u51fb\u4e0b\u4e00\u6b65\u5b89\u88c5\u5373\u53ef\u3002 \u68c0\u9a8c \u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f cygcheck -c cygwin \u6dfb\u52a0\u53f3\u952e Step 2 \u51c6\u5907\u542f\u52a8\u811a\u672c \u4ee5\u6211\u7684\u5b89\u88c5\u76ee\u5f55(d:\\cygwin)\u4e3a\u4f8b \u5728d:\\cygwin\\bin\\\u4e0b\u51c6\u5907\u4e00\u4e2a\u542f\u52a8\u811a\u672c\uff0c\u547d\u540d\u4e3acygwin.bat \u5185\u5bb9\u4e3a\uff1a @echo off set _WindowsDIR=%* D:\\cygwin\\bin\\mintty.exe -i /Cygwin-Terminal.ico - \u5982\u679c\u51fa\u73b0\u6700\u540e\u51fa\u73b0\u95ea\u9000\u7684\u60c5\u51b5\uff0c\u628a\u6700\u540e\u4e00\u884c\u6539\u4e3a\"D:\\cygwin\\bin\\mintty.exe\" -i /Cygwin-Terminal.ico - Step 3 \u6dfb\u52a0\u53f3\u952e\u83dc\u5355 \u6253\u5f00\u6ce8\u518c\u8868\u7f16\u8f91\u5668\uff0c\u5728\u8ba1\u7b97\u673a\\HKEY_CLASSES_ROOT\\Directory\\Background\\shell\u4e0b\u65b0\u5efa\u9879CygWin\uff0c\u5c06\u5176\u9ed8\u8ba4\u5b57\u7b26\u4e32\u503c\u6539\u4e3aCygWin Here(\u53f3\u952e\u83dc\u5355\u663e\u793a\u7684\u5185\u5bb9) \u7136\u540e\u65b0\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u503c\uff0c\u540d\u79f0\u6539\u4e3aIcon\uff0c\u5b57\u7b26\u4e32\u503c\u6539\u4e3aD:\\ProgramFiles\\cygwin64\\Cygwin.ico \u4e4b\u540e\u4e3aCygWin\u6dfb\u52a0\u5b50\u9879command\uff0c\u5c06\u9ed8\u8ba4\u5b57\u7b26\u4e32\u503c\u6539\u4e3aD:\\ProgramFiles\\cygwin64\\bin\\cygwin.bat %V \u5982\u56fe Step 4 Cygwin\u83b7\u53d6\u73af\u5883\u53d8\u91cf \u7f16\u8f91bash_profile\uff1avim ~/.bash_profile \u5728\u6700\u540e\u6dfb\u52a0\u5185\u5bb9: if [[ $_WindowsDIR != \"\" ]] then TMPDIR=${_WindowsDIR//\\\\//} unset _WindowsDIR cd \"$TMPDIR\" fi jetBrains\u4f7f\u7528cygwin \u7a97\u53e3\u6700\u5927\u5316 \u5e94\u7528\u5c5e\u6027\u4e2d\u9009\u62e9 \u6570\u636e\u5e93 pdman \u6570\u636e\u5e93\u5efa\u6a21\u5de5\u5177 pdman \u9f20\u6807 master2s \u957f\u6309\u5207\u6362\u6309\u94ae\u7b49\u770b\u5230\u5b83\u95ea\u70c1\u5373\u53ef\u91cd\u7f6e\u8fde\u63a5","title":"Windows"},{"location":"util/win/windows/#word","text":"","title":"word"},{"location":"util/win/windows/#word_1","text":"\u5220\u9664Word\u5206\u9875\u7b26 \u5982\u679c\u7a7a\u767d\u9875\u5b58\u5728\u5206\u9875\u7b26\uff0c\u70b9\u51fb\u6587\u4e2d\u300c\u5c0f\u53cc\u7bad\u5934\u300d\uff0c\u6587\u6863\u5e95\u90e8\u5c31\u4f1a\u51fa\u73b0\u300c\u5206\u9875\u7b26\u300d\uff0c\u9009\u4e2d\u5b83\u6309\u300cDelete\u300d\u952e\u5373\u53ef\u5220\u9664\u3002","title":"word"},{"location":"util/win/windows/#typora","text":"Mo Dark","title":"Typora"},{"location":"util/win/windows/#sublime","text":"","title":"sublime"},{"location":"util/win/windows/#pac","text":"","title":"\u5b89\u88c5pac"},{"location":"util/win/windows/#_1","text":"convert to utf-8 chinese :\u4e2d\u6587 pac \u2460\u5b89\u88c5package controll \u2461\u8f93\u5165pac,\u9009\u62e9install package controll\u56de\u8f66\u5373\u53ef","title":"\u63d2\u4ef6"},{"location":"util/win/windows/#_2","text":"\u539f\u76ee\u5f55\u5220\u9664\uff0c\u5728\u5b89\u88c5\u76ee\u5f55\u4e0b\u5efa\u7acbData\u6587\u4ef6\u5939\u5373\u53ef\u3002 Member J2TeaM Single User License EA7E-1011316 D7DA350E 1B8B0760 972F8B60 F3E64036 B9B4E234 F356F38F 0AD1E3B7 0E9C5FAD FA0A2ABE 25F65BD8 D51458E5 3923CE80 87428428 79079A01 AA69F319 A1AF29A4 A684C2DC 0B1583D4 19CBD290 217618CD 5653E0A0 BACE3948 BB2EE45E 422D2C87 DD9AF44B 99C49590 D2DBDEE1 75860FD2 8C8BB2AD B2ECE5A4 EFC08AF2 25A9B864","title":"\u66f4\u6539\u63d2\u4ef6\u76ee\u5f55\u7684\u4f4d\u7f6e"},{"location":"util/win/windows/#img","text":"","title":"img"},{"location":"util/win/windows/#fscapture","text":"FastStone Capture(FSCapture) \u6ce8\u518c\u7801 2018\u5e7407\u670818\u65e5 15:19:08 \u6b87\u83ab\u5fc6 \u9605\u8bfb\u6570\uff1a12509 \u4f01\u4e1a\u7248\u5e8f\u5217\u53f7\uff1a name\uff1abluman serial/\u5e8f\u5217\u53f7/\u6ce8\u518c\u7801\uff1aVPISCJULXUFGDDXYAUYF FastStone Capture \u6ce8\u518c\u7801 \u5e8f\u5217\u53f7\uff1a name/\u7528\u6237\u540d\uff1aTEAM JiOO key/\u6ce8\u518c\u7801\uff1aCPCWXRVCZW30HMKE8KQQUXW USER NAME:TEAM_BRAiGHTLiNG_2007 CODE:XPNMF-ISDYF-LCSED-BPATU \u63a8\u8350\u9009\u62e9\u7b2c\u4e00\u4e2a \u5b98\u7f51 [\u4e2d\u6587\u5b98\u7f51](","title":"fscapture"},{"location":"util/win/windows/#_3","text":"\u63a8\u8350 picgo","title":"\u56fe\u5e8a"},{"location":"util/win/windows/#_4","text":"","title":"\u89c6\u9891"},{"location":"util/win/windows/#obs-studio","text":"","title":"OBS-STUDIO"},{"location":"util/win/windows/#_5","text":"\u5b98\u7f51 \u4ece\u5b98\u7f51\u4e0b\u8f7d\uff0c next \u5b89\u88c5\u5373\u53ef","title":"\u5b89\u88c5"},{"location":"util/win/windows/#_6","text":"","title":"\u914d\u7f6e"},{"location":"util/win/windows/#_7","text":"\u63d2\u4ef6\u5b98\u7f51 \u63d2\u4ef6\u4ed3\u5e93 \u9009\u62e9\u5982\u56fe\u6240\u793a\u4e0b\u8f7d\u5373\u53ef \u4e0b\u8f7d\u89e3\u538b\uff0c\u89e3\u538b\u5f97\u5230\u5982\u4e0b\u6587\u4ef6\uff0c\u5c06plugin\u4e0b\u7684\u4fe9\u4e2a\u6587\u4ef6\u5939\u653e\u5230obs\u7684\u5b89\u88c5\u76ee\u5f55\u4e0b\u5373\u53ef\uff0c \u4e0d\u662fpulugin\u6587\u4ef6\u5939\u3002 \u5728obs\u4e2d\u5982\u4e0b\u64cd\u4f5c \u914d\u7f6e\uff0c presets\u6587\u4ef6\u5939\u4e2d\uff0c\u9009\u62e9\u56fe\u6807\u3001\u9009\u62e9\u914d\u7f6e","title":"\u663e\u793a\u952e\u76d8\u9f20\u6807"},{"location":"util/win/windows/#_8","text":"","title":"\u5173\u95ed\u9ea6\u514b\u98ce"},{"location":"util/win/windows/#_9","text":"","title":"\u4f7f\u7528"},{"location":"util/win/windows/#file","text":"","title":"file"},{"location":"util/win/windows/#idm","text":"idm 6.38 \u4e0b\u8f7d\u89e3\u538b\u7eff\u5316\u5373\u53ef","title":"IDM"},{"location":"util/win/windows/#iqbit","text":"\u6267\u884c\u56fe\u4e2dxx.exe\u5b89\u88c5\uff0c\uff08\u8df3\u8fc7\uff09\u5b89\u88c5\u5b8c\u6210\u540e\u5173\u95ed\uff0c\u5c06crack\u4e2d\u6240\u6709\u5f97\u6587\u4ef6\uff08 \u4e0d\u662fcrack\u6587\u4ef6\u5939 \uff09\u590d\u5236\u5230iqbit\u5b89\u88c5\u76ee\u5f55\u4e0b","title":"iqbit"},{"location":"util/win/windows/#7zip","text":"\u89e3\u538b\u538b\u7f29","title":"7zip"},{"location":"util/win/windows/#pdf","text":"adobe edge \u9605\u8bfbpdf \u90fd\u4f1a\u90e8\u5206\u89e3\u6790\u5931\u8d25 xodo\u590d\u5236\u5185\u5bb9\u65f6\u4f1a\u591a\u9009 \u8c37\u6b4c\u6d4f\u89c8\u5668\u662f\u6b63\u786e\u7684","title":"pdf"},{"location":"util/win/windows/#utools","text":"\u5185\u7f51\u7a7f\u900f","title":"utools"},{"location":"util/win/windows/#net","text":"","title":"net"},{"location":"util/win/windows/#switchhost","text":"\u5b98\u7f51","title":"switchhost"},{"location":"util/win/windows/#bash","text":"","title":"bash"},{"location":"util/win/windows/#cygwin-64","text":"","title":"cygwin 64"},{"location":"util/win/windows/#_10","text":"http://www.cygwin.com/ 1.\u70b9\u51fb\u4e0b\u56fe\u94fe\u63a5\uff0c\u4e0b\u8f7d\u5b89\u88c5\u5305\uff0c\u70b9\u51fb\u5b89\u88c5\u5305\u5373\u53ef 2\u3001\u4e09\u79cd\u5b89\u88c5\u6a21\u5f0f \u2460Install from Internet\uff0c\u8fd9\u79cd\u6a21\u5f0f\u76f4\u63a5\u4eceInternet\u5b89\u88c5\uff0c\u9002\u5408\u7f51\u901f\u8f83\u5feb\u7684\u60c5\u51b5\uff1b \u2461Download Without Installing\uff0c\u8fd9\u79cd\u6a21\u5f0f\u53ea\u4ece\u7f51\u4e0a\u4e0b\u8f7dCygwin\u7684\u7ec4\u4ef6\u5305\uff0c\u4f46\u4e0d\u5b89\u88c5\uff1b \u2462Install from Local Directory\uff0c\u8fd9\u79cd\u6a21\u5f0f\u4e0e\u4e0a\u9762\u7b2c\u4e8c\u79cd\u6a21\u5f0f\u5bf9\u5e94\uff0c\u5f53\u4f60\u7684Cygwin\u7ec4\u4ef6\u5305\u5df2\u7ecf\u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u6b64\u6a21\u5f0f\u4ece\u672c\u5730\u5b89\u88c5Cygwin \u6211\u4eec\u9009\u62e9\u7b2c\u4e00\u79cd 3\u3001\u9009\u62e9\u5b89\u88c5\u8def\u5f84 \u8f6f\u4ef6\u5b89\u88c5\u7684\u4f4d\u7f6e \u7ec4\u4ef6\u5b89\u88c5\u7684\u4f4d\u7f6e 4.\u4ee3\u7406 \u2460Use System Proxy Settings \u4f7f\u7528\u7cfb\u7edf\u7684\u4ee3\u7406\u8bbe\u7f6e \u2461Direct Connection \u4e00\u822c\u591a\u6570\u7528\u6237\u90fd\u662f\u8fd9\u79cd\u76f4\u63a5\u8fde\u63a5\u7684\u7f51\u7edc\uff0c\u6240\u4ee5\u90fd\u662f\u76f4\u63a5\u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\u5373\u53ef \u2462Use HTTP/FTP Proxy \u4f7f\u7528HTTP\u6216FTP\u7c7b\u578b\u7684\u4ee3\u7406\u3002\u5982\u679c\u6709\u9700\u8981\uff0c\u81ea\u5df1\u9009\u62e9\u6b64\u9879\u540e\uff0c\u8bbe\u7f6e\u5bf9\u5e94\u7684\u4ee3\u7406\u5730\u5740\u548c\u7aef\u53e3\uff0c\u5373\u53ef 5\u3001\u9009\u62e9\u4e0b\u8f7d\u7ad9\u70b9 \u4e0d\u540c\u7684\u955c\u50cf\u5b58\u653e\u4e86\u4e0d\u540c\u7684\u5305\uff0c\u4e3a\u4e86\u83b7\u5f97\u6700\u5feb\u7684\u4e0b\u8f7d\u901f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u7f51\u6613\u5f00\u6e90\u955c\u50cfhttp://mirrors.163.com/cygwin/ \u6216\u8005 \u963f\u91cc\u4e91\u955c\u50cfhttp://mirrors.aliyun.com/cygwin/ 6.\u7ec4\u4ef6\u7684\u9009\u62e9 \u6b64\u5904\uff0c\u5bf9\u4e8e\u5b89\u88c5Cygwin\u6765\u8bf4\uff0c\u5c31\u662f\u5b89\u88c5\u5404\u79cd\u5404\u6837\u7684\u6a21\u5757\u800c\u5df2\u3002\u6700\u6838\u5fc3\u7684\uff0c\u8bb0\u4f4f\u4e00\u5b9a\u8981\u5b89\u88c5Devel\u8fd9\u4e2a\u90e8\u5206\u7684\u6a21\u5757\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5404\u79cd\u5f00\u53d1\u6240\u7528\u5230\u7684\u5de5\u5177\u6216\u6a21\u5757 \u5c55\u5f00devel \u4ece\u4e2d\u9009\u62e9binutils\u3001 gcc \u3001mingw \u3001gdb ,make\u8fdb\u884c\u5b89\u88c5\uff0c\u627e\u5230\u4ee5\u4e0b\u9009\u9879\uff0c\u70b9\u51fb\u540e\u8fb9\u7684skip\uff0c\u4f7f\u5176\u53d8\u4e3a\u7248\u672c\u53f7\u5373\u53ef gcc-core\u3001gcc-g++\u3001make\u3001gdb\u3001binutils \u70b9\u51fb\u4e0b\u4e00\u6b65\u5b89\u88c5\u5373\u53ef\u3002","title":"\u5b89\u88c5"},{"location":"util/win/windows/#_11","text":"\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f cygcheck -c cygwin","title":"\u68c0\u9a8c"},{"location":"util/win/windows/#_12","text":"Step 2 \u51c6\u5907\u542f\u52a8\u811a\u672c \u4ee5\u6211\u7684\u5b89\u88c5\u76ee\u5f55(d:\\cygwin)\u4e3a\u4f8b \u5728d:\\cygwin\\bin\\\u4e0b\u51c6\u5907\u4e00\u4e2a\u542f\u52a8\u811a\u672c\uff0c\u547d\u540d\u4e3acygwin.bat \u5185\u5bb9\u4e3a\uff1a @echo off set _WindowsDIR=%* D:\\cygwin\\bin\\mintty.exe -i /Cygwin-Terminal.ico - \u5982\u679c\u51fa\u73b0\u6700\u540e\u51fa\u73b0\u95ea\u9000\u7684\u60c5\u51b5\uff0c\u628a\u6700\u540e\u4e00\u884c\u6539\u4e3a\"D:\\cygwin\\bin\\mintty.exe\" -i /Cygwin-Terminal.ico - Step 3 \u6dfb\u52a0\u53f3\u952e\u83dc\u5355 \u6253\u5f00\u6ce8\u518c\u8868\u7f16\u8f91\u5668\uff0c\u5728\u8ba1\u7b97\u673a\\HKEY_CLASSES_ROOT\\Directory\\Background\\shell\u4e0b\u65b0\u5efa\u9879CygWin\uff0c\u5c06\u5176\u9ed8\u8ba4\u5b57\u7b26\u4e32\u503c\u6539\u4e3aCygWin Here(\u53f3\u952e\u83dc\u5355\u663e\u793a\u7684\u5185\u5bb9) \u7136\u540e\u65b0\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u503c\uff0c\u540d\u79f0\u6539\u4e3aIcon\uff0c\u5b57\u7b26\u4e32\u503c\u6539\u4e3aD:\\ProgramFiles\\cygwin64\\Cygwin.ico \u4e4b\u540e\u4e3aCygWin\u6dfb\u52a0\u5b50\u9879command\uff0c\u5c06\u9ed8\u8ba4\u5b57\u7b26\u4e32\u503c\u6539\u4e3aD:\\ProgramFiles\\cygwin64\\bin\\cygwin.bat %V \u5982\u56fe Step 4 Cygwin\u83b7\u53d6\u73af\u5883\u53d8\u91cf \u7f16\u8f91bash_profile\uff1avim ~/.bash_profile \u5728\u6700\u540e\u6dfb\u52a0\u5185\u5bb9: if [[ $_WindowsDIR != \"\" ]] then TMPDIR=${_WindowsDIR//\\\\//} unset _WindowsDIR cd \"$TMPDIR\" fi","title":"\u6dfb\u52a0\u53f3\u952e"},{"location":"util/win/windows/#jetbrainscygwin","text":"","title":"jetBrains\u4f7f\u7528cygwin"},{"location":"util/win/windows/#_13","text":"\u5e94\u7528\u5c5e\u6027\u4e2d\u9009\u62e9","title":"\u7a97\u53e3\u6700\u5927\u5316"},{"location":"util/win/windows/#_14","text":"","title":"\u6570\u636e\u5e93"},{"location":"util/win/windows/#pdman","text":"\u6570\u636e\u5e93\u5efa\u6a21\u5de5\u5177 pdman","title":"pdman"},{"location":"util/win/windows/#_15","text":"","title":"\u9f20\u6807"},{"location":"util/win/windows/#master2s","text":"\u957f\u6309\u5207\u6362\u6309\u94ae\u7b49\u770b\u5230\u5b83\u95ea\u70c1\u5373\u53ef\u91cd\u7f6e\u8fde\u63a5","title":"master2s"},{"location":"web/gin/base/","text":"form-data \u5c31\u662f http \u8bf7\u6c42\u4e2d\u7684 multipart/form-data, \u5b83\u4f1a\u5c06\u8868\u5355\u7684\u6570\u636e\u5904\u7406\u4e3a\u4e00\u6761\u6d88\u606f\uff0c\u4ee5\u6807\u7b7e\u4e3a\u5355\u5143\uff0c\u7528\u5206\u9694\u7b26\u5206\u5f00\u3002\u65e2\u53ef\u4ee5\u4e0a\u4f20\u952e\u503c\u5bf9\uff0c\u4e5f\u53ef\u4ee5\u4e0a\u4f20\u6587\u4ef6\u3002\u5f53\u4e0a\u4f20\u7684\u5b57\u6bb5\u662f\u6587\u4ef6\u65f6\uff0c\u4f1a\u6709 Content-Type \u6765\u8bf4\u660e\u6587\u4ef6\u7c7b\u578b\uff1bcontent-disposition\uff0c\u7528\u6765\u8bf4\u660e\u5b57\u6bb5\u7684\u4e00\u4e9b\u4fe1\u606f\uff1b \u7531\u4e8e\u6709 boundary \u9694\u79bb\uff0c\u6240\u4ee5 multipart/form-data \u65e2\u53ef\u4ee5\u4e0a\u4f20\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u4e0a\u4f20\u952e\u503c\u5bf9\uff0c\u5b83\u91c7\u7528\u4e86\u952e\u503c\u5bf9\u7684\u65b9\u5f0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0a\u4f20\u591a\u4e2a\u6587\u4ef6\u3002 x-www-form-urlencoded \u5c31\u662f application/x-www-from-urlencoded, \u4f1a\u5c06\u8868\u5355\u5185\u7684\u6570\u636e\u8f6c\u6362\u4e3a\u952e\u503c\u5bf9\uff0c\u6bd4\u5982\uff0cname=java&age = 23 raw \u53ef\u4ee5\u4e0a\u4f20\u4efb\u610f\u683c\u5f0f\u7684\u6587\u672c\uff0c\u53ef\u4ee5\u4e0a\u4f20 text\u3001json\u3001xml\u3001html \u7b49 binary \u76f8\u5f53\u4e8e Content-Type:application/octet-stream, \u4ece\u5b57\u9762\u610f\u601d\u5f97\u77e5\uff0c\u53ea\u53ef\u4ee5\u4e0a\u4f20\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u901a\u5e38\u7528\u6765\u4e0a\u4f20\u6587\u4ef6\uff0c\u7531\u4e8e\u6ca1\u6709\u952e\u503c\uff0c\u6240\u4ee5\uff0c\u4e00\u6b21\u53ea\u80fd\u4e0a\u4f20\u4e00\u4e2a\u6587\u4ef6\u3002 multipart/form-data \u4e0e x-www-form-urlencoded \u533a\u522b multipart/form-data\uff1a\u65e2\u53ef\u4ee5\u4e0a\u4f20\u6587\u4ef6\u7b49\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u4e0a\u4f20\u8868\u5355\u952e\u503c\u5bf9\uff0c\u53ea\u662f\u6700\u540e\u4f1a\u8f6c\u5316\u4e3a\u4e00\u6761\u4fe1\u606f\uff1b x-www-form-urlencoded\uff1a\u53ea\u80fd\u4e0a\u4f20\u952e\u503c\u5bf9\uff0c\u5e76\u4e14\u952e\u503c\u5bf9\u90fd\u662f\u95f4\u9694\u5206\u5f00\u7684\u3002","title":"base"}]}